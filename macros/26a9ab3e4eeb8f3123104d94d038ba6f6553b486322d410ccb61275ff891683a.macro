Attribute VB_Name = "Beck_Tools"
Option Private Module
Public Verlagshersteller As Boolean, Tool_Login As Boolean, Aenderungen_anzeigen As Boolean, Start_Aenderungen_anzeigen As Boolean
Public End_Aenderungen_anzeigen As Boolean, Original As Boolean, Aenderungen As Boolean, Aenderungen_verfolgen As Boolean

Sub Passwort_eingabe()
Dim Passwort, Antwort

If Dokumentschutz Then Exit Sub
Call Verlag_Pruefen
If Verlagshersteller = False Then
   If Tool_Login = False Then
      Unload beck_tool_passwort
      beck_tool_passwort.Show
      Passwort = beck_tool_passwort.TextBox1
      If Passwort = "" Then Exit Sub
      If Passwort <> "herstellung" Then
         MsgBox ("Falsches Passwort! Bitte nochmal versuchen.")
         Exit Sub
      End If
   End If
End If

If ActiveDocument.Endnotes.Count > 0 Then
    MsgBox "ACHTUNG: Die Pr|fffd|fung des Dokumentes kann aus folgendem Grund nicht erfolgen:" & Chr(13) & "Ihr Dokument enth|fffd|lt Endnoten. Bitte wandeln Sie diese in Fu|fffd|noten um. Verwenden Sie dazu die Funktion |fffd|Endnoten konvertieren|fffd| im Bereich |fffd|Sonstiges|fffd| des Beck-Template.", vbOKOnly, "Hinweis"
    Exit Sub
End If

On Error Resume Next
If Len(ActiveDocument.CustomDocumentProperties("Styles").Value) > 0 Then
   Antwort = MsgBox("Die Datei erlaubt noch setzerspezifische Formatvorlagen. M|fffd|chten Sie die hinterlegten Formate l|fffd|schen und nur verlagseigene Formate zulassen?", vbYesNo)
   If Antwort = vbYes Then ActiveDocument.CustomDocumentProperties("Styles").Value = ""
End If

Tool_Login = True
beck_form.MultiPage1.Pages("Page_Typografie").Visible = True
Load beck_tool
beck_tool.Show
beck_tool.Left = Application.Width - beck_tool.Width + Application.Left - 220 'rechts ausrichten
If Val(Application.Version) > 11 Then
   beck_tool.Top = 0 + Application.Top + 140
Else
   beck_tool.Top = 0 + Application.Top + 100
End If
FocusAnDocument
End Sub

Sub Verlag_Pruefen()
Dim fs

On Error Resume Next
Set fs = CreateObject("Scripting.FileSystemObject")
'Anhand folgender beider Kriterien pr|fffd|fen, ob User ein Hersteller ist
If fs.FolderExists("T:\S_ALLE") And UCase(Environ("userdomain")) = "VERLAG" Then
   Verlagshersteller = True
Else
   Verlagshersteller = False
End If
End Sub

Sub Zwischenablage_loeschen() 'L|fffd|scht nur die aktuelle letzte Zwischenablage. Die komplette Liste "Start -> Zwischenablage -> Kn|fffd|pfchen ..." bleibt erhalten
Dim ZW As DataObject

On Error Resume Next   'falls ZW.PutInClipboard fehlschl|fffd|gt. Z.B. wenn R|fffd|ckg|fffd|ngig SRTG-Z gedr|fffd|ckt wurde
Set ZW = New DataObject
ZW.SetText ""
ZW.PutInClipboard
End Sub

Sub FnEinf|fffd|gen()
Dim FN_Wert

If Dokumentschutz Then Exit Sub

On Error GoTo add_FNFunction

Weiter:
If ActiveDocument.CustomDocumentProperties("Fn").Value <> "Ein" Then
   MsgBox ("Die Fu|fffd|notenfunktion ist deaktiviert. Bitte wenden Sie sich an Ihren Lektor um n|fffd|here Informationen zu erhalten.")
   Exit Sub
End If
ID_Fehler_test
If ID_Fehler Then Exit Sub

On Error GoTo Ende
With Selection
       With .FootnoteOptions
            .Location = wdBottomOfPage
            .StartingNumber = 1
            .NumberStyle = wdNoteNumberStyleArabic
            .NumberingRule = wdRestartSection
       End With
       .Footnotes.Add Range:=Selection.Range, Reference:=""
End With

FocusAnDocument
Exit Sub

Ende: MsgBox ("Fu|fffd|note kann hier nicht eingef|fffd|gt werden"), , "Fehler"
Exit Sub

add_FNFunction:
    ActiveDocument.CustomDocumentProperties.Add name:="Fn", LinkToContent:=False, _
    Type:=msoPropertyTypeString, Value:="Ein"  'Standardwert
    FN_Wert = "Ein"
    GoTo Weiter
End Sub

Sub KopfzeilenEntfernen()
Dim Anzahl, Antwort

On Error GoTo Fehler

With beck_tool
    .Label4 = "Verarbeitung l|fffd|uft ..."
    .Repaint
End With

Ueberarbeitungsmodus_aus
Anzahl = ActiveDocument.Sections.Count
'ActiveDocument.PageSetup.DifferentFirstPageHeaderFooter = True   'erste Seite anders
'ActiveDocument.PageSetup.OddAndEvenPagesHeaderFooter = True      'links, rechts anders
For i = 1 To Anzahl
  With ActiveDocument.Sections(i)
    .Headers(wdHeaderFooterFirstPage).Range.Delete 'wegen "erster Seite anders" diese separat l|fffd|schen
    .Headers(wdHeaderFooterPrimary).Range.Delete
    .Headers(wdHeaderFooterEvenPages).Range.Delete
    .Footers(wdHeaderFooterFirstPage).Range.Delete
    .Footers(wdHeaderFooterPrimary).Range.Delete
    .Footers(wdHeaderFooterEvenPages).Range.Delete
  End With
Next i

With beck_tool
    .Label4 = "Verarbeitung beendet"
    .Repaint
End With

ActiveWindow.View.Type = wdNormalView   'Ansicht hin- und herschalten l|fffd|scht verbliebenes Absatzzeichen
ActiveWindow.View.Type = wdPrintView
ActiveWindow.View.Type = wdNormalView
Ueberarbeitungsmodus_ein
Exit Sub

Fehler:
Ueberarbeitungsmodus_ein
Call Fehler

End Sub

Sub WeisseKaestenEntfernen()
Dim KastenZahl, KastenDel, i, n As Integer

On Error GoTo Fehler

With beck_tool
    .Label3 = "Verarbeitung l|fffd|uft ..."
    .Repaint
End With
KastenZahl = ActiveDocument.Shapes.Count
KastenDel = 0
n = 1
Ueberarbeitungsmodus_aus

If KastenZahl = 0 Then GoTo Ende
For i = 1 To KastenZahl
   If ActiveDocument.Shapes(n).Fill.ForeColor.RGB = RGB(255, 255, 255) Then
      'Textfelder, verschachtelte Felder und Organigramme nicht l|fffd|schen
      If ActiveDocument.Shapes(n).TextFrame.HasText Or Left((ActiveDocument.Shapes(1).name), 9) <> "Rectangle" Then
         n = n + 1
      Else:
      KastenDel = KastenDel + 1
      ActiveDocument.Shapes(n).Delete 'immer den ersten (bzw. ersten nach dem Textfeld) entfernen bis keiner mehr da
      If ActiveDocument.Shapes.Count = 0 + n - 1 Then GoTo Ende 'alle entfernt
      End If
   End If
ActiveDocument.UndoClear 'verhindert Speicher|fffd|berlauf
Next i

Ende:
With beck_tool
    .Label3 = "Verarbeitung beendet. " & KastenDel & " wei|fffd|e K|fffd|sten entfernt."
    .Repaint
End With
ActiveWindow.View.Type = wdNormalView
Ueberarbeitungsmodus_ein
Exit Sub

Fehler:
Ueberarbeitungsmodus_ein
Call Fehler

End Sub

Sub Word2007_wei|fffd|_del()

On Error GoTo Fehler
Selection.Find.Font.Color = -603914241   'Office 2007 Farbe Hintergrund1 = wei|fffd|
Selection.Find.Execute Replace:=wdReplaceAll
Exit Sub

Fehler:
'nichts tun
End Sub

Sub WeissenTextEntfernen()

On Error GoTo Fehler

With beck_tool
    .Label2 = "Verarbeitung l|fffd|uft ..."
    .Repaint
End With

Ueberarbeitungsmodus_aus
Application.ScreenUpdating = False
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
With Selection.Find
        .Text = "^?"
        .Font.Color = RGB(255, 255, 255)
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = True
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
Call Word2007_wei|fffd|_del

If ActiveDocument.Footnotes.Count > 0 Then
   ActiveWindow.View.SplitSpecial = wdPaneFootnotes
   Selection.Find.ClearFormatting
   Selection.Find.Replacement.ClearFormatting
   With Selection.Find
        .Text = "^?"
        .Font.Color = RGB(255, 255, 255)
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = True
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
   End With
   Selection.Find.Execute Replace:=wdReplaceAll
   Call Word2007_wei|fffd|_del
End If

With beck_tool
    .Label2 = "Verarbeitung beendet"
    .Repaint
End With

Application.ScreenUpdating = True
ActiveWindow.View.Type = wdNormalView
Ueberarbeitungsmodus_ein
Exit Sub

Fehler:
Application.ScreenUpdating = True
Ueberarbeitungsmodus_ein
Call Fehler

End Sub

Sub ManuellenZeilenumbruchL|fffd|schen()

On Error GoTo Fehler

Ueberarbeitungsmodus_aus
ActiveWindow.View.Type = wdPageView
Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""

Load beck_Umbruchabfrage
beck_Umbruchabfrage.Show
Ueberarbeitungsmodus_ein
Exit Sub

Fehler:
Ueberarbeitungsmodus_ein
Call Fehler

End Sub

Sub SucheErsetze(Suche, Ersetze, Mustervergleich)  'Durchsucht beliebigen Text und Fn. in Layoutansicht (!)
                                                   'Kehrt am Ende zur|fffd|ck zu Seite 1 und schaltet in Normalansicht
On Error GoTo Fehler

'Im Text
Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""
ActiveWindow.View.Type = wdPageView
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
With Selection.Find
        .Text = Suche
        .Replacement.Text = Ersetze
        .Forward = True
        .Wrap = wdFindContinue
        .Format = True
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = Mustervergleich
        .MatchSoundsLike = False
        .MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll

'In den Noten
If ActiveDocument.Footnotes.Count = 0 Then GoTo Ende
Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""
ActiveWindow.View.SeekView = wdSeekFootnotes
Selection.GoTo What:=wdGoToFootnote, _
Which:=wdGoToAbsolute, Count:=1
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
With Selection.Find
        .Text = Suche
        .Replacement.Text = Ersetze
        .Forward = True
        .Wrap = wdFindContinue
        .Format = True
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = Mustervergleich
        .MatchSoundsLike = False
        .MatchAllWordForms = False
End With
Selection.Find.Execute Replace:=wdReplaceAll
Selection.HomeKey unit:=wdStory

Ende:
Selection.HomeKey unit:=wdStory
ActiveWindow.View.Type = wdNormalView
Exit Sub

Fehler:
Call Fehler

End Sub

Sub ManuelleZeilenschaltungenbeiDivisEntfernen()

On Error GoTo Fehler
With beck_tool
    .Label8 = "Verarbeitung l|fffd|uft ..."
    .Repaint
End With

Ueberarbeitungsmodus_aus
Application.ScreenUpdating = False
Call SucheErsetze("^-", "", False) 'Zus|fffd|tzlich zuerst bedingte Trennungen entfernen
Call SucheErsetze("-^l", "", False)

Application.ScreenUpdating = True
With beck_tool
    .Label8 = "Verarbeitung beendet"
    .Repaint
End With
Ueberarbeitungsmodus_ein
Exit Sub

Fehler:
Application.ScreenUpdating = True
Ueberarbeitungsmodus_ein
Call Fehler

End Sub

Sub MehrfachreturnsInFu|fffd|notenEntfernen()
Dim r, entfernt

On Error GoTo Fehler

r = 0
With beck_tool
    .Label7 = "Verarbeitung l|fffd|uft ..."
    .Repaint
End With
Ueberarbeitungsmodus_aus
If ActiveDocument.Footnotes.Count = 0 Then GoTo Ende2

ActiveWindow.View.Type = wdNormalView
If ActiveWindow.View.SplitSpecial <> wdPaneFootnotes Then
   ActiveWindow.View.SplitSpecial = wdPaneFootnotes
End If
ActiveWindow.Panes(2).Activate
Selection.WholeStory
If Selection.Range.Tables.Count > 0 Then
   MsgBox ("Die Fu|fffd|noten enthalten eine oder mehrere Tabellen. Das sichere Entfernen von Mehrfachreturns ist daher nicht m|fffd|glich. Die Bearbeitung wird nicht durchgef|fffd|hrt.")
   r = 1
   GoTo Ende2
End If

Selection.HomeKey unit:=wdStory
  
Application.ScreenUpdating = False

Selection.EndKey unit:=wdStory
Selection.Text = Chr(13) & Chr(13) & "|fffd|" 'Ende markieren
Selection.Font.name = "Times New Roman"
Selection.HomeKey unit:=wdStory

On Error Resume Next

While Not Selection.Text = "|fffd|"
  Selection.HomeKey unit:=wdLine
  While Selection.Text = Chr(13) Or Selection.Text = Chr(11)
     If Err.Number <> 5252 Then
        Selection.Delete
        r = r + 1
        If Selection.Text = "|fffd|" Then
           Selection.Delete
           GoTo Ende
        End If
     End If
     If Err.Number = 5252 Then   'Fehler 5252 ist die Absatzmarke der Note selbst
        Err.Number = 0
        Selection.MoveUp unit:=wdLine, Count:=1
        Selection.EndKey unit:=wdLine
        If Selection.Text = Chr(13) Or Selection.Text = Chr(11) Then
           Selection.Delete
        End If
        If Selection.Text = "|fffd|" Then
           Selection.Delete
           GoTo Ende
        End If
        Selection.HomeKey unit:=wdLine
        Selection.MoveDown unit:=wdLine, Count:=1
     End If
  Wend
  Selection.MoveDown unit:=wdLine, Count:=1
Wend

Ende:
Selection.Delete  'Reste entfernen
Selection.MoveUp unit:=wdLine, Count:=1
Selection.EndKey unit:=wdLine
If Selection.Text = Chr(13) Or Selection.Text = Chr(11) Then Selection.Delete
Selection.HomeKey unit:=wdStory
ActiveWindow.View.Type = wdNormalView
Ende2:
Application.ScreenUpdating = True
If ActiveDocument.Footnotes.Count = 0 Then entfernt = 0 Else entfernt = r - 1
With beck_tool
    .Label7 = "Verarbeitung beendet. " & entfernt & " Absatzmarke(n) entfernt."
    .Repaint
End With
Ueberarbeitungsmodus_ein
Exit Sub

Fehler:
Application.ScreenUpdating = True
Ueberarbeitungsmodus_ein
Call Fehler

End Sub

Sub AlleListenNachTextUmwandeln()

Dim Anz, Antwort

If beck_tool.Visible = True Then
   Antwort = MsgBox("ACHTUNG:" & Chr(13) & "Automatische Nummerierungen werden nun in feststehenden Text umgewandelt. Diese |fffd|nderung kann nicht r|fffd|ckg|fffd|ngig gemacht werden!" & Chr(13) & Chr(13) & "M|fffd|chten Sie fortfahren?", vbYesNo + vbDefaultButton2, "Hinweis")
   If Antwort = vbNo Then
      With beck_tool
          .Label11 = "Verarbeitung abgelehnt"
          .Repaint
      End With
      Exit Sub
   End If
End If

On Error GoTo Fehler
Ueberarbeitungsmodus_aus
Anz = ActiveDocument.ListParagraphs.Count
ActiveDocument.Range.ListFormat.ConvertNumbersToText
ActiveWindow.View.Type = wdNormalView

'Fu|fffd|noten
If ActiveDocument.Footnotes.Count > 0 Then
   ActiveWindow.View.SplitSpecial = wdPaneFootnotes
   Selection.WholeStory
   Anz = Anz + Selection.Range.ListParagraphs.Count
   Selection.Range.ListFormat.ConvertNumbersToText
End If
ActiveWindow.View.Type = wdNormalView

With beck_tool
    .Label11 = "Verarbeitung beendet. " & Anz & " Listenabs|fffd|tze verarbeitet."
    .Repaint
End With


Ueberarbeitungsmodus_ein
Exit Sub

Fehler:
Ueberarbeitungsmodus_ein
Call Fehler

End Sub

Sub LeereFu|fffd|notenMitBlockadeVersehen()
Dim l As Integer

On Error GoTo Fehler

With beck_tool
    .Label5 = "Verarbeitung l|fffd|uft ..."
    .Repaint
End With
Ueberarbeitungsmodus_aus
l = 0
If ActiveDocument.Footnotes.Count = 0 Then GoTo Ende
For i = 1 To ActiveDocument.Footnotes.Count
  If Len(ActiveDocument.Footnotes(i).Range) = 0 Then
   l = l + 1
   ActiveDocument.Footnotes(i).Range.InsertAfter ChrW(9632)        'Blockade einf|fffd|gen
   ActiveDocument.Footnotes(i).Range.Font.name = "Times New Roman"
  End If
Next i

Ende:
With beck_tool
    .Label5 = "Verarbeitung beendet. " & l & " Blockade(n) eingef|fffd|gt."
    .Repaint
End With

ActiveWindow.View.Type = wdNormalView
Ueberarbeitungsmodus_ein
Exit Sub

Fehler:
Ueberarbeitungsmodus_ein
Call Fehler

End Sub

Sub Fu|fffd|noten_Rot()   'Formatiert wei|fffd|e Fu|fffd|notenziffern rot. Wei|fffd| = Trick von N|fffd|, damit abschnittweise Fu|fffd|notenz|fffd|hlung bei fortlaufenden Abschnittswechseln m|fffd|glich ist
Dim Fn As Footnote

With beck_tool
    .Label2 = "Verarbeitung l|fffd|uft ..."
    .Repaint
End With

Application.ScreenUpdating = False
For Each Fn In ActiveDocument.Footnotes
        Fn.Reference.Select
        If Selection.Font.Color = wdColorWhite Or Selection.Font.Color = -603914241 Then Selection.Font.Color = wdColorRed
ActiveDocument.UndoClear 'verhindert Speicher|fffd|berlauf
Next Fn

Application.ScreenUpdating = True
End Sub

Sub Fu|fffd|notenReparieren()

Dim Fn As Footnote
Dim Satzzeichen As String
Dim Antwort

On Error GoTo Fehler

Antwort = InputBox("ACHTUNG: Dies ist ein inhaltlicher Eingriff. Alle Fu|fffd|notenziffern im Text werden hinter das Satzzeichen verschoben. Bitte mit dem Lektorat kl|fffd|ren." & Chr(13) & Chr(13) & "Bitte Passwort eingeben!", "Beck Tools Passworteingabe ...")
If Antwort = "" Then
   With beck_tool
    .Label10 = "Verarbeitung abgebrochen"
    .Repaint
   End With
Exit Sub
End If

If Antwort <> "herstellung" Then
  MsgBox ("Falsches Passwort! Bitte nochmal versuchen.")
   With beck_tool
    .Label10 = "Verarbeitung abgelehnt"
    .Repaint
   End With
  Exit Sub
End If
    
Antwort = MsgBox("ACHTUNG: Dies ist ein inhaltlicher Eingriff. Sollen alle Fu|fffd|notenziffern im Text hinter das Satzzeichen verschoben werden?", vbYesNo + vbDefaultButton2)
If Antwort = vbNo Then
   With beck_tool
    .Label10 = "Verarbeitung abgelehnt"
    .Repaint
   End With
   Exit Sub
End If
    
With beck_tool
    .Label10 = "Verarbeitung l|fffd|uft ..."
    .Repaint
End With

Ueberarbeitungsmodus_aus
If ActiveDocument.Footnotes.Count = 0 Then GoTo Ende

Application.ScreenUpdating = False 'schnellere Verarbeitung

For Each Fn In ActiveDocument.Footnotes
        Fn.Reference.Select
        With Selection
            .Collapse wdCollapseEnd
            .MoveRight unit:=wdCharacter, Count:=1, Extend:=True
            Satzzeichen = .Text
            Select Case Satzzeichen
                Case ".", ",", ";", ":", "!", "?"
                    .Delete
                    .MoveLeft unit:=wdCharacter, Count:=1, Extend:=False
                    .Collapse wdCollapseStart
                    .Text = Satzzeichen
                    .Collapse wdCollapseEnd
                Case Else
                    .Collapse wdCollapseEnd
            End Select
        End With
ActiveDocument.UndoClear 'verhindert Speicher|fffd|berlauf
Next Fn

Ende:
With beck_tool
    .Label10 = "Verarbeitung beendet"
    .Repaint
End With
Application.ScreenUpdating = True
Selection.HomeKey unit:=wdStory
ActiveWindow.View.Type = wdNormalView
Ueberarbeitungsmodus_ein
Exit Sub

Fehler:
Application.ScreenUpdating = True
Ueberarbeitungsmodus_ein
Call Fehler

End Sub

Sub Fehler()
Dim Antwort

ActiveWindow.View.Type = wdNormalView
Antwort = MsgBox("Die Verarbeitung konnte wegen eines Fehlers nicht abgeschlossen werden." & Chr(13) & "Bitte mit einer Sicherheitskopie weiterarbeiten.", , "Verarbeitungsfehler")
End
End Sub

Sub W2000Ueberarbeiten_aus() 'Word 2000 Workaround
If ActiveDocument.TrackRevisions Then
   Aenderungen_verfolgen = True
   Else:
   Aenderungen_verfolgen = False
End If

If ActiveDocument.ShowRevisions Then
   End_Aenderungen_anzeigen = True
   Else:
   End_Aenderungen_anzeigen = False
End If

With ActiveDocument
        .TrackRevisions = False
        .PrintRevisions = False
        .ShowRevisions = False
End With
End Sub

Sub W2000Ueberarbeiten_ein()
If Aenderungen_verfolgen Then ActiveDocument.TrackRevisions = True
If End_Aenderungen_anzeigen Then
   ActiveDocument.ShowRevisions = True
   ActiveDocument.PrintRevisions = True
End If
End Sub

Sub Ueberarbeitungsmodus_aus()

ActiveWindow.View.Type = wdNormalView
If ActiveDocument.ActiveWindow.View.SplitSpecial = wdPaneFootnotes Then
   ActiveDocument.ActiveWindow.View.SplitSpecial = wdPaneNone    'Fn.Bereich schlie|fffd|en, sonst Probleme in Word 2010
End If

'8 = Word 97. 9 = Word 2000. 10 = Word 2002. 11 = Word 2003. 12 = Word 2007. 14 = Word 2010
If Val(Application.Version) < 11 Then
   Call W2000Ueberarbeiten_aus
   Exit Sub
End If
Call Ausschalten  'Word 2003 und h|fffd|her
End Sub

Sub Ausschalten()
Dim dlgFind As Dialog

If ActiveWindow.View.ShowRevisionsAndComments Then
   Aenderungen_anzeigen = True
   Else:
   Aenderungen_anzeigen = False
End If

If ActiveWindow.View.RevisionsView = wdRevisionsViewFinal Then
   End_Aenderungen_anzeigen = True
   Start_Aenderungen_anzeigen = False
End If

If ActiveWindow.View.RevisionsView = wdRevisionsViewOriginal Then
   Start_Aenderungen_anzeigen = True
   End_Aenderungen_anzeigen = False
End If

On Error GoTo Standardeinstellung  'Fehler wird ausgel|fffd|st, wenn Cursor sich in OLE-Object (z.B.Formel) befindet, dann Standardeinstellung, sonst Absturz
If ActiveDocument.TrackRevisions Then
   Aenderungen_verfolgen = True
   Else:
Standardeinstellung:
   Aenderungen_verfolgen = False
End If

Set dlgFind = Dialogs(wdDialogEditFind)   'Suche und Ersetze Fenster ausschalten, sonst im Folgenden Fehler

If End_Aenderungen_anzeigen Or Start_Aenderungen_anzeigen Then
   Options.RevisionsBalloonPrintOrientation = wdBalloonPrintOrientationPreserve  'Sprechblasen aus
   ActiveWindow.View.RevisionsMode = wdInLineRevisions 'Sprechblasen aus
End If

If Aenderungen_verfolgen And Rn_numbering = False Then ActiveDocument.TrackRevisions = False

With ActiveWindow.View
   .ShowRevisionsAndComments = False
   .RevisionsView = wdRevisionsViewFinal
End With

End Sub

Sub Ueberarbeitungsmodus_ein()
If Val(Application.Version) < 11 Then
   Call W2000Ueberarbeiten_ein
   Exit Sub
End If
Call Einschalten 'Word 2003 und h|fffd|her
End Sub

Sub Einschalten()
With ActiveWindow.View
   If Aenderungen_anzeigen Then
      .ShowRevisionsAndComments = True
      Else
      .ShowRevisionsAndComments = False
   End If
   
   If End_Aenderungen_anzeigen Then .RevisionsView = wdRevisionsViewFinal
   If Start_Aenderungen_anzeigen Then .RevisionsView = wdRevisionsViewOriginal
End With

If Aenderungen_verfolgen Then ActiveDocument.TrackRevisions = True
End Sub

Sub suche_del()
'Word-Suche leeren f|fffd|r Benutzereingabe
Selection.Find.ClearFormatting
Selection.Find.Text = ""
Selection.Find.Replacement.Text = ""
Selection.Find.Replacement.ClearFormatting
End Sub

Sub Initialisiere_beck_format_pruefung()
Dim Anz_P, Anz_Fn, Anz_Felder
Dim Antwort

Anz_P = ActiveDocument.Paragraphs.Count
Anz_Fn = ActiveDocument.Footnotes.Count
ActiveDocument.Range.Copy
error = 0
beck_tool.Enabled = False
beck_form.Enabled = False

PaneRevision_close
'Felder in Text umwandeln
Anz_Felder = 0
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
Anz_Felder = ActiveDocument.Fields.Count
'Fu|fffd|noten
If ActiveDocument.Footnotes.Count > 0 Then
  ActiveWindow.View.SplitSpecial = wdPaneFootnotes
  Selection.WholeStory
  Anz_Felder = Anz_Felder + Selection.Fields.Count
End If

If Anz_Felder > 0 Then
   If Fields_inText = False Then
      Antwort = MsgBox("Das Dokument enth|fffd|lt Word-Felder (z.B. Querverweise) bzw. Indexeintr|fffd|ge. Genauere Informationen erhalten Sie, wenn Sie sich die Dokumentinformationen anzeigen lassen." & Chr(13) & Chr(13) & "M|fffd|chten Sie alle Felder in normalen Text umwandeln (Indexeintr|fffd|ge werden nicht umgewandelt)?", vbYesNoCancel)
      Else
      If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
      ActiveDocument.Fields.Unlink
      If ActiveDocument.Footnotes.Count > 0 Then
         ActiveWindow.View.SplitSpecial = wdPaneFootnotes
         Selection.WholeStory
         Selection.Fields.Unlink
      End If
      Antwort = ""
   End If
   Select Case Antwort
      Case vbYes
         If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
         ActiveDocument.Fields.Unlink
         If ActiveDocument.Footnotes.Count > 0 Then
            ActiveWindow.View.SplitSpecial = wdPaneFootnotes
            Selection.WholeStory
            Selection.Fields.Unlink
         End If
      Case vbCancel
         beck_status.Label1.caption = "Vorgang beendet!"
         'Unload beck_status
         Zwischenablage_loeschen 'in Beck_Tools
         beck_tool.Enabled = True
         beck_form.Enabled = True
         FocusAnDocument
         Exit Sub  'XE-(Index Entry-) und SEQ-(Sequence-)Felder werden nicht umgewandelt
      Case vbNo
         'do nothing
   End Select
End If
'Fehlermeldungen entladen und dabei Textmarken l|fffd|schen
Unload beck_Fehlermeldung
beck_Fehlermeldung.ListBox1.Clear
beck_format_pruefung
suche_del
'Zur Sicherheit:
If ActiveDocument.Paragraphs.Count <> Anz_P Or ActiveDocument.Footnotes.Count <> Anz_Fn Then
   Unload beck_Fehlermeldung
   MsgBox ("ACHTUNG: Bei der Pr|fffd|fung des Dokuments ist ein schwerwiegender Fehler aufgetreten. Das Dokument wird nun in den urspr|fffd|nglichen Zustand unmittelbar vor der Pr|fffd|fung zur|fffd|ckversetzt.")
   ActiveDocument.Content.Paste
   Selection.EndKey unit:=wdStory
   If Selection.Text = Chr(13) And Selection.style = "Standard" Then Selection.TypeBackspace  'Leere Zeile am Ende l|fffd|schen
   Zwischenablage_loeschen 'in Beck_Tools
   beck_tool.Enabled = True
   beck_form.Enabled = True
   Exit Sub
End If
Zwischenablage_loeschen 'in Beck_Tools
If error = 0 Then beck_status.Label1.caption = "Die Pr|fffd|fung ergab keine Fehler"
beck_tool.Enabled = True
beck_form.Enabled = True
FocusAnDocument
End Sub

Attribute VB_Name = "Fokus"
'Fokus zur|fffd|ck an Word-Dokument.
Option Private Module
'Falls Word 2010 in der 64-bit Variante, dann muss "PtrSafe" eingef|fffd|gt sein. Vgl.: http://msdn.microsoft.com/de-de/library/ee691831.aspx
#If VBA7 Then
   Private Declare PtrSafe Function GetActiveWindow Lib "user32" () As Long
   Private Declare PtrSafe Function SetFocus Lib "user32" (ByVal hwnd As LongPtr) As Long
   Private Declare PtrSafe Function GetParent Lib "user32" (ByVal hwnd As LongPtr) As Long
#Else
   Private Declare Function GetActiveWindow Lib "user32" () As Long
   Private Declare Function SetFocus Lib "user32" (ByVal hwnd As Long) As Long
   Private Declare Function GetParent Lib "user32" (ByVal hwnd As Long) As Long
#End If
   
Sub FocusAnDocument()
On Error Resume Next
  Dim h As Long
  h = GetActiveWindow()
  h = GetParent(h)
  SetFocus h
End Sub

Attribute VB_Name = "Formate_bereinigen"
Option Private Module

Sub Formate_loeschen()

'Admintool um Dokumentvorlage von benutzerdefinierten Formaten zu bereinigen,
'die sich bei der Entwicklung durch Copy & Paste "eingeschlichen" haben.
'Dieses Makro ist nicht aus Men|fffd|s heraus zug|fffd|nglich!

Start
Dim mp_anzahl, mp, p_anzahl, p, lname, mpname
Dim p_Liste, Ausschluss, a_element, element
Dim Formate As New Collection
Dim sty As style
Dim a_treffer
Dim Antwort

If ActiveDocument.BuiltInDocumentProperties(4) <> "" Then
   MsgBox ("Bereinigung nur m|fffd|glich, wenn keine Reihe definiert ist.")
   Exit Sub
End If

Antwort = MsgBox("Das L|fffd|schen von Absatz- und Zeichenformatvorlagen kann nicht r|fffd|ckg|fffd|ngig gemacht werden!", vbOKCancel, "Hinweis")
If Antwort = vbCancel Then Exit Sub

'Die Otto-Listboxen hei|fffd|en anders! Daf|fffd|r haben die Formate eine "b_" am Anfang oder "start", "stop" am Ende.
'Diese Multipageseiten und weitere nicht verarbeiten:
Ausschluss = Array("Blickfang", "Listen", "Sonstiges")

mp_anzahl = beck_form.MultiPage1.Pages.Count
For mp = 0 To mp_anzahl - 1
  mpname = beck_form.MultiPage1.Pages(mp).caption
  For Each a_element In Ausschluss
      If a_element = mpname Then GoTo next_mp
  Next
  lname = "ListBox_" & mpname 'ListBox-Namen zusammenbauen
  p_anzahl = beck_form.MultiPage1.Pages(mp).Controls(lname).ListCount
  For p = 0 To p_anzahl - 1
      Formate.Add (beck_form.MultiPage1.Pages(mp).Controls(lname).List(p))
      'Char und Zchn aus Komp.-gr|fffd|nden zu alten Word-Versionen nicht l|fffd|schen.
      Formate.Add (beck_form.MultiPage1.Pages(mp).Controls(lname).List(p) & " Zchn")
      Formate.Add (beck_form.MultiPage1.Pages(mp).Controls(lname).List(p) & " Char")
  Next p
next_mp:
Next mp

Unload beck_form

'On Error Resume Next
For Each sty In ActiveDocument.Styles
      a_treffer = 0
      StatusBar = "Pr|fffd|fe Format: " & sty
      
      'Formate mit vorangestelltem Leerzeichen verursachen Programmabsturz.
      'Ausnahmen definieren.
      If Left(sty.NameLocal, 1) <> " " And sty.NameLocal <> "inhverz_titel" And sty.NameLocal <> "gesetz_abk" And Left(sty.NameLocal, 2) <> "b_" _
        And Len(sty.NameLocal) > 0 And Right(sty.NameLocal, 5) <> "start" _
        And Right(sty.NameLocal, 4) <> "stop" And sty.NameLocal <> "Seitenwechsel" And sty.NameLocal <> "Frage" And sty.NameLocal <> "material_p" Then
        If sty.BuiltIn = False Then
          For Each element In Formate
             If element = sty Then a_treffer = a_treffer + 1
          Next
          If a_treffer = 0 Then
             If sty <> "" Then sty.Delete
             ActiveDocument.UndoClear
          End If
        End If
      End If
Next sty

MsgBox ("Verarbeitung beendet." & Chr(13) & "ACHTUNG: Bitte unbedingt pr|fffd|fen ob alle ben|fffd|tigten Formate in Beck-Template noch vorhanden sind und erst dann Dokument speichern!")
End Sub



Attribute VB_Name = "Hilfe"
Sub Help()
Dim Pfad As String

On Error GoTo Fehler
Pfad = ActiveDocument.CustomDocumentProperties("Hilfepfad").Value
ActiveDocument.FollowHyperlink Address:=Pfad, NewWindow:=True
Exit Sub

Fehler:
If Err.Number = "5" Then MsgBox ("Fehler beim |fffd|ffnen der Hilfe! Der Pfad konnte nicht ermittelt werden.") Else MsgBox ("Unerwarteter Fehler! Bitte versuchen Sie es sp|fffd|ter erneut.")
End Sub
Attribute VB_Name = "Modul1"
Option Private Module
Option Explicit
Dim tree() As String, tree_container() As String, tree_buch_h() As String, tree_gesetz_h() As String, tree_list() As String
Dim tree_index As Long, tree_index_container As Long, tree_index_buch As Long, tree_index_gesetz As Long, tree_index_list As Long
Public Men|fffd|_angepasst As Boolean, Rn_numbering As Boolean
Public style As String
Public style_error(1000)
Public error_count As Integer
Public Anzahl_Hyperlinks, Anzahl_Bookmarks As Integer
Public Leerstellen_korrigiert As Boolean
Public para_zaehler, foot_zaehler
Public Absatz_pruefen As Boolean, Absaetze_geprueft As Boolean
Public error
Public Verkn_anzeigen As Boolean, Fields_inText As Boolean
Public Loseblatt_Kommentar As Boolean
Public Version As String, Status_Str As String
Public WOPtionen As Boolean, TypeApplyBLists As Boolean, TypeApplyNLists As Boolean, ApplyLists As Boolean, ApplyBLists As Boolean
Public DocEndeLeer As Boolean, DocEnde As Boolean, inTabelle As Boolean 'wird in beck_form und im Modul lists bzw. action ben|fffd|tigt

Private Sub Container_konvertieren(Absatzformat, Absatzinhalt)

'Alte Blickf|fffd|nge (vor Version 1.44) neu zu ordnen
If Left(Absatzformat, 5) = "b_box" Then
        
        ActiveDocument.Paragraphs(para_zaehler).Range.Select
        Selection.MoveLeft unit:=wdCharacter, Count:=1, Extend:=wdExtend 'ohne Absatzmarke, damit Selection.Text ohne Probleme funktioniert
        Select Case Absatzinhalt
            
            Case "Beispiel Start" & Chr(13)
                 Selection.style = "b_beispiel_start"
            Case "Beispiel Stop" & Chr(13)
                 Selection.style = "b_beispiel_stop"
         
            Case "Blickfang Start" & Chr(13)
                 If UCase(ActiveDocument.BuiltInDocumentProperties(4)) <> "KOMMENTAR" Then
                    Selection.Text = "Hervorhebung/Emphasis Start"
                    Selection.style = "b_hervorhebung_emphasis_start"
                 Else
                    Selection.Text = "Normtext/Gesetz Start"
                    Selection.style = "b_normtext_gesetz_start"
                 End If
                 
            Case "Blickfang Stop" & Chr(13)
                 If UCase(ActiveDocument.BuiltInDocumentProperties(4)) <> "KOMMENTAR" Then
                    Selection.Text = "Hervorhebung/Emphasis Stop"
                    Selection.style = "b_hervorhebung_emphasis_stop"
                 Else
                    Selection.Text = "Normtext/Gesetz Stop"
                    Selection.style = "b_normtext_gesetz_stop"
                 End If
    
            Case "F|fffd|lle Start" & Chr(13)
                 Selection.Text = "F|fffd|lle/Aufgabe Start"
                 Selection.style = "b_faelle_aufgabe_start"
            Case "F|fffd|lle Stop" & Chr(13)
                 Selection.Text = "F|fffd|lle/Aufgabe Stop"
                 Selection.style = "b_faelle_aufgabe_stop"
           
            Case "L|fffd|sung Start" & Chr(13)
                 Selection.style = "b_loesung_start"
            Case "L|fffd|sung Stop" & Chr(13)
                 Selection.style = "b_loesung_stop"
       
            Case "Merke Start" & Chr(13)
                 Selection.style = "b_merke_start"
            Case "Merke Stop" & Chr(13)
                 Selection.style = "b_merke_stop"
        
            Case "Schema Start" & Chr(13)
                 Selection.style = "b_schema_start"
            Case "Schema Stop" & Chr(13)
                 Selection.style = "b_schema_stop"
          
            Case "Zitat Start" & Chr(13)
                 Selection.style = "b_zitat_start"
            Case "Zitat Stop" & Chr(13)
                 Selection.style = "b_zitat_stop"
            
            Case "Material Start" & Chr(13)
                 Selection.style = "b_material_start"
            Case "Material Stop" & Chr(13)
                 Selection.style = "b_material_stop"
            
            Case "Wichtig Start" & Chr(13)
                 Selection.style = "b_wichtig_start"
            Case "Wichtig Stop" & Chr(13)
                 Selection.style = "b_wichtig_stop"
            
            Case "Motto/Leitgedanke Start" & Chr(13)
                 Selection.style = "b_motto_leitgedanke_start"
            Case "Motto/Leitgedanke Stop" & Chr(13)
                 Selection.style = "b_motto_leitgedanke_stop"
            
            Case "Formel/Berechnung Start" & Chr(13)
                 Selection.style = "b_formel_berechnung_start"
            Case "Formel/Berechnung Stop" & Chr(13)
                 Selection.style = "b_formel_berechnung_stop"
             
            Case "Material/Muster Start" & Chr(13)
                 Selection.style = "b_material_muster_start"
            Case "Material/Muster Stop" & Chr(13)
                 Selection.style = "b_material_muster_stop"
            
            Case "Checkliste Start" & Chr(13)
                 Selection.style = "b_checkliste_start"
            Case "Checkliste Stop" & Chr(13)
                 Selection.style = "b_checkliste_stop"
              
            Case "Kleindruck Start" & Chr(13)
                 Selection.style = "b_kleindruck_start"
            Case "Kleindruck Stop" & Chr(13)
                 Selection.style = "b_kleindruck_stop"
        
         End Select
     style = Selection.Paragraphs.style
     End If
End Sub

Private Sub Error_def()

If Absatz_pruefen = False Then   'Zeichenformatpr|fffd|fung
   With ActiveDocument.Bookmarks
      .Add Range:=Selection.Range, name:="Fehler_" & error_count
      .DefaultSorting = wdSortByName
      .ShowHidden = False
   End With
End If
  
If Absatz_pruefen = True Then    'Absatzformat- und Strukturpr|fffd|fung
   If ActiveWindow.View.SplitSpecial = 7 Then   'in Fu|fffd|noten
     With ActiveDocument.Bookmarks
        .Add Range:=ActiveDocument.Footnotes(foot_zaehler).Range, name:="Fehler_" & error_count
        .DefaultSorting = wdSortByName
        .ShowHidden = False
     End With
   Else:   'im Text
     With ActiveDocument.Bookmarks
        .Add Range:=ActiveDocument.Paragraphs(para_zaehler).Range, name:="Fehler_" & error_count
        .DefaultSorting = wdSortByName
        .ShowHidden = False
     End With
   End If
End If

style_error(error_count) = "Fehler_" & error_count
                    
error_count = error_count + 1
error = 1

End Sub

Private Sub beck_paragraphs()
    Dim apara
    Dim foot
    Dim para_inhalt
    Dim s
    Dim f  As Integer, t As Integer
    Dim last  As String, Formate_str As String
    Dim f_str() As String
    Dim para_anzahl As Long
    Dim foot_anzahl As Long
    
    error_count = 0
    last = ""
    Erase tree
    Erase tree_container
    Erase tree_buch_h
    Erase tree_gesetz_h
    Erase tree_list
    tree_index = 0
    tree_index_container = 0
    tree_index_buch = 0
    tree_index_gesetz = 0
    tree_index_list = 0
        
    'Die Setzerformate aus den Dateieigenschaften lesen
    Verlag_Pruefen   'Ergebnis wird erst weiter unten ben|fffd|tigt
    On Error Resume Next
    Formate_str = ActiveDocument.CustomDocumentProperties("Styles").Value
    f_str = Split(Formate_str, ";")
    On Error GoTo 0
        
    'Ansicht auf Normal umschalten
    ActiveWindow.View.Type = wdNormalView
    Selection.Bookmarks.Add ("Pruefen_Pos")
    Ueberarbeitungsmodus_aus
        
    Absatz_pruefen = True
    
    para_zaehler = 0
    foot_zaehler = 0
    para_anzahl = ActiveDocument.Paragraphs.Count
    Application.ScreenUpdating = False

    ActiveDocument.Styles(wdStyleFootnoteText).NameLocal = "Fu|fffd|notentext" 'falls der Word-Standardname umbenannt wurde
    
    For Each apara In ActiveDocument.Paragraphs

        para_zaehler = para_zaehler + 1
        beck_status.Label1 = "Pr|fffd|fe: Absatz " & para_zaehler & " von " & para_anzahl
        DoEvents 'anstatt repaint
        
        If apara.Range.Tables.Count <> 0 Then   'Im Text ist das schneller, als mit ".Information(wdWithInTable)". Bei den Fu|fffd|n. allerdings nicht, s.u.
        'If apara.Range.Information(wdWithInTable) = True Then  'Tabellen k|fffd|nnen nicht sauber gepr|fffd|ft werden (insb. Aufz.).
            style = "p"  'Daher f|fffd|r jeden Tabellenabsatz "p" vorgaukeln und den folgenden Code |fffd|berspringen.
            GoTo Start_Pruefung
        End If
        
        '---- Style ermitteln: ----
        On Error Resume Next
        If apara.Range.Bookmarks.Exists("\EndOfDoc") Then
           apara.Range.Select
           Selection.MoveLeft unit:=wdCharacter, Count:=1, Extend:=wdExtend 'am Ende des Doks letztes Absatzzeichen auslassen
           If Selection.Paragraphs.Count = 1 Then
              style = Selection.Paragraphs.style
              Else:
              style = Selection.Paragraphs(1).style   'bestimmte Felder z|fffd|hlt apara als  e i n  paragraph, dieser besteht aber aus mehreren paragraphs. Z.B. Rechtsgrundlagenverz."
           End If
        Else:
           If apara.Range.Revisions.Count <> 0 Then   'Feststellen, ob Stelle im |fffd|berarbeitungsmodus
              apara.Range.Select                      '|fffd|berarbeitungsmodus mit "Select" auswerten. Geht in Word 2003 leider nicht anders. Ab Word 2013 gings ohne "Select".
              If Selection.Paragraphs.Count = 1 Then
                 style = Selection.Paragraphs.style
               Else:
                 style = Selection.Paragraphs(1).style 's.o.
              End If
           Else:
              style = apara.Range.Paragraphs.style    'Der Normalfall
           End If
        End If
        
        If Tool_Login = True Then Verlagshersteller = True  'wenn eingeloggt in Beck Tools, dann vor|fffd|bergehend als Hersteller ansehen
        If Err.Number <> 0 And Verlagshersteller Then   'Kann im |fffd|-Modus passieren, wenn Absatz gel|fffd|scht, so dass Style nicht eindeutig. Nur f|fffd|r Hersteller anzeigen
           If Err.Number = 91 Then
              beck_Fehlermeldung.ListBox1.AddItem "Die Formatvorlage ist nicht eindeutig. Bitte neu zuweisen."
           Else
              beck_Fehlermeldung.ListBox1.AddItem "Fehler " & Err.Number & "in Absatz" & para_zaehler
           End If
           Err.Number = 0
           Call Error_def
           If error_count = 1000 Then GoTo beck_paragraphs_error
           GoTo beck_paragraphs_next
        End If
        On Error GoTo 0
        '------------
        
        para_inhalt = apara.Range.Text
        'MsgBox (para_inhalt & " " & style) 'f|fffd|r Testzwecke
        
        'Alte Blickf|fffd|nge (vor Version 1.44) neu zu ordnen
        Call Container_konvertieren(style, para_inhalt)
        
        If Left(style, 7) <> "b_litem" Then   'wenn Style keine Liste (also Liste durch bspw. p unterbrochen, dann soll Listen-Tree neu aufgebaut werden (= neue Liste)
           Erase tree_list
           tree_index_list = 0
        End If
        
        Select Case style 'Die Formate mit Typoattributen einer "echten" |fffd|berschrift logisch zuordnen
            
            Case "h1(Typo_h2)", "h1(Typo_h3)", "h2(Typo_h3)", "h2(Typo_h4)", "h3(Typo_h4)", "h3(Typo_h5)", "h4(Typo_h5)", "h4(Typo_h6)", "h5(Typo_h6)", "h5(Typo_h7)", "h6(Typo_h7)", "h6(Typo_h8)", "h7(Typo_h8)", "h7(Typo_h9)", "h8(Typo_h9)"
                 style = Left(style, 2)
       
       'Anhang-Formate vor Version 1.3 in aktuelle Formate konvertieren
            Case "anhang_h1", "anhang_h2", "anhang_h3", "anhang_h4", "anhang_h5"
                apara.Range.Paragraphs.style = Right(style, 2)
                style = Right(style, 2)
            
            Case "anhang_paratitel"
                apara.Range.Paragraphs.style = "paratitel"
                style = "paratitel"
            
            Case "anhang_paratext"
                apara.Range.Paragraphs.style = "paratext"
                style = "paratext"
                
       'Blickfang-Formate vor Version 1.44 in aktuelle Formate konvertieren
            Case "b_containertitle"
                apara.Range.Paragraphs.style = "b_blickfangtitle"
                style = "b_blickfangtitle"
                
        'WEITERE ALTFORMATE s. weiter unten
        End Select

        'Die Setzerformate zulassen
        Verlag_Pruefen  'neu pr|fffd|fen, da oben wegen Error 91 schon einmal in anderem Sinne zugewiesen
        If Verlagshersteller = False Then
           For t = 0 To UBound(f_str)
               If style = Replace(f_str(t), " ", "") Then GoTo beck_paragraphs_next
           Next
        End If

Start_Pruefung:
        Select Case style
      
        'Word-Indexe und Word-Verzeichnisse d|fffd|rfen verwendet werden
            Case "Index 1"
            
            Case "Index 2"
            
            Case "Index 3"
            
            Case "Index 4"
            
            Case "Index 5"
            
            Case "Index 6"
            
            Case "Index 7"
            
            Case "Index 8"
            
            Case "Index 9"
            
            Case "Index|fffd|berschrift"
            
            Case "Verzeichnis 1"
            
            Case "Verzeichnis 2"
            
            Case "Verzeichnis 3"
            
            Case "Verzeichnis 4"
            
            Case "Verzeichnis 5"
            
            Case "Verzeichnis 6"
            
            Case "Verzeichnis 7"
            
            Case "Verzeichnis 8"
            
            Case "Verzeichnis 9"
      
       '-------------------------------------
       'Titelei

           Case "Seitenwechsel" 'f|fffd|r N|fffd|. Wird nicht offiziell verwendet
           
           Case "schmutztitel_autor"
            
           Case "schmutztitel_titel"
            
           Case "titelei_untertitel"
            
           Case "titelei_buchtyp"
           
           Case "titelei_autor"
            
           Case "titelei_verlag"
            
           Case "titelei_p"
            
           Case "titelei_titel"
            
           Case "impressum_online"
            
           Case "impressum_isbn"
            
           Case "impressum_p"
           
           Case "vorwort_titel"
            
           Case "vorwort_p"
           
           Case "vorwort_autor"
            
                           
       '-------------------------------------
       'Standard/Gesetz
            
            Case "p"

            Case "randziffer"

            Case "h1", "buch_h1", "gesetz_h1"
                If Left(style, 1) = "h" Then set_tree (style)
                If Left(style, 1) = "b" Then set_tree_buch_h (style)
                If Left(style, 1) = "g" Then set_tree_gesetz_h (style)
                If last = "randziffer" Then
                    beck_Fehlermeldung.ListBox1.AddItem "Strukturfehler " & style & ": " & style & " direkt nach randziffer"
                    Call Error_def
                    If error_count = 1000 Then GoTo beck_paragraphs_error
                End If
                If last = style Then
                    beck_Fehlermeldung.ListBox1.AddItem "Strukturfehler " & style & ": " & style & " direkt nach h1"
                    Call Error_def
                    If error_count = 1000 Then GoTo beck_paragraphs_error
                End If
                
            Case "h2", "h3", "h4", "h5", "h6", "h7", "h8", "h9", "buch_h2", "buch_h3", "buch_h4", "buch_h5", "buch_h6", "gesetz_h2", "gesetz_h3", "gesetz_h4", "gesetz_h5", "gesetz_h6"
                If Left(style, 1) = "h" Then set_tree (style)
                If Left(style, 1) = "b" Then set_tree_buch_h (style)
                If Left(style, 1) = "g" Then set_tree_gesetz_h (style)
                If last = "randziffer" Then
                    beck_Fehlermeldung.ListBox1.AddItem "Strukturfehler " & style & ": " & style & " direkt nach randziffer"
                    Call Error_def
                    If error_count = 1000 Then GoTo beck_paragraphs_error
                End If
                If last = style Then
                    beck_Fehlermeldung.ListBox1.AddItem "Strukturfehler " & style & ": " & style & " direkt nach " & style
                    Call Error_def
                    If error_count = 1000 Then GoTo beck_paragraphs_error
                End If
                get_tree (style)
                If error_count = 1000 Then GoTo beck_paragraphs_error
    
            Case "bildunterschrift"
  
            Case "anhang_titel"
    
            Case "artikel_titel"
                
       '-------------------------------------
       'Verzeichnis
            Case "abbildungsverz_titel"
                            
            Case "abbildungsverz_p"
                     
            Case "abkverz_titel"
            
            Case "abkverz_p"
                            
       'Formate vor Version 1.4 in aktuelle Formate konvertieren
            Case "abkverz"
                apara.Range.Paragraphs.style = "abkverz_p"
                style = "abkverz_p"
            
            Case "autorverz_titel"
            
            Case "autorverz_p"
                            
            Case "literatur_titel"
            
            Case "literatur_p"
                
            Case "litabk_titel"
                
            Case "litabk_p"
                
            Case "litabk"
                apara.Range.Paragraphs.style = "litabk_p"
                style = "litabk_p"
                
            Case "litverz_titel"
            
            Case "litverz_p"
                
            Case "litverz"
                apara.Range.Paragraphs.style = "litverz_p"
                style = "litverz_p"
                            
            Case "tabverz_titel"
            
            Case "tabverz_p"
            
            Case "verz_untertitel"
                                 
       '-------------------------------------
       'Gesetze
       
            Case "gesetz_titel"
               
            Case "gesetz_fassung"
               
            Case "gesetz_aenderung"
               
            'gesetz_hx |fffd|berschriften siehe oben bei Standard
           
            Case "gesetz_p"
               
            Case "paratitel"
               
            Case "paratext"
               
       '-------------------------------------
       'Anhang
            
            Case "anhang_titel"
       
       '-------------------------------------
       'Andere. Alle Absatzformate die mit "b_###" beginnen sind erlaubt
            
            Case "gesetz_abk" 'f|fffd|r N|fffd| Kommentare
            
            Case "Frage"
            
            Case "b_autor"  'f|fffd|r N|fffd| Kommentare
            
            Case "b_blickfangtitle"
            
            Case "b_bildunterschrift"
            
            Case "b_Abbildung"
             
            Case "b_h_gek|fffd|rzt_|fffd|bersicht"   'f|fffd|r N|fffd|, mediatext Loseblatt
            
            Case "b_h_gek|fffd|rzt_Koltitel"    'f|fffd|r N|fffd|, mediatext Loseblatt
            
            Case "b_h_kolumneaussen"    'f|fffd|r N|fffd| Loseblatt
            
            Case "b_meta_absatz"    'f|fffd|r mediatext Loseblatt
            
            Case "inhverz_titel"    'f|fffd|r mediatext Loseblatt
            
            Case "b_listemanuell1", "b_listemanuell2", "b_listemanuell3", "b_listemanuell4", "b_listemanuell5" 'f|fffd|r mediatext Loseblatt
            
            Case "b_listemanuell1-folgeabsatz", "b_listemanuell2-folgeabsatz", "b_listemanuell3-folgeabsatz", "b_listemanuell4-folgeabsatz", "b_listemanuell5-folgeabsatz"  'f|fffd|r mediatext Loseblatt
             
            Case "material_p"   'f|fffd|r N|fffd| Loseblatt
            
            Case Else
                If Right(style, 6) = "_start" Or Right(style, 5) = "_stop" Or Left(style, 5) = "b_lit" Then
                    If Right(style, 6) = "_start" Or Right(style, 5) = "_stop" Then  'die Container auf Struktur pr|fffd|fen
                       set_tree_container (style)
                       get_tree (style)
                    End If
                    If Left(style, 5) = "b_lit" Then  'die Listen auf Struktur pr|fffd|fen
                       set_tree_list (style)
                       get_tree (style)
                    End If
                    If error_count = 1000 Then GoTo beck_paragraphs_error
                Else
                    beck_Fehlermeldung.ListBox1.AddItem style
                    Call Error_def
                    If error_count = 1000 Then GoTo beck_paragraphs_error
                End If
        
        End Select
        
        last = style
    
beck_paragraphs_next:
    ActiveDocument.UndoClear  'verhindert Speicher|fffd|berlauf
    Next apara
    
    
'------------ Fu|fffd|noten pr|fffd|fen: ------------
    If ActiveDocument.Footnotes.Count > 0 Then
        
        ActiveWindow.View.SplitSpecial = wdPaneFootnotes
        foot_anzahl = ActiveDocument.Footnotes.Count
        
        For Each foot In ActiveDocument.Footnotes
            Erase tree_list      'In jeder Fn.-ziffer tree wieder von vorne aufbauen
            tree_index_list = 0
            
            foot_zaehler = foot_zaehler + 1
            beck_status.Label1 = "Pr|fffd|fe: Fu|fffd|note " & foot_zaehler & " von " & foot_anzahl
            DoEvents
            
FNHinweis:
            
            If foot.Range.Information(wdWithInTable) = True Then
               GoTo beck_footnote_next
            End If
            On Error Resume Next
            If foot.Range.Paragraphs.Count > 1 Then 'Falls Note aus untersch. formatierten Abs|fffd|tzen besteht, wird sonst ein Fehler verursacht
               For f = 1 To foot.Range.Paragraphs.Count  'Einschr|fffd|nkung: Enth|fffd|lt der Absatz, der das Abschlussreturn f|fffd|r eine Fn. enth|fffd|lt keinen Text,
                                                         'wird dieser nicht als Absatz gez|fffd|hlt. Mit "Beck Tools" -> "Mehrfachreturns in Fn. l|fffd|schen" ist das zu l|fffd|sen
                   If foot.Range.Paragraphs(f).Range.Tables.Count > 0 Then GoTo next_f  'Tabelle auslassen
                   style = foot.Range.Paragraphs(f).style
                   If Err.Number <> 0 Then GoTo beck_footnote_next
                   If style <> ActiveDocument.Styles(wdStyleFootnoteText) And f = 1 Then 'Erster Absatz darf nichts anderes als wdStyleFootnoteText sein
                      beck_Fehlermeldung.ListBox1.AddItem style
                      Call Error_def
                      If error_count = 1000 Then GoTo beck_paragraphs_error
                   End If
                   If style <> ActiveDocument.Styles(wdStyleFootnoteText) And f > 1 Then  'Format "Fu|fffd|notentext" und Aufz|fffd|hlungen zulassen
                      If Left(style, 7) <> "b_litem" Then
                         beck_Fehlermeldung.ListBox1.AddItem style
                         Call Error_def
                      Else
                         set_tree_list (style)    'Listen pr|fffd|fen
                         get_tree (style)
                      End If
                      If error_count = 1000 Then GoTo beck_paragraphs_error
                   End If
next_f:
               Next f
               GoTo beck_footnote_next
            End If

Weiter_Pr|fffd|fen: 'Fn nur ein Absatz
            style = foot.Range.style
            para_inhalt = foot.Range.Text
            If Err.Number <> 0 Then GoTo beck_footnote_next
            Select Case style
            Case Else
                If style = ActiveDocument.Styles(wdStyleFootnoteText) Then  'in Fu|fffd|notentext, der nur aus einem Absatz besteht, nur Format "Fu|fffd|notentext" zulassen
                    ' do nothing
                Else
                    beck_Fehlermeldung.ListBox1.AddItem style
                    Call Error_def
                    If error_count = 1000 Then GoTo beck_paragraphs_error
                End If
        End Select
        
        last = style
    
beck_footnote_next:
            ActiveDocument.UndoClear  'verhindert Speicher|fffd|berlauf
            If Tool_Login = True Then Verlagshersteller = True  'wenn eingeloggt in Beck Tools, dann vor|fffd|bergehend als Hersteller ansehen
            If Err.Number <> 0 And Verlagshersteller Then   'Kann im |fffd|-Modus passieren, wenn Absatz gel|fffd|scht, so dass Style nicht eindeutig. Nur f|fffd|r Hersteller anzeigen
               If Err.Number = 91 Then
                  beck_Fehlermeldung.ListBox1.AddItem "Die Formatvorlage ist nicht eindeutig. Bitte neu zuweisen."
               Else
                  beck_Fehlermeldung.ListBox1.AddItem "Fehler " & Err.Number & "in Absatz" & para_zaehler
               End If
               Err.Number = 0
               Call Error_def
               If error_count = 1000 Then GoTo beck_paragraphs_error
            End If
            On Error GoTo 0
        Next foot
    End If
    
    
beck_paragraphs_error:
    If ActiveWindow.View.SplitSpecial = 7 Then
        ActiveWindow.Panes(2).Close
    End If
    If beck_Fehlermeldung.ListBox1.ListCount > 0 Then
        error = 1
        Load beck_Fehlermeldung
        beck_status.Hide
        beck_Fehlermeldung.Show
        If beck_Fehlermeldung.ListBox1.ListCount = 1000 Then
           MsgBox ("Die Liste enth|fffd|lt 1000 Eintr|fffd|ge. Weitere m|fffd|gliche Fehler werden erst angezeigt, wenn Sie die aufgelisteten Fehler bearbeiten und die Pr|fffd|fenfunktion neu ausf|fffd|hren.")
        End If
    End If
   
    Application.ScreenUpdating = True
    ActiveDocument.Bookmarks("Pruefen_Pos").Select
    ActiveDocument.Bookmarks("Pruefen_Pos").Delete
    Ueberarbeitungsmodus_ein
    ActiveDocument.UndoClear  'verhindert Speicher|fffd|berlauf
    Absaetze_geprueft = True  'merken, dass gepr|fffd|ft wurde, f|fffd|r Hinweis bei Sitzungsende
    Verlag_Pruefen  'Zur Sicherheit hier neu pr|fffd|fen, falls Variable "Verlagshersteller" sp|fffd|ter gebraucht wird. Oben wegen Error 91 schon einmal in anderem Sinne zugewiesen
    
End Sub

Private Sub get_tree(ByVal ziel_tag)

Dim i
Dim aktuell As Integer, vergleichszahl As Integer, Differenz As Integer, Feldumfang As Integer
Dim Start_vorhanden As Boolean, buch_h As Boolean, gesetz_h As Boolean, h As Boolean, container As Boolean, liste As Boolean
Dim h_typ As String

If Loseblatt_Kommentar Then Exit Sub
Start_vorhanden = True
buch_h = False
gesetz_h = False
h = False
container = False
liste = False

If Left(ziel_tag, 6) = "buch_h" Then
   Feldumfang = UBound(tree_buch_h)
   buch_h = True
   h_typ = "buch_h"
End If

If Left(ziel_tag, 8) = "gesetz_h" Then
   Feldumfang = UBound(tree_gesetz_h)
   gesetz_h = True
   h_typ = "gesetz_h"
End If

If Left(ziel_tag, 1) = "h" Then
   Feldumfang = UBound(tree)
   h = True
   h_typ = "h"
End If

If Right(ziel_tag, 5) = "start" Or Right(ziel_tag, 5) = "_stop" Then
   Feldumfang = UBound(tree_container)
   container = True
End If

If Left(ziel_tag, 5) = "b_lit" Then
   Feldumfang = UBound(tree_list)
   liste = True
End If

aktuell = Val(Right(ziel_tag, 1))  'nur wenn einstellig m|fffd|glich

If aktuell > 9 Then
   MsgBox ("Achtung Pr|fffd|fenfunktion kann nicht ausgef|fffd|hrt werden. |fffd|berschriftenhierarchie > 9")
   End
End If

If container Then 'die Container pr|fffd|fen
  For i = UBound(tree_container) - 1 To 0 Step -1
     If ziel_tag = tree_container(i) Then   'Leider kann nicht der letzte "Start" vorausschauend auf "Stop" gepr|fffd|ft werden
        Call Error_def
        If Right(ziel_tag, 5) = "_stop" Then
           beck_Fehlermeldung.ListBox1.AddItem "Strukturfehler " & ziel_tag & ": Stop- ohne Startmarkierung" 'Stop des letzen Containers ohne neuen Start
           Else
           beck_Fehlermeldung.ListBox1.AddItem "Strukturfehler " & ziel_tag & ": Start- ohne Stopmarkierung"
        End If
        Exit Sub
     End If
     If Right(ziel_tag, 5) = "_stop" And Left(ziel_tag, Len(ziel_tag) - 5) & "_start" <> tree_container(i) Then
        Start_vorhanden = False 'kein Start vorhanden bis Dok.Anfang
     Else
        Exit Sub
     End If
  Next
Else  'die h, buch_h1 und gesetz_h1 |fffd|berschriften sowie Listen pr|fffd|fen
  For i = Feldumfang - 1 To 0 Step -1
     If buch_h Then vergleichszahl = Val(Right(tree_buch_h(i), 1)) 'Hinweis: Val gibt 0 zur|fffd|ck wenn kein Eintrag oder Eintrag ohne Zahl
     If gesetz_h Then vergleichszahl = Val(Right(tree_gesetz_h(i), 1))
     If h Then vergleichszahl = Val(Right(tree(i), 1))  'die h |fffd|berschriften
     If liste Then vergleichszahl = Val(Right(tree_list(i), 1))  'die Listen
    
     Differenz = aktuell - vergleichszahl
     If Differenz > 1 Then  '= Fehlerfall
        If liste Then
           beck_Fehlermeldung.ListBox1.AddItem "Strukturfehler Liste: Listenebene " & aktuell & " ohne Listenebene " & aktuell - 1
        Else
           beck_Fehlermeldung.ListBox1.AddItem "Strukturfehler " & ziel_tag & ": " & ziel_tag & " ohne " & h_typ & aktuell - 1
        End If
        Call Error_def
        Exit Sub
     End If
     If Differenz = 0 Or Differenz = 1 Then Exit Sub '= kein Fehler
  Next
End If

If Start_vorhanden = False Then
   Call Error_def
   beck_Fehlermeldung.ListBox1.AddItem "Strukturfehler " & ziel_tag & ": Stop- ohne Startmarkierung"
End If
End Sub

Private Sub set_tree(ByVal element)  'neuen h Eintrag hinzuf|fffd|gen
   
    tree_index = tree_index + 1
    ReDim Preserve tree(tree_index)
    tree(tree_index) = element
   
End Sub

Private Sub set_tree_container(ByVal element)  'container bekommen eigenen tree
   
    tree_index_container = tree_index_container + 1
    ReDim Preserve tree_container(tree_index_container)
    tree_container(tree_index_container) = element
   
End Sub

Private Sub set_tree_buch_h(ByVal element)  'buch_h1 |fffd|berschriften bekommen eigenen tree
   
    tree_index_buch = tree_index_buch + 1
    ReDim Preserve tree_buch_h(tree_index_buch)
    tree_buch_h(tree_index_buch) = element
   
End Sub

Private Sub set_tree_gesetz_h(ByVal element)  'gesetz_h1 |fffd|berschriften bekommen eigenen tree
   
    tree_index_gesetz = tree_index_gesetz + 1
    ReDim Preserve tree_gesetz_h(tree_index_gesetz)
    tree_gesetz_h(tree_index_gesetz) = element
   
End Sub

Private Sub set_tree_list(ByVal element)  'Listen bekommen eigenen tree
   
    tree_index_list = tree_index_list + 1
    ReDim Preserve tree_list(tree_index_list)
    tree_list(tree_index_list) = element
   
End Sub

Sub Leerstellen_suchen() 'im Text. Zuerst muss Del_Leerstellen ausgef|fffd|hrt werden
Dim Fn As Footnote
Dim L|fffd|nge

For Each Fn In ActiveDocument.Footnotes
        beck_status.Label1 = "Untersuche im Haupttext Fu|fffd|notenziffer " & Fn.Index
        DoEvents
        Fn.Reference.Select
        Selection.style = wdStyleFootnoteReference  'Fu|fffd|notenzeichen
        
        L|fffd|nge = Len(Selection.Text)
        
        Selection.MoveLeft unit:=wdCharacter, Count:=2, Extend:=False
        Selection.MoveRight unit:=wdCharacter, Count:=1, Extend:=True
        If Selection.Text = " " Or Selection = Chr(160) Then  'Leerstelle davor l|fffd|schen
           Selection.Delete
           Leerstellen_korrigiert = True
           Selection.MoveRight unit:=wdCharacter, Count:=L|fffd|nge, Extend:=False
           Selection.MoveRight unit:=wdCharacter, Count:=1, Extend:=True
           If Selection.Text = " " Or Selection = Chr(160) Then
              Selection.style = wdStyleDefaultParagraphFont '"Absatz-Standardschriftart". Leerstelle danach Standard
           End If
           Else
           Selection.MoveRight unit:=wdCharacter, Count:=L|fffd|nge + 1, Extend:=False
           Selection.MoveRight unit:=wdCharacter, Count:=1, Extend:=True
           If Selection.Text = " " Or Selection = Chr(160) Then
              Selection.style = wdStyleDefaultParagraphFont 'Leerstelle danach Standard
              Leerstellen_korrigiert = True
           End If
        End If
        ActiveDocument.UndoClear 'verhindert Speicher|fffd|berlauf
Next Fn

End Sub

Sub Leerstellen_Fn_suchen() 'in den Noten. Hier mit Suche, da sich Fu|fffd|notenziffer nicht direkt ansprechen l|fffd|sst. Zuerst muss Del_Leerstellen ausgef|fffd|hrt werden
Dim f, L|fffd|nge

Selection.GoTo What:=wdGoToFootnote, Which:=wdGoToAbsolute, Count:=1
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting

For f = 1 To ActiveDocument.Footnotes.Count
    beck_status.Label1 = "Untersuche Fu|fffd|note " & f
    DoEvents
    Selection.Find.ClearFormatting
    With Selection.Find
        .Text = "^f"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = True
        .MatchCase = False
        .MatchWholeWord = False
        .MatchWildcards = False
        .MatchSoundsLike = False
        .MatchAllWordForms = False
    End With
    Selection.Find.Execute
    If Selection.Find.Found And Len(ActiveDocument.Footnotes(f).Range) <> 0 Then 'nur wenn Fn. auch Text enth|fffd|lt
       L|fffd|nge = Len(Selection.Text)
       Selection.style = wdStyleFootnoteReference
       'Leerzeichen vor Fn entfernen
       Selection.HomeKey unit:=wdLine
       Selection.MoveRight Count:=1, unit:=wdCharacter, Extend:=wdExtend
       If Left(Selection.Text, 1) = " " Or Selection = Chr(160) Then
          Leerstellen_korrigiert = True
          Selection.Delete
          Selection.MoveRight Count:=L|fffd|nge, unit:=wdCharacter
          Selection.MoveRight Count:=1, unit:=wdCharacter, Extend:=wdExtend
          If Selection = " " Or Selection = Chr(160) Then
              Selection.Delete unit:=wdCharacter, Count:=1
              If Len(ActiveDocument.Footnotes(f).Range) > 0 Then Selection.TypeText Text:=Chr(160) 'Gesch. Leerzeichen, wenn Fn.-Text vorhanden
              Selection.style = wdStyleDefaultParagraphFont
              Leerstellen_korrigiert = True
              Else:
              Selection.MoveLeft Count:=1, unit:=wdCharacter
              If Len(ActiveDocument.Footnotes(f).Range) > 0 Then Selection.TypeText Text:=Chr(160) 'Gesch. Leerzeichen
              Leerstellen_korrigiert = True
          End If
          Else
          Selection.HomeKey unit:=wdLine
          Selection.MoveRight Count:=L|fffd|nge, unit:=wdCharacter, Extend:=False
          Selection.MoveRight Count:=1, unit:=wdCharacter, Extend:=wdExtend
          If Selection = " " Or Selection = Chr(160) Then
              Selection.Delete unit:=wdCharacter, Count:=1
              If Len(ActiveDocument.Footnotes(f).Range) > 0 Then Selection.TypeText Text:=Chr(160) 'Gesch. Leerzeichen
              Selection.style = wdStyleDefaultParagraphFont
              Leerstellen_korrigiert = True
              Else:
              Selection.MoveLeft Count:=1, unit:=wdCharacter
              If Len(ActiveDocument.Footnotes(f).Range) > 0 Then Selection.TypeText Text:=Chr(160) 'Gesch. Leerzeichen
              Leerstellen_korrigiert = True
          End If
       End If
    End If
    Selection.EndKey unit:=wdLine
    ActiveDocument.UndoClear 'verhindert Speicher|fffd|berlauf
Next f

End Sub

Sub Del_Leerstellen()   'Leerstellen entfernen (|fffd|berz|fffd|hlige und vor und nach Fn-Ziffern falsch gesetzte.

On Error GoTo Fehler

Application.ScreenUpdating = False
Call SucheErsetze(" {2;}", " ", True)  '|fffd|berz|fffd|hlige Leerzeichen entfernen
Call SucheErsetze("^s{2;}", "^s", True)  '|fffd|berz|fffd|hlige gesch. Leerzeichen entfernen

Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""

If ActiveDocument.Footnotes.Count = 0 Then GoTo Ende

'Im Text:
ActiveWindow.View.Type = wdNormalView
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""
Call Leerstellen_suchen

'In den Noten:
'ActiveWindow.View.Type = wdPageView
'ActiveWindow.View.SeekView = wdSeekFootnotes
ActiveWindow.View.SplitSpecial = wdPaneFootnotes

Selection.GoTo What:=wdGoToFootnote, _
Which:=wdGoToAbsolute, Count:=1
Call Leerstellen_Fn_suchen

Ende:
ActiveWindow.View.Type = wdNormalView
Application.ScreenUpdating = True
Exit Sub

Fehler:
Call Fehler

End Sub

Sub Del_Links()
    
Dim Hyperlinks, Hyperlinks_temp, h

If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
FocusAnDocument
Selection.WholeStory

Hyperlinks = Selection.Hyperlinks.Count
For h = 1 To Hyperlinks
  Selection.Hyperlinks(1).Delete
  ActiveDocument.UndoClear 'verhindert Speicher|fffd|berlauf
Next h
Hyperlinks_temp = Hyperlinks
    
If ActiveDocument.Footnotes.Count > 0 Then
  ActiveWindow.View.SplitSpecial = wdPaneFootnotes
  Selection.WholeStory
  Hyperlinks = Selection.Hyperlinks.Count
  For h = 1 To Hyperlinks
     Selection.Hyperlinks(1).Delete
     ActiveDocument.UndoClear 'verhindert Speicher|fffd|berlauf
  Next h
End If
Anzahl_Hyperlinks = Hyperlinks_temp + Hyperlinks

End Sub

Sub Del_Bookmarks()
Dim b As Integer, Anzahl_Bookmarks_temp

Anzahl_Bookmarks = ActiveDocument.Bookmarks.Count
Anzahl_Bookmarks_temp = Anzahl_Bookmarks

If Anzahl_Bookmarks = 0 Then Exit Sub
For b = 1 To Anzahl_Bookmarks_temp
   If b <= Anzahl_Bookmarks_temp Then
     If Left(ActiveDocument.Bookmarks(b).name, 7) = "Fehler_" Or beck_tool.Visible Then
        ActiveDocument.Bookmarks(b).Delete
        b = b - 1
        Anzahl_Bookmarks_temp = Anzahl_Bookmarks_temp - 1
     End If
   End If
   ActiveDocument.UndoClear  'verhindert Speicher|fffd|berlauf
Next

End Sub

Public Function beck_format_pruefung() 'Pr|fffd|fung auf unzul|fffd|ssige Zeichenformate.
    
    Dim pos
    Dim LZ
    Dim style_count
    Dim j, format_error
    
    With beck_tool
       .Width = 425.25
       .Label1 = "Verarbeitung l|fffd|uft ..."
       .Repaint
    End With
    
    Ueberarbeitungsmodus_aus
    ActiveWindow.View.Type = wdNormalView
   
    beck_status.Label1 = "Feldinhalte in Text umwandeln ..."
    DoEvents
    'Felder werden bereits bei Aufruf dieser Function (Klick auf Button Formatpr|fffd|fung) gel|fffd|scht
   
    beck_status.Label1 = "Textmarken l|fffd|schen ..."
    DoEvents
    'Bookmarks werden bereits bei Unload der Fehlerliste (Klick auf Button Formatpr|fffd|fung) gel|fffd|scht
    
    beck_status.Label1 = "Hyperlinks l|fffd|schen ..."
    DoEvents
    Del_Links
    
    Leerstellen_korrigiert = False
    beck_status.Label1 = "Leerstellen/Fu|fffd|noten korrigieren ..."
    DoEvents
    Del_Leerstellen
        
    error_count = 0
    format_error = 0
    
    If Leerstellen_korrigiert = True Then LZ = "Leerstellen/Fn. korrigiert." Else LZ = "0 Leerstellen/Fn. korrigiert."
    style_count = ActiveDocument.Styles.Count
    Absatz_pruefen = False
    
    If ActiveWindow.View.SplitSpecial = 7 And ActiveDocument.Footnotes.Count > 0 Then
        ActiveWindow.Panes(2).Close
    End If
    Selection.HomeKey unit:=wdStory
    
    beck_tool.Label1 = "Zeichenformate pr|fffd|fen ..."
    beck_tool.Repaint
    Application.ScreenUpdating = False
    
    For j = 1 To style_count
        beck_status.Label1 = "Pr|fffd|fe: Formate " & j & " von " & style_count
        DoEvents
        If ActiveDocument.Styles(j).Type = 2 And ActiveDocument.Styles(j) <> ActiveDocument.Styles(wdStyleDefaultParagraphFont) Then
            If Verkn_anzeigen = False Then
               If Right(ActiveDocument.Styles(j), 4) = "Zchn" Or Right(ActiveDocument.Styles(j), 4) = "Char" Then GoTo next_style
            End If
            
            If ActiveDocument.Styles(j) = "b_meta_inline" Then  'Einzig zugelassenes Style f|fffd|r Loseblatt-Kommentare
               GoTo next_style
            End If
            
            If Left(ActiveDocument.Styles(j), 1) = " " Then
                GoTo next_style
            End If
            Selection.HomeKey unit:=wdStory
            Selection.Find.ClearFormatting
            
            On Error GoTo next_style 'Manche zerschossene Formate k|fffd|nnen Fehler in der folgenden Zeile ausl|fffd|sen
            Selection.Find.style = ActiveDocument.Styles(j)
            On Error GoTo 0
            With Selection.Find
                .Text = ""
                .Replacement.Text = ""
                .Forward = True
                .Wrap = wdFindContinue
                .Format = True
                .MatchCase = False
                .MatchWholeWord = False
                .MatchWildcards = False
                .MatchSoundsLike = False
                .MatchAllWordForms = False
            End With
            While Selection.Find.Execute
               If Selection.Start = Selection.End Then GoTo next_style 'CB: Absicherung bei zerschossenem Zeichenformat, sonst Endlosschleife
               If Len(Selection.Text) > 0 Then
                
                   If Selection.Text = ChrW(2) And Selection.style = ActiveDocument.Styles(wdStyleFootnoteReference) Then
                       Selection.Move unit:=wdCharacter, Count:=1
                   Else
                       beck_Fehlermeldung.ListBox1.AddItem (ActiveDocument.Styles(j))
                       Error_def
                    
                       If error_count = 1000 Then GoTo beck_paragraphs_error
                   End If
               End If
               If ActiveDocument.Range.End > Selection.Range.End Then Selection.Collapse Direction:=wdCollapseEnd 'so lange Dok.-Ende nicht erreicht
            Wend
        End If
next_style:
    If Err.Number <> 0 Then format_error = j
    ActiveDocument.UndoClear  'verhindert Speicher|fffd|berlauf
    Next j
da:
    'Fu|fffd|noten
    If ActiveDocument.Footnotes.Count > 0 Then
        If ActiveWindow.ActivePane.View.Type = wdPrintView Or ActiveWindow. _
            ActivePane.View.Type = wdWebView Or ActiveWindow.ActivePane.View.Type = _
            wdPrintPreview Then
            ActiveWindow.View.SeekView = wdSeekFootnotes
        Else
            ActiveWindow.View.SplitSpecial = wdPaneFootnotes
        End If
    
        For j = 1 To style_count
            beck_status.Label1 = "Pr|fffd|fe Fu|fffd|noten: Formate " & j & " von " & style_count
            DoEvents
            If j = format_error Then GoTo next_style2  'dieses Format auch in den Fn. nicht pr|fffd|fen
            If ActiveDocument.Styles(j).Type = 2 And ActiveDocument.Styles(j) <> ActiveDocument.Styles(wdStyleDefaultParagraphFont) Then
                
                If Verkn_anzeigen = False Then
                   If Right(ActiveDocument.Styles(j), 4) = "Zchn" Or Right(ActiveDocument.Styles(j), 4) = "Char" Then GoTo next_style2
                End If
                
                If Left(ActiveDocument.Styles(j), 1) = " " Then
                    GoTo next_style2
                End If
                Selection.EndKey
                pos = Selection.End 'Ende der Fu|fffd|noten
                Selection.HomeKey unit:=wdStory
                Selection.Find.ClearFormatting
                Selection.Find.style = ActiveDocument.Styles(j)
                With Selection.Find
                    .Text = ""
                    .Replacement.Text = ""
                    .Forward = True
                    .Wrap = wdFindContinue
                    .Format = True
                    .MatchCase = False
                    .MatchWholeWord = False
                    .MatchWildcards = False
                    .MatchSoundsLike = False
                    .MatchAllWordForms = False
                End With
                While Selection.Find.Execute
                   If Selection.Start = Selection.End Then GoTo next_style2 'CB: Absicherung bei zerschossenem Zeichformat, sonst Endlosschleife
                   If Len(Selection.Text) > 0 Then ' And Selection.style = ActiveDocument.Styles(j) Then
                       If Selection.Text = ChrW(2) And Selection.style = ActiveDocument.Styles(wdStyleFootnoteReference) Then
                           Selection.Move unit:=wdCharacter, Count:=1
                       Else
                           beck_Fehlermeldung.ListBox1.AddItem (ActiveDocument.Styles(j))
                           Error_def
                           If error_count = 1000 Then GoTo beck_paragraphs_error
                           If Selection.End >= pos Then GoTo next_style2 'wenn Ende der Noten erreicht
                       End If
                   End If
                   Selection.Collapse Direction:=wdCollapseEnd
                Wend
            End If
next_style2:
        Selection.Collapse Direction:=wdCollapseEnd
        ActiveDocument.UndoClear  'verhindert Speicher|fffd|berlauf
        Next j
    End If
    
beck_paragraphs_error:
    If ActiveWindow.View.SplitSpecial = 7 Then
        ActiveWindow.Panes(2).Close
    End If
    If beck_Fehlermeldung.ListBox1.ListCount > 0 Then
        error = 1
        Load beck_Fehlermeldung
        beck_Fehlermeldung.CommandButton2.Visible = True
        beck_Fehlermeldung.CommandButton3.Visible = True
        beck_Fehlermeldung.CommandButton4.Visible = True
        beck_status.Hide
        beck_Fehlermeldung.Show
        If beck_Fehlermeldung.ListBox1.ListCount = 1000 Then
           MsgBox ("Die Liste enth|fffd|lt 1000 Eintr|fffd|ge. Weitere m|fffd|gliche Fehler werden erst angezeigt, wenn Sie die aufgelisteten Fehler bearbeiten und die Pr|fffd|fenfunktion neu ausf|fffd|hren.")
        End If
    End If
    Application.ScreenUpdating = True
    Ueberarbeitungsmodus_ein
    beck_tool.Label1 = error_count & " Formatfehler gefunden! " & Anzahl_Hyperlinks & " Hyperlinks entfernt." & Chr(13) & Anzahl_Bookmarks & " Lesezeichen entfernt. " & LZ
    beck_tool.Repaint
End Function

Public Sub beck_pruefen()

    If ActiveDocument.Endnotes.Count > 0 Then
       MsgBox "ACHTUNG: Die Pr|fffd|fung des Dokumentes kann aus folgendem Grund nicht erfolgen:" & Chr(13) & "Ihr Dokument enth|fffd|lt Endnoten. Bitte wandeln Sie diese In Fu|fffd|noten um. Verwenden Sie dazu die Funktion |fffd|Endnoten konvertieren|fffd| im Bereich |fffd|Sonstiges|fffd| des Beck-Template.", vbOKOnly, "Hinweis"
       Exit Sub
    End If
    
   If UCase(ActiveDocument.BuiltInDocumentProperties(4)) = "LOSEBLATT-KOMMENTAR" Then
      Loseblatt_Kommentar = True  'Loseblatt ohne Strukturpr|fffd|fung
      Else
      Loseblatt_Kommentar = False
    End If

    error = 0
    
    If ActiveWindow.View.SplitSpecial = wdPaneRevisions Then
        ActiveWindow.Panes(2).Close
    End If

    If ActiveWindow.View.SplitSpecial = 7 Then  'Fu|fffd|notenfenster
        ActiveWindow.Panes(2).Close
    End If
    
    Call beck_paragraphs
    
    If error <> 0 Then
       FocusAnDocument
       Call Hinweis
    End If
    If error = 0 Then
       If ActiveDocument.Paragraphs(1).Range.Text = "!!! Wichtiger Hinweis !!!" & Chr(13) Then ActiveDocument.Tables(1).Delete 'Hinweis l|fffd|schen
       beck_status.Label1 = "Die Pr|fffd|fung ergab keine Fehler"
       If beck_tool.Visible = False Then beck_form.CommandButton3.Enabled = True
    End If
    
    'Workaround f|fffd|r Word 2007, da Ribbon evtl. nicht mehr ansprechbar
    Application.ScreenUpdating = False
    Application.ScreenUpdating = True

End Sub

Sub Hinweis_anzeigen(Message As String)
With beck_form
       .Height = .Height + 20
       .Label1.caption = Message
       .Repaint
End With
End Sub

Sub Hinweis_ausblenden()
If beck_form.Label1.caption = "" Then Exit Sub
With beck_form
       .Height = .Height - 20
       .Label1.caption = ""
       .Repaint
End With
End Sub

Sub Hinweis()

On Error Resume Next
If Aenderungen_verfolgen Then ActiveDocument.TrackRevisions = False
ActiveWindow.View.Type = wdNormalView
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
Selection.HomeKey unit:=wdStory
FocusAnDocument

If ActiveDocument.Paragraphs(1).Range.Text = "!!! Wichtiger Hinweis !!!" & Chr(13) Then ActiveDocument.Tables(1).Delete

If ActiveDocument.Paragraphs(1).Range.Information(wdWithInTable) = True Then Selection.SplitTable
ActiveDocument.Tables.Add Range:=Selection.Range, NumRows:=1, NumColumns:= _
        1, DefaultTableBehavior:=wdWord9TableBehavior, AutoFitBehavior:= _
        wdAutoFitFixed
Selection.Tables(1).Borders.OutsideColor = wdColorRed
Selection.TypeText Text:="!!! Wichtiger Hinweis !!!" & Chr(13)
If UCase(ActiveDocument.BuiltInDocumentProperties(4)) = "LOSEBLATT-KOMMENTAR" Then
   Selection.TypeText Text:="Ihr Dokument enth|fffd|lt noch ung|fffd|ltige Formatierungen. "
   Else:
   Selection.TypeText Text:="Ihr Dokument enth|fffd|lt noch Strukturfehler oder ung|fffd|ltige Formatierungen. "
End If
Selection.TypeText Text:="Um genauere Informationen zu erhalten, f|fffd|hren Sie die |fffd|Pr|fffd|fen-Funktion|fffd| aus, die Sie im Fenster |fffd|Beck Werkzeugkiste|fffd| |fffd| |fffd|Pr|fffd|fen|fffd| aufrufen k|fffd|nnen. " & Chr(13)
If UCase(ActiveDocument.BuiltInDocumentProperties(4)) <> "LOSEBLATT-KOMMENTAR" Then
   Selection.TypeText Text:="Enth|fffd|lt Ihr Dokument Strukturfehler (etwa Fehlen von Gliederungsebenen, Verwendung falscher Gliederungsebenen), k|fffd|nnte eventuell eine redaktionelle |fffd|berarbeitung sinnvoll sein. "
   Selection.TypeText Text:="Durch eine fehlerfreie Gliederungsstruktur k|fffd|nnen Zeit und Kosten beim automatisierten Satz gespart werden. " & Chr(13)
End If
Selection.TypeText Text:=Format(Date, "Long Date") & ", " & Format(Time, "Long time")
Selection.Tables(1).Range.Select
Selection.style = "p"
Selection.Font.name = "Times New Roman"
Selection.Font.Color = wdColorAutomatic
Selection.HomeKey unit:=wdStory
If Aenderungen_verfolgen Then ActiveDocument.TrackRevisions = True
End Sub

Sub IniWrite(VerknFormat, Felder)
Dim fs, f
Dim strVerzeichnis As String

strVerzeichnis = Environ("HOMEDRIVE") & Environ("HOMEPATH")
On Error Resume Next
Set fs = CreateObject("Scripting.FileSystemObject")
'If Not fs.DriveExists("c:\") Then Exit Sub
If Not fs.FolderExists(strVerzeichnis & "\Beck Word Template\") Then fs.CreateFolder (strVerzeichnis & "\Beck Word Template\")
fs.FileExists (strVerzeichnis & "\Beck Word Template\config.ini")
Set f = fs.CreateTextFile(strVerzeichnis & "\Beck Word Template\config.ini", True)
f.WriteLine (VerknFormat)
f.WriteLine (Felder)
f.WriteLine ("Konfigurationsdatei f|fffd|r Beck'sche XML-Autosatz-Dokumentvorlage")
f.Close
End Sub

Sub IniRead()
Const ForReading = 1, ForWriting = 2, ForAppending = 3
Dim fs, f
Dim strVerzeichnis As String

strVerzeichnis = Environ("HOMEDRIVE") & Environ("HOMEPATH")
On Error Resume Next
Set fs = CreateObject("Scripting.FileSystemObject")
If fs.FileExists(strVerzeichnis & "\Beck Word Template\config.ini") Then
   Set f = fs.OpenTextFile(strVerzeichnis & "\Beck Word Template\config.ini", ForReading)
Else
   Verkn_anzeigen = True
   Fields_inText = True
   Exit Sub
End If

If f.readline = "True" Then Verkn_anzeigen = True Else Verkn_anzeigen = False
If f.readline = "True" Then Fields_inText = True Else Fields_inText = False

f.Close

End Sub

Sub Rn_zaehlen()
Dim apara
Dim Text As Boolean, Text_Absatz As Boolean
Dim Treffer As Boolean
Dim i As Long, para_anzahl As Long, fn_anzahl As Long
Dim n As Integer, t As Integer, Komma As Integer, Trennung As Integer
Dim Bisstrich As Integer, Slash As Integer, Differenz As Integer, Korrektur As Integer
Dim para_inhalt As Variant
Dim Einstellungen As String, Bookmark_str As String, Links As String, Links_val As String, Rechts As String, Rechts_val As String
Dim b() As String

Application.ScreenRefresh

Erase b
i = CInt(beck_randnummern.b_Start.Text)
Text = False
Einstellungen = ""
Treffer = False

For n = 0 To beck_randnummern.Controls.Count - 1   'alle durchlaufen und Checkboxen und Textfelder abspeichern
    If Left(beck_randnummern.Controls(n).name, 2) = "b_" Then Einstellungen = Einstellungen & CInt(beck_randnummern.Controls(n).Value) & ";"
Next

On Error Resume Next
ActiveDocument.CustomDocumentProperties.Add name:="Rn", LinkToContent:=False, _
  Type:=msoPropertyTypeString, Value:=""
ActiveDocument.CustomDocumentProperties("Rn").Value = Einstellungen
On Error GoTo 0  'wieder ausschalten

Rn_numbering = True
para_zaehler = 0
para_anzahl = ActiveDocument.Paragraphs.Count
fn_anzahl = ActiveDocument.Footnotes.Count
Application.ScreenUpdating = False
Ueberarbeitungsmodus_aus
beck_form.Enabled = False


ActiveDocument.Range.Copy

On Error GoTo Fehler

For Each apara In ActiveDocument.Paragraphs
   Komma = 0
   Slash = 0
   Trennung = 0
   Bisstrich = 0
   
   para_zaehler = para_zaehler + 1
   beck_status.Label1 = "Rn.: Pr|fffd|fe Absatz " & para_zaehler & " von " & para_anzahl
   DoEvents

   'If apara.Range.Information(wdWithInTable) = True Then  'Tabellen k|fffd|nnen nicht sauber gepr|fffd|ft werden (insb. Aufz.).
   If apara.Range.Tables.Count <> 0 Then   'geht schneller als |fffd|ber "Information"
      style = "p"  'Daher f|fffd|r jeden Tabellenabsatz "p" vorgaukeln und den folgenden Code |fffd|berspringen.
      GoTo Start_Pruefung
   End If
   
   If apara.Range.Bookmarks.Exists("\EndOfDoc") Then
      apara.Range.Select
      Selection.MoveLeft unit:=wdCharacter, Count:=1, Extend:=wdExtend 'am Ende des Doks letztes Absatzzeichen auslassen
      If Selection.Paragraphs.Count = 1 Then
         style = Selection.Paragraphs.style
         Else:
         style = Selection.Paragraphs(1).style   'bestimmte Felder z|fffd|hlt apara als  e i n  paragraph, dieser besteht aber aus mehreren paragraphs. Z.B. Rechtsgrundlagenverz."
      End If
   Else:
      If apara.Range.Revisions.Count <> 0 Then   'Feststellen, ob Stelle im |fffd|berarbeitungsmodus
         apara.Range.Select                      '|fffd|berarbeitungsmodus mit "Select" auswerten. Geht in Word 2003 leider nicht anders. Ab Word 2013 gings ohne "Select".
         If Selection.Paragraphs.Count = 1 Then
            style = Selection.Paragraphs.style
            Else:
            style = Selection.Paragraphs(1).style 's.o.
         End If
         Else:
         style = apara.Range.Paragraphs.style    'Der Normalfall
      End If
   End If
   
   para_inhalt = apara.Range.Text
   para_inhalt = Replace(para_inhalt, " ", "") 'Leerzeichen l|fffd|schen
   'MsgBox (para_inhalt & " " & style) 'f|fffd|r Testzwecke
        
Start_Pruefung:
   If beck_randnummern.b_Rn_aus_Text.Value = False Then
      Select Case style
         Case "h1"
            If beck_randnummern.b_h1.Value = True Then i = 1
         Case "h1(Typo_h2)"
            If beck_randnummern.b_h1.Value = True Then i = 1
         Case "h1(Typo_h3)"
            If beck_randnummern.b_h1.Value = True Then i = 1
         Case "h2"
            If beck_randnummern.b_h2.Value = True Then i = 1
         Case "h2(Typo_h3)"
            If beck_randnummern.b_h2.Value = True Then i = 1
         Case "h2(Typo_h4)"
            If beck_randnummern.b_h2.Value = True Then i = 1
         Case "buch_h1"
            If beck_randnummern.b_buch_h1.Value = True Then i = 1
         Case "buch_h2"
            If beck_randnummern.b_buch_h2.Value = True Then i = 1
         Case "vorspann_start"
            If beck_randnummern.b_vorspann.Value = True Then i = 1
         Case "artikel_titel"
            If beck_randnummern.b_artikel_titel.Value = True Then i = 1
         Case "gesetz_titel"
            If beck_randnummern.b_gesetz_titel.Value = True Then i = 1
         Case "gesetz_h1"
            If beck_randnummern.b_gesetz_h1.Value = True Then i = 1
         Case "gesetz_h2"
            If beck_randnummern.b_gesetz_h2.Value = True Then i = 1
         Case "paratitel"
            If beck_randnummern.b_paratitel.Value = True Then i = 1
         Case "para_anhang_start"
            If beck_randnummern.b_para_anhang.Value = True Then i = 1
         Case "buch_anhang_start"
            If beck_randnummern.b_buch_anhang.Value = True Then i = 1
         Case "anhang_titel"
            If beck_randnummern.b_anhang_titel.Value = True Then i = 1
      End Select
   End If
   
   If style = "randziffer" Then
      Treffer = True
      apara.Range.Select
      Selection.MoveLeft unit:=wdCharacter, Count:=1, Extend:=wdExtend
      If Selection.Paragraphs(1).style <> "randziffer" Then GoTo next_apara 'Z.B. Wenn Rechtsgrundlagenverzeichnis vor der Rn steht, dann soll keine vergeben werden, da sonst das Verz. |fffd|berschrieben wird
            
      If beck_randnummern.b_Rn_aus_Text.Value = True And Val(para_inhalt) = "1" Then i = 1
      If para_inhalt <> Chr(13) Then
         If beck_randnummern.b_VonBisRn = True Then
            'Rn enth|fffd|lt , -
            Komma = InStr(para_inhalt, ",")
            Slash = InStr(para_inhalt, "/")
            Trennung = InStr(para_inhalt, "-")
            Bisstrich = InStr(para_inhalt, Chr(150))
         End If
         
         If Selection.Bookmarks.Count > 0 Then  'Textmarken merken, so vorhanden
            Bookmark_str = ""
            For t = 1 To Selection.Bookmarks.Count
                If Left(Selection.Bookmarks(t).name, 11) <> "Text_als_Rn" Then
                   'Nur wieder einsetzen, wenn Textmarke sich auf Rn beschr|fffd|nkt:
                   'Ein Fall kann im Moment leider nicht wiederhergestellt werden und zwar wenn Textmarke oberhalb Rn beginnt und am Chr(13) der Rn endet (wohl eher unwahrscheinlich f|fffd|r Querverweiszwecke).
                   If Len(Selection.Bookmarks(t).Range.Text) <= Len(apara.Range.Text) Then Bookmark_str = Bookmark_str & Selection.Bookmarks(t).name & ";"
                Else:
                ActiveDocument.Bookmarks(Selection.Bookmarks(t).name).Delete
                End If
            Next
            b = Split(Bookmark_str, ";")
         End If
         
         'Pr|fffd|fen ob eine Rn. oder Text
         Text_Absatz = True
         'Val = 0, wenn erstes Zeichen ein Buchstabe. Bis zehnstellig noch Randnummer (z.B. 1000-1002). Letzte Pos. im Sring ist Absatzmarke
         'Zus|fffd|tzlich Pr|fffd|fen auf Index
         If Val(para_inhalt) <> 0 And Len(para_inhalt) < 12 And InStr(para_inhalt, "XE") = 0 And apara.Range.Footnotes.Count = 0 And apara.Range.Comments.Count = 0 Then Text_Absatz = False
         'Die Randnummer ist wahrscheinlich ein falsch formatierter Absatz
         If Text_Absatz Then
            With ActiveDocument.Bookmarks
                  .Add Range:=Selection.Range, name:="Text_als_Rn_formatiert_in_Abs_" & para_zaehler
                  .DefaultSorting = wdSortByName
                  .ShowHidden = False
            End With
            Text = True
            GoTo next_apara
         End If
      End If
      
      'Von-, Bis-Rn
      If beck_randnummern.b_VonBisRn = True Then
         If Trennung > 0 Or Bisstrich > 0 Then
            If Trennung = 0 Then Trennung = Bisstrich
            Rechts = Right(para_inhalt, Len(para_inhalt) - Trennung)
            Rechts_val = Replace(Str(Val(Rechts)), " ", "") 'nochmal Leerzeichen l|fffd|schen. Entsteht komischerweise durch Str
            Links = Left(para_inhalt, Trennung - 1)
            Links_val = Replace(Str(Val(Links)), " ", "")
            'Von-, Bis darf keinen Buchstaben enthalten. Rechts > 1 da Return am String h|fffd|ngt
            If Len(Links) - Len(Links_val) > 0 Or Len(Rechts) - Len(Rechts_val) > 1 Then
               With ActiveDocument.Bookmarks
                     .Add Range:=Selection.Range, name:="Text_als_Rn_formatiert_in_Abs_" & para_zaehler
                     .DefaultSorting = wdSortByName
                     .ShowHidden = False
               End With
               Text = True
               GoTo next_apara
            End If
            Differenz = Val(Rechts) - Val(Links)
            Selection.Range.Text = i & "|fffd|" & i + Differenz
            i = i + Differenz + 1
         End If
         If Komma > 0 Then
            Rechts = Right(para_inhalt, Len(para_inhalt) - Komma)
            Rechts_val = Replace(Str(Val(Rechts)), " ", "") 'nochmal Leerzeichen l|fffd|schen. Entsteht komischerweise durch Str
            Links = Left(para_inhalt, Komma - 1)
            Links_val = Replace(Str(Val(Links)), " ", "")
            'Von-, Bis darf keinen Buchstaben enthalten. Rechts > 1 da Return am String h|fffd|ngt
            If Len(Links) - Len(Links_val) > 0 Or Len(Rechts) - Len(Rechts_val) > 1 Then
               With ActiveDocument.Bookmarks
                     .Add Range:=Selection.Range, name:="Text_als_Rn_formatiert_in_Abs_" & para_zaehler
                     .DefaultSorting = wdSortByName
                     .ShowHidden = False
               End With
               Text = True
               GoTo next_apara
            End If
            Selection.Range.Text = i & ", " & i + 1
            i = i + 2
         End If
         If Slash > 0 Then
            Rechts = Right(para_inhalt, Len(para_inhalt) - Slash)
            Rechts_val = Replace(Str(Val(Rechts)), " ", "") 'nochmal Leerzeichen l|fffd|schen. Entsteht komischerweise durch Str
            Links = Left(para_inhalt, Slash - 1)
            Links_val = Replace(Str(Val(Links)), " ", "")
            'Von-, Bis darf keinen Buchstaben enthalten. Rechts > 1 da Return am String h|fffd|ngt
            If Len(Links) - Len(Links_val) > 0 Or Len(Rechts) - Len(Rechts_val) > 1 Then
               With ActiveDocument.Bookmarks
                     .Add Range:=Selection.Range, name:="Text_als_Rn_formatiert_in_Abs_" & para_zaehler
                     .DefaultSorting = wdSortByName
                     .ShowHidden = False
               End With
               Text = True
               GoTo next_apara
            End If
            Selection.Range.Text = i & "/" & i + 1
            i = i + 2
         End If

      End If
      
      'a-Rn ist es nur, wenn EIN Buchstabe
      If beck_randnummern.b_aRn_behalten = True And Komma = 0 And Slash = 0 And Bisstrich = 0 And Trennung = 0 Then
         If Len(para_inhalt) - Len(Str(Val(para_inhalt))) = 1 Then
            If i = CInt(beck_randnummern.b_Start.Text) Then Korrektur = 0 Else Korrektur = 1
            If i - Korrektur = 0 Then i = i + 1
            Selection.Range.Text = i - Korrektur & Mid(para_inhalt, Len(para_inhalt) - 1, 1)
            If i = CInt(beck_randnummern.b_Start.Text) Then i = i + 1
            GoTo Textmarke
         End If
         'Zwei oder mehr Buchstaben sind nicht erlaubt
         If Len(para_inhalt) - Len(Str(Val(para_inhalt))) > 1 Then
               With ActiveDocument.Bookmarks
                     .Add Range:=Selection.Range, name:="Text_als_Rn_formatiert_in_Abs_" & para_zaehler
                     .DefaultSorting = wdSortByName
                     .ShowHidden = False
               End With
               Text = True
               GoTo next_apara
         End If
      End If
      
      'Der Normalfall
      If Komma = 0 And Slash = 0 And Bisstrich = 0 And Trennung = 0 Then
         Selection.Range.Text = i
         i = i + 1
      End If
      
Textmarke:
      'Textmarke des Anwenders wieder einsetzen
      apara.Range.Select
      Selection.MoveLeft unit:=wdCharacter, Count:=1, Extend:=wdExtend  'ohne das Return
            If Bookmark_str <> "" Then
         For t = 0 To UBound(b) - 1
            ActiveDocument.Bookmarks.Add name:=b(t)
         Next
         Bookmark_str = ""
      End If
   End If

next_apara:
   ActiveDocument.UndoClear  'verhindert Speicher|fffd|berlauf
Next apara

Fehler:
Rn_numbering = False
Ueberarbeitungsmodus_ein
Application.ScreenUpdating = True
Unload beck_randnummern
beck_form.Enabled = True
Selection.HomeKey unit:=wdStory

If ActiveDocument.Paragraphs.Count <> para_anzahl Or ActiveDocument.Footnotes.Count <> fn_anzahl Or Err.Number <> 0 Then
   beck_status.Label1 = "Vorgang beendet!"  'Bedingung, damit unload beck_status m|fffd|glich ist
   Unload beck_status
   MsgBox ("ACHTUNG: Bei der Bearbeitung des Dokuments ist ein Fehler aufgetreten. Das Dokument wird nun in den urspr|fffd|nglichen Zustand unmittelbar vor der Z|fffd|hlung der Randnummern zur|fffd|ckgesetzt.")
   ActiveDocument.Content.Paste
   Selection.EndKey unit:=wdStory
   If Selection.Text = Chr(13) And Selection.style = "Standard" Then Selection.TypeBackspace
   Zwischenablage_loeschen
   ActiveDocument.UndoClear
   Exit Sub
End If

Zwischenablage_loeschen
ActiveDocument.UndoClear
If Text Then
   beck_status.Label1 = "Vorgang beendet! Der Text enth|fffd|lt noch Stellen, die nicht korrigiert werden konnten. Bitte |fffd|berpr|fffd|fen Sie diese |fffd|ber die Lesezeichenfunktion."
Else:
   If Treffer Then beck_status.Label1 = "Vorgang beendet!" Else beck_status.Label1 = "Vorgang beendet! Keine Randnummern gefunden!"
End If

End Sub

Sub Reihen_festlegen()
Dim Reihe, ArrayMaxIndex, Pfad, Dateiname, a, Antwort
Dim Dateiname_alt, iOffset, sExtension, sFilename

If Version = "" Then
   MsgBox ("Es ist keine Versionsinformation abrufbar. Bitte schlie|fffd|en Sie das Dokument und versuchen Sie es erneut.")
   Exit Sub
End If

On Error GoTo Fehler
Pfad = ActiveDocument.Path & "\"
Dateiname_alt = ActiveDocument.name

For iOffset = Len(Dateiname_alt) To 1 Step -1 'Dateinamen zerlegen
   If Mid(Dateiname_alt, iOffset, 1) = "." Then
   'Letzten Punkt gefunden
      sExtension = Mid(Dateiname_alt, iOffset + 1)
      sFilename = Left(Dateiname_alt, iOffset - 1)
      Exit For
   End If
Next

Antwort = MsgBox("Reihenbezogene Dokumentvorlagen werden aus dem aktuellen Dokument erzeugt und im Verzeichnis |fffd|" & Pfad & "|fffd| gespeichert.", vbOKCancel)
If Antwort = vbCancel Then Exit Sub

Reihe = Array("JUS", "KLB", "GDR", "GRUNDKURS", "DTV-RATGEBER", "KOMMENTAR", "LOSEBLATT-KOMMENTAR", "HANDBUCH", "FESTSCHRIFT", "VAHLEN-AI", "VAHLEN-RP", "VAHLEN-JURA-LEHRBUCH", "BECK-PROFESSIONELL", "PDW", "NJW-PRAXIS", "EWORKBOOX", "")
ArrayMaxIndex = UBound(Reihe)

For a = 0 To ArrayMaxIndex
   ActiveDocument.BuiltInDocumentProperties(4) = Reihe(a)
   If Reihe(a) <> "" Then
      Dateiname = "Beck_" & Version & "_" & Reihe(a) & "." & sExtension
   Else:
      Dateiname = "Beck_" & Version & "." & sExtension
   End If
   ActiveDocument.SaveAs2 FileName:=Pfad & Dateiname
Next

MsgBox ("Die Dateien wurden erfolgreich gespeichert.")
Exit Sub

Fehler:
MsgBox ("Beim Speichern ist ein Fehler aufgetreten. Bitte pr|fffd|fen Sie Pfad bzw. Netzwerkverbindung und sorgen Sie f|fffd|r gen|fffd|gend Speicherplatz.")
End Sub

Sub Men|fffd|anpassungen_Randnummerntool()
Dim Reihe

Reihe = UCase(ActiveDocument.BuiltInDocumentProperties(4))

If Reihe = "VAHLEN-RP" Or Reihe = "VAHLEN-AI" Or Reihe = "VAHLEN-JURA-LEHRBUCH" Or Reihe = "GDR" Or Reihe = "GRUNDKURS" Or Reihe = "JUS" Or Reihe = "KLB" Or Reihe = "NJW-PRAXIS" Then
   beck_randnummern.b_buch_h1.Enabled = False
   beck_randnummern.b_buch_h2.Enabled = False
   beck_randnummern.b_vorspann.Enabled = False
   beck_randnummern.b_artikel_titel.Enabled = False
   beck_randnummern.b_gesetz_titel.Enabled = False
   beck_randnummern.b_gesetz_h1.Enabled = False
   beck_randnummern.b_gesetz_h2.Enabled = False
   beck_randnummern.b_paratitel.Enabled = False
   beck_randnummern.b_para_anhang.Enabled = False
   beck_randnummern.b_buch_anhang.Enabled = False
End If

If Reihe = "HANDBUCH" Then
   beck_randnummern.b_buch_h1.Enabled = False
   beck_randnummern.b_buch_h2.Enabled = False
   beck_randnummern.b_gesetz_titel.Enabled = False
   beck_randnummern.b_gesetz_h1.Enabled = False
   beck_randnummern.b_gesetz_h2.Enabled = False
   beck_randnummern.b_paratitel.Enabled = False
End If

If Reihe = "VAHLEN-RP" Or Reihe = "VAHLEN-AI" Or Reihe = "VAHLEN-JURA-LEHRBUCH" Or Reihe = "GDR" Or Reihe = "GRUNDKURS" Then
  beck_randnummern.b_anhang_titel.Enabled = False
End If
End Sub

Sub Men|fffd|anpassungen()
Dim Reihe
Dim i

If Men|fffd|_angepasst = True Then Exit Sub

'Eintrag aus Dateieigenschaften-Feld "Stichw|fffd|rter" lesen
Reihe = UCase(ActiveDocument.BuiltInDocumentProperties(4))

'L|fffd|schen von Eintr|fffd|gen, bei reihenbedingten Anpassungen. 0 = Erster Listeneintrag
If Reihe = "JUS" Then
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.RemoveItem 4
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 2 'einzelnes Element in der Liste l|fffd|schen
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 10
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 12
   Next i
   For i = 1 To 2
      beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.RemoveItem 13
   Next i
   For i = 1 To 17
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 7
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 11
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False 'ganze Schaltfl|fffd|che ausblenden
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   For i = 1 To 9
      beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 1
   Next i
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 47
   Next i
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 2
End If

If Reihe = "KLB" Then
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.RemoveItem 4
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 2
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 13
   Next i
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False
   For i = 1 To 17
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 7
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 11
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   For i = 1 To 9
      beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 1
   Next i
   For i = 1 To 5
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 42
   Next i
   For i = 1 To 2
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 44
   Next i
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 2
End If

If Reihe = "GDR" Then
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.RemoveItem 4
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 2
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 10
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 12
   Next i
   For i = 1 To 2
      beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.RemoveItem 13
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 4
   For i = 1 To 17
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 6
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 10
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False
   beck_form.MultiPage1.Pages("Page_Anhang").Visible = False
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 47
   Next i
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 2
End If

If Reihe = "GRUNDKURS" Then
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.RemoveItem 4
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 2
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 10
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 12
   Next i
   For i = 1 To 2
      beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.RemoveItem 13
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 4
   For i = 1 To 13
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 6
   Next i
   For i = 1 To 3
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 7
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 11
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False
   beck_form.MultiPage1.Pages("Page_Anhang").Visible = False
   For i = 1 To 2
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 49
   Next i
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 2
End If

If Reihe = "DTV-RATGEBER" Then
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.RemoveItem 4
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 1
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 1
   For i = 1 To 13
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 6
   Next i
   For i = 1 To 8
      beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.RemoveItem 7
   Next i
   For i = 1 To 2
      beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.RemoveItem 4
   Next i
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.RemoveItem 6
   Next i
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 1
   Next i
   For i = 1 To 15
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 5
   Next i
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False
   beck_form.MultiPage1.Pages("Page_Anhang").Visible = False
   For i = 1 To 5
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 17
   Next i
   For i = 1 To 5
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 27
   Next i
   For i = 1 To 5
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 32
   Next i
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 2
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 10
End If

If Reihe = "KOMMENTAR" Then
   For i = 1 To 5
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 1
   Next i
   For i = 1 To 17
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 2
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 6
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 46
   Next i
End If

If Reihe = "LOSEBLATT-KOMMENTAR" Then
   beck_form.CommandButton2.Enabled = False
   For i = 1 To 5
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 1
   Next i
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 2
   Next i
   For i = 1 To 6
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 3
   Next i
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 5
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 9
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 47
   Next i
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 11
End If

If Reihe = "HANDBUCH" Then
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 14
   Next i
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False
   For i = 1 To 3
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 2
   Next i
   For i = 1 To 17
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 4
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 8
End If

If Reihe = "FESTSCHRIFT" Then
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.RemoveItem 4
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False
   beck_form.MultiPage1.Pages("Page_Anhang").Visible = False
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 1
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 1
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 12
   Next i
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.RemoveItem 10
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.RemoveItem 10
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 2
   Next i
   For i = 1 To 17
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 3
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 7
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 47
   Next i
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 2
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 10
End If

If Reihe = "VAHLEN-AI" Or Reihe = "VAHLEN-RP" Then
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.RemoveItem 4
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 2
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 9
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 9
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 11
   Next i
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.RemoveItem 11
   Next i
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 1
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 8
   Next i
   For i = 1 To 10
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 9
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 13
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   For i = 1 To 9
      beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 1
   Next i
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 47
   Next i
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 2
End If

If Reihe = "VAHLEN-JURA-LEHRBUCH" Then
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.RemoveItem 4
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 2
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 9
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 9
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 11
   Next i
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.RemoveItem 11
   Next i
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False
   For i = 1 To 5
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 8
   Next i
   For i = 1 To 10
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 9
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 13
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   For i = 1 To 9
      beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 1
   Next i
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 47
   Next i
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 2
End If

If Reihe = "BECK-PROFESSIONELL" Then
   beck_form.CommandButton1.Enabled = False
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.RemoveItem 4
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 1
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 1
   For i = 1 To 14
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 5
   Next i
   For i = 1 To 10
      beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.RemoveItem 5
   Next i
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False
   For i = 1 To 3
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 1
   Next i
   For i = 1 To 6
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 2
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 4
   For i = 1 To 8
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 8
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 10
   beck_form.MultiPage1.Pages("Page_Anhang").Visible = False
   For i = 1 To 6
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 1
   Next i
   For i = 1 To 25
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 6
   Next i
   For i = 1 To 5
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 12
   Next i
   For i = 1 To 2
      beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 2
   Next i
   For i = 1 To 2
      beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 4
   Next i
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 7
End If

If Reihe = "EWORKBOOX" Then
   beck_form.CommandButton1.Enabled = False
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.RemoveItem 4
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 1
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 1
   For i = 1 To 14
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 5
   Next i
   For i = 1 To 10
      beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.RemoveItem 5
   Next i
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False
   For i = 1 To 3
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 0
   Next i
   For i = 1 To 6
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 2
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 4
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 5
   For i = 1 To 4
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 6
   Next i
   For i = 1 To 2
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 9
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 11
   beck_form.MultiPage1.Pages("Page_Anhang").Visible = False
   For i = 1 To 6
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 1
   Next i
   For i = 1 To 25
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 6
   Next i
   For i = 1 To 5
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 12
   Next i
   For i = 1 To 2
      beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 2
   Next i
   For i = 1 To 2
      beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 4
   Next i
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 7
End If

If Reihe = "PDW" Then
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.RemoveItem 4
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 1
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 1
   For i = 1 To 3
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 7
   Next i
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 9
   Next i
   For i = 1 To 6
      beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.RemoveItem 9
   Next i
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False
   For i = 1 To 3
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 3
   Next i
   For i = 1 To 17
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 4
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 8
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   For i = 1 To 9
      beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 1
   Next i
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 47
   Next i
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 2
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 10
End If

If Reihe = "NJW-PRAXIS" Then
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.RemoveItem 4
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 2 'einzelnes Element in der Liste l|fffd|schen
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 10
   For i = 1 To 7
      beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.RemoveItem 12
   Next i
   For i = 1 To 2
      beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.RemoveItem 13
   Next i
   For i = 1 To 2
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 2
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 3
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 5
   Next i
   For i = 1 To 11
      beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 6
   Next i
   beck_form.MultiPage1.Pages("Page_Blickfang").lbc.RemoveItem 10
   beck_form.MultiPage1.Pages("Page_Gesetz").Visible = False 'ganze Schaltfl|fffd|che ausblenden
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 0
   For i = 1 To 9
      beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.RemoveItem 1
   Next i
   For i = 1 To 4
      beck_form.MultiPage1.Pages("Listen").lb1.RemoveItem 47
   Next i
   beck_form.MultiPage1.Pages("Sonstiges").lbs.RemoveItem 2
End If

Men|fffd|_angepasst = True 'verhindern, dass mehrfach Eintr|fffd|ge per Indexnummer gel|fffd|scht werden

End Sub

Sub WWOptionen()
Dim addinLoop As AddIn
Dim i As Integer
Dim ID As Boolean, Styles As Boolean, Ver As Boolean
Dim Datum

On Error GoTo Fehler 'Falls eine der unten zugewiesenen Optionen in einer zuk|fffd|nftigen Word-Version
                     'nicht mehr zur Verf|fffd|gung steht, dann ohne Fehlermeldung weiter im Programm

For i = 1 To ActiveDocument.CustomDocumentProperties.Count
  If ActiveDocument.CustomDocumentProperties(i).name = "ID" Then ID = True
  If ActiveDocument.CustomDocumentProperties(i).name = "Styles" Then Styles = True
  If ActiveDocument.CustomDocumentProperties(i).name = "Version" Then Ver = True
Next

Datum = CStr(Date)

If ID Then
   ActiveDocument.CustomDocumentProperties("ID").Value = Datum
Else
   ActiveDocument.CustomDocumentProperties.Add name:="ID", LinkToContent:=False, _
   Type:=msoPropertyTypeString, Value:=Datum
End If

If Styles Then
   'do nothing
Else
    ActiveDocument.CustomDocumentProperties.Add name:="Styles", LinkToContent:=False, _
    Type:=msoPropertyTypeString, Value:=""
End If

If Ver Then
   ActiveDocument.CustomDocumentProperties("Version").Value = Version
Else
    ActiveDocument.CustomDocumentProperties.Add name:="Version", LinkToContent:=False, _
    Type:=msoPropertyTypeString, Value:=Version
End If

For Each addinLoop In AddIns
    If addinLoop.name = "PDFMaker.dot" Then
       If AddIns("PDFMaker.dot").Installed = True Then
          AddIns("PDFMaker.dot").Installed = False
          MsgBox ("Sie verwenden Adobe PDFMaker. Dieser wird w|fffd|hrend der Bearbeitung dieser Datei deaktiviert. Erzeugen Sie PDF's bitte |fffd|ber die Drucken-Funktion!")
       End If
    End If
Next addinLoop

ActiveWindow.View.Type = wdNormalView
ActiveDocument.FormattingShowClear = True
    
If WOPtionen = True Then Exit Sub 'wenn schon einmal durchlaufen dann hier abbrechen

With AutoCorrect
        .ReplaceText = True
        .DisplayAutoCorrectOptions = True
        .Entries.Add name:="->", Value:=ChrW(8594) 'Binnenverweispfeil eintragen
End With

'Auskommentierte Optionen legen in Word 2013 den Office-Hintergrund lahm
With Options
        .AutoFormatAsYouTypeApplyHeadings = False
        .AutoFormatAsYouTypeReplaceQuotes = True
        .AutoFormatAsYouTypeReplaceSymbols = True
        .AutoFormatAsYouTypeReplaceHyperlinks = False
        .AutoFormatAsYouTypeFormatListItemBeginning = False
        .AutoFormatAsYouTypeDefineStyles = False
        If .AutoFormatAsYouTypeApplyBulletedLists = False Then TypeApplyBLists = False Else TypeApplyBLists = True  'Einstellung merken
        .AutoFormatAsYouTypeApplyBulletedLists = False
        If .AutoFormatAsYouTypeApplyNumberedLists = False Then TypeApplyNLists = False Else TypeApplyNLists = True
        .AutoFormatAsYouTypeApplyNumberedLists = False
        .AutoFormatApplyHeadings = False
        If .AutoFormatApplyLists = False Then ApplyLists = False Else ApplyLists = True
        .AutoFormatApplyLists = False
        If .AutoFormatApplyBulletedLists = False Then ApplyBLists = False Else ApplyBLists = True
        .AutoFormatApplyBulletedLists = False
        .AutoFormatApplyOtherParas = False
        .AutoFormatReplaceQuotes = True
        .AutoFormatReplaceSymbols = True
        .AutoFormatReplaceHyperlinks = False
        .AutoFormatPreserveStyles = True
        '.ReplaceSelection = True
        '.Overtype = False
        '.PictureWrapType = wdWrapMergeInline
        '.FormatScanning = True
        '.SmartParaSelection = True
End With
    

'Folgende Einstellungen k|fffd|nnten u.U. abst|fffd|rzen. W|fffd|re durch sectionweise Einstellung umgehbar, dauert aber zu lange. Deshalb On error aus.
On Error GoTo 0
On Error Resume Next
    
With ActiveDocument.PageSetup
        .Orientation = wdOrientPortrait
        .TopMargin = CentimetersToPoints(2.5)
        .BottomMargin = CentimetersToPoints(2)
        .LeftMargin = CentimetersToPoints(2.5)
        .RightMargin = CentimetersToPoints(2.5)
        .Gutter = CentimetersToPoints(0)
        .HeaderDistance = CentimetersToPoints(1.25)
        .FooterDistance = CentimetersToPoints(1.25)
        .PageWidth = CentimetersToPoints(21)
        .PageHeight = CentimetersToPoints(29.7)
        .SectionStart = wdSectionNewPage
        .VerticalAlignment = wdAlignVerticalTop
        .SuppressEndnotes = False
        .MirrorMargins = False
        .TwoPagesOnOne = False
        .BookFoldPrinting = False
        .BookFoldRevPrinting = False
        .BookFoldPrintingSheets = 1
        .GutterPos = wdGutterPosLeft
End With
 
ActiveWindow.StyleAreaWidth = CentimetersToPoints(2.75)

With ActiveWindow.View
 '           .ShowPicturePlaceHolders = False
        '    .ShowBookmarks = False
            .ShowAll = True
        '    .ShowDrawings = True
        '    .ShowHighlight = True
End With

Application.CustomizationContext = ActiveDocument   'Tastenkombinationen festlegen
With Application
   .KeyBindings.Add KeyCategory:=wdKeyCategoryStyle, Command:="h1", KeyCode:=BuildKeyCode(wdKeyControl, wdKeyAlt, wdKey1)
   .KeyBindings.Add KeyCategory:=wdKeyCategoryStyle, Command:="h2", KeyCode:=BuildKeyCode(wdKeyControl, wdKeyAlt, wdKey2)
   .KeyBindings.Add KeyCategory:=wdKeyCategoryStyle, Command:="h3", KeyCode:=BuildKeyCode(wdKeyControl, wdKeyAlt, wdKey3)
   .KeyBindings.Add KeyCategory:=wdKeyCategoryStyle, Command:="h4", KeyCode:=BuildKeyCode(wdKeyControl, wdKeyAlt, wdKey4)
   .KeyBindings.Add KeyCategory:=wdKeyCategoryStyle, Command:="h5", KeyCode:=BuildKeyCode(wdKeyControl, wdKeyAlt, wdKey5)
   .KeyBindings.Add KeyCategory:=wdKeyCategoryStyle, Command:="h6", KeyCode:=BuildKeyCode(wdKeyControl, wdKeyAlt, wdKey6)
   .KeyBindings.Add KeyCategory:=wdKeyCategoryStyle, Command:="h7", KeyCode:=BuildKeyCode(wdKeyControl, wdKeyAlt, wdKey7)
   .KeyBindings.Add KeyCategory:=wdKeyCategoryStyle, Command:="h8", KeyCode:=BuildKeyCode(wdKeyControl, wdKeyAlt, wdKey8)
   .KeyBindings.Add KeyCategory:=wdKeyCategoryStyle, Command:="h9", KeyCode:=BuildKeyCode(wdKeyControl, wdKeyAlt, wdKey9)
   .KeyBindings.Add KeyCategory:=wdKeyCategoryStyle, Command:="p", KeyCode:=BuildKeyCode(wdKeyControl, wdKeyAlt, wdKeyP)
   .KeyBindings.Add KeyCategory:=wdKeyCategoryStyle, Command:="randziffer", KeyCode:=BuildKeyCode(wdKeyControl, wdKeyAlt, wdKeyR)
End With

ActiveDocument.UndoClear
WOPtionen = True
Exit Sub

Fehler:
MsgBox ("Es konnten nicht alle Word-Einstellungen angepasst werden. Sie k|fffd|nnen jedoch weiterarbeiten.")
On Error GoTo 0
On Error Resume Next

End Sub

Sub Start()

Version = "1.54"   'Hier Version festlegen, wird dann in Dateieigenschaften geschrieben

If beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.ListCount <= 0 Then
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("schmutztitel_autor")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("schmutztitel_titel")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("titelei_titel")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("titelei_untertitel")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("titelei_buchtyp")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("titelei_autor")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("titelei_p")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("titelei_verlag")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("impressum_online")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("impressum_isbn")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("impressum_p")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("vorwort_titel")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("vorwort_p")
   beck_form.MultiPage1.Pages("Page_Titelei").ListBox_Titelei.AddItem ("vorwort_autor")
End If

If beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.ListCount <= 0 Then
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("p")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("randziffer")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("artikel_titel")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("h1")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("h2")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("h3")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("h4")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("h5")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("h6")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("h7")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("h8")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("h9")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("literatur_titel")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("literatur_p")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("--- Buchaufbau: ---")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("buch_h1")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("buch_h2")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("buch_h3")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("buch_h4")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("buch_h5")
   beck_form.MultiPage1.Pages("Page_Standard").ListBox_Standard.AddItem ("buch_h6")
End If

If beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.ListCount <= 0 Then
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("abbildungsverz_titel")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("abbildungsverz_p")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("abkverz_titel")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("abkverz_p")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("autorverz_titel")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("autorverz_p")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("litverz_titel")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("litverz_p")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("litabk_titel")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("litabk_p")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("tabverz_titel")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("tabverz_p")
   beck_form.MultiPage1.Pages("Page_Verzeichnis").ListBox_Verzeichnis.AddItem ("verz_untertitel")
End If

'Urspr. vorgesehen. Wird nicht mehr gebraucht:
If beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.ListCount <= 0 Then
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h1(Typo_h2)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h1(Typo_h3)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h2(Typo_h3)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h2(Typo_h4)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h3(Typo_h4)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h3(Typo_h5)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h4(Typo_h5)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h4(Typo_h6)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h5(Typo_h6)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h5(Typo_h7)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h6(Typo_h7)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h6(Typo_h8)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h7(Typo_h8)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h7(Typo_h9)")
   beck_form.MultiPage1.Pages("Page_Typografie").ListBox_Typografie.AddItem ("h8(Typo_h9)")
   If Tool_Login Then
      beck_form.MultiPage1.Pages("Page_Typografie").Visible = True  'Typoattributeliste f|fffd|r Hersteller einschalten
   Else
      beck_form.MultiPage1.Pages("Page_Typografie").Visible = False 'ganze Schaltfl|fffd|che ausblenden, da nicht f|fffd|r Autoren und Lektoren relevant
   End If
End If

If beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.ListCount <= 0 Then
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("gesetz_titel")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("gesetz_fassung")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("gesetz_aenderung")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("gesetz_h1")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("gesetz_h2")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("gesetz_h3")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("gesetz_h4")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("gesetz_h5")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("gesetz_h6")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("gesetz_p")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("paratitel")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("paratext")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("vorspann")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("-----------------------------")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("Blickfang-Titel")
   beck_form.MultiPage1.Pages("Page_Gesetz").ListBox_Gesetz.AddItem ("Normtext/Gesetz")
End If

If beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.ListCount <= 0 Then
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("buch_anhang")
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("para_anhang")
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("anhang_titel")
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("h1")
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("h2")
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("h3")
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("h4")
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("h5")
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("paratitel")
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("paratext")
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("p")
   beck_form.MultiPage1.Pages("Page_Anhang").ListBox_Anhang.AddItem ("randziffer")
End If

Load beck_form
Call Men|fffd|anpassungen
beck_form.Show

beck_form.Left = Application.Width - beck_form.Width + Application.Left - 30 'rechts ausrichten
'8 = Word 97. 9 = Word 2000. 10 = Word 2002. 11 = Word 2003. 12 = Word 2007. 14 = Word 2010
If Val(Application.Version) > 11 Then
   beck_form.Top = 0 + Application.Top + 140
Else
   beck_form.Top = 0 + Application.Top + 100
End If

beck_form.Repaint

Call WWOptionen
FocusAnDocument

End Sub

Attribute VB_Name = "Ribbon_Callbacks"
Sub r_Beck_Werkzeugkiste(control As IRibbonControl)
Call Start
End Sub

Sub r_Beck_Tools(control As IRibbonControl)
Call Passwort_eingabe
End Sub

Sub r_Dokumentstruktur(control As IRibbonControl)
Call ViewDocumentMap
End Sub

Sub r_Fussnote(control As IRibbonControl)
Call Zeige_Fussnoten
End Sub

Sub r_Pfeil(control As IRibbonControl)
Call Pfeil_einfuegen
End Sub

Sub r_Blockade(control As IRibbonControl)
Call Blockade_einfuegen
End Sub

Sub r_Umfang(control As IRibbonControl)
Call Umfang.Show
End Sub

Sub r_Drucken(control As IRibbonControl)
Call FilePrint
End Sub

Sub r_Hilfe(control As IRibbonControl)
Call Help
End Sub

Sub OnShow(ByVal contextObject As Object)
MsgBox ("www")
End Sub

Attribute VB_Name = "Ribbon_Handler"
Option Explicit

Sub GetEnabledMacro(control As IRibbonControl, ByRef Enabled)
Dim Reihe
Dim MyTag As String

MyTag = "Enable"
Reihe = UCase(ActiveDocument.BuiltInDocumentProperties(4))

If Reihe = "EWORKBOOX" Or Reihe = "BECK-PROFESSIONELL" Then   'Die Ausnahmen definieren
   If control.Tag = "Group3Button2" Then MyTag = ""           'Group3Button2 = Fu|fffd|noten anzeigen
End If
    
If MyTag = "Enable" Then
   Enabled = True
Else
   Enabled = False
End If

End Sub
Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Private Sub Document_Close()
Dim addinLoop As AddIn
Dim Antwort As Integer

If Absaetze_geprueft = False And ActiveDocument.ComputeStatistics(wdStatisticCharactersWithSpaces, True) > 0 Then
   Antwort = MsgBox("Das Dokument wurde in dieser Sitzung noch nicht auf Strukturfehler oder ung|fffd|ltige Absatzformate gepr|fffd|ft (Pr|fffd|fen-Button im Fenster Beck Werkzeugkiste)." & Chr(13) & Chr(13) & "Wollen Sie das Dokument trotzdem schlie|fffd|en?", vbYesNo + vbExclamation, "Hinweis")
   If Antwort = vbNo Then
        ActiveDocument.Saved = False
        SendKeys "{ESC}"   'Abfrage auf Speicherung abbrechen
   End If
End If

On Error Resume Next

'Bestimmte Einstellungen zur|fffd|cksetzen
With Options
   If TypeApplyBLists = False Then .AutoFormatAsYouTypeApplyBulletedLists = False Else .AutoFormatAsYouTypeApplyBulletedLists = True
   If TypeApplyNLists = False Then .AutoFormatAsYouTypeApplyNumberedLists = False Else .AutoFormatAsYouTypeApplyNumberedLists = True
   If ApplyLists = False Then .AutoFormatApplyLists = False Else .AutoFormatApplyLists = True
   If ApplyBLists = False Then .AutoFormatApplyBulletedLists = False Else .AutoFormatApplyBulletedLists = True
End With

For Each addinLoop In AddIns
    If addinLoop.name = "PDFMaker.dot" Then
       If AddIns("PDFMaker.dot").Installed = False Then AddIns("PDFMaker.dot").Installed = True
    End If
Next addinLoop

End Sub

Private Sub Document_Open()

'Starteinstellungen
    
On Error Resume Next

If Mac Then
   MsgBox ("Die in diesem Dokument enthaltenen Makros funktionieren nur unter Windows!")
   Exit Sub
End If

'Stand Okt. 2010: Die Dokumentvorlage funktioniert ab Word 2003 und h|fffd|her, da diese Versionen umfangreich getestet ist.
'8 = Word 97. 9 = Word 2000. 10 = Word 2002. 11 = Word 2003. 12 = Word 2007. 14 = Word 2010
If Val(Application.Version) < 12 Then
   MsgBox ("Ihre Word-Version wird leider nicht unterst|fffd|tzt! Mindestanforderung ist Word 2007 oder h|fffd|her. Bitte wenden Sie sich an den Verlag.")
End If

If ProtectedViewWindows.Count > 0 Then  'Diesen Befehl gibts erst ab Word 2010. Deshalb On Error Resume next
   If Val(Application.Version) > 13 Then Exit Sub  'Falls Word 2010 in gesch|fffd|tzer Ansicht |fffd|ffnet (z.B. Datei per Mail versandt), dann hier beenden. Customproperties sind nicht ansprechbar.
End If

On Error GoTo 0
Call Start

End Sub
Private Sub Document_New()

'Starteinstellungen falls als DOT gespeichert wurde
    
Call Document_Open

End Sub

Private Sub Load_Ribbon(ByRef probjRibbon As IRibbonUI)
On Error Resume Next
'Folgendes erst ab Word 2010 m|fffd|glich
probjRibbon.ActivateTab "C_H_Beck"
End Sub
Attribute VB_Name = "Umdefinierte_Dialoge"
'Umdefinierte Makros
'Umdef. Makros d|fffd|rfen nicht private sein, sonst funktionierts nicht

Sub InsertEndnoteNow()
MsgBox ("Diese Word-Funktion ist nicht verf|fffd|gbar. Bitte verwenden Sie stattdessen die Funktion |fffd|Fu|fffd|note einf|fffd|gen|fffd| der Beck Werkzeugkiste.")
End Sub

Sub InsertFootnoteNow()
FnEinf|fffd|gen
End Sub

Sub FilePrint()  'Die Umleitung des Druckbefehles funktioniert in Word 2010 (neues Dateimen|fffd|) nicht mehr.

On Error Resume Next
ActiveDocument.Bookmarks.Add Range:=Selection.Range, name:="temp"  'Stelle merken
Call Pagina_del
Call Pagina_temp
Selection.GoTo What:=wdGoToBookmark, name:="temp" 'Zur urspr. Stelle zur|fffd|ck
With Dialogs(wdDialogFilePrint)
    If .Display = -1 Then .Execute    '-2 = Schlie|fffd|en. -1 = OK. 0 = Abbrechen. > 0 entsprechene Taste
End With
Call Pagina_del
ActiveDocument.Bookmarks("temp").Delete
End Sub

Sub FilePrintDefault()  'Die Schnelldruckschlatfl|fffd|che

On Error Resume Next
ActiveDocument.Bookmarks.Add Range:=Selection.Range, name:="temp"  'Stelle merken
Call Pagina_del
Call Pagina_temp
Selection.GoTo What:=wdGoToBookmark, name:="temp" 'Zur urspr. Stelle zur|fffd|ck
Dialogs(wdDialogFilePrint).Execute
Call Pagina_del
ActiveDocument.Bookmarks("temp").Delete
End Sub

Private Sub Pagina_temp()

ActiveWindow.View.ShowFieldCodes = False
Selection.Sections(1).Headers(1).Range.Select
Selection.Fields.Add Range:=Selection.Range, Type:=wdFieldEmpty, Text:= _
        "DATE  ", PreserveFormatting:=True
Selection.TypeText Text:=" | "
Selection.Fields.Add Range:=Selection.Range, Type:=wdFieldEmpty, Text:= _
        "STYLEREF  paratitel \l ", PreserveFormatting:=True
Selection.MoveRight unit:=wdWord, Count:=1, Extend:=wdExtend
If Selection.Text = "Fehler! Kein Text mit angegebener Formatvorlage im Dokument." Then
   Selection.Text = ""
   Else
   Selection.TypeText Text:=" | "
End If
Selection.Fields.Add Range:=Selection.Range, Type:=wdFieldEmpty, Text:= _
        "FILENAME", PreserveFormatting:=True

With Selection.Sections(1).Headers(1).PageNumbers
        .NumberStyle = wdPageNumberStyleArabic
        .HeadingLevelForChapter = 0
        .IncludeChapterNumber = False
        .ChapterPageSeparator = wdSeparatorHyphen
        .RestartNumberingAtSection = False
        .StartingNumber = 1
        .Add PageNumberAlignment:=wdAlignPageNumberRight, FirstPage:=True
End With
End Sub

Private Sub Pagina_del()
Dim Anzahl

Ueberarbeitungsmodus_aus
Anzahl = ActiveDocument.Sections.Count
For i = 1 To Anzahl
With ActiveDocument.Sections(i)
    .Headers(wdHeaderFooterFirstPage).Range.Delete 'wegen "erster Seite anders" diese separat l|fffd|schen
    .Headers(wdHeaderFooterPrimary).Range.Delete
    .Headers(wdHeaderFooterEvenPages).Range.Delete
End With
Next i

ActiveWindow.View.Type = wdNormalView   'Ansicht hin- und herschalten l|fffd|scht verbliebenes Absatzzeichen
ActiveWindow.View.Type = wdPrintView
ActiveWindow.View.Type = wdNormalView
Ueberarbeitungsmodus_ein

End Sub

Sub EditBookmark()
'Umdefinieren der Funktion "Textmarke einf|fffd|gen"
MsgBox ("Diese Word-Funktion ist nicht verf|fffd|gbar. Bitte verwenden Sie stattdessen die Lesezeichenfunktion der Beck Werkzeugkiste.")
End Sub

Sub ViewDocumentMap()
'Umdefinieren der Funktion "Dokumentstruktur anzeigen", so dass Selection erhalten bleibt
'und nicht zum Dokumentanfang springt

On Error Resume Next 'da ActiveWindow.DocumentMapPercentWidth = 20 in word 2010 nicht mehr g|fffd|ltig
If Val(Application.Version) < 14 Then 'Ab Word 2010 (Ver. 14) geht das Anzeigen auch mit Fu|fffd|noten
   If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close 'Fu|fffd|noten m|fffd|ssen geschlossen werden, da Anzeige gleichzeitig mit Struktur nicht m|fffd|glich
End If
Selection.Bookmarks.Add ("Strukt_Pos")
If ActiveWindow.DocumentMap = False Then
   ActiveWindow.DocumentMap = True
   ActiveWindow.DocumentMapPercentWidth = 20
Else: ActiveWindow.DocumentMap = False
End If
ActiveDocument.Bookmarks("Strukt_Pos").Select
ActiveDocument.Bookmarks("Strukt_Pos").Delete
End Sub

Sub FileSaveAs() 'Ab Word 2013 funktioniert das Umleiten von SaveAs leider nicht. Word gibt von sich auch eine Meldung aus, falls Makroverlust droht

Dim f, Filterdoc, Filterdocm As Integer
Dim Endung, Standardendung As String
Dim dlgSaveAs As FileDialog
Dim Antwort

On Error GoTo Fehler
Set dlgSaveAs = Application.FileDialog(FileDialogType:=msoFileDialogSaveAs)
For f = 1 To dlgSaveAs.Filters.Count
    Endung = dlgSaveAs.Filters(f).Extensions
    If Endung = "*.doc" Then Filterdoc = f
    If Endung = "*.docm" Then Filterdocm = f
Next

If Val(Application.Version) > 11 Then Standardendung = Filterdocm Else Standardendung = Filterdoc

Restart:
With dlgSaveAs
    .Title = "Speichern unter"
    .FilterIndex = Standardendung
    .InitialFileName = ActiveDocument.name
    If .Show = -1 Then
       If .FilterIndex = Filterdocm Or .FilterIndex = Filterdoc Then
          .Execute
       Else
          Antwort = MsgBox("Um Makros der Dokumentvorlage nicht zu verlieren, w|fffd|hlen Sie bitte (*.doc) oder (*.docm) aus der Dateitypenliste." & Chr(13) & "Soll das Speichern als Dokument ohne Makros fortgesetzt werden?", vbYesNo)
          If Antwort = vbYes Then .Execute Else GoTo Restart
       End If
    End If
End With
Exit Sub

Fehler:
If Err.Number = "-2147467259" Then
   MsgBox ("Eine Datei kann nicht unter dem selben Namen wie eine bereits ge|fffd|ffnete Datei gespeichert werden. Geben Sie bitte einen anderen Dateinamen ein.")
   Else
   MsgBox ("Beim Speichern der Datei ist ein Fehler aufgetreten. Bitte stellen Sie sicher, dass der Datentr|fffd|ger weder voll noch schreibgesch|fffd|tzt ist und versuchen Sie es erneut.")
End If
GoTo Restart

End Sub

'Ab Word 2013 funktioniert das Umleiten von SaveAs leider nicht. Word gibt von sich auch eine Meldung aus, falls Makroverlust droht
Sub FileSaveAsOtherFormats() 'Ab Word 2007
Call FileSaveAs
End Sub

'Ab Word 2013 funktioniert das Umleiten von SaveAs leider nicht. Word gibt von sich auch eine Meldung aus, falls Makroverlust droht
Sub FileSaveWordDocx() 'Ab Word 2007
Call FileSaveAs
End Sub

Sub MarkIndexEntry()
MsgBox ("Diese Word-Funktion ist nicht verf|fffd|gbar. Bitte verwenden Sie stattdessen die Funktion |fffd|Indexeintrag|fffd| der Beck Werkzeugkiste.")
End Sub
Attribute VB_Name = "Umfang"
Attribute VB_Base = "0{8B94084A-A7CA-482B-8502-91ED41DAA0DD}{59FF385A-E5A2-44A1-85D4-294EC9F929BF}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub OK_Click()
Umfang.Hide
End Sub

Private Sub UserForm_Activate()
Dim Reihe, Zeichen_Lz_Fn
Dim JUS_Zeichen, KLB_Zeichen, GDR_Zeichen, DTV_Ratgeber_Zeichen, Gelb_Kommentar_Zeichen, Grau_Kommentar_Zeichen As Integer
Dim PDW_Zeichen, BeckRatgeber_Zeichen, BeckProfessionell_Zeichen, Vahlen_RP_Zeichen, Vahlen_AI_Zeichen, Festschrift_Zeichen As Integer

'Alle Zeichenzahlen inkl. Leerzeichen beziehen sich auf die Standardtypo, nicht die erweiterten Varianten
JUS_Zeichen = 3900
KLB_Zeichen = 3100
GDR_Zeichen = 2400
DTV_Ratgeber_Zeichen = 1900
Gelb_Kommentar_Zeichen = 2900
Grau_Kommentar_Zeichen = 3600
PDW_Zeichen = 3000
BeckProfessionell_Zeichen = 2200
Vahlen_RP_Zeichen = 3300
Vahlen_AI_Zeichen = 3100
Vahlen_JURA_LEHRBUCH_Zeichen = 3300
Festschrift_Zeichen = 3000
NJW_Praxis_Zeichen = 3500

Label0.caption = ""
Label1.caption = "Bitte warten ..."
Umfang.Repaint

Reihe = UCase(ActiveDocument.BuiltInDocumentProperties(4))
Zeichen_Lz_Fn = (ActiveDocument.ComputeStatistics(wdStatisticCharactersWithSpaces, True))
If Zeichen_Lz_Fn = "" Then Zeichen_Lz_Fn = 0

Label0.caption = "Das Dokument enth|fffd|lt: " & Chr(13) & Format(Zeichen_Lz_Fn, "##,##0") & " Zeichen (inkl. Leerzeichen)"
Umfang.caption = "Umfang in Reihe " & Reihe

Select Case Reihe
Case "JUS"
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / JUS_Zeichen)) & " Buchseiten." & _
      Chr(13) & Chr(13) & "Basis: " & JUS_Zeichen & " Zeichen/Seite"
Case "KLB"
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / KLB_Zeichen)) & " Buchseiten." & _
      Chr(13) & Chr(13) & "Basis: " & KLB_Zeichen & " Zeichen/Seite"
Case "GDR"
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / GDR_Zeichen)) & " Buchseiten." & _
      Chr(13) & Chr(13) & "Basis: " & GDR_Zeichen & " Zeichen/Seite"
Case "DTV-RATGEBER"
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / DTV_Ratgeber_Zeichen)) & " Buchseiten." & _
      Chr(13) & Chr(13) & "Basis: " & DTV_Ratgeber_Zeichen & " Zeichen/Seite"
Case "KOMMENTAR"
   Umfang.Height = 180
   Label1.Height = 150
   ok.Top = 135
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / Gelb_Kommentar_Zeichen)) & " Buchseiten bei Format 12,8 x 19,4 cm" & _
      Chr(13) & "Basis: " & Gelb_Kommentar_Zeichen & " Zeichen/Seite" & Chr(13) & _
   Chr(13) & "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / Grau_Kommentar_Zeichen)) & " Buchseiten bei Format 16 x 24 cm" & _
      Chr(13) & "Basis: " & Grau_Kommentar_Zeichen & " Zeichen/Seite." & Chr(13) & Chr(13) & "Abweichende Buchformate bitte anfragen."
Case "PDW"
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / PDW_Zeichen)) & " Buchseiten." & _
      Chr(13) & Chr(13) & "Basis: " & PDW_Zeichen & " Zeichen/Seite"
Case "BECK-PROFESSIONELL"
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / BeckProfessionell_Zeichen)) & " Buchseiten." & _
      Chr(13) & Chr(13) & "Basis: " & BeckProfessionell_Zeichen & " Zeichen/Seite"
Case "VAHLEN-AI"
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / Vahlen_AI_Zeichen)) & " Buchseiten." & _
      Chr(13) & Chr(13) & "Basis: " & Vahlen_AI_Zeichen & " Zeichen/Seite"
Case "VAHLEN-RP"
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / Vahlen_RP_Zeichen)) & " Buchseiten." & _
      Chr(13) & Chr(13) & "Basis: " & Vahlen_RP_Zeichen & " Zeichen/Seite"
Case "VAHLEN-JURA-LEHRBUCH"
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / Vahlen_JURA_LEHRBUCH_Zeichen)) & " Buchseiten." & _
      Chr(13) & Chr(13) & "Basis: " & Vahlen_JURA_LEHRBUCH_Zeichen & " Zeichen/Seite"
Case "FESTSCHRIFT"
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / Festschrift_Zeichen)) & " Buchseiten." & _
      Chr(13) & Chr(13) & "Basis: " & Festschrift_Zeichen & " Zeichen/Seite"
Case "NJW-PRAXIS"
   Label1.caption = "Der derzeitige Umfang entspricht in etwa " & Chr(13) & Round((Zeichen_Lz_Fn / NJW_Praxis_Zeichen)) & " Buchseiten." & _
      Chr(13) & Chr(13) & "Basis: " & NJW_Praxis_Zeichen & " Zeichen/Seite"
Case Else
   Umfang.caption = "Umfangsberechnung nicht m|fffd|glich"
   Label1.caption = "F|fffd|r diese Buchreihe ist derzeit keine Umfangsberechung m|fffd|glich."
End Select
   
End Sub

Attribute VB_Name = "action"
Option Private Module

Sub cmdWrapper(cmd)   'Absatzformate f|fffd|r Container neu Sept. 2012

Select Case cmd
        Case "mContBeispiel"
            insertSpecial "b_beispiel_start", "b_beispiel_stop", "Beispiel"
        Case "mContHervorhebung_Emphasis"
            insertSpecial "b_hervorhebung_emphasis_start", "b_hervorhebung_emphasis_stop", "Hervorhebung/Emphasis"
        Case "mContF|fffd|lle_Aufgabe"
            insertSpecial "b_faelle_aufgabe_start", "b_faelle_aufgabe_stop", "F|fffd|lle/Aufgabe"
        Case "mContL|fffd|sung"
            insertSpecial "b_loesung_start", "b_loesung_stop", "L|fffd|sung"
        Case "mContMerke"
            insertSpecial "b_merke_start", "b_merke_stop", "Merke"
        Case "mContSchema"
            insertSpecial "b_schema_start", "b_schema_stop", "Schema"
        Case "mContZitat"
            insertSpecial "b_zitat_start", "b_zitat_stop", "Zitat"
        Case "mContMaterial"
            insertSpecial "b_material_start", "b_material_stop", "Material"
        Case "mContWichtig"
            insertSpecial "b_wichtig_start", "b_wichtig_stop", "Wichtig"
        Case "mContMotto"
            insertSpecial "b_motto_leitgedanke_start", "b_motto_leitgedanke_stop", "Motto/Leitgedanke"
        Case "mContFormel"
            insertSpecial "b_formel_berechnung_start", "b_formel_berechnung_stop", "Formel/Berechnung"
        Case "mContMaterial_Muster"
            insertSpecial "b_material_muster_start", "b_material_muster_stop", "Material/Muster"
        Case "mContCheckliste"
            insertSpecial "b_checkliste_start", "b_checkliste_stop", "Checkliste"
        Case "mContDetail_Exkurs"
            insertSpecial "b_detail_exkurs_start", "b_detail_exkurs_stop", "Detail/Exkurs"
        Case "mContKleindruck"
            insertSpecial "b_kleindruck_start", "b_kleindruck_stop", "Kleindruck"
        Case "mContAnhang1"
            insertSpecial "buch_anhang_start", "buch_anhang_stop", "Buch Anhang"
        Case "mContAnhang2"
            insertSpecial "para_anhang_start", "para_anhang_stop", "Para Anhang"
        Case "mContVorspann"
            insertSpecial "vorspann_start", "vorspann_stop", "Vorspann"
        Case "mContNormtext"
            insertSpecial "b_normtext_gesetz_start", "b_normtext_gesetz_stop", "Normtext/Gesetz"
        Case "mContTipp"
            insertSpecial "b_tipp_start", "b_tipp_stop", "Tipp"
        Case "mContPunkt"
            insertSpecial "b_aufdenpunkt_start", "b_aufdenpunkt_stop", "Auf den Punkt gebracht"
        Case "mCont|fffd|bung"
            insertSpecial "b_|fffd|bung_start", "b_|fffd|bung_stop", "|fffd|bung"
        Case "mContDefinition"
            insertSpecial "b_definition_start", "b_definition_stop", "Definition"
        Case "mContLexAufz"
            insertSpecial "b_lexaufz_start", "b_lexaufz_stop", "Lexikalische Aufz|fffd|hlung"
        Case "mContAltfassung"
            insertSpecial "b_altfassung_start", "b_altfassung_stop", "Alte Fassung"
        Case "mContFrage"
            insertSpecial "b_frage_start", "b_frage_stop", "Frage"
        Case "mCont|fffd|bersicht"
            insertSpecial "b_|fffd|bersicht_start", "b_|fffd|bersicht_stop", "|fffd|bersicht"
        Case "mContFallstudie"
            insertSpecial "b_fallstudie_start", "b_fallstudie_stop", "Fallstudie"
        Case "mContQuelle_Link"
            insertSpecial "b_quelle_link_start", "b_quelle_link_stop", "Quelle/Link"
        Case "mShowHilfe"
            Help
        Case "mShowVersionInfo"
            versionInfo.Show
        Case "mShowUmfang"
            Umfang.Show
        Case "mShowStruktur"
            ViewDocumentMap
        Case "mShowFussnoten"
            Zeige_Fussnoten
        Case "mKonvEndnoten"
            Konvertiere_Endnoten
        Case "mShowPrint"
            FilePrint
        Case "mInsPic"
            pics.addPic
        Case "Fu|fffd|notentext"
            If Not Selection.Information(wdInFootnoteEndnotePane) Then
               MsgBox ("Dieses Format darf nur im Fu|fffd|notentext vergeben werden!")
               Exit Sub
            End If
            Selection.Range.style = ActiveDocument.Styles(wdStyleFootnoteText)
            Selection.MoveDown unit:=wdParagraph, Count:=1
        Case "mShowRn"
            If Dokumentschutz Then Exit Sub
            beck_randnummern.Show
        Case "mShowDocInfo"
            PaneRevision_close
            Selection.HomeKey unit:=wdStory
            beck_docinfo.Label2.Visible = False
            beck_docinfo.CommandButton2.Visible = False
            beck_docinfo.Label10.Visible = False
            beck_docinfo.CommandButton6.Visible = False
            beck_docinfo.Label11.Visible = False
            beck_docinfo.CommandButton7.Visible = False
            beck_docinfo.Show
        Case "mShowBPfeil"
            Pfeil_einfuegen
        Case "mShowBBlockade"
            Blockade_einfuegen
        Case "listneunum"
            Selection.Range.ListFormat.ConvertNumbersToText
            Neu_Nummerieren
        Case "mNone"
            ' do nothing
        Case Else
            If InStr(Selection.Text, Chr(13)) = 0 Then Selection.Collapse Direction:=wdCollapseStart 'Zuweisung Style geht nur wenn entweder ganzer Absatz oder gar kein Zeichen selektiert
            Selection.Range.ListFormat.ConvertNumbersToText
            Selection.style = ActiveDocument.Styles(cmd)  'Der Name des Absatzformats
            If Left(cmd, 7) = "b_litem" Then 'Ist eine Liste
               Call Insert_Listnum(beck_form.TextBox1, CStr(cmd))
            Else:
               Selection.MoveDown unit:=wdParagraph, Count:=1
            End If
End Select
    
End Sub

Sub insertSpecial(StartStyle, StopStyle, caption)
Dim return_anz As Integer, i As Integer
Dim DocEndeLeer As Boolean, ZweiSchlusszeilen As Boolean, inTabelle As Boolean

On Error GoTo Fehler
Del_Blickfang_Marken 'falls wegen Fehlers welche stehengeblieben

If MultiSelectString Then
   MsgBox ("Es d|fffd|rfen nur zusammenh|fffd|ngende Abs|fffd|tze markiert werden.")
   Exit Sub
End If
If Selection.Range.Characters(1).Information(wdWithInTable) Then inTabelle = True  'Beginn oder Ende der Selection darf nicht in Tabelle sein
If Selection.Range.Characters(Selection.Range.Characters.Count).Information(wdWithInTable) Then inTabelle = True
If inTabelle = True Or Selection.Range.Information(wdInFootnote) = True Then
   MsgBox ("Blickfang an dieser Stelle nicht m|fffd|glich. Die Markierung muss au|fffd|erhalb einer Tabelle beginnen bzw. enden und darf sich nicht im Fu|fffd|notenbereich befinden.")
   Exit Sub
End If

return_anz = Selection.Paragraphs.Count 'wie viele Zeilen sinds
If Selection.Characters.Count <> return_anz Then
   If Selection.Characters.Count > 1 And Selection.Paragraphs(Selection.Paragraphs.Count).Range.Characters.Count <> 1 Then Selection.MoveLeft unit:=wdCharacter, Count:=1, Extend:=wdExtend
End If

If Selection.Bookmarks.Exists("\EndOfDoc") And Selection.Paragraphs(return_anz).Range.Text = Chr(13) Then
   DocEndeLeer = True
   If return_anz = 2 Then ZweiSchlusszeilen = True 'zwei ausgew|fffd|hlte leere Schlusszeilen reagieren anders als drei
End If

If IsLineEmpty And return_anz = 1 Then   'eine einzige Leerzeile anders handhaben. IslineEmpty untersucht nur ersten Absatz
    Selection.Collapse Direction:=wdCollapseStart
    Selection.TypeText (caption & " Start" & Chr(13))
    Selection.MoveUp unit:=wdLine
    Selection.style = ActiveDocument.Styles(StartStyle)
    Selection.MoveDown unit:=wdLine
    Selection.TypeText (Chr(13) & caption & " Stop")
    Selection.style = ActiveDocument.Styles(StopStyle)
    Selection.MoveUp unit:=wdLine
Else
    If return_anz = 1 Then Selection.EndKey unit:=wdLine 'Wenn Cursor am Zeilenbeginn steht, funtionierts nicht
    ActiveDocument.Bookmarks.Add name:="Container_Marke", Range:=Selection.Range
    Selection.Paragraphs(1).Range.Select
    Selection.MoveLeft
    Selection.TypeText (caption & " Start" & Chr(13))
    Selection.MoveUp unit:=wdLine
    Selection.style = ActiveDocument.Styles(StartStyle)
    
    ActiveDocument.Bookmarks("Container_Marke").Select
    If Selection.Paragraphs(Selection.Paragraphs.Count).Range.Characters.Count <> 1 Then 'letzte Zeile nicht leer
       Selection.Collapse Direction:=wdCollapseEnd
       Selection.Paragraphs(1).Range.Select
    End If
    Selection.MoveRight
    If Selection.Bookmarks.Exists("\EndOfDoc") Then
       'do nothing
    Else
       Selection.MoveLeft
    End If
    If DocEndeLeer Then Selection.MoveDown unit:=wdLine
    If ZweiSchlusszeilen Then Selection.MoveDown unit:=wdLine
    Selection.TypeText (Chr(13) & caption & " Stop")
    Selection.style = ActiveDocument.Styles(StopStyle)
    
    Selection.MoveUp unit:=wdLine
    Selection.EndKey unit:=wdLine
End If

Exit Sub

Fehler:
    MsgBox ("Zuweisung eines Blickfangs ist nicht m|fffd|glich. Bitte pr|fffd|fen Sie die Cursorposition. Diese darf sich nur im Text befinden.")
    Del_Blickfang_Marken
    On Error GoTo 0
End Sub

Sub Del_Blickfang_Marken()
    If ActiveDocument.Bookmarks.Exists("Container_Marke") = True Then ActiveDocument.Bookmarks("Container_Marke").Delete
    If ActiveDocument.Bookmarks.Exists("Container_Start") = True Then ActiveDocument.Bookmarks("Container_Start").Delete
    If ActiveDocument.Bookmarks.Exists("Container_Stop") = True Then ActiveDocument.Bookmarks("Container_Stop").Delete

End Sub

Sub Zeige_Fussnoten()
If ActiveDocument.Footnotes.Count > 0 Then
  If ActiveWindow.ActivePane.View.Type = wdPrintView Or ActiveWindow. _
        ActivePane.View.Type = wdWebView Or ActiveWindow.ActivePane.View.Type = _
        wdPrintPreview Then
        ActiveWindow.View.SeekView = wdSeekFootnotes
  Else
        ActiveWindow.View.SplitSpecial = wdPaneFootnotes
  End If
Else
  MsgBox ("Das Dokument hat keine Fu|fffd|noten.")
End If

End Sub

Sub Konvertiere_Endnoten()
Dim Konv_Frage

Konv_Frage = MsgBox("Alle Endnoten werden nun in Fu|fffd|noten konvertiert.", vbOKCancel, "Fu|fffd|noten konvertieren")
If Konv_Frage = vbOK Then ActiveDocument.Endnotes.Convert
End Sub

Sub Pfeil_einfuegen()
On Error GoTo Fehler
Selection.Text = ChrW(8594)
Selection.Font.name = "Times New Roman"
Selection.Collapse Direction:=wdCollapseEnd
Exit Sub

Fehler:
    MsgBox ("Einf|fffd|gen an dieser Position nicht m|fffd|glich")
    
    On Error GoTo 0
End Sub

Sub Blockade_einfuegen()
On Error GoTo Fehler
Selection.Text = ChrW(9632)
Selection.Font.name = "Times New Roman"
Selection.Collapse Direction:=wdCollapseEnd
Exit Sub

Fehler:
    MsgBox ("Einf|fffd|gen an dieser Position nicht m|fffd|glich")
    
    On Error GoTo 0
End Sub
Attribute VB_Name = "beck_Fehlermeldung"
Attribute VB_Base = "0{EA6A806C-A886-440E-B358-8AD742B8C8B7}{804B468D-B81D-4A53-A8D1-06ABBF0C4CF9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()
Unload Me
End Sub

Private Sub CommandButton2_Click()
Dim Parastyle As String
Dim Wordspacing As Boolean
Dim Paraspacing As Boolean
Dim Tableformatting As Boolean
Dim Smartstyle As Boolean
Dim ReplaceSel As Boolean
Dim Overtype As Boolean

Wordspacing = Options.PasteAdjustWordSpacing
Paraspacing = Options.PasteAdjustParagraphSpacing
Tableformatting = Options.PasteAdjustTableFormatting
Smartstyle = Options.PasteSmartStyleBehavior
ReplaceSel = Options.ReplaceSelection
Overtype = Options.Overtype

With Options 'Einstellungen f|fffd|r das Einf|fffd|gen
   .PasteAdjustWordSpacing = False 'damit autom. keine unn|fffd|tigen Leerzeichen beim Einf|fffd|gen von Word eingef|fffd|gt werden
   .PasteAdjustParagraphSpacing = False
   .PasteAdjustTableFormatting = True
   .PasteSmartStyleBehavior = True
   
   'Zur Sicherheit
   .ReplaceSelection = True
   .Overtype = False
End With

If Selection.Paragraphs.Count > 1 Then
   MsgBox ("Es darf nicht mehr als ein Absatz markiert sein. Bitte korrigieren Sie die Abs|fffd|tze einzeln.")
   GoTo Ende
End If
If Selection.Footnotes.Count > 0 Then
   MsgBox ("Die Bereinigung darf nicht auf das Zeichenformat f|fffd|r Fu|fffd|notenziffern angewandt werden. Bitte selektieren Sie einen Bereich ohne Fu|fffd|notenziffer.")
   GoTo Ende
End If
If beck_Fehlermeldung.ListBox1.ListIndex = -1 Then
   MsgBox ("Zuweisung nur m|fffd|glich, wenn Listeneintrag ausgew|fffd|hlt.")
   GoTo Ende
End If
If Selection.Start = Selection.End Then
   MsgBox ("Zuweisung nur m|fffd|glich, wenn Text ausgew|fffd|hlt.")
   GoTo Ende
End If

If Right(Selection, 1) = Chr(13) Then
   Selection.Characters.last.style = wdStyleDefaultParagraphFont 'Absatzzeichen vorab korrigieren
   Selection.MoveRight unit:=wdCharacter, Count:=-1, Extend:=wdExtend 'sonst wird das Absatzformat gel|fffd|scht
End If
If Selection.Start <> Selection.End Then
   Parastyle = Selection.Paragraphs.style
   Selection.Bookmarks.Add name:="temp_selection"
   Selection.Copy
   
   On Error GoTo Fehler
   Selection.ClearFormatting
   If Selection.Paragraphs.style = ActiveDocument.Styles(wdStyleNormal) Then Selection.Paragraphs.style = Parastyle 'wieder zuweisen
   On Error GoTo 0
   
   Selection.Range.PasteAndFormat (wdFormatSurroundingFormattingWithEmphasis)
   ActiveDocument.Bookmarks("temp_selection").Select
   ActiveDocument.Bookmarks("temp_selection").Delete
End If

Ende:
Options.PasteAdjustWordSpacing = Wordspacing  'Einstellungen wieder in urspr. Zustand zur|fffd|ck
Options.PasteAdjustParagraphSpacing = Paraspacing
Options.PasteAdjustTableFormatting = Tableformatting
Options.PasteSmartStyleBehavior = Smartstyle
Options.ReplaceSelection = ReplaceSel
Options.Overtype = Overtype

FocusAnDocument
Zwischenablage_loeschen
Exit Sub

Fehler:
Options.PasteAdjustWordSpacing = Wordspacing
Options.PasteAdjustParagraphSpacing = Paraspacing
Options.PasteAdjustTableFormatting = Tableformatting
Options.PasteSmartStyleBehavior = Smartstyle
Options.ReplaceSelection = ReplaceSel
Options.Overtype = Overtype
MsgBox ("An dieser Position kann das Format nicht gel|fffd|scht werden.")
FocusAnDocument
Zwischenablage_loeschen
End Sub

Private Sub CommandButton3_Click()

If Selection.Paragraphs.Count > 1 Then
   MsgBox ("Es darf nicht mehr als ein Absatz markiert sein. Bitte korrigieren Sie die Abs|fffd|tze einzeln.")
   GoTo Ende
End If
If Selection.Footnotes.Count > 0 Then
   MsgBox ("Die Bereinigung darf nicht auf das Zeichenformat f|fffd|r Fu|fffd|notenziffern angewandt werden. Bitte selektieren Sie einen Bereich ohne Fu|fffd|notenziffer.")
   GoTo Ende
End If
If beck_Fehlermeldung.ListBox1.ListIndex = -1 Then
   MsgBox ("Zuweisung nur m|fffd|glich, wenn Listeneintrag ausgew|fffd|hlt.")
   GoTo Ende
End If
If Selection.Start = Selection.End Then
   MsgBox ("Zuweisung nur m|fffd|glich, wenn Text ausgew|fffd|hlt.")
   GoTo Ende
End If

Selection.style = wdStyleDefaultParagraphFont

Ende:
FocusAnDocument
End Sub

Private Sub CommandButton4_Click()
Dim Verkn_Format, Verkn_Frage

On Error GoTo Fehler
If beck_Fehlermeldung.ListBox1.ListIndex = -1 Then Exit Sub

Verkn_Format = beck_Fehlermeldung.ListBox1.List(beck_Fehlermeldung.ListBox1.ListIndex)

If Right(Verkn_Format, 4) = "Zchn" Or Right(Verkn_Format, 4) = "Char" Then
   Verkn_Frage = MsgBox("ACHTUNG: Sie sollten das verkn|fffd|pfte Format |fffd|" & Verkn_Format & "|fffd| nur l|fffd|schen, wenn es die gleiche Formatierung aufweist, wie das der jeweiligen Textstelle zugeh|fffd|rige Absatzformat. Bitte pr|fffd|fen Sie daher alle Textstellen, die mit diesem Format formatiert wurden. Dieser Vorgang kann nicht r|fffd|ckg|fffd|ngig gemacht werden." & Chr(13) & Chr(13) & "Soll das verkn|fffd|pfte Format gel|fffd|scht und alle damit formatierten Textstellen wie das jeweils zugeh|fffd|rige Absatzformat formatiert werden?", vbYesNo, "Hinweis")
   If Verkn_Frage = vbNo Then Exit Sub
   ActiveDocument.Styles(Verkn_Format).LinkStyle = ActiveDocument.Styles(wdStyleNormal)
   ActiveDocument.Styles(Verkn_Format).Delete
   Else:
   MsgBox ("Dieses Format darf nicht automatisiert gel|fffd|scht werden. Sie sollten die Formatierung der einzelnen Textstellen pr|fffd|fen und evtl. manuell neu zuweisen.")
End If
Exit Sub

Fehler:
MsgBox ("Das Format kann nicht gel|fffd|scht werden. M|fffd|glicherweise haben Sie es bereits gel|fffd|scht.")

End Sub

Private Sub ListBox1_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
If Button = 2 Then Exit Sub  'rechte Maustaste
If beck_Fehlermeldung.ListBox1.ListIndex = -1 Then Exit Sub

On Error GoTo Ende
ActiveDocument.Bookmarks(style_error(beck_Fehlermeldung.ListBox1.ListIndex)).Select
FocusAnDocument
Exit Sub

Ende:
MsgBox ("Fehler: Das Sprungziel ist m|fffd|glicherweise nicht mehr vorhanden. Das Dokument wurde zwischenzeitlich ge|fffd|ndert. Bitte die Pr|fffd|fenfunktion erneut ausf|fffd|hren.")

End Sub

Private Sub UserForm_Terminate()
Del_Bookmarks  'in Modul1. Alle Bookmarks l|fffd|schen.
If beck_tool.Visible = False Then beck_form.CommandButton3.Enabled = True 'Lesezeichen wieder zum Neu-Anlegen freigeben
End Sub
Attribute VB_Name = "beck_Indexeintrag"
Attribute VB_Base = "0{5B0B504B-3566-44EB-A21D-D193C7412A34}{509EF53B-26C2-4736-B110-717756082D4A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public Auswahltext As String
Public Indexeintrag, Querverweisstr As String
Public Doppelklick As Boolean

Private Sub CommandButton1_Click()

If IndexeintragCheck Then
   ActiveWindow.ActivePane.View.ShowAll = True
   ActiveDocument.Indexes.MarkEntry Range:=Selection.Range, Entry:=Indexeintrag _
        , EntryAutoText:=Indexeintrag, CrossReference:=Querverweisstr, CrossReferenceAutoText:= _
        "", BookmarkName:="", Bold:=False, Italic:=False
   Selection.Collapse Direction:=wdCollapseEnd
End If
If CheckBox1.Value = True Then Indexcollect
End Sub

Private Sub CommandButton2_Click()

If IndexeintragCheck Then
   ActiveWindow.ActivePane.View.ShowAll = True
   ActiveDocument.Indexes.MarkAllEntries Range:=Selection.Range, Entry:=Indexeintrag _
        , EntryAutoText:=Indexeintrag, CrossReference:=Querverweisstr, CrossReferenceAutoText:= _
        "", BookmarkName:="", Bold:=False, Italic:=False
   Selection.Collapse Direction:=wdCollapseEnd
End If
If CheckBox1.Value = True Then Indexcollect
End Sub

Private Function IndexeintragCheck() As Boolean

Haupteintragtext.Text = LTrim(Haupteintragtext.Text)    'f|fffd|hrendes Leerzeichen l|fffd|schen
Haupteintragtext.Text = RTrim(Haupteintragtext.Text)
Untereintragtext.Text = LTrim(Untereintragtext.Text)
Untereintragtext.Text = RTrim(Untereintragtext.Text)
Unteruntereintragtext.Text = LTrim(Unteruntereintragtext.Text)
Unteruntereintragtext.Text = RTrim(Unteruntereintragtext.Text)

Indexeintrag = Haupteintragtext.Text
If Len(Indexeintrag) = 0 Then
   MsgBox ("Kein Eintrag festgelegt.")
   IndexeintragCheck = False
   Exit Function
End If
If InStr(Indexeintrag & Untereintragtext.Text, ":") Then
   MsgBox ("Der Indexeintrag darf keinen Doppelpunkt enthalten. Bitte korrigieren Sie den Eintrag.")
   IndexeintragCheck = False
   Exit Function
End If

If Len(Untereintragtext.Text) > 0 Then Indexeintrag = Indexeintrag & ":" & Untereintragtext.Text
If Len(Unteruntereintragtext.Text) > 0 Then
     If Len(Untereintragtext.Text) = 0 Then
     MsgBox ("Kein Eintrag festgelegt.")
     IndexeintragCheck = False
   Exit Function
   End If
   Indexeintrag = Indexeintrag & ":" & Unteruntereintragtext.Text
End If

If Querverweis.Value Then Querverweisstr = Querverweistext.Text

IndexeintragCheck = True
End Function
Private Sub CommandButton3_Click()
Unload Me
End Sub

Private Sub CommandButton5_Click()
Indexcollect
End Sub

Private Sub CommandButton6_Click()
If Me.CommandButton6.caption = "<<" Then
   Me.Width = Me.Width - 251
   CommandButton6.caption = ">>"
   Else
   Me.Width = Me.Width + 251
   CommandButton6.caption = "<<"
End If
End Sub

Private Sub CommandButton7_Click()
If Me.ListBox1.ListIndex = -1 Then
   MsgBox ("Bitte markieren Sie zuerst einen Eintrag in der Liste, um mit der Suche zu beginnen.")
   Exit Sub
End If

If Not beck_suche.Visible Then Load beck_suche
beck_suche.TextBox1.Text = "XE " & Chr(34) & Me.ListBox1.List(Me.ListBox1.ListIndex) & Chr(34)
If Not beck_suche.Visible Then beck_suche.Show
End Sub

Private Sub Frame1_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
End Sub

Private Sub Frame2_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
End Sub

Private Sub Frame3_Click()
Aktualisieren
End Sub

Private Sub Haupteintragtext_Change()
If Doppelklick = False Then
   Call Vorauswahl(ListBox1, Haupteintragtext.Text)
   Aktualisieren
   Else
   Doppelklick = False
End If
End Sub

Private Sub Haupteintragtext_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
End Sub

Private Sub Label1_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
End Sub

Private Sub Label2_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
End Sub

Private Sub Label3__Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
End Sub

Private Sub Label4_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
End Sub

Private Sub Label5_Click()
Aktualisieren
End Sub

Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
Dim Trenn1, Trenn2 As Long
Dim Listeneintrag As String

If Me.ListBox1.ListIndex = -1 Then Exit Sub

Listeneintrag = Me.ListBox1.List(Me.ListBox1.ListIndex)
If Len(Listeneintrag) - Len(Replace(Listeneintrag, ":", vbNullString)) > 2 Then
   MsgBox ("Es k|fffd|nnen maximal drei Stichwortebenen |fffd|bernommen werden")
   Exit Sub
End If

Doppelklick = True
Trenn1 = InStr(Listeneintrag, ":")
If Trenn1 <> 0 Then Trenn2 = InStr(Trenn1 + 1, Listeneintrag, ":")

If Trenn1 = 0 Then
   Me.Haupteintragtext.Text = Listeneintrag
   Me.Untereintragtext.Text = ""
   Me.Unteruntereintragtext.Text = ""
End If

If Trenn1 > 0 And Trenn2 = 0 Then
   Me.Haupteintragtext.Text = Left(Listeneintrag, Trenn1 - 1)
   Me.Untereintragtext.Text = Right(Listeneintrag, Len(Listeneintrag) - Trenn1)
   Me.Unteruntereintragtext.Text = ""
End If
  
If Trenn1 > 0 And Trenn2 > 0 Then
   Me.Haupteintragtext.Text = Left(Listeneintrag, Trenn1 - 1)
   Me.Untereintragtext.Text = Mid(Listeneintrag, Trenn1 + 1, Len(Listeneintrag) - Trenn2)
   Me.Unteruntereintragtext.Text = Right(Listeneintrag, Len(Listeneintrag) - Trenn2)
End If

End Sub

Private Sub Querverweis_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
End Sub

Private Sub Querverweistext_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
Querverweis.Value = True
End Sub

Private Sub Untereintragtext_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
End Sub

Private Sub Unteruntereintragtext_Mouseup(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
End Sub

Private Sub UserForm_Initialize()
Indexcollect
Aktualisieren
End Sub

Private Sub UserForm_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Aktualisieren
End Sub

Private Sub Aktualisieren()
Dim pos, Pos_12, Pos_13, n As Integer
Dim strHaupteintrag As String
Dim Starttext As String
Dim UnsichtbareZeichen As Boolean
Dim Fu|fffd|notenansicht As Boolean

On Error Resume Next

Application.ScreenUpdating = False
UnsichtbareZeichen = ActiveWindow.ActivePane.View.ShowAll
ActiveDocument.Bookmarks.Add Range:=Selection.Range, name:="temp"

If ActiveWindow.View.SplitSpecial = 7 Then
   Fu|fffd|notenansicht = True
   If Selection.Information(wdInFootnoteEndnotePane) Then
   End If
End If

Selection.GoTo What:=wdGoToBookmark, name:="temp"

If Selection.Text <> Auswahltext Then
  
   Starttext = Haupteintragtext.Text
   If ActiveWindow.ActivePane.View.ShowAll Then ActiveWindow.ActivePane.View.ShowAll = False
   
   If Selection.Start <> Selection.End Then
      CommandButton2.Enabled = True
      
      If Right(Selection.Text, 1) = " " Then  'Leerzeichen am Ende nicht |fffd|bernehmen
         strHaupteintrag = Left(Selection, Len(Selection.Text) - 1)
         Else
         strHaupteintrag = Selection.Text
      End If

      'Diverses: Jeweils alle Vorkommen l|fffd|schen
      strHaupteintrag = Replace(strHaupteintrag, Chr(1), "")    'Chr(1) = Bild.
      strHaupteintrag = Replace(strHaupteintrag, Chr(2), "")    'Chr(2) = Fu|fffd|notenzeichen.
      strHaupteintrag = Replace(strHaupteintrag, Chr(21), "")   'Chr(21) = Word-Grafik.
      strHaupteintrag = Replace(strHaupteintrag, Chr(30), "")   'Chr(30) = Gesch. Trennung.
      strHaupteintrag = Replace(strHaupteintrag, Chr(31), "")   'Chr(31) = Manuelle Trennung.

      'Return und Seitenwechel nicht nur einfach l|fffd|schen, sondern ab erstem Vorkommen Folgetext abschneiden, wie in Originalwordfunktion
      Pos_12 = InStr(strHaupteintrag, Chr(12))
      Pos_13 = InStr(strHaupteintrag, Chr(13))
      pos = Pos_13
      If Pos_12 <> 0 And Pos_12 < pos Then pos = Pos_12
      If Len(strHaupteintrag) > 0 Then
         If Asc(strHaupteintrag) = 12 Or Asc(strHaupteintrag) = 13 Then
             strHaupteintrag = ""   'falls nur ein einzelnes verbotenes Zeichen
         Else
            If pos = 0 Then pos = Len(strHaupteintrag) Else pos = pos - 1
            strHaupteintrag = Mid(strHaupteintrag, 1, pos)
         End If
      End If
      Haupteintragtext.Text = strHaupteintrag
   End If

   If Selection.Start = Selection.End Then
      Haupteintragtext.Text = ""
      CommandButton2.Enabled = False
   End If

   If Starttext <> Haupteintragtext.Text Then
      Untereintragtext.Text = ""
      Unteruntereintragtext.Text = ""
   End If

   For n = 1 To ActiveWindow.Panes.Count
       If UnsichtbareZeichen Then ActiveWindow.Panes(n).View.ShowAll = True
   Next
End If

ActiveDocument.Bookmarks("temp").Delete
Auswahltext = Selection.Text
Application.ScreenUpdating = True
ActiveDocument.UndoClear
End Sub

Sub Indexcollect()
Dim strIndex As String
Dim Pos1, Pos2 As Integer

On Error Resume Next
Me.ListBox1.Clear
Selection.Bookmarks.Add ("Index_Pos")
Ueberarbeitungsmodus_aus

If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
For Each Feld In ActiveDocument.Fields
    If Feld.Type = wdFieldIndexEntry Then
      Pos1 = InStr(Feld.Code, "\t") 'die Schalter nicht in Liste anzeigen
      If Pos1 = 0 Then Pos1 = InStr(Feld.Code, "\r")  'dto.
      If Pos1 <> 0 Then strIndex = Mid(Feld.Code, 1, Pos1 - 1) Else strIndex = Feld.Code
      Pos1 = InStr(strIndex, Chr(34))
      Pos2 = InStrRev(strIndex, Chr(34))
      strIndex = Mid(Feld.Code, Pos1 + 1, Pos2 - Pos1 - 1)
      Pos1 = InStr(strIndex, Chr(34) & Chr(19))   'falls geschachtelt. Chr(19) = Klammer auf des Feldes
      If Pos1 <> 0 Then strIndex = Mid(strIndex, 1, Pos1 - 1)
      Pos1 = InStr(strIndex, Chr(19))   'falls geschachtelt. Chr(19) = Klammer auf des Feldes
      If Pos1 <> 0 Then strIndex = Mid(strIndex, 1, Pos1 - 1)
      If Len(strIndex) > 0 Then
         Me.ListBox1.AddItem strIndex
      End If
    End If
Next

'Fu|fffd|noten
If ActiveDocument.Footnotes.Count > 0 Then
  ActiveWindow.View.SplitSpecial = wdPaneFootnotes
  Selection.WholeStory
  For Each Feld In Selection.Range.Fields
    If Feld.Type = wdFieldIndexEntry Then
      Pos1 = InStr(Feld.Code, "\t")
      If Pos1 <> 0 Then strIndex = Mid(Feld.Code, 1, Pos1 - 1) Else strIndex = Feld.Code
      Pos1 = InStr(strIndex, Chr(34))
      Pos2 = InStrRev(strIndex, Chr(34))
      strIndex = Mid(Feld.Code, Pos1 + 1, Pos2 - Pos1 - 1)
      Pos1 = InStr(strIndex, Chr(34) & Chr(19))   'falls geschachtelt. Chr(19) = Klammer auf des Feldes
      If Pos1 <> 0 Then strIndex = Mid(strIndex, 1, Pos1 - 1)
      Pos1 = InStr(strIndex, Chr(19))   'falls geschachtelt. Chr(19) = Klammer auf des Feldes
      If Pos1 <> 0 Then strIndex = Mid(strIndex, 1, Pos1 - 1)
      If Len(strIndex) > 0 Then
         Me.ListBox1.AddItem strIndex
      End If
    End If
  Next
End If

ActiveDocument.Bookmarks("Index_Pos").Select
ActiveDocument.Bookmarks("Index_Pos").Delete

'Sortieren:
If Me.ListBox1.ListCount > 0 Then
   ListboxSort
   Dubletten_loeschen
End If
Ueberarbeitungsmodus_ein
ActiveDocument.UndoClear
End Sub

Sub ListboxSort()
Dim i As Integer
Dim arr() As String

ReDim arr(Me.ListBox1.ListCount - 1)

For i = 0 To Me.ListBox1.ListCount - 1
  arr(i) = Me.ListBox1.List(i)
Next i
Call QuickSort(arr)
Me.ListBox1.Clear
For i = 0 To UBound(arr)
  Me.ListBox1.AddItem arr(i)
Next i
End Sub

Private Sub Dubletten_loeschen()
Dim i As Long
    
'Doppelte l|fffd|schen:
For i = 0 To ListBox1.ListCount - 1
   If i < ListBox1.ListCount - 1 Then
        If ListBox1.List(i) = ListBox1.List(i + 1) Then
           ListBox1.RemoveItem (i + 1)
           i = i - 1
        End If
   End If
Next
End Sub

Sub Vorauswahl(Listbox As Listbox, Wert As String)
Dim ctl As control
Dim varElement As Variant
Dim LenWert As Integer
LenWert = Len(Wert)
If LenWert = 0 Then
   Listbox.ListIndex = -1
   Exit Sub
End If
   
Set ctl = Listbox
    For varElement = 0 To ctl.ListCount - 1
       If UCase(Left(ctl.Column(0, varElement), LenWert)) = UCase(Wert) Then
          Listbox.ListIndex = varElement
          Exit For
       Else
          Listbox.ListIndex = -1
       End If
Next varElement
End Sub
Attribute VB_Name = "beck_Umbruchabfrage"
Attribute VB_Base = "0{E2A54F9C-4128-4BD4-B24E-B028CFA38932}{E9820730-B968-4EDC-A2AB-3E0B5360D7DA}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public umbruchtreffer
Public umbruchgefunden As Boolean
Private Sub CommandButton1_Click()

Dim Treffer

On Error GoTo Fehler

If Asc(Selection.Text) = 11 Then
   Treffer = True
   Else: Treffer = False
End If

With Selection.Find
        .Text = "^l"
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchAllWordForms = False
        .MatchSoundsLike = False
        .MatchWildcards = False
        .Replacement.Text = ""
End With

If Treffer Then
   beck_Umbruchabfrage.CommandButton1.Enabled = True
   Selection.Delete
   Selection.Find.Execute
   If Selection.Find.Found = False And ActiveWindow.View.SplitSpecial = 0 And ActiveDocument.Footnotes.Count > 0 Then
      ActiveWindow.View.SplitSpecial = wdPaneFootnotes
      Selection.GoTo What:=wdGoToFootnote, Which:=wdGoToAbsolute, Count:=1
      Selection.Find.Execute
      If Selection.Find.Found = False Then GoTo Kein_Treffer
   Else: If Selection.Find.Found = False Then GoTo Kein_Treffer
   End If
Else:
   MsgBox ("L|fffd|schen an dieser Stelle nicht m|fffd|glich")
   beck_Umbruchabfrage.CommandButton1.Enabled = False
End If

Exit Sub

Kein_Treffer:
MsgBox ("Keine weiteren Treffer")
Unload beck_Umbruchabfrage
Exit Sub

Fehler:
Call Fehler   'in Modul Beck_Tools

End Sub
Private Sub CommandButton2_Click()

With Selection.Find
        .Text = "^l"
        .Forward = True
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchAllWordForms = False
        .MatchSoundsLike = False
        .MatchWildcards = False
End With

Selection.Find.Execute
If Selection.Find.Found And umbruchgefunden = False Then
   umbruchgefunden = True
   umbruchtreffer = Selection.Start
End If
If Asc(Selection.Text) = 11 Then beck_Umbruchabfrage.CommandButton1.Enabled = True

If Selection.Start < umbruchtreffer And ActiveDocument.Footnotes.Count = 0 Then GoTo Kein_Treffer
If Selection.Start < umbruchtreffer And ActiveWindow.View.SplitSpecial = 0 And ActiveDocument.Footnotes.Count > 0 Then GoTo Fussnote
If Selection.Start < umbruchtreffer And ActiveWindow.View.SplitSpecial = 7 And ActiveDocument.Footnotes.Count > 0 Then GoTo Kein_Treffer
If Selection.Find.Found = False And ActiveWindow.View.SplitSpecial = 0 And ActiveDocument.Footnotes.Count > 0 Then
Fussnote:
      ActiveWindow.View.SplitSpecial = wdPaneFootnotes
      umbruchgefunden = False
      umbruchtreffer = -1
      Selection.GoTo What:=wdGoToFootnote, Which:=wdGoToAbsolute, Count:=1
      Selection.Find.Execute
      If Selection.Find.Found = False Then GoTo Kein_Treffer
      Else: If Selection.Find.Found = False Then GoTo Kein_Treffer
End If
Exit Sub

Kein_Treffer:
MsgBox ("Keine weiteren Treffer")
Unload beck_Umbruchabfrage

End Sub
Private Sub CommandButton3_Click()

On Error GoTo Fehler

ActiveWindow.View.Type = wdNormalView
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close

With Selection.Find
        .Text = "^l"
        .Replacement.Text = TextBox1
        .Forward = True
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchAllWordForms = False
        .MatchSoundsLike = False
        .MatchWildcards = False
End With

Application.ScreenUpdating = False

'Im Text
Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""
Selection.Find.Execute Replace:=wdReplaceAll

'In den Fu|fffd|noten
If ActiveDocument.Footnotes.Count = 0 Then
   Application.ScreenUpdating = True
   Exit Sub
End If
Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""
ActiveWindow.View.SplitSpecial = wdPaneFootnotes
Selection.GoTo What:=wdGoToFootnote, _
Which:=wdGoToAbsolute, Count:=1
Selection.Find.Execute Replace:=wdReplaceAll

Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""
Application.ScreenUpdating = True
Unload beck_Umbruchabfrage
Exit Sub

Fehler:
Application.ScreenUpdating = True
Call Fehler

End Sub
Private Sub CommandButton4_Click()
Unload beck_Umbruchabfrage
End Sub
Private Sub UserForm_Activate()

umbruchgefunden = False
umbruchtreffer = -1

With beck_tool
    .Label9 = "Verarbeitung l|fffd|uft ..."
    .Repaint
End With

ActiveWindow.View.Type = wdNormalView
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
With Selection.Find
        .Text = "^l"
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchAllWordForms = False
        .MatchSoundsLike = False
        .MatchWildcards = False
End With
Selection.Find.Execute
   If Selection.Find.Found = False And ActiveWindow.View.SplitSpecial = 0 And ActiveDocument.Footnotes.Count > 0 Then
      ActiveWindow.View.SplitSpecial = wdPaneFootnotes
      Selection.Find.Execute
      If Selection.Find.Found = False Then
         Unload beck_Umbruchabfrage
         MsgBox ("Keine Treffer")
      End If
      Else:
         If Selection.Find.Found = False Then
           Unload beck_Umbruchabfrage
           MsgBox ("Keine Treffer")
        End If
   End If
End Sub

Private Sub UserForm_Terminate()
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close   '7 = In den Noten
ActiveWindow.View.Type = wdNormalView
Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""
With beck_tool
    .Label9 = "Verarbeitung beendet"
    .Repaint
End With
'Suche zur|fffd|cksetzen f|fffd|r Benutzer
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
Selection.Find.Text = ""
End Sub
Attribute VB_Name = "beck_docinfo"
Attribute VB_Base = "0{5BA2743C-91CC-4076-81F6-9EE81B93B623}{8534E3D1-4866-4C5C-92D4-4DBB7026B60C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public Gesamtzahl_Felder, field_anz, field_i, Gesamtzahl_tab, tab_i, kast_i As Integer
Public Gesamtzahl_Bilder, bild_i, Gesamtzahl_Listen, list_i

Private Sub NormalansichtFn()  'Normalansicht inkl. Fu|fffd|noten anzeigen
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
ActiveWindow.View.Type = wdNormalView
If ActiveDocument.Footnotes.Count > 0 Then ActiveWindow.View.SplitSpecial = wdPaneFootnotes
End Sub

Private Sub CommandButton1_Click()
ActiveDocument.BuiltInDocumentProperties(5) = TextBox1.Text
NormalansichtFn
field_i = 0
tab_i = 0
kast_i = 0
bild_i = 0
list_i = 0
Me.CommandButton2.caption = "-> 1"
Me.CommandButton3.caption = "-> 1"
Me.CommandButton4.caption = "-> 1"
Me.CommandButton5.caption = "-> 1"
Me.CommandButton6.caption = "-> 1"
UserForm_Activate
End Sub

Private Sub CommandButton2_Click()
On Error GoTo Fehler
FocusAnDocument
ActiveWindow.View.Type = wdNormalView
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
If field_i = 0 Then field_i = 1
If field_i <= ActiveDocument.Fields.Count Then
  ActiveDocument.Fields(field_i).Select
  field_i = field_i + 1
  If field_i = Gesamtzahl_Felder + 1 Then field_i = 1
  Else:
  ActiveWindow.View.SplitSpecial = wdPaneFootnotes
  Selection.WholeStory
  If field_i <= Gesamtzahl_Felder Then
    Selection.Range.Fields(field_i - ActiveDocument.Fields.Count).Select
    field_i = field_i + 1
    If field_i = Gesamtzahl_Felder + 1 Then field_i = 1
  End If
End If
CommandButton2.caption = "-> " & field_i
Exit Sub
Fehler:
MsgBox ("Sprungziel nicht vorhanden!")
End Sub

Private Sub CommandButton3_Click()
On Error GoTo Fehler
FocusAnDocument
ActiveWindow.View.Type = wdNormalView
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
If tab_i = 0 Then tab_i = 1
If tab_i <= ActiveDocument.Tables.Count Then
  ActiveDocument.Tables(tab_i).Select
  tab_i = tab_i + 1
  If tab_i = Gesamtzahl_tab + 1 Then tab_i = 1
  Else:
  ActiveWindow.View.SplitSpecial = wdPaneFootnotes
  Selection.WholeStory
  If tab_i <= Gesamtzahl_tab Then
    Selection.Range.Tables(tab_i - ActiveDocument.Tables.Count).Select
    tab_i = tab_i + 1
    If tab_i = Gesamtzahl_tab + 1 Then tab_i = 1
  End If
End If
CommandButton3.caption = "-> " & tab_i
Exit Sub
Fehler:
MsgBox ("Sprungziel nicht vorhanden!")
End Sub

Private Sub CommandButton4_Click()
On Error GoTo Fehler
FocusAnDocument
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
If kast_i = 0 Then kast_i = 1
If kast_i <= ActiveDocument.Shapes.Count Then
  ActiveDocument.Shapes(kast_i).Select
  'Zum Sprung an die Auswahl folgender Trick:
  Selection.GoTo What:=wdGoToPage, Which:=wdGoToAbsolute, Count:=Selection.Information(wdActiveEndPageNumber), name:=""
  kast_i = kast_i + 1
  If kast_i = ActiveDocument.Shapes.Count + 1 Then kast_i = 1
End If
CommandButton4.caption = "-> " & kast_i
Exit Sub
Fehler:
MsgBox ("Sprungziel nicht vorhanden!")
End Sub

Private Sub CommandButton5_Click()
On Error GoTo Fehler
FocusAnDocument
ActiveWindow.View.Type = wdNormalView
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
If bild_i = 0 Then bild_i = 1
If bild_i <= ActiveDocument.InlineShapes.Count Then
  ActiveDocument.InlineShapes(bild_i).Select
  bild_i = bild_i + 1
  If bild_i = Gesamtzahl_Bilder + 1 Then bild_i = 1
  Else:
  ActiveWindow.View.SplitSpecial = wdPaneFootnotes
  Selection.WholeStory
  If bild_i <= Gesamtzahl_Bilder Then
    Selection.Range.InlineShapes(bild_i - ActiveDocument.InlineShapes.Count).Select
    bild_i = bild_i + 1
    If bild_i = Gesamtzahl_Bilder + 1 Then bild_i = 1
  End If
End If
CommandButton5.caption = "-> " & bild_i
Exit Sub
Fehler:
MsgBox ("Sprungziel nicht vorhanden!")
End Sub

Private Sub CommandButton6_Click()
On Error GoTo Fehler
FocusAnDocument
ActiveWindow.View.Type = wdNormalView
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
If list_i = 0 Then list_i = 1
ActiveDocument.Lists(list_i).Range.Select
list_i = list_i + 1
If list_i = Gesamtzahl_Listen + 1 Then list_i = 1
CommandButton6.caption = "-> " & list_i
Exit Sub
Fehler:
MsgBox ("Sprungziel nicht vorhanden!")
End Sub

Private Sub CommandButton7_Click()
'Listen in der Strukturansicht anzeigen/ausblenden
Dim i As Integer
Dim Level As Integer, Anzahl As Integer
Dim ParStyle As String

If ActiveDocument.CustomDocumentProperties("Lists").Value = "ein" Then
    ActiveDocument.CustomDocumentProperties("Lists").Value = "aus"
Else
   ActiveDocument.CustomDocumentProperties("Lists").Value = "ein"
End If

Me.ok.Enabled = False
Me.CommandButton7.Enabled = False
Anzahl = ActiveDocument.Styles.Count
For i = 1 To Anzahl
    Me.CommandButton7.caption = "Pr|fffd|fe " & Round((i / Anzahl) * 100, 0) & " %"
    DoEvents
    If Left(ActiveDocument.Styles(i), 7) = "b_litem" Then
       If ActiveDocument.Styles(i).ParagraphFormat.OutlineLevel = wdOutlineLevelBodyText Then
          Level = Val(Right(ActiveDocument.Styles(i), 1))
          Select Case Level
             Case 5
                ActiveDocument.Styles(i).ParagraphFormat.OutlineLevel = wdOutlineLevel9
             Case 4
                ActiveDocument.Styles(i).ParagraphFormat.OutlineLevel = wdOutlineLevel8
             Case 3
                ActiveDocument.Styles(i).ParagraphFormat.OutlineLevel = wdOutlineLevel7
             Case 2
                ActiveDocument.Styles(i).ParagraphFormat.OutlineLevel = wdOutlineLevel6
             Case 1
                ActiveDocument.Styles(i).ParagraphFormat.OutlineLevel = wdOutlineLevel5
          End Select
       Else
          If Left(ActiveDocument.Styles(i), 7) = "b_litem" Then ActiveDocument.Styles(i).ParagraphFormat.OutlineLevel = wdOutlineLevelBodyText
       End If
    End If
Next i

If ActiveDocument.CustomDocumentProperties("Lists").Value = "ein" Then
   Me.Label11.caption = "Manuelle Listen in der Strukturansicht ausblenden"
Else
   Me.Label11.caption = "Manuelle Listen in der Strukturansicht einblenden"
End If

Me.ok.Enabled = True
Me.CommandButton7.Enabled = True
Me.CommandButton7.caption = "OK"
End Sub

Private Sub OK_Click()
field_i = 0
tab_i = 0
kast_i = 0
bild_i = 0
list_i = 0
Unload Me
End Sub

Private Sub UserForm_Activate()
Dim Zeichen_Lz_Fn, Woerter
Dim Feld As Field
Dim Tabellen As Tables
Dim Lists As Boolean

FocusAnDocument
Label8.caption = "Das Dokument enth|fffd|lt: "
Me.Repaint
Application.ScreenUpdating = False

'--------------Zeichenzahl
Zeichen_Lz_Fn = (ActiveDocument.ComputeStatistics(wdStatisticCharactersWithSpaces, True))
Woerter = (ActiveDocument.ComputeStatistics(wdStatisticWords, True))
If Zeichen_Lz_Fn = "" Then Zeichen_Lz_Fn = 0
If Woerter = "" Then Woerter = 0
Label1.caption = Format(Zeichen_Lz_Fn, "##,##0") & " Zeichen (inkl. Leerzeichen)." & " " & Format(Woerter, "##,##0") & " W|fffd|rter"

'--------------Indexeintr|fffd|ge
field_anz = 0
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
Gesamtzahl_Felder = ActiveDocument.Fields.Count
For Each Feld In ActiveDocument.Fields
    If Feld.Type = wdFieldIndexEntry Then
      field_anz = field_anz + 1   'field_anz sind nur die Indexeintr|fffd|ge
      'Feld.Delete 'so ginge das l|fffd|schen
    End If
Next

  'Fu|fffd|noten
If ActiveDocument.Footnotes.Count > 0 Then
  ActiveWindow.View.SplitSpecial = wdPaneFootnotes
  Selection.WholeStory
  Gesamtzahl_Felder = Gesamtzahl_Felder + Selection.Fields.Count
  For Each Feld In Selection.Range.Fields
    If Feld.Type = wdFieldIndexEntry Then
      field_anz = field_anz + 1
    End If
  Next
End If

If Gesamtzahl_Felder = 0 Then CommandButton2.Enabled = False Else CommandButton2.Enabled = True
Label2.caption = Format(Gesamtzahl_Felder, "##,##0") & " Feld(er) davon " & Format(field_anz, "##,##0")
If field_anz = 1 Then
   Label2.caption = Label2.caption & " Index-Eintrag"
   Else: Label2.caption = Label2.caption & " Index-Eintr|fffd|ge"
End If

'--------------Tabellen
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
Gesamtzahl_tab = ActiveDocument.Tables.Count

  'Fu|fffd|noten
If ActiveDocument.Footnotes.Count > 0 Then
  ActiveWindow.View.SplitSpecial = wdPaneFootnotes
  Selection.WholeStory
  Gesamtzahl_tab = Gesamtzahl_tab + Selection.Range.Tables.Count
End If
Label3.caption = Format(Gesamtzahl_tab, "##,##0") & " Tabelle(n)"
If Gesamtzahl_tab = 0 Then CommandButton3.Enabled = False Else CommandButton3.Enabled = True

'--------------K|fffd|sten. Hier braucht man Fu|fffd|noten nicht zu ber|fffd|cksichten, da dort K|fffd|sten nicht m|fffd|glich sind.
Label4.caption = Format(ActiveDocument.Shapes.Count, "##,##0") & " Word-Grafik(en) (z.B. Abdecker, Pfeile, etc.)"
If ActiveDocument.Shapes.Count = 0 Then CommandButton4.Enabled = False Else CommandButton4.Enabled = True

'--------------Bilder
bild_anz = 0
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
Gesamtzahl_Bilder = ActiveDocument.InlineShapes.Count

  'Fu|fffd|noten
If ActiveDocument.Footnotes.Count > 0 Then
  ActiveWindow.View.SplitSpecial = wdPaneFootnotes
  Selection.WholeStory
  Gesamtzahl_Bilder = Gesamtzahl_Bilder + Selection.InlineShapes.Count
End If

If Gesamtzahl_Bilder = 0 Then CommandButton5.Enabled = False Else CommandButton5.Enabled = True
Label9.caption = Format(Gesamtzahl_Bilder, "##,##0") & " Bild(er)"

'--------------Listen
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
Gesamtzahl_Listen = ActiveDocument.Lists.Count
'Bei Listen m|fffd|ssen Fu|fffd|noten nicht extra ber|fffd|cksichtigt werden
Label10.caption = Format(Gesamtzahl_Listen, "##,##0") & " autom. Word-Liste(n)"
If Gesamtzahl_Listen = 0 Then CommandButton6.Enabled = False Else CommandButton6.Enabled = True

For i = 1 To ActiveDocument.CustomDocumentProperties.Count
  If ActiveDocument.CustomDocumentProperties(i).name = "Lists" Then Lists = True
Next

If Not Lists Then
   ActiveDocument.CustomDocumentProperties.Add name:="Lists", LinkToContent:=False, _
   Type:=msoPropertyTypeString, Value:=""
End If

If ActiveDocument.CustomDocumentProperties("Lists").Value = "ein" Then
   Me.Label11.caption = "Manuelle Listen in der Strukturansicht ausblenden"
Else
   Me.Label11.caption = "Manuelle Listen in der Strukturansicht einblenden"
End If

'--------------Fu|fffd|notenanzahl
Label6.caption = Format(ActiveDocument.Footnotes.Count, "##,##0") & " Fu|fffd|note(n)"
Selection.HomeKey
Application.ScreenUpdating = True

'--------------Bemerkungen
TextBox1.Text = ActiveDocument.BuiltInDocumentProperties(5)

End Sub

Private Sub UserForm_Terminate()
ActiveDocument.BuiltInDocumentProperties(5) = TextBox1.Text
NormalansichtFn
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
If Me.ok.Enabled = False Then
   MsgBox ("Bitte warten Sie, bis der Vorgang beendet ist.")
   Cancel = 1
Else
   Cancel = 1
   Me.Hide
End If
End Sub

Attribute VB_Name = "beck_form"
Attribute VB_Base = "0{7258B079-5FD0-44BE-B7FC-28A1C1398813}{3F2555BB-9861-4851-AD95-FCEE52FA192C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Public beck_form_top, beck_form_left 'wird nur innerhalb der Form ben|fffd|tigt
Public Level As Integer  'auch au|fffd|erhalb der Form. Dort mit beck_form.Level aufrufen

Private Sub PaneRevision_close()
If ActiveWindow.View.SplitSpecial = wdPaneRevisions Then
   ActiveWindow.Panes(2).Close
End If
End Sub

Private Sub Command_Pruefen_Click()

If Dokumentschutz Then Exit Sub
If ActiveDocument.Subdocuments.Count > 0 Then  'Die Pr|fffd|fung mit Zentraldokumenten wurde noch nicht ausreichend getestet. So lange deaktivieren.
   MsgBox ("Die Pr|fffd|fung kann in einem Zentraldokument nicht ausgef|fffd|hrt werden. Bitte pr|fffd|fen Sie die einzelnen Filialdokumente.")
   Exit Sub
End If

ID_Fehler_test
If ID_Fehler Then Exit Sub

Del_Blickfang_Marken 'falls wegen Fehlers welche stehengeblieben
Unload beck_Fehlermeldung
beck_Fehlermeldung.ListBox1.Clear

Status_Str = "Absatz"
Load beck_status
beck_status.Show vbModal

End Sub

Private Sub CommandButton1_Click()
Call FnEinf|fffd|gen
End Sub

Private Sub CommandButton1_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Dim Antwort, FN_Wert

'Abfrage, ob Rechte Maustaste und STRG gedr|fffd|ckt
If Shift <> 2 And Button <> 2 Then Exit Sub
On Error GoTo add_FNFunction

Weiter:
If Shift = 2 And Button = 2 Then
   If ActiveDocument.CustomDocumentProperties("Fn").Value = "Ein" Then
       Antwort = MsgBox("M|fffd|chten Sie die Fu|fffd|notenfunktion deaktivieren? Bereits angelegte Fu|fffd|noten bleiben erhalten." & Chr(13) & "Das Dokument enth|fffd|lt aktuell " & ActiveDocument.Footnotes.Count & " Fu|fffd|note(n).", vbYesNo, "Fu|fffd|noten")
       If Antwort = vbYes Then ActiveDocument.CustomDocumentProperties("Fn").Value = "Aus"
       Exit Sub
   End If
   If ActiveDocument.CustomDocumentProperties("Fn").Value = "Aus" Then
       Antwort = MsgBox("M|fffd|chten Sie die Fu|fffd|notenfunktion aktivieren?", vbYesNo, "Fu|fffd|noten")
       If Antwort = vbYes Then ActiveDocument.CustomDocumentProperties("Fn").Value = "Ein"
       Exit Sub
   End If
End If
Exit Sub

add_FNFunction:
    ActiveDocument.CustomDocumentProperties.Add name:="Fn", LinkToContent:=False, _
    Type:=msoPropertyTypeString, Value:="Ein"  'Standardwert
    FN_Wert = "Ein"
    GoTo Weiter
End Sub

Private Sub CommandButton2_Click()

If Dokumentschutz Then Exit Sub

ID_Fehler_test
If ID_Fehler Then Exit Sub

CommandButton2.Enabled = False
FocusAnDocument
Hinweis_anzeigen ("Index wird erstellt. Bitte warten ...")
Load beck_Indexeintrag
Hinweis_ausblenden
beck_Indexeintrag.Show
CommandButton2.Enabled = True
End Sub

Private Sub CommandButton3_Click()

If Dokumentschutz Then Exit Sub

Del_Blickfang_Marken 'falls wegen Fehlers welche stehengeblieben
ID_Fehler_test
If ID_Fehler Then Exit Sub

beck_form.Command_Pruefen.Enabled = False
beck_form.CommandButton3.Enabled = False

Load beck_lesezeichen
beck_lesezeichen.Show
FocusAnDocument
End Sub

Private Sub ListBox_Anhang_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
   On Error GoTo Fehler
   If Button = 2 Then Exit Sub  'rechte Maustaste
   PaneRevision_close
   If ListBox_Anhang.ListIndex = -1 Then Exit Sub
   ID_Fehler_test
   If ID_Fehler Then Exit Sub
   If Gliederungsansicht Then
     MsgBox ("In der Gliederungsansicht darf nur ein Absatz ausgew|fffd|hlt sein.")
     Exit Sub
   End If

   Select Case ListBox_Anhang.List(ListBox_Anhang.ListIndex)
      Case "buch_anhang"
        action.cmdWrapper "mContAnhang1"
        
      Case "para_anhang"
        action.cmdWrapper "mContAnhang2"
      
      Case Else
        If InStr(Selection.Text, Chr(13)) = 0 Then Selection.Collapse Direction:=wdCollapseStart 'Zuweisung Style geht nur wenn entweder ganzer Absatz oder gar kein Zeichen selektiert
        Selection.style = ActiveDocument.Styles(ListBox_Anhang.List(ListBox_Anhang.ListIndex))
        Selection.MoveDown unit:=wdParagraph, Count:=1
   End Select
   FocusAnDocument
   Exit Sub
Fehler:
   Call Fehler
End Sub

Private Sub ListBox_Gesetz_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
   On Error GoTo Fehler
   If Button = 2 Then Exit Sub  'rechte Maustaste
   PaneRevision_close
   If ListBox_Gesetz.ListIndex = -1 Then Exit Sub
   ID_Fehler_test
   If ID_Fehler Then Exit Sub
   If Gliederungsansicht Then
     MsgBox ("In der Gliederungsansicht darf nur ein Absatz ausgew|fffd|hlt sein.")
     Exit Sub
   End If

   Select Case ListBox_Gesetz.List(ListBox_Gesetz.ListIndex)
      Case "vorspann"
        action.cmdWrapper "mContVorspann"
      
      Case "Blickfang-Titel"
        action.cmdWrapper "b_blickfangtitle"
      
      Case "Normtext/Gesetz"
        action.cmdWrapper "mContNormtext"
      
      Case "-----------------------------"
        'do nothing
      
      Case Else
        If InStr(Selection.Text, Chr(13)) = 0 Then Selection.Collapse Direction:=wdCollapseStart 'Zuweisung Style geht nur wenn entweder ganzer Absatz oder gar kein Zeichen selektiert
        Selection.style = ActiveDocument.Styles(ListBox_Gesetz.List(ListBox_Gesetz.ListIndex))
        Selection.MoveDown unit:=wdParagraph, Count:=1
   End Select
   FocusAnDocument
   Exit Sub
Fehler:
   Call Fehler
End Sub

Private Sub ListBox_Typografie_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
   On Error GoTo Fehler
   If Button = 2 Then Exit Sub  'rechte Maustaste
   PaneRevision_close
   If ListBox_Typografie.ListIndex = -1 Then Exit Sub
   ID_Fehler_test
   If ID_Fehler Then Exit Sub
   If Gliederungsansicht Then
      MsgBox ("In der Gliederungsansicht darf nur ein Absatz ausgew|fffd|hlt sein.")
      Exit Sub
   End If

   If InStr(Selection.Text, Chr(13)) = 0 Then Selection.Collapse Direction:=wdCollapseStart 'Zuweisung Style geht nur wenn entweder ganzer Absatz oder gar kein Zeichen selektiert
   Selection.style = ActiveDocument.Styles(ListBox_Typografie.List(ListBox_Typografie.ListIndex))
   Selection.MoveDown unit:=wdParagraph, Count:=1
   FocusAnDocument
   Exit Sub
Fehler:
   Call Fehler
End Sub

Private Sub ListBox_Standard_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
   On Error GoTo Fehler
   If Button = 2 Then Exit Sub  'rechte Maustaste
   If ListBox_Standard.List(ListBox_Standard.ListIndex) = "--- Buchaufbau: ---" Then Exit Sub
   PaneRevision_close
   If ListBox_Standard.ListIndex = -1 Then Exit Sub
   ID_Fehler_test
   If ID_Fehler Then Exit Sub
   If Gliederungsansicht Then
      MsgBox ("In der Gliederungsansicht darf nur ein Absatz ausgew|fffd|hlt sein.")
      Exit Sub
   End If
   
   If InStr(Selection.Text, Chr(13)) = 0 Then Selection.Collapse Direction:=wdCollapseStart 'Zuweisung Style geht nur wenn entweder ganzer Absatz oder gar kein Zeichen selektiert
   Selection.style = ActiveDocument.Styles(ListBox_Standard.List(ListBox_Standard.ListIndex))
   Selection.MoveDown unit:=wdParagraph, Count:=1
   FocusAnDocument
   Exit Sub
Fehler:
   Call Fehler
End Sub

Private Sub ListBox_Titelei_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
   On Error GoTo Fehler
   If Button = 2 Then Exit Sub  'rechte Maustaste
   PaneRevision_close
   If ListBox_Titelei.ListIndex = -1 Then Exit Sub
   ID_Fehler_test
   If ID_Fehler Then Exit Sub
   If Gliederungsansicht Then
      MsgBox ("In der Gliederungsansicht darf nur ein Absatz ausgew|fffd|hlt sein.")
      Exit Sub
   End If

   If InStr(Selection.Text, Chr(13)) = 0 Then Selection.Collapse Direction:=wdCollapseStart 'Zuweisung Style geht nur wenn entweder ganzer Absatz oder gar kein Zeichen selektiert
   Selection.style = ActiveDocument.Styles(ListBox_Titelei.List(ListBox_Titelei.ListIndex))
   Selection.MoveDown unit:=wdParagraph, Count:=1
   FocusAnDocument
   Exit Sub
Fehler:
   Call Fehler
End Sub

Private Sub ListBox_Verzeichnis_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
   On Error GoTo Fehler
   If Button = 2 Then Exit Sub  'rechte Maustaste
   PaneRevision_close
   If ListBox_Verzeichnis.ListIndex = -1 Then Exit Sub
   ID_Fehler_test
   If ID_Fehler Then Exit Sub
   If Gliederungsansicht Then
      MsgBox ("In der Gliederungsansicht darf nur ein Absatz ausgew|fffd|hlt sein.")
      Exit Sub
   End If

   If InStr(Selection.Text, Chr(13)) = 0 Then Selection.Collapse Direction:=wdCollapseStart 'Zuweisung Style geht nur wenn entweder ganzer Absatz oder gar kein Zeichen selektiert
   Selection.style = ActiveDocument.Styles(ListBox_Verzeichnis.List(ListBox_Verzeichnis.ListIndex))
   Selection.MoveDown unit:=wdParagraph, Count:=1
   FocusAnDocument
   Exit Sub
Fehler:
   Call Fehler
End Sub

Private Sub MultiPage1_Change()

End Sub

Private Sub TextBox1_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
Dim Temp As Integer
Dim Zahlen As Boolean

If TextBox1.SelLength = Len(TextBox1.Text) Then TextBox1.Text = "" '|fffd|berschreiben, wenn alles selektiert

On Error Resume Next
Temp = CInt(TextBox1.Text)
If Err.Number = 13 Then  'Keine Zahl
  Zahlen = False
  Else:
  Zahlen = True
End If
Err.Clear  'wird normal autom. zur|fffd|ckgesetzt. Hier nur zur Sicherheit
On Error GoTo 0

If Zahlen And KeyAscii > 57 Then 'falls Buchstabe
   MsgBox ("Hier d|fffd|rfen nur entweder Zahlen >= 0 oder Buchstaben eingegeben werden. Zus|fffd|tzliche Zeichen wie Punkte oder Klammern werden durch Word automatisch bei Wahl des Listenformats hinzugef|fffd|gt.")
   KeyAscii = 0
   Exit Sub
End If
   
If Left(TextBox1.Text, 1) <> Chr(KeyAscii) And Len(TextBox1.Text) > 0 And Zahlen = False Then  'Es d|fffd|rfen nur gleiche Buchstaben eingegeben werden
   KeyAscii = 0
   MsgBox ("Hier d|fffd|rfen nur entweder Zahlen >= 0 oder Buchstaben eingegeben werden. Auch bb, cc usw. ist m|fffd|glich. R|fffd|mische Zahlen geben Sie bitte mittels arabischer Ziffern ein. Zus|fffd|tzliche Zeichen wie Punkte oder Klammern werden durch Word automatisch bei Wahl des Listenformats hinzugef|fffd|gt.")
   Exit Sub
End If
Select Case KeyAscii
'0-9: Ascii 48-57
'a-z: Ascii 97-122
'A-Z: Ascii 65-90
Case 48 To 57
Case 65 To 90
Case 97 To 122
Case Else
    KeyAscii = 0 'keine Tastatureingabe
    MsgBox ("Hier d|fffd|rfen nur entweder Zahlen >= 0 oder Buchstaben eingegeben werden. Zus|fffd|tzliche Zeichen wie Punkte oder Klammern werden durch Word automatisch bei Wahl des Listenformats hinzugef|fffd|gt.")
End Select
End Sub

Private Sub UserForm_Initialize()
    
    ' listbox Listen
    lb1.Clear
    
    lb1.AddItem "Auswahl aktualisieren"
    lb1.List(lb1.ListCount - 1, 1) = "listneunum"
    lb1.AddItem "A."
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a1" 'die zweite Spalte enth|fffd|lt den Formatnamen. Diese Spalte wird nicht angezeigt
    lb1.AddItem "    A."
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a2"
    lb1.AddItem "        A."
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a3"
    
    lb1.AddItem "I."
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_i1"
    lb1.AddItem "    I."
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_i2"
    lb1.AddItem "        I."
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_i3"
        
    lb1.AddItem "1."
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_11"
    lb1.AddItem "    1."
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_12"
    lb1.AddItem "        1."
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_13"
    lb1.AddItem "            1."
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_14"
    lb1.AddItem "                1."
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_15"
    
    lb1.AddItem "a)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a_1"
    lb1.AddItem "    a)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a_2"
    lb1.AddItem "        a)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a_3"
    lb1.AddItem "            a)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a_4"
    lb1.AddItem "                a)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a_5"
        
    lb1.AddItem "aa)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_aa_1"
    lb1.AddItem "    aa)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_aa_2"
    lb1.AddItem "        aa)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_aa_3"
    lb1.AddItem "            aa)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_aa_4"
    lb1.AddItem "                aa)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_aa_5"
        
    lb1.AddItem "(1)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_1_1"
    lb1.AddItem "    (1)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_1_2"
    lb1.AddItem "        (1)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_1_3"
    lb1.AddItem "            (1)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_1_4"
    lb1.AddItem "                (1)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_1_5"
    
    lb1.AddItem "(a)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a__1"
    lb1.AddItem "    (a)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a__2"
    lb1.AddItem "        (a)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a__3"
    lb1.AddItem "            (a)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a__4"
    lb1.AddItem "                (a)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_a__5"
    
    lb1.AddItem "i)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_i_1"
    lb1.AddItem "    i)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_i_2"
    lb1.AddItem "        i)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_i_3"
    lb1.AddItem "            i)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_i_4"
    lb1.AddItem "                i)"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_i_5"
    
    lb1.AddItem "-"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_dash1"
    lb1.AddItem "    -"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_dash2"
    lb1.AddItem "        -"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_dash3"
    lb1.AddItem "            -"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_dash4"
    lb1.AddItem "                -"
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_dash5"
    
    lb1.AddItem ChrW(9679)
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_dot1"
    lb1.AddItem "    " & ChrW(9679)
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_dot2"
    lb1.AddItem "        " & ChrW(9679)
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_dot3"
    lb1.AddItem "            " & ChrW(9679)
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_dot4"
    lb1.AddItem "                " & ChrW(9679)
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_dot5"
    
    lb1.AddItem ChrW(9632)
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_bsquare1"
    lb1.AddItem "    " & ChrW(9632)
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_bsquare2"
    
    lb1.AddItem ChrW(9633)
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_square1"
    lb1.AddItem "    " & ChrW(9633)
    lb1.List(lb1.ListCount - 1, 1) = "b_litem_square2"

    ' listbox Blickfang
    lbc.Clear
    lbc.AddItem "Beispiel"
    lbc.List(lbc.ListCount - 1, 1) = "mContBeispiel"
    lbc.AddItem "Hervorhebung/Emphasis"
    lbc.List(lbc.ListCount - 1, 1) = "mContHervorhebung_Emphasis"
    lbc.AddItem "F|fffd|lle/Aufgabe"
    lbc.List(lbc.ListCount - 1, 1) = "mContF|fffd|lle_Aufgabe"
    lbc.AddItem "L|fffd|sung"
    lbc.List(lbc.ListCount - 1, 1) = "mContL|fffd|sung"
    lbc.AddItem "Merke"
    lbc.List(lbc.ListCount - 1, 1) = "mContMerke"
    lbc.AddItem "Schema"
    lbc.List(lbc.ListCount - 1, 1) = "mContSchema"
    lbc.AddItem "Zitat"
    lbc.List(lbc.ListCount - 1, 1) = "mContZitat"
    lbc.AddItem "Material"
    lbc.List(lbc.ListCount - 1, 1) = "mContMaterial"
    lbc.AddItem "Wichtig"
    lbc.List(lbc.ListCount - 1, 1) = "mContWichtig"
    lbc.AddItem "Motto/Leitgedanke"
    lbc.List(lbc.ListCount - 1, 1) = "mContMotto"
    lbc.AddItem "Formel/Berechnung"
    lbc.List(lbc.ListCount - 1, 1) = "mContFormel"
    lbc.AddItem "Material/Muster"
    lbc.List(lbc.ListCount - 1, 1) = "mContMaterial_Muster"
    lbc.AddItem "Checkliste"
    lbc.List(lbc.ListCount - 1, 1) = "mContCheckliste"
    lbc.AddItem "Detail/Exkurs"
    lbc.List(lbc.ListCount - 1, 1) = "mContDetail_Exkurs"
    lbc.AddItem "Tipp"
    lbc.List(lbc.ListCount - 1, 1) = "mContTipp"
    lbc.AddItem "Auf den Punkt gebracht"
    lbc.List(lbc.ListCount - 1, 1) = "mContPunkt"
    lbc.AddItem "|fffd|bung"
    lbc.List(lbc.ListCount - 1, 1) = "mCont|fffd|bung"
    lbc.AddItem "Definition"
    lbc.List(lbc.ListCount - 1, 1) = "mContDefinition"
    lbc.AddItem "Lexikalische Aufz|fffd|hlung"
    lbc.List(lbc.ListCount - 1, 1) = "mContLexAufz"
    lbc.AddItem "Alte Fassung"
    lbc.List(lbc.ListCount - 1, 1) = "mContAltfassung"
    lbc.AddItem "Frage"
    lbc.List(lbc.ListCount - 1, 1) = "mContFrage"
    lbc.AddItem "|fffd|bersicht"
    lbc.List(lbc.ListCount - 1, 1) = "mCont|fffd|bersicht"
    lbc.AddItem "Fallstudie"
    lbc.List(lbc.ListCount - 1, 1) = "mContFallstudie"
    lbc.AddItem "Quelle/Link"
    lbc.List(lbc.ListCount - 1, 1) = "mContQuelle_Link"
    
    lbc.AddItem "-----------------------------"
    lbc.List(lbc.ListCount - 1, 1) = "mNone"
    lbc.AddItem "Kleindruck"
    lbc.List(lbc.ListCount - 1, 1) = "mContKleindruck"
    lbc.AddItem "-----------------------------"
    lbc.List(lbc.ListCount - 1, 1) = "mNone"
    lbc.AddItem "Blickfang-Titel"
    lbc.List(lbc.ListCount - 1, 1) = "b_blickfangtitle"
    lbc.AddItem "Frage"
    lbc.List(lbc.ListCount - 1, 1) = "Frage"

    ' listbox sonstiges
    lbs.Clear
    lbs.AddItem "Abbildung einf|fffd|gen"
    lbs.List(lbs.ListCount - 1, 1) = "mInsPic"
    lbs.AddItem "Bildunterschrift"
    lbs.List(lbs.ListCount - 1, 1) = "b_bildunterschrift"
    lbs.AddItem "Autorenname"
    lbs.List(lbs.ListCount - 1, 1) = "b_autor"
    lbs.AddItem "Fu|fffd|notentext"
    lbs.List(lbs.ListCount - 1, 1) = "Fu|fffd|notentext"
    lbs.AddItem "-----------------------------"
    lbs.List(lbs.ListCount - 1, 1) = "mNone"
    lbs.AddItem "Dokumentstruktur anzeigen"
    lbs.List(lbs.ListCount - 1, 1) = "mShowStruktur"
    lbs.AddItem "Fu|fffd|noten anzeigen"
    lbs.List(lbs.ListCount - 1, 1) = "mShowFussnoten"
    lbs.AddItem "Endnoten konvertieren"
    lbs.List(lbs.ListCount - 1, 1) = "mKonvEndnoten"
    lbs.AddItem "Umfangsberechnung"
    lbs.List(lbs.ListCount - 1, 1) = "mShowUmfang"
    lbs.AddItem "Drucken mit Seitenzahlen"
    lbs.List(lbs.ListCount - 1, 1) = "mShowPrint"
    lbs.AddItem "Dokumentinformationen"
    lbs.List(lbs.ListCount - 1, 1) = "mShowDocInfo"
    lbs.AddItem "Randnummern z|fffd|hlen"
    lbs.List(lbs.ListCount - 1, 1) = "mShowRn"
    lbs.AddItem "Binnenverweispfeil einf|fffd|gen"
    lbs.List(lbs.ListCount - 1, 1) = "mShowBPfeil"
    lbs.AddItem "Blockade einf|fffd|gen"
    lbs.List(lbs.ListCount - 1, 1) = "mShowBBlockade"
    lbs.AddItem "Template Version"
    lbs.List(lbs.ListCount - 1, 1) = "mShowVersionInfo"
    lbs.AddItem "-----------------------------"
    lbs.List(lbs.ListCount - 1, 1) = "mNone"
    lbs.AddItem "Hilfe (Online)"
    lbs.List(lbs.ListCount - 1, 1) = "mShowHilfe"
 

End Sub

Private Sub UserForm_Activate()
    If beck_form_left > 0 Then Me.Move beck_form_left, beck_form_top

    ID_Fehler_test
    If ID_Fehler Then Exit Sub
    
End Sub

Private Sub lb1_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Dim FN_Fenster As Boolean, Wordspacing As Boolean, AuchListe As Boolean

    On Error GoTo Fehler
    If Button = 2 Then Exit Sub  'rechte Maustaste
    PaneRevision_close
    ID_Fehler_test
    If ID_Fehler Then Exit Sub

    If lb1.ListIndex <> -1 Then
        Wordspacing = Options.PasteAdjustWordSpacing
        Options.PasteAdjustWordSpacing = False 'damit autom. keine unn|fffd|tigen Leerzeichen beim Einf|fffd|gen oder L|fffd|schen von Word eingef|fffd|gt werden
        
        If Gliederungsansicht Then
           MsgBox ("In der Gliederungsansicht darf nur ein Absatz ausgew|fffd|hlt sein.")
           FocusAnDocument
           Exit Sub
        End If
        
        If MultiSelectString Then 'Falls Liste dann Multiselect pr|fffd|fen
           MsgBox ("Es d|fffd|rfen nur zusammenh|fffd|ngende Abs|fffd|tze markiert werden.")
           FocusAnDocument
           Exit Sub
        End If
        
        Rn_numbering = True  'Variable aus Rn-z|fffd|hlung hier auch verwenden, um |fffd|nderungen im ausgeschalteten |fffd|-Modus zur Verfolgen
        Application.ScreenUpdating = False
        AuchListe = False
        
        Selection.Range.Bookmarks.Add name:="temp"
        If ActiveDocument.ActiveWindow.View.SplitSpecial = wdPaneFootnotes Then FN_Fenster = True Else FN_Fenster = False
        Ueberarbeitungsmodus_aus                   'Ueberarbeitungsmodus_aus schlie|fffd|t Fu|fffd|notenfenster, deshalb:
        ActiveDocument.Bookmarks("temp").Select    'Wenn "temp" in Fn, wird es hier wieder eingeblendet
               
        Hinweis_anzeigen ("Nummerierung wird erstellt. Bitte warten ...")
        If IntCharCheck = False Then
           Selection.Range.Select  'Markierung wieder selektieren
        Else
           action.cmdWrapper lb1.List(lb1.ListIndex, 1)
           If Absatznummer <> ActiveDocument.Range.Paragraphs.Count And Not inTabelle And Not Selection.Information(wdInFootnote) Then  'In Tabelle und Fn. nicht pr|fffd|fen, da geht es nicht
              'Wenn Folgeabsatz auch Liste, au|fffd|er wenn letzter Absatz als Liste formatiert wurde:
              Selection.MoveDown unit:=wdParagraph, Count:=1
              If Left(Selection.style, 7) = "b_litem" And Not DocEnde Then AuchListe = True Else AuchListe = False
           Else
              Selection.MoveDown unit:=wdParagraph, Count:=1
           End If
        End If
           
        FocusAnDocument
        If FN_Fenster = True And ActiveDocument.ActiveWindow.View.SplitSpecial <> wdPaneFootnotes Then
           ActiveDocument.ActiveWindow.View.SplitSpecial = wdPaneFootnotes
           ActiveDocument.Bookmarks("temp").Select
           Selection.MoveDown unit:=wdParagraph, Count:=1
        End If
    
        If ActiveDocument.Bookmarks.Exists("temp") Then ActiveDocument.Bookmarks("temp").Delete
        Hinweis_ausblenden
        Application.ScreenUpdating = True
        Ueberarbeitungsmodus_ein
        Rn_numbering = False
        Options.PasteAdjustWordSpacing = Wordspacing
        If AuchListe Then MsgBox ("Die ausgew|fffd|hlten Abs|fffd|tze wurden neu nummeriert." & Chr(13) & _
           "Der Folgeabsatz ihrer Auswahl ist ebenso Bestandteil einer Liste. Bitte pr|fffd|fen Sie, ob die Nummerierung dieses Absatzes noch korrekt ist. Durch Auswahl der Liste und Klick auf |fffd|Auswahl aktualisieren|fffd| k|fffd|nnen Sie die Nummerierung (auch einer verschachtelten Liste) nachtr|fffd|glich aktualisieren.")
        Exit Sub
Fehler:
        Call Fehler
        Hinweis_ausblenden 'bleibt evtl. stehen
        If ActiveDocument.Bookmarks.Exists("temp") Then ActiveDocument.Bookmarks("temp").Delete 'bleibt evtl. stehen
        If ActiveDocument.Bookmarks.Exists("temp_num") Then ActiveDocument.Bookmarks("temp_num").Delete
        If ActiveDocument.Bookmarks.Exists("temp_int") Then ActiveDocument.Bookmarks("temp_int").Delete
        Application.ScreenUpdating = True
        Ueberarbeitungsmodus_ein
        Rn_numbering = False
        Options.PasteAdjustWordSpacing = Wordspacing
    End If
End Sub

Private Function IntCharCheck() As Boolean
Dim p As Integer, Level_temp As Integer
Dim ParStyle(5) As String
Dim StartwertStr As String, Listeintrag As String
Dim Startwert_Buchstabe As Boolean
Dim Antwort
'Startwert pr|fffd|fen und Level f|fffd|r Auswahl aktualisieren bestimmen

If Selection.Range.Characters(1).Information(wdWithInTable) And Selection.Range.Characters(Selection.Range.Characters.Count).Information(wdWithInTable) Then inTabelle = True Else inTabelle = False  'Beginn UND Ende in Tabelle
If inTabelle Then
   If Selection.Range.Cells.Count > 1 Then
      MsgBox ("Die Nummerierung funktioniert nicht |fffd|ber mehrere Tabellenzellen hinweg.")
      IntCharCheck = False
      Exit Function
   End If
End If
If inTabelle = False And Selection.Range.Tables.Count > 0 And Len(Selection.Range.Text) > 1 Then 'L|fffd|nge > 1 wichtig, sonst bei L|fffd|nge 0 Fehlmeldung, wenn Cursor direkt nach Tabelle steht!
   MsgBox ("Die Markierung darf nicht au|fffd|erhalb einer Tabelle beginnen oder enden. Bitte markieren Sie Textabs|fffd|tze nur entweder innerhalb oder au|fffd|erhalb von Tabellen.")
   IntCharCheck = False
   Exit Function
End If

If Selection.Range.Bookmarks.Exists("\EndOfDoc") And Selection.Range.Paragraphs(Selection.Range.Paragraphs.Count).Range.Text = Chr(13) Then DocEndeLeer = True Else DocEndeLeer = False
If Selection.Range.Bookmarks.Exists("\EndOfDoc") Then DocEnde = True Else DocEnde = False

Listeintrag = lb1.List(lb1.ListIndex, 0)

If Listeintrag = "Auswahl aktualisieren" Then   'Neunummerierung pr|fffd|fen
   If beck_form.TextBox1 <> "" Then
      Antwort = MsgBox("F|fffd|r die Neunummerierung kann kein abweichender Nummerierungsbeginn angegeben werden. Soll mit dem Standardwert begonnen werden?", vbYesNo)
      If Antwort = vbYes Then
         beck_form.TextBox1.Text = ""
         IntCharCheck = True
      Else
         IntCharCheck = False
         Exit Function
      End If
   End If

   Level = 0   'Level ist globale Variable
   Level_temp = 0
   Selection.Range.Bookmarks.Add name:="temp_int"

   For p = 1 To Selection.Range.Paragraphs.Count
       ActiveDocument.Bookmarks("temp_int").Select
       If DocEndeLeer Then Selection.MoveDown unit:=wdLine, Extend:=wdExtend 'letzte Zeile anders behandeln wenn leer
       Selection.Range.Paragraphs(p).Range.Select
       Selection.Collapse Direction:=wdCollapseEnd 'muss sein, sonst funktioniert die n|fffd|chste Zeile nicht, wenn im |fffd|-Modus ein kompl. Abs. geel|fffd|scht
       Selection.MoveRight unit:=wdCharacter, Count:=-1, Extend:=wdMove
       
       If Left(Selection.Range.Paragraphs.style, 7) = "b_litem" Then
          Level_temp = CInt(Right(Selection.Range.Paragraphs.style, 1))
          If Level_temp > Level Then Level = Level_temp  'Level = Aufz|fffd|hlungsebenen, wir auch au|fffd|erhalb der func noch ben|fffd|tigt
          If ParStyle(Level_temp) = "" Then ParStyle(Level_temp) = Selection.Range.Paragraphs.style
          If ParStyle(Level_temp) <> "" And ParStyle(Level_temp) <> Selection.Range.Paragraphs.style Then
             MsgBox ("Auf ein und derselben Listenebene d|fffd|rfen keine unterschiedlichen Listenarten vorkommen. Voneinander unabh|fffd|ngige Listen nummerieren Sie bitte separat neu. Bitte pr|fffd|fen Sie Ihre Liste bzw. Textauswahl!")
             IntCharCheck = False
             ActiveDocument.Bookmarks("temp_int").Select
             ActiveDocument.Bookmarks("temp_int").Delete
             Exit Function
          End If
       Else   'keine Liste
          MsgBox ("Ihre Textauswahl darf nur Abs|fffd|tze enthalten, die bereits als Liste formatiert wurden. Bitte pr|fffd|fen Sie Ihre Liste bzw. Textauswahl!")
          IntCharCheck = False
          ActiveDocument.Bookmarks("temp_int").Select
          ActiveDocument.Bookmarks("temp_int").Delete
          Exit Function
       End If
   Next
   ActiveDocument.Bookmarks("temp_int").Select
   ActiveDocument.Bookmarks("temp_int").Delete

   IntCharCheck = True
   Exit Function
End If

If Mid(lb1.List(lb1.ListIndex, 1), 9, 1) = "d" Or Mid(lb1.List(lb1.ListIndex, 1), 9, 1) = "b" Or Mid(lb1.List(lb1.ListIndex, 1), 9, 1) = "s" Then
   IntCharCheck = True 'Die reinen Aufz|fffd|hlungszeichen
   Exit Function
End If

StartwertStr = beck_form.TextBox1.Text
If StartwertStr <> "" Then
   If Asc(Left(StartwertStr, 1)) > 57 And Asc(Left(StartwertStr, 1)) < 123 Then Startwert_Buchstabe = True    'Zeichen zwischen 90 und 97 wurden schon bei Eingabe ausgeschlossen
End If
If UCase(InStr(UCase(Listeintrag), "AA")) <> 0 Then
   If StartwertStr = "" Then  'nur dann
      IntCharCheck = True
      GoTo Weiter
   End If
   If Len(StartwertStr) > 1 And Startwert_Buchstabe Then IntCharCheck = True
   GoTo Weiter
End If
If UCase(InStr(UCase(Listeintrag), "A")) <> 0 Then
   If StartwertStr = "" Then Startwert_Buchstabe = True 'nur dann
   If Startwert_Buchstabe Then IntCharCheck = True
   GoTo Weiter
End If
If UCase(InStr(UCase(Listeintrag), "I")) <> 0 Then
   If StartwertStr = "" Then Startwert_Buchstabe = False 'nur dann
   If Startwert_Buchstabe = False And StartwertStr <> "0" Then IntCharCheck = True
   GoTo Weiter
End If
If InStr(UCase(Listeintrag), "1") <> 0 Then
   If StartwertStr = "" Then Startwert_Buchstabe = False 'nur dann
   If Startwert_Buchstabe = False Then IntCharCheck = True
End If

Weiter:
If IntCharCheck = False Then MsgBox (StartwertStr & " ist kein g|fffd|ltiger Beginn f|fffd|r diese Aufz|fffd|hlung. R|fffd|mische Zahlen geben Sie bitte mittels arabischer Ziffern ein. Bitte pr|fffd|fen Sie Ihre Eingabe.")
End Function

Private Sub lbc_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    'On Error GoTo Fehler
    If Button = 2 Then Exit Sub  'rechte Maustaste
    PaneRevision_close
    
    ID_Fehler_test
    If ID_Fehler Then Exit Sub
    If Gliederungsansicht Then
      MsgBox ("In der Gliederungsansicht darf nur ein Absatz ausgew|fffd|hlt sein.")
      Exit Sub
    End If
    
    If lbc.ListIndex <> -1 Then
        action.cmdWrapper lbc.List(lbc.ListIndex, 1)
    End If
    FocusAnDocument
   Exit Sub
Fehler:
   Call Fehler
End Sub

Private Sub lbs_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
    On Error GoTo Fehler
    If Button = 2 Then Exit Sub  'rechte Maustaste
    PaneRevision_close
    
    ID_Fehler_test
    If ID_Fehler Then Exit Sub

    If lbs.ListIndex <> -1 Then
        action.cmdWrapper lbs.List(lbs.ListIndex, 1)
    End If
    FocusAnDocument
   Exit Sub
Fehler:
   Call Fehler
End Sub

Private Sub UserForm_Deactivate()

beck_form_top = Me.Top
beck_form_left = Me.Left

End Sub

Private Sub UserForm_MouseMove(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
ID_Fehler_test
If ID_Fehler Then Exit Sub
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
beck_form_top = Me.Top
beck_form_left = Me.Left

beck_form.Hide  'verhindert entladen der Form, wenn auf das Kreuz geklickt wird.
Cancel = 1      'dto.
'CloseMode 0 (Klick auf Kreuz), CloseMode 1 (Beenden von Word)

End Sub

Sub Fehler()
MsgBox ("Zuweisung hier nicht m|fffd|glich.")
FocusAnDocument
Application.ScreenUpdating = True 'Zur Sicherheit
Ueberarbeitungsmodus_ein 'Zur Sicherheit
End Sub
Attribute VB_Name = "beck_lesezeichen"
Attribute VB_Base = "0{2251CD65-227A-441B-B158-AB1E56FD9329}{F3848E2A-F806-4BA3-9F60-BCDD56665219}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton3_Click()
Unload Me
End Sub

Private Sub CommandButton4_Click()
Dim Lesezeichen_name As String

If ActiveDocument.Bookmarks.Count > 0 Then
  If beck_lesezeichen.ListBox1.ListIndex > -1 Then
     Lesezeichen_name = ListBox1.List(ListBox1.ListIndex)
     ActiveDocument.Bookmarks(Lesezeichen_name).Delete
  Else
     MsgBox ("Bitte w|fffd|hlen Sie erst das zu l|fffd|schende Lesezeichen in der Liste.")
  End If
  Neu_laden
  FocusAnDocument
End If
End Sub

Private Sub CommandButton5_Click()
Dim Antwort

If ActiveDocument.Bookmarks.Count > 1000 Then
   MsgBox ("Die Liste l|fffd|sst keine weiteren Eintr|fffd|ge mehr zu.")
   Exit Sub
End If

Antwort = InputBox("Bitte geben Sie einen Namen f|fffd|r Ihr Lesezeichen ein. Ist der Name bereits vorhanden, wird dieser |fffd|berschrieben.", "Lesezeichen an aktueller Textstelle anlegen")
Antwort = Replace(Antwort, "|fffd|", "Paragraf")
Antwort = Replace(Antwort, " ", "_") 'Leerzeichen durch Unterstrich ersetzen
Antwort = Replace(Antwort, ".", "_") 'Punkt durch Unterstrich ersetzen
Antwort = Left(Antwort, 40) 'nur 40 Zeichen

If Antwort = "" Then Exit Sub
On Error GoTo Fehler

With ActiveDocument.Bookmarks
        .Add Range:=Selection.Range, name:=Antwort
        .DefaultSorting = wdSortByName
        .ShowHidden = False
End With

Neu_laden
FocusAnDocument
Exit Sub

Fehler:
MsgBox ("Der Name enth|fffd|lt ung|fffd|ltige Zeichen. Bitte verwenden Sie als erstes Zeichen keine Ziffer und generell keine Sonderzeichen")
End Sub

Sub Neu_laden()  'L|fffd|dt neu damit Sortierung wieder stimmt
Dim Anzahl_LZ, l As Integer

Me.ListBox1.Clear
Anzahl_LZ = ActiveDocument.Bookmarks.Count
For l = 1 To Anzahl_LZ
   If l = 1001 Then
      MsgBox ("Die Liste l|fffd|sst keine weiteren Eintr|fffd|ge mehr zu. Es werden maximal 1000 Eintr|fffd|ge angezeigt.")
      Exit Sub
   End If
   If Left(ActiveDocument.Bookmarks(l).name, 7) <> "Fehler_" Then beck_lesezeichen.ListBox1.AddItem ActiveDocument.Bookmarks(l)
Next
End Sub

Private Sub ListBox1_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
Dim Lesezeichen_name As String

If Button = 2 Then Exit Sub  'rechte Maustaste
If ListBox1.ListIndex = -1 Then Exit Sub
On Error GoTo Fehler
Lesezeichen_name = ListBox1.List(ListBox1.ListIndex)
ActiveDocument.Bookmarks(Lesezeichen_name).Select
FocusAnDocument
Exit Sub

Fehler:
MsgBox ("Die urspr|fffd|nglich markierte Textstelle ist nicht mehr vorhanden. Das Lesezeichen wird gel|fffd|scht.")
Neu_laden
FocusAnDocument
End Sub

Private Sub UserForm_Activate()

Neu_laden
End Sub

Private Sub UserForm_Terminate()
beck_form.Command_Pruefen.Enabled = True
If beck_tool.Visible = False Then beck_form.CommandButton3.Enabled = True
End Sub
Attribute VB_Name = "beck_randnummern"
Attribute VB_Base = "0{BF6E475B-DB88-4157-AE9B-A2FE0434FB33}{FB44B8E9-42E0-4E5F-AD57-40725330B97C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub b_Rn_aus_Text_Click()
Dim i As Integer

Toggle_Systematik
Men|fffd|anpassungen_Randnummerntool
End Sub

Private Sub CommandButton1_Click()
Dim Antwort

ID_Fehler_test
If ID_Fehler Then Exit Sub

If beck_randnummern.b_Start.Value = "0" Then  'Der Rest wird schon |fffd|ber Keypress abgefangen
    MsgBox ("Es d|fffd|rfen nur Zahlen gr|fffd||fffd|er als 0 eingegeben werden. ")
    Exit Sub
End If

Antwort = MsgBox("Dieser Vorgang kann nicht r|fffd|ckg|fffd|ngig gemacht werden. Vorhandene Randnummern werden nun ersetzt. M|fffd|chten Sie fortfahren?", vbYesNo)
If Antwort = vbNo Then Exit Sub

beck_randnummern.Hide
Status_Str = "Randnummer"
Load beck_status
beck_status.Show vbModal

End Sub

Private Sub CommandButton2_Click()
Unload Me
End Sub

Private Sub b_Start_KeyPress(ByVal KeyAscii As MSForms.ReturnInteger)
  ' Das Makro verhindert die Eingabe von Buchstaben
Select Case KeyAscii
      ' 0 - 9
Case 48 To 57
Case Else
    KeyAscii = 0
    MsgBox ("Hier d|fffd|rfen nur Zahlen gr|fffd||fffd|er als 0 eingegeben werden. ")
End Select
End Sub

Private Sub UserForm_Activate()
Dim Einstellungen As String
Dim i, n As Integer
Dim z() As String

If beck_lesezeichen.Visible Then Unload beck_lesezeichen
beck_form.CommandButton3.Enabled = False
beck_form.Command_Pruefen.Enabled = False
Erase z

Toggle_Systematik
Men|fffd|anpassungen_Randnummerntool

'Einstellungen lesen
On Error Resume Next
Einstellungen = ActiveDocument.CustomDocumentProperties("Rn").Value
z = Split(Einstellungen, ";")

If UBound(z) <> 17 Then  'so viele Eintr|fffd|ge m|fffd|ssten es sein. !!!! Wenn die Form ge|fffd|ndert wird, evtl. anpassen. !!!!
  Einstellungen = "0;0;0;0;0;0;0;0;0;0;0;0;0;1;-1;-1;-1;"   'Der Standard
  z = Split(Einstellungen, ";")
End If

n = 0
For i = 0 To Me.Controls.Count - 1
   If Left(Me.Controls(i).name, 2) = "b_" Then
      If z(n) = 0 Then Me.Controls(i).Value = False
      If z(n) = -1 Then Me.Controls(i).Value = True
      If z(n) > 0 Then Me.Controls(i).Value = z(n)
      n = n + 1
   End If
Next

On Error GoTo 0
End Sub

Private Sub UserForm_Terminate()
beck_form.Command_Pruefen.Enabled = True
If beck_tool.Visible = False Then beck_form.CommandButton3.Enabled = True
End Sub

Private Sub Toggle_Systematik()
If Me.b_Rn_aus_Text.Value = -1 Then
   For i = 0 To Me.Frame1.Controls.Count - 1
      If Left(Me.Frame1.Controls(i).name, 2) = "b_" And Me.Frame1.Controls(i).name <> "b_Start" Then Me.Frame1.Controls(i).Enabled = False
      If Left(Me.Frame1.Controls(i).name, 2) = "b_" And Me.Frame1.Controls(i).name <> "b_Start" Then Me.Frame1.Controls(i).Value = False
   Next
Else
   For i = 0 To Me.Frame1.Controls.Count - 1
      If Left(Me.Frame1.Controls(i).name, 2) = "b_" And Me.Frame1.Controls(i).name <> "b_Start" Then Me.Frame1.Controls(i).Enabled = True
   Next
End If
End Sub
Attribute VB_Name = "beck_status"
Attribute VB_Base = "0{2DBD5233-4AC8-4AED-84FD-C019F17BCAF7}{F20A1A73-4802-4EB2-9E29-325A00C42C2F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()
Unload Me
End Sub

Private Sub UserForm_Activate()
Select Case Status_Str
   Case "Absatz"
      beck_pruefen
   Case "Randnummer"
      Rn_zaehlen
   Case "Zeichenformat"
      Initialisiere_beck_format_pruefung
End Select
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
If Label1.caption <> "Die Pr|fffd|fung ergab keine Fehler" And Left(Label1.caption, 16) <> "Vorgang beendet!" Then
   MsgBox ("Bitte warten Sie, bis der Vorgang beendet ist.")
   Cancel = 1
Else
   Cancel = 1
   Me.Hide
End If
End Sub
Attribute VB_Name = "beck_suche"
Attribute VB_Base = "0{CE752C7D-DA7B-4684-99B0-48AA03994CDD}{139F0A8C-D57C-40E2-9A05-D9148DFD4F0F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public suchetreffer
Public suchegefunden As Boolean
Public beck_suche_suchstring As String


Private Sub CommandButton1_Click()
With Selection.Find
        .Text = beck_suche_suchstring
        .Forward = True
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchAllWordForms = False
        .MatchSoundsLike = False
        .MatchWildcards = False
End With

Selection.Find.Execute
If Selection.Find.Found And suchegefunden = False Then
   suchegefunden = True
   suchetreffer = Selection.Start
End If

If Selection.Start < suchetreffer And ActiveDocument.Footnotes.Count = 0 Then GoTo Kein_Treffer
If Selection.Start < suchetreffer And ActiveWindow.View.SplitSpecial = 0 And ActiveDocument.Footnotes.Count > 0 Then GoTo Fussnote
If Selection.Start < suchetreffer And ActiveWindow.View.SplitSpecial = 7 And ActiveDocument.Footnotes.Count > 0 Then GoTo Kein_Treffer
If Selection.Find.Found = False And ActiveWindow.View.SplitSpecial = 0 And ActiveDocument.Footnotes.Count > 0 Then
Fussnote:
      ActiveWindow.View.SplitSpecial = wdPaneFootnotes
      suchegefunden = False
      suchetreffer = -1
      Selection.GoTo What:=wdGoToFootnote, Which:=wdGoToAbsolute, Count:=1
      Selection.Find.Execute
      If Selection.Find.Found = False Then GoTo Kein_Treffer
      Else: If Selection.Find.Found = False Then GoTo Kein_Treffer
End If
Exit Sub

Kein_Treffer:
MsgBox ("Keine weiteren Treffer")
Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""
'Unload Me
End Sub

Private Sub CommandButton2_Click()
Unload Me
End Sub

Private Sub TextBox1_Change()
beck_suche_suchstring = TextBox1.Text
End Sub

Private Sub UserForm_Activate()

suchegefunden = False
suchetreffer = -1
beck_suche_suchstring = TextBox1.Text
If beck_suche_suchstring <> "" Then TextBox1.Text = beck_suche_suchstring

ActiveWindow.View.Type = wdNormalView
If ActiveWindow.View.SplitSpecial = 7 Then ActiveWindow.Panes(2).Close
Selection.GoTo What:=wdGoToSection, Which:=wdGoToFirst, Count:=1, name:=""
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
With Selection.Find
        .Text = beck_suche_suchstring
        .Replacement.Text = ""
        .Forward = True
        .Wrap = wdFindContinue
        .Format = False
        .MatchCase = False
        .MatchWholeWord = False
        .MatchAllWordForms = False
        .MatchSoundsLike = False
        .MatchWildcards = False
End With
Selection.Find.Execute
   If Selection.Find.Found = False And ActiveWindow.View.SplitSpecial = 0 And ActiveDocument.Footnotes.Count > 0 Then
      ActiveWindow.View.SplitSpecial = wdPaneFootnotes
      Selection.Find.Execute
      If Selection.Find.Found = False Then
         Unload Me
         MsgBox ("Keine Treffer")
      End If
      Else:
         If Selection.Find.Found = False Then
           Unload Me
           MsgBox ("Keine Treffer")
        End If
   End If
End Sub

Private Sub UserForm_Terminate()
'Suche zur|fffd|cksetzen f|fffd|r Benutzer
Selection.Find.ClearFormatting
Selection.Find.Replacement.ClearFormatting
Selection.Find.Text = ""
End Sub
Attribute VB_Name = "beck_tool"
Attribute VB_Base = "0{E1C8487A-31CB-4F9C-87E2-64AB9DD05CC6}{D0CFE0CE-C986-408E-9CBA-B4C807CFB6E8}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public beck_tool_top, beck_tool_left

Private Sub CommandButton1_Click()
PaneRevision_close
Call AlleListenNachTextUmwandeln
FocusAnDocument
End Sub

Private Sub CommandButton12_Click()
Status_Str = "Zeichenformat"
Load beck_status
beck_status.Show vbModal
End Sub

Private Sub CommandButton2_Click()
PaneRevision_close
Call Fu|fffd|noten_Rot
Call WeissenTextEntfernen
suche_del
FocusAnDocument
End Sub

Private Sub CommandButton3_Click()
PaneRevision_close
Call WeisseKaestenEntfernen
FocusAnDocument
End Sub

Private Sub CommandButton4_Click()
PaneRevision_close
Call KopfzeilenEntfernen
FocusAnDocument
End Sub

Private Sub CommandButton5_Click()
PaneRevision_close
Call LeereFu|fffd|notenMitBlockadeVersehen
FocusAnDocument
End Sub

Private Sub CommandButton7_Click()
PaneRevision_close
Call MehrfachreturnsInFu|fffd|notenEntfernen
FocusAnDocument
End Sub

Private Sub CommandButton8_Click()
PaneRevision_close
Call ManuelleZeilenschaltungenbeiDivisEntfernen
suche_del
FocusAnDocument
End Sub

Private Sub CommandButton9_Click()
PaneRevision_close
Call ManuellenZeilenumbruchL|fffd|schen
End Sub

Private Sub CommandButton10_Click()
PaneRevision_close
Call Fu|fffd|notenReparieren
suche_del
FocusAnDocument
End Sub

Private Sub Image2_MouseUp(ByVal Button As Integer, ByVal Shift As Integer, ByVal X As Single, ByVal Y As Single)
'UMSCHALT und STRG wurden gedr|fffd|ckt => Reihen_festlegen in Modul1, sonst Optionen anzeigen
If Shift = 3 Then Reihen_festlegen Else beck_tool_optionen.Show
End Sub

Private Sub Label12_Click()
FocusAnDocument
End Sub

Private Sub Image1_Click()
PaneRevision_close
Selection.HomeKey unit:=wdStory
beck_docinfo.Label2.Visible = True
beck_docinfo.CommandButton2.Visible = True
beck_docinfo.Label10.Visible = True
beck_docinfo.CommandButton6.Visible = True
beck_docinfo.Label11.Visible = True
beck_docinfo.CommandButton7.Visible = True
beck_docinfo.Show
End Sub

Private Sub Label1_Click()

End Sub

Private Sub UserForm_Activate()
IniRead
ActiveWindow.View.Type = wdNormalView
If beck_tool.Visible Then beck_form.CommandButton3.Enabled = False
If beck_lesezeichen.Visible Then Unload beck_lesezeichen
If beck_tool_left > 0 Then Me.Move beck_tool_left, beck_tool_top
End Sub

Private Sub UserForm_Deactivate()
beck_tool_top = Me.Top
beck_tool_left = Me.Left
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
If beck_Fehlermeldung.Visible = False Then beck_form.CommandButton3.Enabled = True
beck_tool_top = Me.Top
beck_tool_left = Me.Left
beck_tool.Hide  'verhindert entladen der Form, wenn auf das Kreuz geklickt wird.
Cancel = 1      'dto.
End Sub
Attribute VB_Name = "beck_tool_optionen"
Attribute VB_Base = "0{0C2289A4-0554-481E-8699-66F8EE48E5D5}{3DF5A302-6ED9-45C1-B6BB-5B77D0F6BEBE}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()
If Me.CheckBox1.Value = True Then
  Verkn_anzeigen = True
  Else:
  Verkn_anzeigen = False
End If

If Me.CheckBox2.Value = True Then
  Fields_inText = True
  Else:
  Fields_inText = False
End If

Call IniWrite(Verkn_anzeigen, Fields_inText)

Unload Me
End Sub

Private Sub CommandButton2_Click()
Me.Hide
End Sub

Private Sub UserForm_Activate()
If Verkn_anzeigen Then CheckBox1.Value = True Else CheckBox1.Value = False
If Fields_inText Then CheckBox2.Value = True Else CheckBox2.Value = False
End Sub
Attribute VB_Name = "beck_tool_passwort"
Attribute VB_Base = "0{961A321A-3D8F-48DA-8C12-05D9022023D6}{26B227BF-87CE-4A07-9049-F00B1C589605}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub CommandButton1_Click()
If Me.TextBox1 = "" Then MsgBox ("Bitte Passwort eingeben") Else Me.Hide
End Sub

Private Sub CommandButton2_Click()
Me.TextBox1 = ""
Me.Hide
End Sub

Private Sub TextBox1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer)
If KeyCode = 13 Then Me.Hide
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)

Me.Hide  'verhindert entladen der Form, wenn auf das Kreuz geklickt wird.
If CloseMode = 0 Then Me.TextBox1 = ""
'CloseMode 0 (Klick auf Kreuz), CloseMode 1 (Beenden von Word)
End Sub
Attribute VB_Name = "helpers"
Option Private Module
Option Compare Text 'Wichtig, damit Umlaute richtig einsortiert werden (in Quicksort)
Public ID_Fehler As Boolean

Function inTable(p As Paragraph) As Boolean
    inTable = True
    If p.Range.Tables.Count = 0 Then
        inTable = False
    End If
End Function
'Selection.Information(wdWithInTable)

Function IsLineEmpty() As Boolean
    If Selection.Paragraphs(1).Range.Characters.Count = 1 Then
        IsLineEmpty = True
    Else
        IsLineEmpty = False
    End If
End Function

Sub resetSearchAndReplace()
    Selection.Find.ClearFormatting
    Selection.Find.Replacement.ClearFormatting
End Sub

Function styleExists(name) As Boolean
    styleExists = False
    For Each f In ActiveDocument.Styles
        If f.NameLocal = name Then
            styleExists = True
            Exit For
        End If
    Next
End Function

Sub QuickSort(SortArray() As String, Optional ByVal varStart As Long, Optional ByVal varEnd As Long)
   'Option Compare Text s.o.
   Dim i As Long, j As Long, RandIndex As Long, Partition As String
   Dim Low As Long, High As Long

   Low = IIf(varStart = 0, LBound(SortArray), varStart)
   High = IIf(varEnd = 0, UBound(SortArray), varEnd)

   If Low < High Then
      If High - Low = 1 Then
         If UCase(SortArray(Low)) > UCase(SortArray(High)) Then
            Swap SortArray(Low), SortArray(High)
         End If
      Else
         RandIndex = Rnd() * (High - Low) + Low
         Swap SortArray(High), SortArray(RandIndex)
         Partition = UCase(SortArray(High))
         Do
            i = Low: j = High
            Do While (i < j) And (UCase(SortArray(i)) <= Partition)
               i = i + 1
            Loop
            Do While (j > i) And (UCase(SortArray(j)) >= Partition)
               j = j - 1
            Loop
            If i < j Then
               Swap SortArray(i), SortArray(j)
            End If
         Loop While i < j
         Swap SortArray(i), SortArray(High)
         If (i - Low) < (High - i) Then
            QuickSort SortArray, Low, i - 1
            QuickSort SortArray, i + 1, High
         Else
            QuickSort SortArray, i + 1, High
            QuickSort SortArray, Low, i - 1
         End If
      End If
   End If
End Sub

Sub Swap(First As String, Second As String)
   Dim varTemp As String

   varTemp = First
   First = Second
   Second = varTemp
End Sub

Function Dokumentschutz() As Boolean
If ActiveDocument.ProtectionType <> wdNoProtection Then
   MsgBox ("Das Dokument ist gesch|fffd|tzt und kann nicht bearbeitet werden. Entfernen Sie den Dokumentschutz.")
   Dokumentschutz = True
Else
   Dokumentschutz = False
End If

End Function

Sub PaneRevision_close()
If ActiveWindow.View.SplitSpecial = wdPaneRevisions Then
   ActiveWindow.Panes(2).Close
End If
End Sub

Sub Fn_Zaehlung_einstellen()
With ActiveDocument.Range(Start:=ActiveDocument.Content.Start, End:= _
     ActiveDocument.Content.End).FootnoteOptions
     .Location = wdBottomOfPage
     .StartingNumber = 1
     .NumberStyle = wdNoteNumberStyleArabic
     .NumberingRule = wdRestartSection
End With
End Sub

Sub ID_Fehler_test()
ID_Fehler = False
    On Error Resume Next
    If ActiveDocument.CustomDocumentProperties("ID").Value <> CStr(Date) Then
       ID_Fehler = True
    End If
End Sub

Function Gliederungsansicht() As Boolean
Dim Ansicht As Integer

Ansicht = ActiveWindow.ActivePane.View.Type
'2 = Gliederungsansicht

If Ansicht = 2 Then
   If MultiSelectString Then
      Gliederungsansicht = True
      Exit Function
   End If
   If Selection.Paragraphs.Count > 1 Then 'klappt eben nur bei zusammenh|fffd|ngenden Paras
      Gliederungsansicht = True
   End If
Else
   Gliederungsansicht = False
End If
End Function

Function MultiSelectString() As Boolean
'Wenn mehrere Abs|fffd|tze mit STRG+Klick markiert werden, liefert selection.paragraphs.count oder
'selection.range.copy ein falsches Ergebnis (n|fffd|mlich nur 1 Absatz).
'Daher Workaround |fffd|ber Clipboard und dann die Strings vergleichen
'Ein Verweis auf Microsoft Forms 2.X Object Library
'muss gesetzt sein

Dim TestDaten As DataObject
Dim MultiSelectStr1 As String, MultiSelectStr2 As String
Set TestDaten = New DataObject

On Error GoTo Fehler
Selection.Copy
TestDaten.GetFromClipboard   's.a. unten Fehler 2147221040
MultiSelectStr1 = TestDaten.GetText(1)

Selection.Range.Copy
TestDaten.GetFromClipboard
MultiSelectStr2 = TestDaten.GetText(1)

If MultiSelectStr1 = MultiSelectStr2 Then
   MultiSelectString = False
Else
   MultiSelectString = True
End If
Zwischenablage_loeschen
Exit Function

Fehler:                                                                     '5690: wenn Absatz im |fffd|-Modus gel|fffd|scht
If Err.Number = 4605 Or Err.Number = -2147221040 Or Err.Number = 5690 Then  '4605: wenn Cursor L|fffd|nge null hat, erzeugt selection.copy diesen Fehler
   MultiSelectString = False                                                '-2147221040: Bisher unbekannter Fehler ("GetFromClipboard OpenClipboard fehlgeschlagen"). Tritt nur sporadisch auf. Soll ignoriert und als OK vorgegaukelt werden. Pr|fffd|fung hat dann quasi nicht stattgefunden
Else
   MsgBox ("Bei der Pr|fffd|fung der Textauswahl ist ein Fehler " & Err.Number & " aufgetreten. Bitte pr|fffd|fen Sie die Auswahl!")
   MultiSelectString = True 'zur Sicherheit, kann aber Falschmeldung sein
End If
Err.Clear
Zwischenablage_loeschen
End Function

Function Absatznummer() As Long
'Absatznummer des letzten Absatzes in der Selection

Application.ScreenUpdating = False
Selection.Range.Bookmarks.Add name:="abstemp"
If Right(Selection.Range.Text, 1) <> Chr(13) Then Selection.MoveEnd unit:=wdLine, Count:=1 'Endeposition falsch, wenn Cursor am Zeilenanfang
If Selection.Information(wdInFootnote) = False Then Absatznummer = ActiveDocument.Range(0, Selection.Range.End).Paragraphs.Count  'geht nicht in Fu|fffd|note. Dann kein Ergebnis liefern
ActiveDocument.Bookmarks("abstemp").Select
ActiveDocument.Bookmarks("abstemp").Delete
Application.ScreenUpdating = True
End Function
Attribute VB_Name = "lists"
Option Private Module

Sub Insert_Listnum(StartwertStr As String, ParStyle As String)
Dim p As Integer, pp As Integer, intInt_Start As Integer, Max As Integer
Dim f As Integer, s As Integer, i As Integer, n As Integer, m As Integer, q As Integer, t As Integer, Durchgaenge As Integer, Korrektur As Integer
Dim InsStr As String, Startwert As String, Str As String, Typ As String, Bookmark_str As String, b() As String
Dim Startwert_Buchstabe As Boolean, Roemer As Boolean, Roemer_gross As Boolean, Aufz_Zeichen As Boolean, Fn As Boolean, GrossKlein As Boolean, reset As Boolean, Bold As Boolean, Italic As Boolean, Fn_|fffd|_geloescht As Boolean
Dim Vorsatz As String, Nachsatz As String, Buchstabe As String

'0-9: Ascii 49-57
'A-Z: Ascii 65-90
'a-z: Ascii 97-122

If StartwertStr <> "" Then
   If Asc(Left(StartwertStr, 1)) > 57 And Asc(Left(StartwertStr, 1)) < 123 Then Startwert_Buchstabe = True   'alles zwischen 90 und 97 wurde bereits bei der Eingabe gepr|fffd|ft
End If
Startwert = StartwertStr

Typ = Mid(ParStyle, 9, 1)   'Typ aus der gew|fffd|hlten Absatzformatvorlage ermitteln
Select Case Typ

   Case "a"
      If Startwert = "" Then
         If Mid(ParStyle, 10, 1) = "a" Then Startwert = "aa" Else Startwert = "a"
         Startwert_Buchstabe = True
      End If
      
      If Mid(ParStyle, 10, 1) = "_" Then
         Startwert = LCase(Startwert)
         If Mid(ParStyle, 10, 2) = "__" Then  '(a)
            Vorsatz = "("
            Nachsatz = ")"
            GoTo Weiter
         Else
            Vorsatz = ""      'a)
            Nachsatz = ")"
            GoTo Weiter
         End If
      End If
      
      If Mid(ParStyle, 10, 1) = "a" Then
         Startwert = LCase(Startwert)  'aa)
         Vorsatz = ""
         Nachsatz = ")"
         GoTo Weiter
      End If
      
      Startwert = UCase(Startwert)   'A.
      Vorsatz = ""
      Nachsatz = "."
   
   Case "1"
      If Startwert = "" Then Startwert = "1"
      If Mid(ParStyle, 10, 1) = "_" Then  '(1)
         Vorsatz = "("
         Nachsatz = ")"
      Else
         Vorsatz = ""   '1.
         Nachsatz = "."
      End If
      
   Case "i"
      Roemer = True
      If Startwert = "" Then Startwert = "1"
      If Mid(ParStyle, 10, 1) = "_" Then  'i)
         Roemer_gross = False
         Vorsatz = ""
         Nachsatz = ")"
      Else
         Roemer_gross = True
         Vorsatz = ""   'I.
         Nachsatz = "."
      End If
   
   Case "d"
      Aufz_Zeichen = True
      If Mid(ParStyle, 10, 1) = "a" Then
         InsStr = Chr(150)   '|fffd|
      Else
         InsStr = ChrW(9679) 'Dot
      End If
      
   Case "b"
      Aufz_Zeichen = True    'Square gef|fffd|llt
      InsStr = ChrW(9632)
      
   Case "s"
      Aufz_Zeichen = True    'Square nicht gef|fffd|llt
      InsStr = ChrW(9633)
End Select

Weiter:
If Startwert_Buchstabe And Not Aufz_Zeichen Then
   Durchgaenge = Len(Startwert) 'nur relevant bei Buchstaben
   If Asc(Left(Startwert, 1)) > 64 And Asc(Left(Startwert, 1)) < 91 Then Korrektur = 65 'A-Z
   If Asc(Left(Startwert, 1)) > 96 And Asc(Left(Startwert, 1)) < 123 Then Korrektur = 97 'a-z

   i = Asc(Left(Startwert, 1)) - (Korrektur - 1) 'Z|fffd|hler innerhalb a-z
   s = (Durchgaenge - 1) * 26 + Asc(Left(Startwert, 1)) - Korrektur + 1 'Z|fffd|hler gesamt
Else
   If Not Aufz_Zeichen Then Int_Start = CInt(Startwert)
End If

Max = Selection.Range.Paragraphs.Count 'Hier z|fffd|hlen, da Selection u.U. sp|fffd|ter durch Tabellenerweiterung (s.u.) ver|fffd|ndert

If inTabelle Then
   'wenn letzter Absatz (= Tabellenendezeichen) in einer Zelle gew|fffd|hlt, kann dieser leider nicht angesprochen werden. Daher vor|fffd|bergehend Absatzmarke am Ende einf|fffd|gen.
   Selection.Range.Cells(1).Select
   Selection.Range.Paragraphs(Selection.Range.Paragraphs.Count).Range.InsertAfter (Chr(13))
   ActiveDocument.Bookmarks("temp").Select
   'nur wenn mehr als ein Absatz zzgl. Tabellenzeichen in der Zelle. Tabellenendezeichen aus Selection entfernen:
   If Selection.Range.Cells(1).Range.Paragraphs.Count > 2 And Len(Selection.Range.Paragraphs(Selection.Range.Paragraphs.Count).Range.Text) > 1 And Len(Selection) > 1 Then Selection.MoveLeft unit:=wdCharacter, Count:=1, Extend:=wdExtend
   ActiveDocument.Bookmarks("temp").Delete   'l|fffd|schen und neu festlegen
   Selection.Range.Bookmarks.Add name:="temp"
End If

pp = 0
m = 0

For p = 1 To Max
   If pp = 0 Then reset = True Else reset = False  'Z|fffd|hlung beginnt auf neuer Ebene neu
   pp = pp + 1
   ActiveDocument.Bookmarks("temp").Select   '"temp" wird in beck_form angelegt, bei Klick in Listen
   If DocEndeLeer Then Selection.MoveDown unit:=wdLine, Extend:=wdExtend 'letzte Zeile anders behandeln wenn leer. Variable wird bei beck_form Klickereignis festgelegt
   Selection.Range.Paragraphs(p).Range.Select 'ganzen Absatz markieren
   
   On Error GoTo Fehler
   
   'Pro Listenformat neu durchz|fffd|hlen:
   Buchstabe = ""
   If beck_form.lb1.List(beck_form.lb1.ListIndex, 0) = "Auswahl aktualisieren" Then
      
      'Folgeabsatz eines Listenabsatzes nicht nummerieren
      If InStr(Selection.Range.Text, Chr(9)) = 0 Then
         pp = pp - 1
         GoTo next_p
      Else
         Str = Left(Selection.Range.Text, InStr(Selection.Range.Text, ChrW(9)))
         If Len(Str) = 1 Then
            pp = pp - 1
            GoTo next_p
         Else   'Feststellen, ob Nummer mit Buchstabe, dann Buchstabe behalten
            If Mid(Str, Len(Str) - 1, 1) = "." Or Mid(Str, Len(Str) - 1, 1) = ")" Then  'Wurde evtl. der . oder ) gel|fffd|scht
               q = 2
            Else
               q = 1
            End If
            If Left(ParStyle, 9) = "b_litem_1" Or Roemer_gross Then
               If Asc(Mid(Str, Len(Str) - q, 1)) > 96 And Asc(Mid(Str, Len(Str) - q, 1)) < 123 Then  'kleine Buchstaben
                  If ParStyle = Selection.Range.style Then
                     If m < 26 Then
                        Buchstabe = Chr(m + 97)
                     Else
                        If m = 26 Then MsgBox ("Buchstabenzusatz hat z erreicht. Bitte weitere |fffd|berpr|fffd|fen und ggf. von Hand anpassen.")
                        Buchstabe = "#"
                     End If
                     m = m + 1
                     If pp > 1 Then pp = pp - 1
                     If pp = 1 And reset Then
                        Buchstabe = "" 'erster Absatz einer neuen Ebene kann kein 1a sein
                        m = 0
                     End If
                  End If
               Else
                  m = 0  'Buchstaben beginnt wieder bei a
               End If
            End If
         End If
      End If
      
      Selection.Collapse Direction:=wdCollapseEnd 'muss sein, sonst funktioniert die n|fffd|chste Zeile nicht, wenn im |fffd|-Modus ein kompl. Abs. geel|fffd|scht
      Selection.MoveRight unit:=wdCharacter, Count:=-1, Extend:=wdMove
      If ParStyle <> Selection.Range.Paragraphs.style Then
         pp = pp - 1
         If Left(Selection.Range.Paragraphs.style, 7) = "b_litem" Then
            If CInt(Right(Selection.Range.Paragraphs.style, 1)) < CInt(Right(ParStyle, 1)) Then
               pp = 0 'wieder bei 1 beginnen, da dazwischen Liste h|fffd|herer Hierarchie eingeschoben
               i = 1  'wieder bei a beginnen ...
               s = 1  'wenn wieder a dann auch nur einstellig und nicht aa)
               If Mid(ParStyle, 10, 1) = "a" Then s = 27  'wenn aa)-Liste
            End If
         End If
         GoTo next_p
      End If
      ActiveDocument.Bookmarks("temp").Select
      If DocEndeLeer Then Selection.MoveDown unit:=wdLine, Extend:=wdExtend 'letzte Zeile anders behandeln wenn leer
      Selection.Range.Paragraphs(p).Range.Select
   End If
   On Error GoTo 0
   '----------- Auswahl aktualisieren Ende -----------
   
   'Hier zus|fffd|tzlich pr|fffd|fen, ob Umlaute, Leerzeichen, gro|fffd|-/klein Geschriebens oder verschiedene Buchstaben im Absatz bis zum Tab sind. Dann kein Aufz|fffd|hlungszeichen
   If InStr(Selection.Range.Text, Chr(9)) <> 0 Then
      Str = Left(Selection.Range.Text, InStr(Selection.Range.Text, ChrW(9)))
      If Len(Str) > 1 Then
         If Asc(Mid(Str, 1, 1)) < 91 And Asc(Mid(Str, 1, 1)) > 64 And Asc(Mid(Str, 2, 1)) < 123 And Asc(Mid(Str, 2, 1)) > 96 And Roemer = False Then GrossKlein = True Else GrossKlein = False
      End If
      If InStr(Str, "|fffd|") = 0 And InStr(Str, " ") = 0 And InStr(UCase(Str), "|fffd|") = 0 And InStr(UCase(Str), "|fffd|") = 0 And InStr(UCase(Str), "|fffd|") = 0 And Len(Str) < 20 And GrossKlein = False Then
         Selection.Collapse Direction:=wdCollapseStart
         Selection.Extend Character:=Chr(9)
         If Selection.Bookmarks.Count > 0 Then   'Textmarken merken
            Bookmark_str = ""
            For t = 1 To Selection.Bookmarks.Count
               'Nur wieder einsetzen, wenn Textmarke sich auf Aufz|fffd|hlungszeichen beschr|fffd|nkt:
               'Ein Fall kann im Moment leider nicht wiederhergestellt werden und zwar wenn Textmarke oberhalb Aufz. beginnt und am Tab der Aufz. endet (wohl eher unwahrscheinlich f|fffd|r Querverweiszwecke).
               If Len(Selection.Bookmarks(t).Range.Text) <= Len(Str) Then Bookmark_str = Bookmark_str & Selection.Bookmarks(t).name & ";"
            Next
            b = Split(Bookmark_str, ";")
         End If
         
         If Selection.Range.Footnotes.Count > 0 Then
            On Error Resume Next
            For f = 1 To Selection.Range.Footnotes.Count   'Feststellen, ob gel|fffd|schte Fn. im |fffd|-Modus bis zum Tab vorhanden sind,
                Selection.Range.Footnotes(f).Range.Copy    'diese werden n|fffd|mlich mitgez|fffd|hlt (Footnotes.Count) und verhindern unten das L|fffd|schen der Listennummer
                If Err.Number = 5690 Then Fn_|fffd|_geloescht = True  'Im |fffd|-Modus gel|fffd|schte Fn. kann nicht kopiert werden
            Next f
            Err.Clear
            On Error GoTo 0
         End If
         If Selection.Range.Footnotes.Count = 0 And Selection.Range.Fields.Count = 0 Then
            Selection.Delete
         Else
            If Selection.Information(wdInFootnote) = False And Fn_|fffd|_geloescht = False Then
               Fn = True
               Selection.Bookmarks.Add name:="Aufz|fffd|hlungszeichen_" & p & "_mit_Fu|fffd|note_oder_Feld"
            Else
               Selection.Delete
            End If
         End If
      End If
   End If
   
   Selection.Paragraphs(1).Range.Select
   If Selection.Font.Bold = True Then Bold = True Else Bold = False
   If Selection.Font.Italic = True Then Italic = True Else Italic = False
   Selection.Collapse Direction:=wdCollapseStart
   
   If Startwert_Buchstabe And Not Aufz_Zeichen Then
      For n = 0 To Fix((s - 1) / 26)  'wenn "z" erreicht, weiter mit "aa", usw.
          InsStr = InsStr & Chr(i + Korrektur - 1)
      Next n
      Selection.Range.InsertBefore Vorsatz & InsStr & Nachsatz & vbTab   'Buchstaben
      i = i + 1
      If i = 27 Then i = 1  'wenn "z" erreicht, Z|fffd|hler wieder auf 1
      s = s + 1
      InsStr = ""
   Else
      If Not Aufz_Zeichen Then
         If Roemer Then
             If Nachsatz = "." Then  'Gro|fffd|e R|fffd|mer
                Selection.Range.InsertBefore Vorsatz & CStr(R|fffd|mischeNummerErmitteln(Int_Start + pp - 1, 1)) & Buchstabe & Nachsatz & vbTab
             Else   'kleine R|fffd|mer (der Buchstabenzusatz Ia geht nur bei den gro|fffd|en R|fffd|mern)
                Selection.Range.InsertBefore Vorsatz & CStr(R|fffd|mischeNummerErmitteln(Int_Start + pp - 1, 0)) & Nachsatz & vbTab
             End If
         Else
             Selection.Range.InsertBefore Vorsatz & CStr(Int_Start + pp - 1) & Buchstabe & Nachsatz & vbTab   'Zahl
         End If
      Else
         Selection.Range.InsertBefore Vorsatz & InsStr & Nachsatz & vbTab   'Bullet etc.
      End If
   End If
   
   Selection.Collapse Direction:=wdCollapseStart
   Selection.Extend Character:=Chr(9)  'Zahl, Buchstabe, etc. formatieren, sonst evtl. hochgestellt, wenn z.B. Satzz|fffd|hler folgt
   Call FormatZahl
   If Bold Then Selection.Font.Bold = True Else Selection.Font.Bold = False   'Nummerierung bold, italic, wenn ganzer Absatz so. Greift nur bei Auswahl aktualisieren.
   If Italic Then Selection.Font.Italic = True Else Selection.Font.Italic = False
   
   If Bookmark_str <> "" Then
      Selection.MoveLeft unit:=wdCharacter, Count:=1, Extend:=wdExtend   'ohne das Tab
      For t = 0 To UBound(b) - 1
         If b(t) <> "temp" Then Selection.Bookmarks.Add name:=b(t)  'evtl. vorher vorhandene Autoren-Bookmarks wieder einf|fffd|gen
      Next
      Bookmark_str = ""
      Selection.Collapse Direction:=wdCollapseStart
   End If
next_p:
   If Max > 30 Then ActiveDocument.UndoClear 'maximal 30 Undo-Schritte. Dann l|fffd|schen, sonst Speicher irgendwann voll
Next

If ActiveDocument.Range.Bookmarks.Exists("temp") Then ActiveDocument.Bookmarks("temp").Select

If inTabelle Then   'k|fffd|nstlich eingestellten letzten Tabellenabsatz wieder l|fffd|schen
   Selection.Range.Cells(1).Range.Select
   If Selection.Range.Characters(Len(Selection.Range) - 2).Text = Chr(13) Then Selection.Range.Characters(Len(Selection.Range) - 2).Delete 'Absatzmarke am Ende wieder l|fffd|schen
   If ActiveDocument.Range.Bookmarks.Exists("temp") Then ActiveDocument.Bookmarks("temp").Select
End If

If Fn Then MsgBox ("Die Neunummerierung konnte nicht korrekt durchgef|fffd|hrt werden. Es wurden Aufz|fffd|hlungszeichen mit angeh|fffd|ngten Fu|fffd|noten oder Feldern gefunden. Bitte |fffd|berpr|fffd|fen Sie diese Stellen mit der Lesezeichenfunktion und korrigieren Sie die Nummerierung von Hand.")
Exit Sub

Fehler:  's.o. On Error: Dieser Fehler kann passieren, wenn bedingt durch |fffd|-Modus und L|fffd|schung zwei Formate in einem Absatz zusammenkommen.
MsgBox ("Aufgrund des |fffd|berarbeitungsmodus ist das aktuelle Format eines Listenabsatzes nicht eindeutig bestimmbar. Bitte pr|fffd|fen Sie Ihre Textauswahl und weisen Sie die Listenformate neu zu. Die Nummerierung wird abgebrochen.")
End Sub

Sub Neu_Nummerieren()
Dim p As Integer, i As Integer, Level As Integer ', Level_temp As Integer
Dim ParStyle As String
Dim Antwort

Selection.Range.Bookmarks.Add name:="temp_num"

For i = 1 To beck_form.Level 'Level ist globale Variable in der Form beck_form
    For p = 1 To Selection.Range.Paragraphs.Count
       ActiveDocument.Bookmarks("temp_num").Select
       Selection.Range.Paragraphs(p).Range.Select
       Selection.Collapse Direction:=wdCollapseEnd 'muss sein, sonst funktioniert die n|fffd|chste Zeile nicht, wenn im |fffd|-Modus ein kompl. Abs. geel|fffd|scht
       Selection.MoveRight unit:=wdCharacter, Count:=-1, Extend:=wdMove
    
       If Left(Selection.Range.Paragraphs.style, 7) <> "b_litem" Then GoTo Next_para
       ParStyle = Selection.Range.Paragraphs.style
       If CInt(Right(ParStyle, 1)) = i Then
          GoTo Weiter 'kann nach dem ersten Fund abgebrochen werden
        Else
          ParStyle = ""
       End If
Next_para:
    Next
Weiter:
    ActiveDocument.Bookmarks("temp_num").Select
    If ParStyle <> "" Then Call Insert_Listnum("", ParStyle)
Next
ActiveDocument.Bookmarks("temp_num").Delete
End Sub

Function R|fffd|mischeNummerErmitteln(ByVal Nummer As Integer, Gross As Integer)
Dim Digit(4) As Integer
Dim Pa As String, RN As String
Dim k As Integer
  
Pa = Format(Nummer, "0000")

For j = 1 To 4
    Digit(j) = Mid(Pa, j, 1)
Next j

Select Case Digit(1)
    Case 0
    Case Else
      For k = 1 To Digit(1)
        RN = RN + "M"
      Next k
End Select

Select Case Digit(2)
    Case 0
    Case 1, 2, 3
      For k = 1 To Digit(2)
        RN = RN + "C"
      Next k
    Case 4
      RN = RN + "CD"
    Case 5
      RN = RN + "D"
    Case 6, 7, 8
      RN = RN + "D"
      For k = 1 To Digit(2) - 5
        RN = RN + "C"
      Next k
    Case 9
      RN = RN + "CM"
End Select

Select Case Digit(3)
    Case 0
    Case 1, 2, 3
      For k = 1 To Digit(3)
        RN = RN + "X"
      Next k
    Case 4
      RN = RN + "XL"
    Case 5
      RN = RN + "L"
    Case 6, 7, 8
      RN = RN + "L"
      For k = 1 To Digit(3) - 5
        RN = RN + "X"
      Next k
    Case 9
        RN = RN + "XC"
End Select
  
Select Case Digit(4)
    Case 0
    Case 1, 2, 3
      For k = 1 To Digit(4)
        RN = RN + "I"
      Next k
    Case 4
      RN = RN + "IV"
    Case 5
      RN = RN + "V"
    Case 6, 7, 8
      RN = RN + "V"
      For k = 1 To Digit(4) - 5
        RN = RN + "I"
      Next k
    Case 9
      RN = RN + "IX"
End Select

If Gross = 0 Then RN = LCase(RN)
R|fffd|mischeNummerErmitteln = RN
End Function

Sub FormatZahl()
With Selection.Font
   .Underline = wdUnderlineNone
   .StrikeThrough = False
   .DoubleStrikeThrough = False
   .Outline = False
   .Emboss = False
   .Shadow = False
   .Hidden = False
   .SmallCaps = False
   .AllCaps = False
   .Color = wdColorAutomatic
   .Engrave = False
   .Superscript = False
   .Subscript = False
   .Spacing = 0
   .Scaling = 100
   .Position = 0
   .Kerning = 0
   .Animation = wdAnimationNone
   '.Ligatures = wdLigaturesNone  'existiert in Word 2007 nicht
End With
End Sub
Attribute VB_Name = "pics"
Option Private Module

Sub addPic()
    
    With Dialogs(wdDialogInsertPicture)
        res = .Display
        Select Case res
            Case -1:
                insertPicRef .name
            Case Else
                ' do nothing
        End Select
    End With

End Sub

Private Sub insertPicRef(name)
    
    If Selection.Information(wdFirstCharacterColumnNumber) - 1 = "0" Then
       Selection.TypeText Chr(13)
    Else
       Selection.TypeText Chr(13)
       Selection.TypeText Chr(13)
    End If
    Selection.InlineShapes.AddPicture FileName:=name, LinkToFile:=False, SaveWithDocument:=True
    Selection.style = "b_Abbildung"
    Selection.TypeText Chr(13)
    Selection.style = "p"
    If Not helpers.IsLineEmpty() Then
        Selection.TypeText Chr(13)
    End If
End Sub

Attribute VB_Name = "versionInfo"
Attribute VB_Base = "0{17256B6B-9101-4790-8C3A-47AA7FBAFE43}{6C88C2EF-FCAB-4DD2-BD2D-13298BA6CC35}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub OK_Click()
    versionInfo.Hide
End Sub

Private Sub UserForm_Activate()
Me.Label1.caption = "Version " & Version
End Sub

' InQuest injected base64 decoded content
' zY^e
' Y^.+-zsZr
' 0>'-
' zPhw$

INQUEST-PP=macro
