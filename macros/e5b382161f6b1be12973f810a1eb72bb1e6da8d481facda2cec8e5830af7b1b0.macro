Attribute VB_Name = "About"
Attribute VB_Base = "0{DDD107F1-C4DF-4B2A-9B8F-38F5ED89EBCC}{14DB54D5-D432-4CC3-B498-646646037936}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub btn_kontrola_cen_Click()
    g_password_dialog_ret_flag = False
    g_password_dialog_ret_pswd = ""

    Dim pd As PasswordDialog
    Set pd = New PasswordDialog
    pd.show
    Unload pd
    Set pd = Nothing
       
    If g_password_dialog_ret_flag Then
        Call unlockDBmode(g_password_dialog_ret_pswd)
    End If
    
    'vycistim
    g_password_dialog_ret_flag = False
    g_password_dialog_ret_pswd = ""
    
    If isUnlockedDBmode Then
        Unload Me
    End If
End Sub

Private Sub button_rd_nastaveni_Click()
    Call rd_nastaveni_Click
End Sub

Private Sub button_SK_mutace_Click() 'Kostelnik 2019-04-03
    g_password_dialog_ret_flag = False
    g_password_dialog_ret_pswd = ""

    Dim pd As PasswordDialog
    Set pd = New PasswordDialog
    pd.show
    Unload pd
    Set pd = Nothing
       
    If g_password_dialog_ret_flag Then
        Call unlockMUTSKtrans(g_password_dialog_ret_pswd)
    End If
    
    'vycistim
    g_password_dialog_ret_flag = False
    g_password_dialog_ret_pswd = ""
    
    If isUnlockedMUTSKtrans Then
        Unload Me 'kod se spousti po uzavreni modalniho okna
    End If
End Sub

Private Sub button_unlockSpec_Click() 'Kostelnik 2019-04-16
    If formUnlockSheetSpecifikace Then
        Unload Me
    End If
End Sub

Private Sub CommandButton1_Click()
    Unload Me
End Sub

Private Sub CommandButton2_Click()
    Call readContact 'nactu aktualni nastaveni ze souboru
    Call zobrazContactGUI
End Sub

Private Sub UserForm_Initialize() 'Kostelnik 2019-01-28
    'Start Userform Centered inside Excel Screen (for dual monitors)
    Me.StartUpPosition = 0
    Me.Left = Application.Left + (0.5 * Application.Width) - (0.5 * Me.Width)
    Me.Top = Application.Top + (0.5 * Application.height) - (0.5 * Me.height)
    
    label_popis.Caption = verze_popis & " " & getLang
    label_verze.Caption = verze_programu
    label_aktivni_cenik.Caption = getActivePricelistName
    
    btn_kontrola_cen.Enabled = Not isDBmode
    label_verze_ceniku.Caption = getAllPriceListVersion
    
    button_rd_nastaveni.Enabled = isRDmode
    button_SK_mutace.Enabled = (getLang <> "SK")
    
    With ThisWorkbook.Worksheets("nastaveni")
        label_stav.Caption = .Range("field_schvalovani_status").value
        label_schvalil.Caption = .Range("field_schvalovani_kdo").value
        label_datum.Caption = .Range("field_schvalovani_kdy").value
        label_poznamka = .Range("field_schvalovani_pozn").value
    End With
End Sub
Attribute VB_Name = "AddressImport"
Attribute VB_Base = "0{A88D5257-51BF-410E-AB0A-4ABED5AC22BF}{BFD7B5D4-F1DD-4D45-8441-C1585E44DB5A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub CommandButton1_Click()
    Call selectCustomerAddress
End Sub

Private Sub CommandButton2_Click() 'Kostelnik 2019-01-14
    customerAddressImport_selectedLine = -1
    Unload Me
End Sub

Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)  'Kostelnik 2019-01-14
  Call selectCustomerAddress
End Sub

Private Sub UserForm_Initialize() 'Kostelnik 2018-11-14
    'Start Userform Centered inside Excel Screen (for dual monitors)
    Me.StartUpPosition = 0
    Me.Left = Application.Left + (0.5 * Application.Width) - (0.5 * Me.Width)
    Me.Top = Application.Top + (0.5 * Application.height) - (0.5 * Me.height)
End Sub

Private Sub selectCustomerAddress() 'Kostelnik 2019-01-14
    customerAddressImport_selectedLine = -1
    
    Dim index As Long
    index = Me.ListBox1.ListIndex + 1 '+1 kvuli cislovani od nuly
    
    customerAddressImport_selectedLine = index + 1  '+1 kvuli radku zahlavi ve zdrojovem liste
    
    Unload Me
End Sub
Attribute VB_Name = "Article"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Public skupina As String
Public key As String 'zkombinovany popis
Public articleNo As String
Public pg As String
Public mj As String
Public sleva As Double

'pomocne
Public nazev As String
Public popis As String
Public mnozstvi As Double
Attribute VB_Name = "ArticleChooser"
Attribute VB_Base = "0{F8B3C429-456D-4585-BDC9-E90A5EE51D58}{856F3025-F3AC-4D67-8967-CACFB6FD8CE1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
'Public EnableEvents As Boolean

Private Sub CommandButton1_Click()
    Call selectArticleLine
End Sub

Private Sub SpinButton1_Change() 'Kostelnik 2018-11-29
    'If SpinButton1.Value > 0 Then
        Me.ComboBox1.ListIndex = SpinButton1.value
    'End If
End Sub

Private Sub TextBox1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer) 'Kostelnik 2018-11-28
    If KeyCode = vbKeyReturn Then
        Call btn_search_Click
        TextBox1.SetFocus
        KeyCode = 0 'aby se neprenastavil focus na tlacitko po stisknuti enter klavesy
    End If
End Sub

Private Sub btn_search_Click() 'Kostelnik 2018-11-26
    'Me.EnableEvents = False 'asi k nicemu, cele predelat
    
    Me.ComboBox1.RowSource = vbNullString
    Me.ListBox2.RowSource = vbNullString
    Me.listBox_polozky.RowSource = vbNullString
    Me.label_popis = vbNullString
    label_pocet_skupin = ""
    
    Call findArticlesAndCreateMenu(TextBox1.value)

    Dim retFlag As Integer
    retFlag = setSourceDataIntoArticleForm_Skupiny(tmpMenuCategory, Me, "")
    If retFlag = -1 Then 'nejaka chyba
        'GoTo konec
    End If
    
    'Me.EnableEvents = True 'asi k nicemu, cele predelat
    
    TextBox1.SetFocus
    ComboBox1.ListIndex = 0

End Sub

Private Sub btn_zobraz_vse_Click() 'Kostelnik 2018-11-26
    TextBox1.value = ""
    Call btn_search_Click
End Sub

Private Sub ComboBox1_Change()
    'If Me.EnableEvents Then
        Me.ListBox2.RowSource = vbNullString
        Me.listBox_polozky.RowSource = vbNullString
        Me.label_popis = vbNullString
        
        Dim i As Integer
        i = Me.ComboBox1.ListIndex + 1
        
        If ComboBox1.ListIndex <= SpinButton1.Max Then
            SpinButton1.value = Me.ComboBox1.ListIndex
        End If
        
        Call setSourceDataIntoArticleForm_SubKategorie(tmpMenuCategory, i, Me)
        
        If (ListBox2.RowSource <> vbNullString) Then
            ListBox2.ListIndex = 0
        End If
    'End If
End Sub

Private Sub CommandButton2_Click()
    Unload Me
End Sub

Private Sub listBox_polozky_Change() 'Kostelnik 2018-11-26, puvodne bylo Click(), ktere nefungovalo dobre, nevyvovala se udalost pri nastavenem multiselect
    Dim i As Integer
    i = Me.listBox_polozky.ListIndex + 1
    
    Me.label_popis = getPopisArtiklu(tmpMenuCategory, i)
End Sub

Private Sub listBox_polozky_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    Call selectArticleLine
End Sub

Private Sub ListBox2_Change() 'zmena subkategorie
    'cele predelat
    'If Me.EnableEvents Then
        Me.listBox_polozky.RowSource = vbNullString
        Me.label_popis = vbNullString
        
        Dim i As Integer
        i = Me.ComboBox1.ListIndex + 1
        
        Dim j As Integer
        j = Me.ListBox2.ListIndex + 1
        
        'kvuli nejake chybe, nutno predelat
        If i = 0 Then
            i = 1
        End If
        
        If j = 0 Then
            j = 1
        End If
                
        Call setSourceDataIntoArticleForm_Articles(tmpMenuCategory, i, j, Me)
    'End If
End Sub

Private Sub UserForm_Initialize() 'Kostelnik 2018-11-14
    'Start Userform Centered inside Excel Screen (for dual monitors)
    Me.StartUpPosition = 0
    Me.Left = Application.Left + (0.5 * Application.Width) - (0.5 * Me.Width)
    Me.Top = Application.Top + (0.5 * Application.height) - (0.5 * Me.height)
      
    TextBox1.SetFocus
    'Me.EnableEvents = True
    
    Application.ScreenUpdating = False
End Sub

Sub selectArticleLine() 'Kostelnik 2018-11-28
    'articleChooser_selectedLine = -1
    
    'Kostelnik 2019-02-08-------puvodni kod pred implementaci multiselectu----START
    'Dim index As Long
    'index = Me.listBox_polozky.ListIndex + 1 '+1 kvuli cislovani od nuly
    'articleChooser_selectedLine = index + 1  '+1 kvuli radku zahlavi ve zdrojovem liste
    'Kostelnik 2019-02-08-------puvodni kod pred implementaci multiselectu----KONEC
    
    'Kostelnik 2019-02-08--------START
    Erase listSelectedArticlesFromListBox
    Dim index As Integer
    index = 1
    
    Dim i As Integer
    With Me.listBox_polozky
        For i = 0 To .ListCount - 1
            If .Selected(i) Then
                'For lCol = 0 To .ColumnCount - 1
                '    strng = strng & .List(lRow, lCol) & " | "
                'Next lCol
                
                listSelectedArticlesFromListBox(index) = (i + 2) '+1 kvuli cislovani od nuly, +1 kvuli radku zahlavi ve zdrojovem liste
                index = index + 1
            End If
        Next i
    End With
    'Kostelnik 2019-02-08--------KONEC
    
    Unload Me
End Sub
Attribute VB_Name = "CustomerImport"
Attribute VB_Base = "0{2FB540E5-5607-4116-8557-29BD930C31BF}{D9813CD3-129F-4F00-B05F-A1ABF1246881}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub btn_search_Click() 'Kostelnik 2018-11-14
    Call zobrazZakaznikyDoGUIdleFiltru(TextBox1.value, tmpCustList)
End Sub

Private Sub btn_zobraz_vse_Click() 'Kostelnik 2018-11-14
    TextBox1.value = ""
    Call zobrazZakaznikyDoGUIdleFiltru(TextBox1.value, tmpCustList)
End Sub

Private Sub CommandButton1_Click() 'Kostelnik 2018-11-13
  Call selectCustomer
End Sub

Private Sub CommandButton2_Click() 'Kostelnik 2018-11-13
    customerImport_selectedLine = -1
    Unload Me
End Sub

Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean) 'Kostelnik 2018-11-13
    Call selectCustomer
End Sub

Sub selectCustomer() 'Kostelnik 2018-11-13
    customerImport_selectedLine = -1
    
    Dim index As Long
    index = Me.ListBox1.ListIndex + 1 '+1 kvuli cislovani od nuly
    
    customerImport_selectedLine = index + 1  '+1 kvuli radku zahlavi ve zdrojovem liste
    
    Unload Me
End Sub
Private Sub TextBox1_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer) 'Kostelnik 2018-11-14
    If KeyCode = vbKeyReturn Then
        Call btn_search_Click
        TextBox1.SetFocus
        KeyCode = 0 'aby se neprenastavil focus na tlacitko po stisknuti enter klavesy
    End If
End Sub
Private Sub UserForm_Initialize() 'Kostelnik 2018-11-14
    'Start Userform Centered inside Excel Screen (for dual monitors)
    Me.StartUpPosition = 0
    Me.Left = Application.Left + (0.5 * Application.Width) - (0.5 * Me.Width)
    Me.Top = Application.Top + (0.5 * Application.height) - (0.5 * Me.height)
  
    TextBox1.SetFocus
End Sub
Attribute VB_Name = "InicForm"
Attribute VB_Base = "0{9BCBE3A2-D96B-420C-857A-6882289A1094}{5D078E79-2D28-48F6-A94C-4EB56135D883}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

'HACK pro skryti X buttonu------------START
Private Const mcGWL_STYLE = (-16)
Private Const mcWS_SYSMENU = &H80000

'Windows API calls to handle windows
Private Declare PtrSafe Function FindWindow Lib "user32" Alias "FindWindowA" (ByVal lpClassName As String, ByVal lpWindowName As String) As LongPtr

#If Win64 Then
    Private Declare PtrSafe Function GetWindowLongPtr Lib "user32" Alias "GetWindowLongPtrA" ( _
        ByVal hwnd As LongPtr, ByVal nIndex As Long) As LongPtr
    Private Declare PtrSafe Function SetWindowLongPtr Lib "user32" Alias "SetWindowLongPtrA" ( _
        ByVal hwnd As LongPtr, ByVal nIndex As Long, ByVal dwNewLong As LongPtr) As LongPtr
#Else
    Private Declare PtrSafe Function GetWindowLongPtr Lib "user32" Alias "GetWindowLongA" ( _
        ByVal hwnd As LongPtr, ByVal nIndex As Long) As LongPtr
    Private Declare PtrSafe Function SetWindowLongPtr Lib "user32" Alias "SetWindowLongA" ( _
        ByVal hwnd As LongPtr, ByVal nIndex As Long, ByVal dwNewLong As LongPtr) As LongPtr
#End If
'HACK pro skryti X buttonu------------KONEC + funkce RemoveCloseButton (Me)

Private Sub btn_zakazka_Click()
    Call readZakazkyStoProFromSeznamSpecifikaci
    textBox_zakazka.SetFocus
End Sub

Private Sub button_rd_nastaveni_Click()
    Dim rdn As RDnastaveni
    Set rdn = New RDnastaveni
    rdn.show
    Unload rdn
    Set rdn = Nothing
End Sub

Private Sub ComboBox1_Change()
    'Call vypoctiPlatnostDo
    Me.TextBox2.value = ""
End Sub

Private Sub CommandButton1_Click()
    'test na obsah zakazkaSto pro, zda se muze retezec pouzit pro nazev souboru
    Dim tmp As String
    tmp = getValidFileName(Me.textBox_zakazka)
    
    If tmp <> Me.textBox_zakazka Then
        MsgBox "N|fffd|zev zak|fffd|zky obsahuje neplatn|fffd| znaky. Tyto znaky se nemohou vyskytovat v n|fffd|zvu souboru.", vbExclamation
        Exit Sub
    End If

    g_str_datum = Me.TextBox1.value
    g_str_platnost_do = Me.TextBox2.value
    g_aktualizovat_radu = Me.CheckBox1.value
    g_zakazka_stopro = Me.textBox_zakazka
    g_selected_pricelist = ComboBox_cenik.SelText
    
    If (g_str_datum = "") Or (g_str_platnost_do = "") Then
        MsgBox "Datum nen|fffd| vypln|fffd|n|fffd|.", vbExclamation
        Exit Sub
    End If
    
    'RD, Kostelnik 2019-04-02
    If isUnlockedMFpricelist Then
        If Not g_inic_form_set_rd_nastaveni Then
            Call button_rd_nastaveni_Click
            Exit Sub
        End If
    End If
    
    Unload Me
End Sub

Private Sub CommandButton2_Click()
    g_password_dialog_ret_flag = False
    g_password_dialog_ret_pswd = ""

    Dim pd As PasswordDialog
    Set pd = New PasswordDialog
    pd.show
    Unload pd
    Set pd = Nothing
    
    If g_password_dialog_ret_flag Then
        Call unlockSTXpricelist(g_password_dialog_ret_pswd)
        Call refreshAvailablePriceList 'udela se refresh, seznam bude dle toho, kam ma pristup
    End If
    
    'vycistim
    g_password_dialog_ret_flag = False
    g_password_dialog_ret_pswd = ""
End Sub

Private Sub CommandButton3_Click()
    g_password_dialog_ret_flag = False
    g_password_dialog_ret_pswd = ""

    Dim pd As PasswordDialog
    Set pd = New PasswordDialog
    pd.show
    Unload pd
    Set pd = Nothing
    
    If g_password_dialog_ret_flag Then
        Call unlockMFpricelist(g_password_dialog_ret_pswd)
        Call refreshAvailablePriceList 'udela se refresh, seznam bude dle toho, kam ma pristup
        
        If isUnlockedMFpricelist Then
            button_rd_nastaveni.Enabled = True
            Call button_rd_nastaveni_Click 'automaticky se zobrazi formular po zadani spravneho hesla
        Else
            button_rd_nastaveni.Enabled = False
        End If
    End If
    
    'vycistim
    g_password_dialog_ret_flag = False
    g_password_dialog_ret_pswd = ""
End Sub

Private Sub CheckBox1_Click() 'Kostelnik 2019-02-22
    textBox_zakazka.Enabled = CheckBox1.value
    btn_zakazka.Enabled = CheckBox1.value
End Sub

Private Sub Image1_Click()
    Call vypoctiPlatnostDo
End Sub

Private Sub TextBox1_Change() 'Kostelnik 2019-01-22
    Me.TextBox2.value = ""
End Sub

Private Sub UserForm_Initialize() 'Kostelnik 2019-01-21
    RemoveCloseButton (Me) 'HACK pro skryti X buttonu

    'Start Userform Centered inside Excel Screen (for dual monitors)
    Me.StartUpPosition = 0
    Me.Left = Application.Left + (0.5 * Application.Width) - (0.5 * Me.Width)
    Me.Top = Application.Top + (0.5 * Application.height) - (0.5 * Me.height)
  
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("nastaveni")
    
    Dim str_aktualni_datum As String
    str_aktualni_datum = Format(Date, "dd/mm/yyyy")
    str_aktualni_datum = Replace(str_aktualni_datum, " ", "")
    
    Me.TextBox1.value = str_aktualni_datum 'aktualni datum
    'Me.ComboBox1.ControlSource = "nastaveni!B3" 'zvolena hodnota
      
    'nefunguje
    'Me.ComboBox1.RowSource = Application.Transpose(ThisWorkbook.Worksheets("nastaveni").Range("B2:D2").Value)
    
    'slozitejsi cestou
    Dim i As Integer
    i = 2
    While IsEmpty(ws.Cells(1, i).value) = False
        Me.ComboBox1.AddItem (ws.Cells(1, i).value)
        i = i + 1
    Wend
    
    Me.CheckBox1.value = True 'aktualizace ciselne rady
    
    Me.ComboBox1.ListIndex = 0
    Call vypoctiPlatnostDo
    
    'ceniky
    Call refreshAvailablePriceList
    
    'Aktivace STX ceniku je jen pro CZ mutaci
    Me.CommandButton2.Enabled = isLangMutaceCZ
    Me.CommandButton2.Visible = isLangMutaceCZ
    
    g_inic_form_set_rd_nastaveni = False
    If isUnlockedMFpricelist Then
        button_rd_nastaveni.Enabled = True
    End If
        
    Me.ComboBox1.SetFocus
    Set ws = Nothing
End Sub

Sub vypoctiPlatnostDo() 'Kostelnik 2019-01-22
    On Error GoTo ErrHandler
    
    Dim strDatum As String
    strDatum = Me.TextBox1.value
    
    Dim dni As Integer
    dni = 0
    If Me.ComboBox1.value <> "" Then
        dni = CInt(Me.ComboBox1.value)
    End If
    
    Me.TextBox2.value = vypoctiPlatnostDoString(strDatum, dni)
    
    Exit Sub
    
ErrHandler:
       MsgBox "Nastala chyba p|fffd|i v|fffd|po|fffd|tu platnosti. Zkontrolujte zadan|fffd| |fffd|daje.", vbExclamation
End Sub

Private Sub refreshAvailablePriceList()
    Dim c As Collection
    Set c = getListOfAvailabelPricelist
    
    ComboBox_cenik.Clear
    Dim j As Integer
    For j = 1 To c.count
       ComboBox_cenik.AddItem c.Item(j)
    Next j
   
    Set c = Nothing
    ComboBox_cenik.ListIndex = 0
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer) 'Kostelnik 2019-01-23 zakazani zavreni okna
    If CloseMode = vbFormControlMenu Then
        Cancel = True
    End If
End Sub
'HACK pro skryti X buttonu------------START
Public Sub RemoveCloseButton(objForm As Object)
    Dim lngStyle As LongPtr
    Dim lngHWnd As LongPtr

    Dim lpClassName As String
    lpClassName = vbNullString
    If val(Application.Version) >= 9 Then
       lpClassName = "ThunderDFrame"
    Else
       lpClassName = "ThunderXFrame"
    End If

    lngHWnd = FindWindow(lpClassName, Me.Caption) ' nefunguje objForm.Caption, tak dam nazev Me.Caption
    lngStyle = GetWindowLongPtr(lngHWnd, mcGWL_STYLE)

    If lngStyle And mcWS_SYSMENU > 0 Then
        SetWindowLongPtr lngHWnd, mcGWL_STYLE, (lngStyle And Not mcWS_SYSMENU)
    End If
End Sub
'HACK pro skryti X buttonu------------KONEC


Attribute VB_Name = "InsertArticleProperties"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Public modeType As Integer
Public priceListType As Integer
Public variantaKalkulace As Integer
Public cenaProInvestora As Double

Private ws_vf_orig_zdroj As Worksheet
Private block_range_izo() As Long
Private isIzolantArticle As Boolean

Public Function initClass() 'Kostelnik 2019-04-02
    variantaKalkulace = -1
    cenaProInvestora = -1
    
    If isVFmode Then
        modeType = 1
        Set ws_vf_orig_zdroj = ThisWorkbook.Worksheets("zdroj")
        block_range_izo = getBlockPricesRangeFromNames("IZO", ws_vf_orig_zdroj.name)
    ElseIf isRDmode Then
        modeType = 2
        Set ws_vf_orig_zdroj = ThisWorkbook.Worksheets("zdrojMF")
        block_range_izo = getBlockPricesRangeFromNames("MF_IZO", ws_vf_orig_zdroj.name)
        
        variantaKalkulace = getRDNastaveniVariantaKalkulace
        cenaProInvestora = getRDNastaveniCenaProInvestora / 100# '[%]
    Else
        modeType = -1
    End If
    
    Dim activePriceListName As String
    activePriceListName = getActivePricelistName
    
    priceListType = -1
    
    If activePriceListName = "VF" Then
        priceListType = 1
    ElseIf activePriceListName = "MF" Then
        priceListType = 3
    Else
        If (Len(activePriceListName) >= 3) Then
            If Left(activePriceListName, 3) = "STX" Then
                priceListType = 2
            End If
        End If
    End If
End Function

Public Function isArcticleIzolant(articleNo As String, pg As String) As Boolean 'Kostelnik 2019-04-02,
    'pokud jsem v rezimu VF a vkladam izolant, muzu editovat jednotkovou cenu bez rabatu, pokud ale tento radek upravim a uz tam nebude izolant, opet musi byt bunka uzamcena, Kostelnik 2019-03-25
    'pro RD, variantu 3 take zjistuji zda jde o izolant, kvuli (ne)odecitani hodnoty "cena pro investora" od rabatu
    'isIzolantArticle = False
    'If (modeType = 1) Or ((modeType = 2) And (priceListType = 3) And (variantaKalkulace = 3)) Then 'VF
    'je artikl z ceniku izolantu?
     isArcticleIzolant = isArticleInBlockPrices(articleNo, pg, ws_vf_orig_zdroj, block_range_izo(1), block_range_izo(2))
End Function

Public Function cleanClass() 'Kostelnik 2019-04-02
    Set ws_vf_orig_zdroj = Nothing
    Erase block_range_izo
End Function

Attribute VB_Name = "List1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub CommandButton21_Click()
    readAndSelectCustomerList 'Kostelnik 2018-11-13
End Sub

Private Sub Worksheet_Activate() 'Kostelnik 2019-04-01, nejak se rozhauzji obrazky pri prepnuti listu, proto zarovnavaci funkce
    Call zarovnaniNastaveniSpecTlacitekRadku
End Sub

Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean) 'Kostelnik 2018-11-29
    Dim end_line As Long
    end_line = getLastWorkingRow()
    
    If (Not Intersect(Target, Range("D" & spec_input_start_line & ":D" & end_line)) Is Nothing) Or (Not Intersect(Target, Range("A" & spec_input_start_line & ":A" & end_line)) Is Nothing) Then
        
        If isNoteRow(Target.Row, Target.column) Then 'Kostelnik 2019-04-11
            Exit Sub
        End If
        
        If Cells(Target.Row, 2).value <> "" Then 'Kostelnik 2019-04-15
            If Not isArticleInPricelist(getActivePricelistSheetSourceName, Cells(Target.Row, 2).value) Then
                Exit Sub
            End If
        End If
        
        Cancel = True 'aby se se nepreslo do editacniho modu bunky

        'Kostelnik 2019-02-06, upraveno, pri rozkliku budu vzdy editovat stavajici radek
        Call showArticleFormWithParam(Target.Row)
    End If
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
Dim sk, copy, vzorec As String
Dim r, c, s As Long

r = Target.Row
c = Target.column

If (r < spec_input_start_line) Or (r > getLastWorkingRow()) Then 'Kostelnik 2019-02-07
    Exit Sub
End If

'jde o bunku s poznamkou?, Kostelnik 2019-04-11
If (c = 1) Then
    If isNoteRow(r, c) Then
        Exit Sub
    End If
End If

If (c = 2) Then 'Kostelnik 2019-04-15, ru|fffd|n|fffd| zad|fffd|n artikl
    If Cells(r, c).value <> "" Then
        Application.EnableEvents = False
        Cells(r, c).value = Trim(Cells(r, c).value) 'vymazu mezery aby neosidil system
        Application.EnableEvents = True
                
        If Not isArticleInPricelist(getActivePricelistSheetSourceName, Cells(r, 2).value) Then
            'odemceni bunek pro manualni vlozeni hodnot
            Call unprotectSpecifikace
            Call lockCells(ActiveSheet, CLng(r), -1, -1, False, True) 'odmkne vsechny bunky
            Cells(r, 24).value = "R" 'priznak ze jde o rucni vlozeni, Kostelnik 2019-04-17
            Call protectSpecifikace
            Cells(r, 4).Validation.Delete
            Cells(r, 5).Validation.Delete
            Cells(r, 6).Validation.Delete
            Cells(r, 4).Select
            Exit Sub
        Else
            MsgBox "Artikl " & Cells(r, c).value & " je v cen|fffd|ku, nelze jej zadat ru|fffd|n|fffd|m vlo|fffd|en|fffd|m.", vbExclamation
            Application.EnableEvents = False
            Cells(r, 1).value = ""
            Cells(r, 2).value = "" 'jde o cenikovy artikl, nutno vlozit pres pruvodce
            Cells(r, 3).value = ""
            Cells(r, 4).value = ""
            Application.EnableEvents = True
            Application.CutCopyMode = False
            Cells(r, 2).Select
            Exit Sub
        End If
    End If
End If

'Dim originalRabatValue As Double

'zaokrouhleni rabatu ve sloupci U, pro VF, Kostelnik 2019-03-25
If c = 21 Then
    If isVFmode Then
        If getActivePricelistName = "VF" Then
            Application.EnableEvents = False 'musim deaktivovat udalost, nebo se zacykluje
            Cells(r, c).value = WorksheetFunction.Round(Cells(r, c).value, 2) 'sloupec je uz v procentech, proto zaokrouhluji na dve desetina mista
            Application.EnableEvents = True
            Exit Sub
        End If
    End If
    'Kostelnik 2019-03-28 zrusene
    'ElseIf isRDmode Then 'Kostelnik 2019-03-27, v pripade RD MF ceniku se rabat muze nastavovat mensi, nesmi se prekrocit originalni hodnota
    '    If getActivePricelistName = "MF" Then
    '        originalRabatValue = getOriginalRabatValue(getActivePricelistSheetSourceName, Cells(r, 2).value, Cells(r, 3).value)
    '        If Cells(r, c).value > originalRabatValue Then
    '            Application.EnableEvents = False 'musim deaktivovat udalost, nebo se zacykluje
    '            Cells(r, c).value = originalRabatValue
    '            Application.EnableEvents = True
    '            MsgBox "Pro tento artikl je maxim|fffd|ln|fffd| dovolen|fffd| sleva " & (originalRabatValue * 100#) & " %.", vbExclamation
    '            Exit Sub
    '        End If
    '    End If
    'End If
    
    Exit Sub
End If

Dim strValue As String

Application.EnableEvents = False
Application.ScreenUpdating = False

If (c = 1 And Cells(r - 1, 4).value <> "" And Cells(r, 1).value <> "") Then
    'Kostelnik 2018-12-05---------START, oprava kodu pro moznost vkladani ze schranky
    strValue = Cells(r, c).value 'Target.Value
    sk = convertTextToSkupina(strValue)
    'Kostelnik 2018-12-05---------KONEC, oprava kodu pro moznost vkladani ze schranky
      
    'Even though you unlocked the cells, Data Validation is still off limits. You have to unprotect the sheet before you apply data validation.
    Call unprotectSpecifikace
    
    With Cells(r, 1).Validation
            .Delete
            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
            xlBetween, Formula1:="Fas|fffd|da,Interi|fffd|ry,Akustika,Laky&Lazury,Betony,Podlahy,N|fffd||fffd|ad|fffd|,Fas|fffd|daSTX,Interi|fffd|rySTX,Industry,Izolace"
            .IgnoreBlank = True
            '.InCellDropdown = True
            .InCellDropdown = False
            .InputTitle = ""
            .ErrorTitle = "Chyba!"
            .InputMessage = ""
            .ErrorMessage = "Je nutn|fffd| zadat polo|fffd|ku ze seznamu."
            .ShowInput = True
            .ShowError = True
    End With
    
    Call protectSpecifikace
    
    'Kostelnik 2018-11-29  puvodni kod----------START
    'pridavalo na novy radek skupinu z predchoziho radku, toto dela problemy v souvislosti s formularem na vyber artiklu, proto deaktivovano
    
    Cells(r, 4).Select
    
    'Finta Fn, kvuli vkladani do jineho souboru specifikace
    If Cells(r, 4).value <> "" Then
        Call unprotectSpecifikace
        
        With Cells(r, 4).Validation
             .Delete
             .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
             xlBetween, Formula1:=Cells(r, 4).value
             .IgnoreBlank = True
             '.InCellDropdown = True
             .InCellDropdown = False
             .InputTitle = ""
             .ErrorTitle = "Chyba!"
             .InputMessage = ""
             .ErrorMessage = "Je nutn|fffd| zadat polo|fffd|ku ze seznamu."
             .ShowInput = True
             .ShowError = True
         End With
         
        Call protectSpecifikace
     End If
End If

If (c = 1) Then
    If Cells(r, 1).value = "" Then 'doslo k vymazu, vymazu i prvni sloupec
        Call refreshSpecificationFormulas(CLng(r), CLng(r), True, True, True) 'Kostelnik 2019-03-07
    Else 'vlozeni artiklu?
        Call refreshSpecificationFormulas(CLng(r), CLng(r)) 'Kostelnik 2019-03-07
    End If
End If

If (c = 4) Then
    'Kostelnik 2018-11-29
    If Cells(r, 4).value = "" Then 'doslo k vymazu, vymazu i prvni sloupec
         Call refreshSpecificationFormulas(CLng(r), CLng(r), True, True, True) 'Kostelnik 2019-03-07
    End If
End If

    Application.EnableEvents = True
End Sub
Attribute VB_Name = "List13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "List7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Worksheet_Activate() 'Kostelnik 2019-03-28
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    Call unprotectRD_StoSystemSheet
    
    Call updateRDdata(False)
    
    Call protectRD_StoSystemSheet
        
    Exit Sub
    
ErrHandler:
    Call protectRD_StoSystemSheet
    MsgBox Err.Description, vbExclamation
End Sub
Attribute VB_Name = "M01_zakaznik"
'Module1 - implementace zakaznika

Option Explicit
Public customerImport_selectedLine As Long
Public customerAddressImport_selectedLine As Long 'import adres
Public Const tmpCustList = "tmpCustList"
Public Const tmpCustAddressList = "tmpCustAddressList" 'Kostelnik 2019-01-14
Public Const specifikace_zakaznici = "specifikace_databaze.xlsx"

Public gwo_counter As Integer 'Kostelnik 2019-05-09

Function readAndSelectCustomerList() 'Kostelnik 2018-11-13
    On Error GoTo ErrHandler
    
    Application.ScreenUpdating = False
    
    Dim sheetName As String
    sheetName = tmpCustList
    
    Dim ret As Integer
    
    'pripravim data z externiho souboru
    ret = deleteAndCreateTmpCustomerList(sheetName)
    If ret = -1 Then 'nejaka chyba, napr. nenalezen soubor se zakazniky
        GoTo konec
    End If
    
    ThisWorkbook.Worksheets("Specifikace").Activate
    
    Call zobrazZakaznikyDoGUIdleFiltru("", sheetName)

    customerImport_selectedLine = -1 'Tato hodnota se nastavi ve formu CustomerImport
    CustomerImport.show
    
    'vlozeni vybraneho zakaznika
    If customerImport_selectedLine > 1 Then 'ignoruje nevybrany zaznam, nebo zahlavi
        Call insertCustomerToHeader(sheetName, customerImport_selectedLine)
    End If
        
konec:
    'TODO nastavit vymazavani
    Call deleteList(sheetName) 'z bezpecnostnich duvodu, aby nezustal seznam v excelu, OTP jej mohou poslat zakaznikovi...
        
    ThisWorkbook.Worksheets("Specifikace").Activate
    Application.ScreenUpdating = True
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    MsgBox Err.Description
End Function

Function insertNewCustomerToDB() 'Kostelnik 2018-11-14
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    'vlozim novy zaznam
    Dim wb_customers As Workbook
    Set wb_customers = getZdrojDat(specifikace_zakaznici, False)
    
    If wb_customers Is Nothing Then 'soubor nenalezen
        MsgBox "Nenalezen soubor " & specifikace_zakaznici & ".", vbExclamation
        GoTo konec
    End If
    
    Call insertAndSaveCustomerFromHeaderToDB(wb_customers) 'vymazou se zde i duplicity

    If Not wb_customers Is Nothing Then
        wb_customers.Close
        Set wb_customers = Nothing
    End If
            
konec:
    ThisWorkbook.Worksheets("Specifikace").Activate
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    MsgBox Err.Description
End Function
Function insertAndSaveCustomerFromHeaderToDB(wb_customers As Workbook) 'Kostelnik 2018-11-14
    On Error GoTo ErrHandler
    
    Dim ws As Worksheet
    Set ws = wb_customers.Worksheets("zakaznici")
    
    Dim ws_specifikace As Worksheet
    Set ws_specifikace = ThisWorkbook.Worksheets("Specifikace")
    
    'kontrola
    If ws_specifikace.Range("C3").value = "" Then
        MsgBox "Pole ""Kupuj|fffd|c|fffd|"" nen|fffd| vypln|fffd|no. Ulo|fffd|en|fffd| z|fffd|znamu p|fffd|eru|fffd|eno.", vbExclamation
        GoTo konec
    End If
    
    Dim lastLine As Long
    lastLine = ws.Range("A" & Rows.count).End(xlUp).Row
    lastLine = lastLine + 1 'presunu se na dalsi, prazdny radek
    
    Dim tmpTxt As String
    
    ws.Unprotect Password:="cube"
    
    ws.Range("I:I").NumberFormat = "@" 'tel/fax
    ws.Range("O:O").NumberFormat = "@" 'tel
    
    ws.Range("A" & lastLine).value = ws_specifikace.Range("C3").value 'kupujici 'Kostelnik 2019-01-14
    ws.Range("B" & lastLine).value = ws_specifikace.Range("C4").value 'jmeno
    ws.Range("C" & lastLine).value = ws_specifikace.Range("C5").value 'funkce
    ws.Range("D" & lastLine).value = ws_specifikace.Range("C6").value 'ulice
    ws.Range("E" & lastLine).value = ws_specifikace.Range("C7").value 'mesto
    ws.Range("F" & lastLine).value = ws_specifikace.Range("C8").value 'psc
    
    ws.Range("G" & lastLine).value = ws_specifikace.Range("L3").value 'ic
    ws.Range("H" & lastLine).value = ws_specifikace.Range("L4").value 'dic
    
    'neni jiz potreba, nastaven format @
    'tmpTxt = ws_specifikace.Range("L5").Value 'tel/fax, aby se zachovalo znamenko +
    'If Not Left(tmpTxt, 1) = "'" Then
    '    tmpTxt = "'" + tmpTxt
    'End If
    'ws.Range("I" & lastLine).Value = tmpTxt 'tel/fax
    ws.Range("I" & lastLine).value = ws_specifikace.Range("L5").value 'tel/fax
    
    ws.Range("J" & lastLine).value = ws_specifikace.Range("L6").value 'zpusob uhrady
    ws.Range("K" & lastLine).value = ws_specifikace.Range("L7").value 'splatnost
    ws.Range("L" & lastLine).value = ws_specifikace.Range("L8").value 'limit
        
    'nastavim format na aktualni radek
    ws.Activate
    
    ws.Range("A" & lastLine & ":L" & lastLine).Select
    With Selection.Font
        .name = "Arial"
        .Size = 8
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
    End With
    
    ws.Range("A1").Select
        
    'vymazu duplicity
    ws.Range("A:L").RemoveDuplicates Columns:=Array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), Header:=xlYes
    
    'seradim adresy dle sloupce A,B
    ws.Sort.SortFields.Clear
    ws.Sort.SortFields.Add key:=Range("A2:A" & lastLine), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    ws.Sort.SortFields.Add key:=Range("B2:B" & lastLine), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal

    With ws.Sort
        .SetRange Range("A1:L" & lastLine)
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    'nastavim odemknuti zamku pro vsechny bunky, aby bylo mozne upravovat
    ws.Cells.Select
    Selection.Locked = False
    Selection.FormulaHidden = False
    
    ws.Range("A1").Select
    
    ws.Protect Password:="cube", Contents:=True, AllowInsertingRows:=True, AllowDeletingRows:=True, AllowSorting:=True
    
    Application.DisplayAlerts = False
    wb_customers.Save
    
konec:
    Set ws = Nothing
    Set ws_specifikace = Nothing
    Exit Function
    
ErrHandler:
    ws.Protect Password:="cube", Contents:=True, AllowInsertingRows:=True, AllowDeletingRows:=True, AllowSorting:=True
    MsgBox Err.Description
End Function

Function zobrazZakaznikyDoGUIdleFiltru(search_txt As String, sheetName As String) 'Kostelnik 2018-11-14
    vyhledejZakazniky (search_txt)
    
    'zobrazim list do UI formu
    Dim lastLine As Long
    
    'lastLine = WorksheetFunction.CountA(Range("List1!A:A")) 'nevhodne, nebot ignoruje prazdne bunky, kdyby bylo jmeno uprostred seznamu vynechano, tak se zobrazi celkove mene radku
    lastLine = ThisWorkbook.Worksheets(sheetName).Range("Q" & Rows.count).End(xlUp).Row
       
    'oblast A:N je pro zdroj dat, Q:AD je zobrazovana oblast, aplikuje se vyhledavani
    If lastLine > 1 Then 'pokud neni zadny nalezeny zaznam, tak nic nezobrazim, bet teto podminky by se vlozilo zahlavi (prvni radek)
        CustomerImport.ListBox1.RowSource = sheetName & "!Q2:AD" & lastLine
    Else
        CustomerImport.ListBox1.RowSource = sheetName & "!Q2:AD2" 'bude prazdny radek, ale zustane zahlavi
    End If
End Function
Function insertCustomerToHeader(sheetName As String, index As Long) 'Kostelnik 2018-11-13
    On Error GoTo ErrHandler
    Dim ws As Worksheet
    Dim ws_specifikace As Worksheet
    
    Set ws = ThisWorkbook.Worksheets(sheetName)
    Set ws_specifikace = ThisWorkbook.Worksheets("Specifikace")
    
    ws_specifikace.Range("C3") = ws.Range("Q" & index).value 'kupujici 'Kostelnik 2019-01-14
    ws_specifikace.Range("C4") = ws.Range("R" & index).value 'jmeno
    ws_specifikace.Range("C5") = ws.Range("S" & index).value 'funkce
    ws_specifikace.Range("C6") = ws.Range("T" & index).value 'ulice
    ws_specifikace.Range("C7") = ws.Range("U" & index).value 'mesto
    ws_specifikace.Range("C8") = ws.Range("V" & index).value  'psc
    
    ws_specifikace.Range("L3") = ws.Range("W" & index).value 'ic
    ws_specifikace.Range("L4") = ws.Range("X" & index).value 'dic
    ws_specifikace.Range("L5") = ws.Range("Y" & index).value 'tel/fax
    ws_specifikace.Range("L6") = ws.Range("Z" & index).value 'zpusob uhrady
    ws_specifikace.Range("L7") = ws.Range("AA" & index).value 'splatnost
    ws_specifikace.Range("L8") = ws.Range("AB" & index).value 'limit
    
    'Kostelnik 2019-01-14, v|fffd|maz poli, novy zpusob implementace = vyber adres pres samosatny form (vyber pod zaznamku ke klici "kupujici, IC")
    ws_specifikace.Range("T3:T9").value = ""
                
    Set ws = Nothing
    Set ws_specifikace = Nothing
    
    Exit Function
    
ErrHandler:
    MsgBox Err.Description
End Function

Function deleteAndCreateTmpCustomerList(sheetName As String) As Integer 'Kostelnik 2018-11-13
    deleteAndCreateTmpCustomerList = 0
    
    On Error GoTo ErrHandler
    
    Dim ws As Worksheet
    
    'vymazu list, pokud existuje
    Call deleteList(sheetName)

    'vytvoreni noveho cisteho listu
    ThisWorkbook.Unprotect Password:="cube"
    
    Set ws = Sheets.Add(After:=Sheets(ThisWorkbook.Worksheets.count))
    ws.name = sheetName
    'TODO - aktivovat
    ws.Visible = xlSheetHidden
    
    ThisWorkbook.Protect Password:="cube"
    
    'zkopiruji hodnoty ze zdroje
    Dim wb_customers As Workbook
    Set wb_customers = getZdrojDat(specifikace_zakaznici, True)
    
    If wb_customers Is Nothing Then 'soubor nenalezen
        MsgBox "Nenalezen soubor " & specifikace_zakaznici & ".", vbExclamation
        deleteAndCreateTmpCustomerList = -1
        GoTo konec
    End If
    
    Application.DisplayAlerts = False
    wb_customers.Worksheets("zakaznici").Range("A:O").copy
    ws.Range("A1").PasteSpecial xlPasteValues
    ws.Range("A1").PasteSpecial xlPasteFormats
    
    ws.Activate
    ws.Range("A1").Select
    
    If Not wb_customers Is Nothing Then
        wb_customers.Close
        Set wb_customers = Nothing
    End If
    
konec:
    Application.DisplayAlerts = True
    Set ws = Nothing
    Exit Function
    
ErrHandler:
    ThisWorkbook.Protect Password:="cube"
    Application.DisplayAlerts = True
    MsgBox Err.Description
End Function

Function getZdrojDat(fileName As String, readonly As Boolean, Optional cesta As String = "") As Workbook  'Kostelnik 2018-11-13
    On Error GoTo ErrHandler
    
    If doLogging Then
        Call logFile("getZdrojDat: #100, filename: " & fileName & ", cesta: " & cesta)
    End If
    
    Dim src As Workbook
    
    If cesta = "" Then
        'cesta = ActiveWorkbook.path
        cesta = ThisWorkbook.path
    End If
    
    Dim str_file_path As String
    str_file_path = cesta & "\" & fileName
    
    If Right(str_file_path, 1) = "\" Then
        str_file_path = Left(str_file_path, Len(str_file_path) - 1)
    End If
    
    If doLogging Then
        Call logFile("getZdrojDat: #150, str_file_path: " & str_file_path)
    End If
    
    If doLogging Then
        Call logFile("getZdrojDat: #155, Dir(str_file_path): " & Dir(str_file_path))
    End If
    
    'Kostelnik 2019-02-25 kod cely prepracovan, soubor se specifikaci se bude ukladat do slozky archivu, ale zdrojova databaze bude o slozku vyse a proto musim upravit hledani
    If Dir(str_file_path) = "" Then 'soubor nenalezen
    
        If doLogging Then
            Call logFile("getZdrojDat: #160")
        End If
    
        'pokud je soubor v archivu, a hleda zdrojovy soubour specifikace_databaze, zkusim hledat zdrojovy soubor o slozku vyse
        If fileName = specifikace_zakaznici Then
            Dim cestaArchiv As String
            cestaArchiv = ThisWorkbook.Worksheets("nastaveni").Range("field_archiv_cesta").value
            
            If cestaArchiv <> "" Then
                If EndsWith(cesta, cestaArchiv) Then
                    Dim i As Integer
                    i = Len(cestaArchiv)
                    cesta = Left(cesta, Len(cesta) - i - 1) '-1 jeste abych odebral lomitko, ktere vzapeti pridam
                    str_file_path = cesta & "\" & fileName
                    
                    If Dir(str_file_path) <> "" Then
                        GoTo krok2
                    End If
                End If
            End If
        End If
                
        Set getZdrojDat = Nothing
        Set src = Nothing
        Exit Function
    End If
    
    If doLogging Then
        Call logFile("getZdrojDat: #200")
    End If
    
krok2:

    If doLogging Then
        Call logFile("getZdrojDat: #300")
    End If
        
    'Set src = Workbooks.Open(str_file_path, True, readonly)
    gwo_counter = 0
    Set src = getWorkbooksOpen(str_file_path, readonly, True) 'Kostelnik 2019-05-09
    
    If doLogging Then
        Call logFile("getZdrojDat: #400")
    End If
    
    'src.Windows(1).Visible = False
    Set getZdrojDat = src
    Set src = Nothing
    
    Exit Function
    
ErrHandler:
    Dim strErr As String
    strErr = Err.Description
    
    Call protectWorkBook
    Application.DisplayAlerts = True
    
    If doLogging Then
        Call logFile("getZdrojDat: ErrHandler:" & strErr)
    End If
    MsgBox strErr
End Function

Function getWorkbooksOpen(str_file_path As String, readonly As Boolean, dialogAgain As Boolean) As Workbook 'Kostelnik 2019-05-09
    On Error GoTo ErrHandler
    
    gwo_counter = gwo_counter + 1
    
    If doLogging Then
        Call logFile("getWorkbooksOpen: #100" & ", gwo_counter: " & gwo_counter)
    End If
    
    Dim src As Workbook
    
    Set src = Workbooks.Open(str_file_path, True, readonly)
    
    If doLogging Then
        Call logFile("getWorkbooksOpen: #200")
    End If
    
    Set getWorkbooksOpen = src
    Set src = Nothing
    
    If doLogging Then
        Call logFile("getWorkbooksOpen: #EXIT")
    End If
    
    Exit Function
    
ErrHandler:
    Dim strErr As String
    strErr = Err.Description
                
    If doLogging Then
        Call logFile("getWorkbooksOpen: ErrHandler:" & strErr & ", filepath: " & str_file_path)
    End If
    
    If dialogAgain Then
        If gwo_counter > 5 Then
            Dim r
            r = MsgBox("Nastala neo|fffd|ek|fffd|van|fffd| chyba. Nepoda|fffd|ilo se naj|fffd|t soubor: " & vbNewLine & str_file_path & vbNewLine & vbNewLine & "Zkusit znovu?", vbYesNo + vbQuestion)
            If r = vbNo Then
                Exit Function
            End If
        End If
        
        Application.Wait (Now + TimeValue("0:00:01")) 'po instalaci aktualiace Windows 1803 zaclo zlobit nacitnai souboru, proto funkce getWorkbooksOpen
        
        Set getWorkbooksOpen = getWorkbooksOpen(str_file_path, readonly, dialogAgain)
    End If
    'MsgBox strErr
End Function

Function vyhledejZakazniky(search_txt As String)  'Kostelnik 2018-11-14
    On Error GoTo ErrHandler
    'Dim search_txt As String
    'search_txt = "" '"ko"
    
    Dim ws As Worksheet
   
    Dim sheetName As String
    sheetName = "tmpCustList"
    Set ws = ThisWorkbook.Worksheets(sheetName)
    
    'vycistim filtrovanou oblast
    ws.Range("Q:AE").ClearContents
            
    Dim lastLine As Long
    lastLine = ws.Range("A" & Rows.count).End(xlUp).Row
    
    'zkopiruji format
    ws.Range("A:O").copy
    ws.Range("Q1").PasteSpecial xlPasteFormats
    Application.CutCopyMode = False
    
    Dim line As Long
    line = 2 'od zahlavi
    
    Dim resultLine As Long
    resultLine = 2
    
    Dim hodnota As String
    Dim hodnota2 As String
    Dim pozice As Long
    Dim pozice2 As Long
    
    Dim tmpTxt As String
    
    'vlozim zahlavi
    ws.Range("Q1:AE1").value = ws.Range("A1:O1").value
    
    Do While line <= lastLine
        If (search_txt = "") Then 'kdyz je vyhledavaci retezec prazdny, zobrazim vse
            pozice = 1
        Else
            hodnota = ws.Cells(line, 1).value 'kupujici
            hodnota2 = ws.Cells(line, 2).value 'jmeno
            pozice = InStr(1, hodnota, search_txt, vbTextCompare) 'vbTextCompare   1   Case-Insensitive - based on order in the ASCII table, Performs a textual string comparison (A = a)
            pozice2 = InStr(1, hodnota2, search_txt, vbTextCompare)
        End If
                
        If (pozice > 0) Or (pozice2 > 0) Then
            ws.Range("Q" & resultLine).value = ws.Range("A" & line).value 'kupujici
            ws.Range("R" & resultLine).value = ws.Range("B" & line).value 'jmeno
            ws.Range("S" & resultLine).value = ws.Range("C" & line).value 'funkce
            ws.Range("T" & resultLine).value = ws.Range("D" & line).value 'ulice
            ws.Range("U" & resultLine).value = ws.Range("E" & line).value 'mesto
            ws.Range("V" & resultLine).value = ws.Range("F" & line).value 'psc
            ws.Range("W" & resultLine).value = ws.Range("G" & line).value 'IC
            ws.Range("X" & resultLine).value = ws.Range("H" & line).value 'DIC
            
            tmpTxt = ws.Range("I" & line).value 'tel. cislo, aby se zachovalo znamenko +
            If Not Left(tmpTxt, 1) = "'" Then
                tmpTxt = "'" + tmpTxt
            End If
            ws.Range("Y" & resultLine).value = tmpTxt 'tel. cislo
            ws.Range("Z" & resultLine).value = ws.Range("J" & line).value 'zpusob uhrady
            ws.Range("AA" & resultLine).value = ws.Range("K" & line).value 'splatnost
            ws.Range("AB" & resultLine).value = ws.Range("L" & line).value 'limit
            ws.Range("AC" & resultLine).value = ws.Range("M" & line).value 'kont. osoba
            ws.Range("AD" & resultLine).value = ws.Range("N" & line).value 'email
            
            tmpTxt = ws.Range("O" & line).value 'tel. cislo, aby se zachovalo znamenko +
            If Not Left(tmpTxt, 1) = "'" Then
                tmpTxt = "'" + tmpTxt
            End If
            ws.Range("AE" & resultLine).value = tmpTxt
            
            resultLine = resultLine + 1
        End If
            
        line = line + 1
    Loop
    
    'ws.Activate
    'ws.Range("A1").Select
   
    Set ws = Nothing
    Exit Function
    
ErrHandler:
    MsgBox Err.Description
End Function

'=== sub record k master data Kupujici, IC -> misto dodani, akce ==========================================================================
Function readAndSelectSubAddress() 'Kostelnik 2019-01-14
    On Error GoTo ErrHandler
    
    Application.ScreenUpdating = False
    
    Dim sheetName As String
    sheetName = tmpCustAddressList
    
    Dim ret As Integer
    
    'pripravim data z externiho souboru
    ret = deleteAndCreateTmpCustomerAddressList(sheetName)
    If ret = -1 Then 'nejaka chyba, napr. nenalezen soubor se zakazniky
        GoTo konec
    End If
    
    Call prepareDataSubAddressForKeyFilter(sheetName) 'Kostelnik 2019-01-14, pripravi data pro formular, budou zde pouze radky, ktere odpovidaji vyhledavacimu klici "kupujici, IC"
       
    ThisWorkbook.Worksheets("Specifikace").Activate
    
    Call zobrazAddressGUI(sheetName)
            
    'vlozeni vybraneho zakaznika
    If customerAddressImport_selectedLine > 1 Then 'ignoruje nevybrany zaznam, nebo zahlavi
        Call insertCustomerAddressToHeader(sheetName, customerAddressImport_selectedLine)
    End If
        
konec:
    'TODO nastavit vymazavani
    Call deleteList(sheetName) 'z bezpecnostnich duvodu, aby nezustal seznam v excelu, OTP jej mohou poslat zakaznikovi...
        
    ThisWorkbook.Worksheets("Specifikace").Activate
    Application.ScreenUpdating = True
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    MsgBox Err.Description
End Function

Function deleteAndCreateTmpCustomerAddressList(sheetName As String) As Integer 'Kostelnik 2019-01-14
    deleteAndCreateTmpCustomerAddressList = 0
    
    On Error GoTo ErrHandler
    
    Dim ws As Worksheet
    
    'vymazu list, pokud existuje
    Call deleteList(sheetName)

    'vytvoreni noveho cisteho listu
    ThisWorkbook.Unprotect Password:="cube"
    
    Set ws = Sheets.Add(After:=Sheets(ThisWorkbook.Worksheets.count))
    ws.name = sheetName
    'TODO - aktivovat
    ws.Visible = xlSheetHidden
    
    ThisWorkbook.Protect Password:="cube"
    
    'zkopiruji hodnoty ze zdroje
    Dim wb_customers As Workbook
    Set wb_customers = getZdrojDat(specifikace_zakaznici, True)
    
    If wb_customers Is Nothing Then 'soubor nenalezen
        MsgBox "Nenalezen soubor " & specifikace_zakaznici & ".", vbExclamation
        deleteAndCreateTmpCustomerAddressList = -1
        GoTo konec
    End If
    
    Application.DisplayAlerts = False
    wb_customers.Worksheets("adresy").Range("A:H").copy
    ws.Range("A1").PasteSpecial xlPasteValues
    ws.Range("A1").PasteSpecial xlPasteFormats
    
    ws.Activate
    ws.Range("A1").Select
    
    If Not wb_customers Is Nothing Then
        wb_customers.Close
        Set wb_customers = Nothing
    End If
    
konec:
    Application.DisplayAlerts = True
    Set ws = Nothing
    Exit Function
    
ErrHandler:
    ThisWorkbook.Protect Password:="cube"
    Application.DisplayAlerts = True
    MsgBox Err.Description
End Function

Function prepareDataSubAddressForKeyFilter(sheetName As String) 'Kostelnik 2019-01-14
    Dim ws As Worksheet
    Dim ws_specifikace As Worksheet
    
    Set ws = ThisWorkbook.Worksheets(sheetName)
    Set ws_specifikace = ThisWorkbook.Worksheets("Specifikace")
    
    'pripravim oblast pro vysledky
    
    'vymaz dat
    ws.Range("K:R").ClearContents
    'nastaveni zahlavi
    ws.Range("K1:R1").value = ws.Range("A1:H1").value
    'sloupec Q - telefon nastavim jako textovy format
    ws.Range("Q:Q").NumberFormat = "@"
    
    Dim key1 As String
    Dim key2 As String
    
    key1 = ws_specifikace.Range("C3").value 'kupujici
    key2 = ws_specifikace.Range("L3").value 'IC
    
    Dim line As Long
    line = 2 'prvni zaznam od zahlavim
    
    Dim current_key1 As String
    Dim current_key2 As String
    
    Dim lastLine As Long
    lastLine = ws.Range("A" & Rows.count).End(xlUp).Row 'posledni radek vyhledavaci oblasti
    
    Dim line_insert As Long
    line_insert = 2
    
    Do While line <= lastLine
        current_key1 = ws.Cells(line, 1).value 'kupujici
        current_key2 = ws.Cells(line, 2).value 'IC
        
        If (current_key1 = key1) And (current_key2 = key2) Then
            ws.Range("K" & line_insert & ":R" & line_insert).value = ws.Range("A" & line & ":H" & line).value
            line_insert = line_insert + 1
        End If
                
        line = line + 1
    Loop
    
    
    Set ws = Nothing
    Set ws_specifikace = Nothing
End Function

Function zobrazAddressGUI(sheetName As String) 'Kostelnik 2019-01-14
    Dim ac As AddressImport
    Set ac = AddressImport
    
    'nastavim RowSource
    Dim lastLine As Long
    lastLine = ThisWorkbook.Worksheets(sheetName).Range("K" & Rows.count).End(xlUp).Row
    
    If lastLine > 1 Then 'pokud neni zadny nalezeny zaznam, tak nic nezobrazim, bet teto podminky by se vlozilo zahlavi (prvni radek)
        ac.ListBox1.RowSource = sheetName & "!M2:R" & lastLine
    Else
        ac.ListBox1.RowSource = sheetName & "!M2:R2" 'bude prazdny radek, ale zustane zahlavi
    End If
       
    customerAddressImport_selectedLine = -1 'Tato hodnota se nastavi ve formu
    ac.show
    
    Unload ac
    Set ac = Nothing
End Function

Function insertCustomerAddressToHeader(sheetName As String, index As Long) 'Kostelnik 2019-01-14
    On Error GoTo ErrHandler
    Dim ws As Worksheet
    Dim ws_specifikace As Worksheet
    
    Set ws = ThisWorkbook.Worksheets(sheetName)
    Set ws_specifikace = ThisWorkbook.Worksheets("Specifikace")
    
    ws_specifikace.Range("T3") = ws.Range("M" & index).value 'misto dodani
    ws_specifikace.Range("T4") = ws.Range("N" & index).value 'akce
    ws_specifikace.Range("T5") = ws.Range("O" & index).value 'kontaktni
    ws_specifikace.Range("T6") = ws.Range("P" & index).value 'email
    ws_specifikace.Range("T7") = ws.Range("Q" & index).value 'tel
    ws_specifikace.Range("T8") = ws.Range("R" & index).value 'termin dodani
                
    Set ws = Nothing
    Set ws_specifikace = Nothing
    
    Exit Function
    
ErrHandler:
    MsgBox Err.Description
End Function

Function insertNewCustomerAddressToDB() 'Kostelnik 2019-01-14
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    'vlozim novy zaznam
    Dim wb_customers As Workbook
    Set wb_customers = getZdrojDat(specifikace_zakaznici, False)
    
    If wb_customers Is Nothing Then 'soubor nenalezen
        MsgBox "Nenalezen soubor " & specifikace_zakaznici & ".", vbExclamation
        GoTo konec
    End If
    
    Call insertAndSaveCustomerAddressFromHeaderToDB(wb_customers) 'vymazou se zde i duplicity

    If Not wb_customers Is Nothing Then
        wb_customers.Close
        Set wb_customers = Nothing
    End If
            
konec:
    ThisWorkbook.Worksheets("Specifikace").Activate
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    MsgBox Err.Description
End Function

Function insertAndSaveCustomerAddressFromHeaderToDB(wb_customers As Workbook) 'Kostelnik 2019-01-14
    On Error GoTo ErrHandler
    
    Dim ws As Worksheet
    Set ws = wb_customers.Worksheets("adresy")
    
    Dim ws_customers As Worksheet
    Set ws_customers = wb_customers.Worksheets("zakaznici")
    
    Dim ws_specifikace As Worksheet
    Set ws_specifikace = ThisWorkbook.Worksheets("Specifikace")
    
    'kontrola
    If ws_specifikace.Range("C3").value = "" Then
        MsgBox "Pole ""Kupuj|fffd|c|fffd|"" nen|fffd| vypln|fffd|no. Ulo|fffd|en|fffd| z|fffd|znamu p|fffd|eru|fffd|eno.", vbExclamation
        GoTo konec
    End If
    
    'kontrola pred ulozenim, zda key(Kupujici, IC) existuje na List1
    Dim key1 As String
    Dim key2 As String
    
    key1 = ws_specifikace.Range("C3").value 'kupujici
    key2 = ws_specifikace.Range("L3").value 'IC
    
    Dim lastLineCustomer As Long
    lastLineCustomer = ws_customers.Range("A" & Rows.count).End(xlUp).Row
    
    Dim current_key1 As String
    Dim current_key2 As String
    
    Dim flag_find As Boolean
    flag_find = False
    
    Dim llcindex As Long
    For llcindex = 2 To lastLineCustomer
        current_key1 = ws_customers.Cells(llcindex, 1).value 'kupujici
        current_key2 = ws_customers.Cells(llcindex, 7).value 'IC
        If (key1 = current_key1) And (key2 = current_key2) Then
            flag_find = True
            Exit For
        End If
    Next llcindex
    
    If Not flag_find Then
        MsgBox "Nenalezen z|fffd|znam v |fffd|daj|fffd|ch o z|fffd|kazn|fffd|c|fffd|ch." & vbNewLine & "Kupuj|fffd|c|fffd|: " & key1 & ", I|fffd|: " & key2 & "." & vbNewLine & "Kontakt nejprve ulo|fffd|te. Ulo|fffd|en|fffd| z|fffd|znamu p|fffd|eru|fffd|eno.", vbExclamation
        GoTo konec
    End If
    
    Dim lastLine As Long
    lastLine = ws.Range("A" & Rows.count).End(xlUp).Row
    lastLine = lastLine + 1 'presunu se na dalsi, prazdny radek
    
    Dim tmpTxt As String
    
    ws.Unprotect Password:="cube"
    
    ws.Range("G:G").NumberFormat = "@" 'telefon nastavim jako textovy format
    
    ws.Range("A" & lastLine).value = ws_specifikace.Range("C3").value 'kupujici
    ws.Range("B" & lastLine).value = ws_specifikace.Range("L3").value 'ic
    ws.Range("C" & lastLine).value = ws_specifikace.Range("T3").value 'misto dodani
    ws.Range("D" & lastLine).value = ws_specifikace.Range("T4").value 'akce
    ws.Range("E" & lastLine).value = ws_specifikace.Range("T5").value 'kontaktni
    ws.Range("F" & lastLine).value = ws_specifikace.Range("T6").value 'email
    ws.Range("G" & lastLine).value = ws_specifikace.Range("T7").value 'tel
    ws.Range("H" & lastLine).value = ws_specifikace.Range("T8").value 'termin dodani
            
    'toto neni uz potreba, elegantne vyreseno nahore NumberFormat = "@"
    'tmpTxt = ws_specifikace.Range("L5").Value 'tel/fax, aby se zachovalo znamenko +
    'If Not Left(tmpTxt, 1) = "'" Then
    '    tmpTxt = "'" + tmpTxt
    'End If
    'ws.Range("I" & lastLine).Value = tmpTxt 'tel/fax
        
    'nastavim format na aktualni radek
    ws.Activate
    
    ws.Range("A" & lastLine & ":H" & lastLine).Select
    With Selection.Font
        .name = "Arial"
        .Size = 8
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .ThemeFont = xlThemeFontNone
    End With
    
    ws.Range("A1").Select
        
    'vymazu duplicity
    ws.Range("A:H").RemoveDuplicates Columns:=Array(1, 2, 3, 4, 5, 6, 7, 8), Header:=xlYes
    
    'seradim adresy dle sloupce A,B
    ws.Sort.SortFields.Clear
    ws.Sort.SortFields.Add key:=Range("A2:A" & lastLine), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    ws.Sort.SortFields.Add key:=Range("B2:B" & lastLine), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    ws.Sort.SortFields.Add key:=Range("C2:C" & lastLine), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
    ws.Sort.SortFields.Add key:=Range("D2:D" & lastLine), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal

    With ws.Sort
        .SetRange Range("A1:H" & lastLine)
        .Header = xlYes
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    'nastavim odemknuti zamku pro vsechny bunky, aby bylo mozne upravovat
    ws.Cells.Select
    Selection.Locked = False
    Selection.FormulaHidden = False
    
    ws.Range("A1").Select
    
    ws_customers.Activate
    ws_customers.Range("A1").Select 'nastavim focus na prvni list
    
    ws.Protect Password:="cube", Contents:=True, AllowInsertingRows:=True, AllowDeletingRows:=True, AllowSorting:=True
    
    Application.DisplayAlerts = False
    wb_customers.Save
    
konec:
    Set ws = Nothing
    Set ws_specifikace = Nothing
    Set ws_customers = Nothing
    Exit Function
    
ErrHandler:
    ws.Protect Password:="cube", Contents:=True, AllowInsertingRows:=True, AllowDeletingRows:=True, AllowSorting:=True
    MsgBox Err.Description
End Function
Attribute VB_Name = "M02_vyber_artiklu"
'Module2 - implementace vyber artiklu

Option Explicit

Public Const tmpMenuCategory = "tmpMenuCategory"
'Public articleChooser_selectedLine As Long
Public listSelectedArticlesFromListBox(1 To 100) As Long
Public Const spec_input_start_line = 13
'Public Const spec_input_end_line = 34 'Kostelnik 2019-02-06 nahrazeno funkci getLastWorkingRow(), protoze lze dynamicky pridavat a ubirat radky

Function generateAllMenuCategory() 'Kostelnik 2018-11-16, tato funkce se zavola pouze jednou pri otevreni excelu, list muze zustat vytvoreny, ale skryty a chraneny!!!
    On Error GoTo ErrHandler
    
    Application.ScreenUpdating = False
    
    Dim sheetName As String
    sheetName = tmpMenuCategory
        
    Dim ret As Integer
    
    'pripravim data pro form ArticleChooser
    ret = deleteAndCreateTmpMenuCategory(sheetName) 'Kostelnik 2018-11-19
    If ret = -1 Then 'nejaka chyba
        GoTo konec
    End If
 
konec:
    Call protectWorkBook
    
    ThisWorkbook.Worksheets("Specifikace").Activate
    'Application.ScreenUpdating = True
    Exit Function
    
ErrHandler:
    Call protectWorkBook
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    MsgBox "generateAllMenuCategory " & Err.Description
End Function

Function deleteAndCreateTmpMenuCategory(sheetName As String) As Integer 'Kostelnik 2018-11-16
    deleteAndCreateTmpMenuCategory = 0
    
    On Error GoTo ErrHandler
    
    Dim ws As Worksheet
    
    'vymazu list, pokud existuje
    Call deleteList(sheetName)

    'vytvoreni noveho cisteho listu
    ThisWorkbook.Unprotect Password:="cube"
    
    Set ws = Sheets.Add(After:=Sheets(ThisWorkbook.Worksheets.count))
    ws.name = sheetName
    'TODO - aktivovat
    ws.Visible = xlSheetHidden
    
    Dim ret As Integer
    'vygenerovani menu kategorie
    ret = createMenuMainCategoryFromNames(ws, "A1") '!!!!pokud se zmeni umisteni zdroje, nutne upravit i funkci mapSouceDataCategoryToUI, fillDataOnCategorySelect, createMenuSubCategory
    If ret = -1 Then 'nejaka chyba
        GoTo konec
    End If
        
    ret = createMenuSubCategory(ws, "A1", "G1")
    If ret = -1 Then 'nejaka chyba
        GoTo konec
    End If
    
    ret = createArticlesRowBySubCategory(ws, "G1", "N1") 'zapis dat do sloupcu N:U
    If ret = -1 Then 'nejaka chyba
        GoTo konec
    End If
    
    'TODO - vymazat autofit
    'ws.Columns.AutoFit
        
konec:
    Call protectWorkBook
    Application.DisplayAlerts = True
    
    Set ws = Nothing
    Exit Function
    
ErrHandler:
    deleteAndCreateTmpMenuCategory = -1
    Call protectWorkBook
    Application.DisplayAlerts = True
    MsgBox "deleteAndCreateTmpMenuCategory " & Err.Description
End Function

Function createMenuMainCategoryFromNames(ws As Worksheet, startRange As String) As Integer 'Kostelnik 2018-11-19
    createMenuMainCategoryFromNames = 0
    
    On Error GoTo ErrHandler
    Dim r As Range
    Dim line As Long
        
    Set r = Range(startRange)
    line = r.Row
    
    Dim nm As name
    
    Dim i As Integer
    
    Dim r_first As Long
    Dim r_last As Long
    
    Dim firstColumnName As String
    Dim lastColumnName As String
    Dim serazovanySloupec As String
  
    firstColumnName = ""
    lastColumnName = ""
    serazovanySloupec = ""
  
    Dim strTMP As String
    Dim nazev_kategorie As String
    Dim str_cislo_kategorie As String
    
    'ws.Range("A1").Activate
    'ws.Range("A1").Select
    
    Dim zdrojAktivni As String
    zdrojAktivni = getActivePricelistSheetSourceName 'Kostelnik 2019-03-06
    
    For Each nm In ThisWorkbook.Names
        'If (nm.Visible) And (nm.Name <> "FSTOMIX") Then 'FSTOMIX je nevalidni, nepouzivana oblast, misto toho se pouziva FSTX
        If (nm.name <> "FSTOMIX") Then 'FSTOMIX je nevalidni, nepouzivana oblast, misto toho se pouziva FSTX, nyni nerozlisuji zda je names skryty, protoze je vsechny zamerne skryvam pri importu ceniku a po otevreni specifikace
            
            strTMP = " " & nm.RefersTo
            strTMP = Right(strTMP, Len(strTMP) - 2) 'odstranim prvni dva znaky, mezeru a rovnitko
            'If InStr(1, strTMP, "zdroj") > 0 Then 'pouze odkazy do listu zdroj
            If InStr(1, strTMP, zdrojAktivni & "!") > 0 Then 'pouze odkazy do listu zdroj
                If InStr(1, strTMP, "#REF!", vbTextCompare) = 0 Then 'test na validni odkaz, jinak to neumim
                    'ws.Cells(line, r.Column) = nm.Name
                    'ws.Cells(line, r.Column + 1) = strTMP
                    
                    r_first = Range(strTMP).Row
                    'r_last = r_first + Range(strTMP).Count - 1
                    'ws.Cells(line, r.Column + 2) = r_first
                    'ThisWorkbook.Worksheets("List2").Cells(n, 5) = r_last 'pokud je range s presahem na jiny sloupec, tak nefunguje, tak jak potrebuji zdroj!$A$1:$X$836, v ramci jedneho sloupce, to je ok: zdroj!$A$1638:$A$1759
                    
                    i = InStr(1, strTMP, ":")
                    'If (i > 0) Then
                    r_last = Range(Mid(strTMP, i + 1)).Row
                    'ws.Cells(line, r.Column + 3) = r_last
                    'End If
                    
                    'nazev_kategorie = ThisWorkbook.Worksheets("zdroj").Cells(r_first, 5).Value
                    nazev_kategorie = ThisWorkbook.Worksheets(zdrojAktivni).Cells(r_first, 5).value
                    
                    'ws.Cells(line, r.Column + 4) = nazev_kategorie
                    
                    i = InStr(1, nazev_kategorie, ".") 'akceptuji jen ocislovane kategorie
                    If (i > 0) Then
                        str_cislo_kategorie = Left(nazev_kategorie, i - 1)
                        
                        If (IsNumeric(str_cislo_kategorie)) Then
                            'problem s razenim 1. a 10., 11., excel radi retezcove, proto budu davat nulu na zacatek u jednociferne kategorie
                            If Len(str_cislo_kategorie) = 1 Then 'Kostelnik 2019-02-13
                                nazev_kategorie = "0" & nazev_kategorie
                            End If
                        
                            ws.Cells(line, r.column) = nm.name
                            ws.Cells(line, r.column + 1) = strTMP
                            ws.Cells(line, r.column + 2) = r_first
                            ws.Cells(line, r.column + 3) = r_last
                            ws.Cells(line, r.column + 4) = nazev_kategorie
                                                        
                            firstColumnName = Replace(Replace(Cells(1, r.column).Address, "1", ""), "$", "") 'nazev sloupce
                            lastColumnName = Replace(Replace(Cells(1, r.column + 4).Address, "1", ""), "$", "") 'nazev sloupce
                            serazovanySloupec = Replace(Replace(Cells(1, r.column + 4).Address, "1", ""), "$", "") 'nazev sloupce
                            
                            line = line + 1
                        End If
                    End If
                End If
            End If
                                   
        End If
    Next nm
    
    Dim sort_start_line As Long
    Dim sort_posledni_line As Long
   
    sort_start_line = r.Row
    sort_posledni_line = line
      
    'provedu serazeni dle kategorii, sloupce z nazvem kategorie
    ws.Sort.SortFields.Clear
    ws.Sort.SortFields.Add key:=Range(serazovanySloupec & sort_start_line & ":" & serazovanySloupec & sort_posledni_line), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal 'seradit chci ascendig
    With ws.Sort
        .SetRange Range(firstColumnName & sort_start_line & ":" & lastColumnName & sort_posledni_line) 'seradit jen jeden sloupec, bez ohledu na okolni sloupce
        '.Header = xlYes
        .Header = xlNo
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
       
    'ws.Range("A1").Select
    
    Exit Function
     
ErrHandler:
    createMenuMainCategoryFromNames = -1
    Application.DisplayAlerts = True
    MsgBox "createMenuMainCategoryFromNames " & Err.Description
End Function

Function createMenuSubCategory(ws As Worksheet, startRangeMenuCategory As String, startRangeDst As String) As Integer  'Kostelnik 2018-11-19
    createMenuSubCategory = 0
    
    On Error GoTo ErrHandler
    
    Dim r As Range
    Dim line As Long
        
    Set r = Range(startRangeMenuCategory)
    line = r.Row
    
    Dim lastLine As Long
    lastLine = ws.Range(getNazevSloupce(r.column) & Rows.count).End(xlUp).Row 'posledni radek kategorii
    
    Dim i As Long
    Dim j As Long
    
    Dim startLine As Long
    Dim endLine As Long
    
    Dim zdrojAktivni As String
    zdrojAktivni = getActivePricelistSheetSourceName 'Kostelnik 2019-03-06
    
    Dim sheetZdroj As Worksheet
    Set sheetZdroj = ThisWorkbook.Worksheets(zdrojAktivni)
    
    Dim article As String
    Dim nazev As String
    Dim popis As String
    Dim kategorie As String
    
    Dim l As Long
    l = 1
    
    Dim col_sub_kat As Integer
    Dim col_skup_index As Integer
    Dim col_sub_kat_desc As Integer
    Dim col_sub_kat_row_index As Integer
        
    Dim rDstCol As Integer
    rDstCol = Range(startRangeDst).column
    
    col_sub_kat = rDstCol
    col_skup_index = rDstCol + 1 'ukazuje na cislo radku hlavni skupiny, do ktere tato kategorie spada
    col_sub_kat_desc = rDstCol + 2
    col_sub_kat_row_index = rDstCol + 3
    
    Dim sub_line_start As Long
    Dim sub_line_end As Long
    
    sub_line_end = l
       
    For i = line To lastLine 'prochazim skrz hlavni polozky  A:E
        startLine = ws.Cells(i, 3).value + 1 'prvni radek preskocim, obsahuje nazev samotne hlavni kategorie
        endLine = ws.Cells(i, 4).value
        kategorie = ws.Cells(i, 1).value 'oznaceni
        
        sub_line_start = l
        For j = startLine To endLine
            article = sheetZdroj.Cells(j, 3).value

            'Kostelnik 2019-03-12 kvuli chybnym radkum ve zdrojovem ceniku nutno osetrit
            If IsError(sheetZdroj.Cells(j, 5).value) Then
                nazev = "Chyba v ceniku r.: " & j
            Else
                nazev = sheetZdroj.Cells(j, 5).value 'nazev sub kategorie
            End If
            
            If isSubCategory(article, nazev) Then
                ws.Cells(l, col_sub_kat).value = kategorie
                ws.Cells(l, col_skup_index).value = i 'ukazuje na cislo radku hlavni skupiny, do ktere tato kategorie spada
                ws.Cells(l, col_sub_kat_desc).value = nazev
                ws.Cells(l, col_sub_kat_row_index).value = j
                ws.Cells(l, col_sub_kat_row_index + 1).value = findLastRowOfSubCategory(sheetZdroj, j + 1, endLine)
                sub_line_end = l
                l = l + 1
            End If
        Next j
        
        ws.Cells(i, 6).value = getNazevSloupce(col_sub_kat_desc) & sub_line_start & ":" & getNazevSloupce(col_sub_kat_desc) & sub_line_end 'oblast jednotlivych sub kategorii, sloupec F
    Next i
   
    Set sheetZdroj = Nothing
    Exit Function
    
ErrHandler:
    createMenuSubCategory = -1
    Application.DisplayAlerts = True
    MsgBox "createMenuSubCategory " & Err.Description & " cyklus i: " & i & ", j: " & j
End Function

Function createArticlesRowBySubCategory(ws As Worksheet, startRangeMenuCategory As String, startRangeDst As String) As Integer  'Kostelnik 2018-11-21
    createArticlesRowBySubCategory = 0
    
    On Error GoTo ErrHandler
    
    Dim r As Range
    Dim line As Long
        
    Set r = Range(startRangeMenuCategory)
    line = r.Row
    
    Dim lastLine As Long
    lastLine = ws.Range(getNazevSloupce(r.column) & Rows.count).End(xlUp).Row 'posledni radek kategorii
    
    Dim i As Long
    Dim j As Long
    
    Dim startLine As Long
    Dim endLine As Long
    
    Dim zdrojAktivni As String
    zdrojAktivni = getActivePricelistSheetSourceName 'Kostelnik 2019-03-06
    
    Dim sheetZdroj As Worksheet
    Set sheetZdroj = ThisWorkbook.Worksheets(zdrojAktivni)
    
    Dim rDstCol As Integer
    rDstCol = Range(startRangeDst).column
    
    Dim l As Long
    l = 1
    
    Dim article As String
    Dim exist_line_start As Long
    Dim exist_line_end As Long
    
    Dim popisek1 As String
    Dim tmpString As String
    Dim tmpString2 As String
        
    For i = line To lastLine 'prochazim skrz hlavni polozky (sub kategorie)  H:K
        startLine = ws.Cells(i, r.column + 3).value
        endLine = ws.Cells(i, r.column + 4).value
        exist_line_start = -1
        
        For j = startLine To endLine
             article = sheetZdroj.Cells(j, 3).value
             If article <> "" Then
                If exist_line_start = -1 Then
                    exist_line_start = l
                End If

                ws.Cells(l, rDstCol).value = ws.Cells(i, r.column).value
                ws.Cells(l, rDstCol + 1).value = i 'zpetny odkaz na radek sub menu
            
                ws.Cells(l, rDstCol + 2).value = article
                
                If IsError(sheetZdroj.Cells(j, 5).value) Then
                    tmpString = "CHYBA ZDROJ. DAT r.: " & j
                Else
                    tmpString = sheetZdroj.Cells(j, 5).value
                End If
                ws.Cells(l, rDstCol + 3).value = tmpString 'nazev
                
                If IsError(sheetZdroj.Cells(j, 7).value) Then
                    tmpString = "CHYBA ZDROJ. DAT r.: " & j
                Else
                    tmpString = sheetZdroj.Cells(j, 7).value
                End If
                
                If IsError(sheetZdroj.Cells(j, 8).value) Then
                    tmpString2 = "CHYBA ZDROJ. DAT r.: " & j
                Else
                    tmpString2 = sheetZdroj.Cells(j, 8).value
                End If
                ws.Cells(l, rDstCol + 4).value = tmpString & " " & tmpString2  'baleni+MJ

                'Kvuli nalezene chybe nutno osetrit. V poli pro katalogovou cenu pro artikl 65352-009 byle neplatna hodnota, chyba ve zdrojovem ceniku.
                If IsError(sheetZdroj.Cells(j, 13).value) Then
                    popisek1 = "CHYBA ZDROJ. DAT"
                Else
                    popisek1 = sheetZdroj.Cells(j, 13).value
                End If
                
                'ws.Cells(l, rDstCol + 5).Value = sheetZdroj.Cells(j, 13).Value & " " & sheetZdroj.Cells(j, 14).Value  'kat. cena+MJ
                ws.Cells(l, rDstCol + 5).value = popisek1 & " " & sheetZdroj.Cells(j, 14).value  'kat. cena+MJ
                
                If IsError(sheetZdroj.Cells(j, 6).value) Then
                    tmpString = "CHYBA ZDROJ. DAT r.: " & j
                Else
                    tmpString = sheetZdroj.Cells(j, 6).value
                End If
                ws.Cells(l, rDstCol + 6).value = tmpString 'popis
                
                
                ws.Cells(l, rDstCol + 7).value = j 'cislo radku v originalnim zdroj v listu "zdroj"
                
                If IsError(sheetZdroj.Cells(j, 1).value) Then
                    tmpString = "CHYBA ZDROJ. DAT r.: " & j
                Else
                    tmpString = sheetZdroj.Cells(j, 1).value
                End If
                ws.Cells(l, rDstCol + 8).value = tmpString 'key z listu zdroj, je potreba kvuli dohledani radku pri rozkliknuti radku specifikace a nacteni formulare

                exist_line_end = l
                l = l + 1
             End If
        Next j
        
        If exist_line_start <> -1 Then
            ws.Cells(i, r.column + 5).value = getNazevSloupce(rDstCol + 2) & exist_line_start & ":" & getNazevSloupce(rDstCol + 5) & exist_line_end 'getNazevSloupce(r.Column)
        End If
    Next i
        
    Set sheetZdroj = Nothing
    Exit Function
    
ErrHandler:
    createArticlesRowBySubCategory = -1
    Application.DisplayAlerts = True
    MsgBox "createArticlesRowBySubCategory " & Err.Description & " cyklus i: " & i & ", j: " & j
End Function

Function isSubCategory(article As String, nazev As String) As Boolean 'Kostelnik 2018-11-21
    'isSubCategory = ((article = "") And (nazev <> ""))
    isSubCategory = False
    If (article = "") And (nazev <> "") Then
        If (Left(nazev, 1) <> "*") Then 'Kostelnik 2019-03-08, oprava falesnych "*komentar" kategorii, napr. 00016-001 StoColl Fix
            isSubCategory = True
        End If
    End If
End Function

Function findLastRowOfSubCategory(sheetZdroj As Worksheet, lineFrom As Long, lineTo As Long) As Long 'Kostelnik 2018-11-21
    If lineFrom > lineTo Then
        findLastRowOfSubCategory = lineTo
        Exit Function
    End If
        
    Dim article As String
    Dim nazev As String
    Dim i As Long
    
    For i = lineFrom To lineTo
            article = sheetZdroj.Cells(i, 3).value
            'nazev = sheetZdroj.Cells(i, 5).Value
            'Kostelnik 2019-03-12 kvuli chybnym radkum ve zdrojovem ceniku nutno osetrit
            If IsError(sheetZdroj.Cells(i, 5).value) Then
                nazev = "Chyba v ceniku r.: " & i
            Else
                nazev = sheetZdroj.Cells(i, 5).value
            End If
            
            If isSubCategory(article, nazev) Then
                findLastRowOfSubCategory = i - 1 'odectu jednicku, jinak bych ukazoval primo na radek s novou kategorii
                Exit Function
            End If
    Next i
        
    findLastRowOfSubCategory = lineTo
End Function

Function getNazevSloupce(cisloSloupce As Integer) As String 'Kostelnik 2018-11-19
    getNazevSloupce = Replace(Replace(Cells(1, cisloSloupce).Address, "1", ""), "$", "")
End Function

Function getPopisArtiklu(sheetName As String, indexArtikl As Integer) As String 'Kostelnik 2018-11-26
    
    'getPopisArtiklu = indexComboBox & " " & indexSubMenu & " " & indexArtikl

    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(sheetName)
    
    getPopisArtiklu = ws.Cells(indexArtikl + 1, 52).value '+1 protozeje na prvnim radku zahlavi
    
    Set ws = Nothing

End Function

Function vyhledejArtikly(search_txt As String, sheetName As String) As Integer 'Kostelnik 2018-11-26
    vyhledejArtikly = 0
    On Error GoTo ErrHandler
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(sheetName)
    
    'rychlostni optimalizace, aby se nemuselo porad dokola vse znova generovat, pokud se vyhledava posobe stejna hodnota, tj. ponecha se vysledek z predchoziho hledani
    Dim posledniHledanyRetezec As String
    posledniHledanyRetezec = ws.Cells(1, 44).value
    
    If posledniHledanyRetezec <> "" Then 'bylo drive nejake hledani
        If posledniHledanyRetezec = "*" Then 'znak * znamena hledani pro vsechny polozky
            posledniHledanyRetezec = ""
        End If
        
        If (posledniHledanyRetezec = search_txt) Then 'posledni hledany retezec je stejny jako v predchozim hledani, pro nehoz uz mam vysledky
            vyhledejArtikly = 1 'navratova hodnota, ze neni potreba znovu generovat menu
            Exit Function
        End If
    End If
              
    'vycistim filtrovanou oblast
    ws.Range("Y:BA").ClearContents 'mazou se radky ale i vygenerovane redukovane menu
    
    'zapisu hledany retezec
    posledniHledanyRetezec = search_txt
    If posledniHledanyRetezec = "" Then
        posledniHledanyRetezec = "*"
    ElseIf posledniHledanyRetezec = "*" Then 'pokud muj super znak je nahodou vyhledavan, tak nastavim do historie prazdny
        posledniHledanyRetezec = ""
    End If
    ws.Cells(1, 44).value = posledniHledanyRetezec
    
    'vlozim zahlavi na prvni radek
    ws.Range("AA1").value = "Artikl"
    ws.Range("AB1").value = "N|fffd|zev"
    ws.Range("AC1").value = "Balen|fffd|"
    ws.Range("AD1").value = "Kat. cena"
    
    Dim lastLine As Long
    lastLine = ws.Range("N" & Rows.count).End(xlUp).Row 'posledni radek vyhledavaci oblasti
    
    Dim hodnota As String
    Dim hodnota2 As String
    
    Dim pozice As Integer
    Dim pozice2 As Integer
    
    Dim line As Long
    line = 1 'start vyhledavani, zde neni zadne zahlavi
    
    Dim resultLine As Long
    resultLine = 2 'na prvnim radku je zahlavi
    
    Do While line <= lastLine
        If (search_txt = "") Then 'kdyz je vyhledavaci retezec prazdny, zobrazim vse
            pozice = 1
            pozice2 = 1
        Else
            'vyhledavam v artiklech a v nazvu vyrobku
            hodnota = ws.Cells(line, 17).value 'sloupec Q - nazev vyrobku
            hodnota2 = ws.Cells(line, 16).value 'sloupec P - cislo artiklu
            pozice = InStr(1, hodnota, search_txt, vbTextCompare) 'vbTextCompare   1   Case-Insensitive - based on order in the ASCII table, Performs a textual string comparison (A = a)
            pozice2 = InStr(1, hodnota2, search_txt, vbTextCompare)
        End If
        
        If (pozice > 0) Or (pozice2 > 0) Then
            ws.Cells(resultLine, 25).value = ws.Cells(line, 14).value 'skupina
            ws.Cells(resultLine, 26).value = ws.Cells(line, 15).value 'index na radek submenu
            
            ws.Cells(resultLine, 27).value = ws.Cells(line, 16).value 'artikl
            ws.Cells(resultLine, 28).value = ws.Cells(line, 17).value 'nazev
            ws.Cells(resultLine, 29).value = ws.Cells(line, 18).value 'baleni
            ws.Cells(resultLine, 30).value = ws.Cells(line, 19).value 'cena
            ws.Cells(resultLine, 31).value = ws.Cells(line, 20).value 'popis
            ws.Cells(resultLine, 32).value = ws.Cells(line, 21).value 'cislo radku v puvodnim zdroji na listu "zdroj"
            
            resultLine = resultLine + 1
        End If
        
        line = line + 1
    Loop
   
    Set ws = Nothing
    Exit Function
    
ErrHandler:
    MsgBox Err.Description
End Function

Function createFilteredMenuItems(sheetName As String) 'Kostelnik 2018-11-27
    'nejprve se vola funkce vyhledejArtikly, ta v oblasti Y:AE vygeneruje radky vsech artiklu, ktere vyhovuji podmince hledani,
    'pak na zaklade techto nalezenych radku se vygeneruje redukovane subkategorie a skupiny, ktere odpovidaji nalezenym radkum
    
 On Error GoTo ErrHandler
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(sheetName)
    
    Dim line As Long
    line = 2
    
    Dim lastLine As Long
    lastLine = ws.Range("Y" & Rows.count).End(xlUp).Row 'posledni radek vyhledavaci oblasti
    
    If lastLine = 1 Then 'nebylo nic nalezeno
        GoTo konec
    End If
    
    Dim indexKategorie As Long
    indexKategorie = -1
    
    Dim kat As Long
    Dim workLine As Long
    workLine = 1
    
    Dim lastKatLine As Long 'cislo posledniho radku v ramci jedne subkategorie
        
    Do While line <= lastLine
        kat = ws.Cells(line, 26).value
        If indexKategorie <> kat Then
            indexKategorie = kat
            
            'zapisu novou subkategorii
            ws.Cells(workLine, 34).value = ws.Cells(indexKategorie, 7).value 'skupina
            ws.Cells(workLine, 35).value = ws.Cells(indexKategorie, 8).value 'index
            ws.Cells(workLine, 36).value = ws.Cells(indexKategorie, 9).value 'nazev subkategorie
            
            lastKatLine = findLastRowFilteredSubCategory(ws, (line + 1), lastLine, indexKategorie, 26)
            ws.Cells(workLine, 37).value = "AA" & line & ":AD" & lastKatLine 'oblast radku artiklu
            
            workLine = workLine + 1
            line = lastKatLine 'optimalizace, abych znovu neprochazel radky stejne kategorie, kterou uz mam zpracovanou a vim jeji konec
        End If
    
        line = line + 1
    Loop
    
    'vygeneruji hlavni skupiny
    indexKategorie = -1
    line = 1
    workLine = 1
    lastLine = ws.Range("AH" & Rows.count).End(xlUp).Row 'posledni radek vyhledavaci oblasti
    
    Do While line <= lastLine
        kat = ws.Cells(line, 35).value
        If indexKategorie <> kat Then
            indexKategorie = kat
            
            'zapisu novou subkategorii
            ws.Cells(workLine, 40).value = ws.Cells(indexKategorie, 1).value 'skupina
            ws.Cells(workLine, 41).value = ws.Cells(indexKategorie, 5).value 'nazev skupiny
            
            lastKatLine = findLastRowFilteredSubCategory(ws, (line + 1), lastLine, indexKategorie, 35)
            ws.Cells(workLine, 42).value = "AJ" & line & ":AJ" & lastKatLine 'oblast radku artiklu
            
            workLine = workLine + 1
            line = lastKatLine 'optimalizace, abych znovu neprochazel radky stejne kategorie, kterou uz mam zpracovanou a vim jeji konec
        End If
    
        line = line + 1
    Loop
    
konec:
            
    Set ws = Nothing
    Exit Function
    
ErrHandler:
    MsgBox Err.Description
    
End Function

Function findLastRowFilteredSubCategory(ws As Worksheet, lineFrom As Long, lineTo As Long, indexKategorie As Long, sloupecIndexu As Long) 'Kostelnik 2018-11-27
    If lineFrom > lineTo Then
        findLastRowFilteredSubCategory = lineTo
        Exit Function
    End If

    Dim i As Long
    Dim k As Long
    
    For i = lineFrom To lineTo
        k = ws.Cells(i, sloupecIndexu).value
        If (k <> indexKategorie) Then
            findLastRowFilteredSubCategory = i - 1 'odectu jednicku, jinak bych ukazoval primo na radek s novou kategorii
            Exit Function
        End If
    Next i
    
    findLastRowFilteredSubCategory = lineTo

End Function

Function showArticleForm() 'Kostelnik 2018-11-27
    Call showArticleFormWithParam(-1) '-1 volani formu v rezimu zadavani noveho radku
End Function

Function showArticleFormWithParam(line As Integer) 'Kostelnik 2018-11-29
    On Error GoTo ErrHandler
    If g_protected_mode Then
        Exit Function
    End If
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    Dim sk As String
    
    If line = -1 Then 'formular zavolan jako klik na ikonku pro pridani noveho radku
        Dim prevLine As Long
        
        prevLine = findNextEmptyRowInSpecifikace(ws) - 1 'zjistim predchozi radek a znej nastavim vychozi skupinu
        If (prevLine < spec_input_start_line) Or (prevLine > getLastWorkingRow()) Then
            'sk = "F" 'toto bude vychozi skupina
            sk = getDefaultGroupBySelesprice 'Kostelnik 2019-03-06
        Else
            sk = ws.Cells(prevLine, 1).value
            sk = convertTextToSkupina(sk)
            If (sk = "") Or isNoteRow(prevLine, 1) Then
                sk = getDefaultGroupBySelesprice 'Kostelnik 2019-03-06
            End If
        End If
    Else 'formular zavolan dvojklikem konkretniho radku
        sk = convertTextToSkupina(ws.Cells(line, 1).value)
        If sk = "" Then
            sk = getDefaultGroupBySelesprice 'Kostelnik 2019-03-06
        End If
    End If
    
    Call findArticlesAndCreateMenu("")
    
    Application.ScreenUpdating = False
     
    Dim ac As ArticleChooser
    Set ac = New ArticleChooser
    
    Dim retFlag As Integer
    retFlag = setSourceDataIntoArticleForm_Skupiny(tmpMenuCategory, ac, sk)
    If retFlag = -1 Then 'nejaka chyba
        GoTo konec
    End If
                          
    'articleChooser_selectedLine = -1
    Erase listSelectedArticlesFromListBox
    
    If line = -1 Then
        ac.listBox_polozky.MultiSelect = fmMultiSelectExtended
    Else
        ac.listBox_polozky.MultiSelect = fmMultiSelectSingle
    End If
    
    ac.show
    Unload ac
    Set ac = Nothing
        
    'If articleChooser_selectedLine > 1 Then 'ignoruje nevybrany zaznam, nebo zahlavi
    If listSelectedArticlesFromListBox(LBound(listSelectedArticlesFromListBox)) > 0 Then
        Call insertArticle(tmpMenuCategory, listSelectedArticlesFromListBox, line) 'zapis noveho vybraneho zakaznika, nebo modifikace stavajiciho radku
    End If

konec:
    
    Set ws = Nothing
    
    Application.DisplayAlerts = True
    'Application.ScreenUpdating = True
    Exit Function

ErrHandler:
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    MsgBox Err.Description

End Function
Function findArticlesAndCreateMenu(search_txt As String) 'Kostelnik 2018-11-28
    Application.ScreenUpdating = False
    
    Dim retFlag As Integer
    
    retFlag = vyhledejArtikly(search_txt, tmpMenuCategory) 'retFlag: 1 - neni potreba generovat menu
    If retFlag <> 1 Then
        Call createFilteredMenuItems(tmpMenuCategory)
    End If
    
    'Application.ScreenUpdating = True
End Function

Function setSourceDataIntoArticleForm_Skupiny(sheetName As String, ByRef ac As ArticleChooser, defaultSkupina As String) As Integer 'Kostelnik 2018-11-19
    setSourceDataIntoArticleForm_Skupiny = 0
    On Error GoTo ErrHandler
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(sheetName)
    
    Dim lastLine As Long
    lastLine = ws.Range("AO" & Rows.count).End(xlUp).Row 'posledni radek kategorii
     
    ac.ComboBox1.RowSource = sheetName & "!AO1:AO" & lastLine 'kategorie
    
    ac.label_pocet_skupin = lastLine 'zobrazim pocet skupin
    ac.SpinButton1.Min = 0
    ac.SpinButton1.Max = lastLine - 1 'cislovani od 0
    
    If lastLine = 1 Then 'pokud je jeden radek, muze byt prazdny
        If ws.Range("AO" & lastLine).value = "" Then
            ac.label_pocet_skupin = "0" 'zobrazim pocet skupin
            ac.SpinButton1.Min = 0
            ac.SpinButton1.Max = 0
        End If
    End If
    
    If defaultSkupina <> "" Then 'pozadavek na nastaveni comboboxu na vychozi skupinu
        Dim startLine As Long
        startLine = 1
        
        Dim i As Long
        For i = startLine To lastLine
            If (ws.Cells(i, 40).value = defaultSkupina) Then '40 = sloupec AN
                ac.ComboBox1.ListIndex = i - 1 '-1 prtoze je cislovani od nuly
                ac.SpinButton1.value = ac.ComboBox1.ListIndex
                GoTo konec
            End If
        Next i
    End If
    
konec:
        
    Set ws = Nothing
    Exit Function
     
ErrHandler:
    setSourceDataIntoArticleForm_Skupiny = -1
    Application.DisplayAlerts = True
    MsgBox Err.Description
End Function

Function setSourceDataIntoArticleForm_SubKategorie(sheetName As String, indexComboBox As Integer, ByRef ac As ArticleChooser)  'Kostelnik 2018-11-19
 On Error GoTo ErrHandler
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(sheetName)
          
    Dim rangeValue As String
    rangeValue = ws.Range("AP" & indexComboBox).value
    
    If rangeValue <> "" Then
        ac.ListBox2.RowSource = sheetName & "!" & rangeValue
    End If
    
    Set ws = Nothing
    Exit Function
     
ErrHandler:
    Application.DisplayAlerts = True
    MsgBox Err.Description
End Function

Function setSourceDataIntoArticleForm_Articles(sheetName As String, indexComboBox As Integer, indexSubKategorie As Integer, ByRef ac As ArticleChooser)  'Kostelnik 2018-11-21
 On Error GoTo ErrHandler
 Application.ScreenUpdating = False
 
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(sheetName)
    
    Dim rangeValueComboBox As String
    rangeValueComboBox = ws.Range("AP" & indexComboBox).value
    
    If rangeValueComboBox <> "" Then
    
        Dim startLineOfSubCategory As Long
        startLineOfSubCategory = Range(rangeValueComboBox).Row 'prvni radek
        
        Dim finalLine As Long
        finalLine = startLineOfSubCategory + indexSubKategorie - 1
        
        Dim articleRange As String
        articleRange = ws.Range("AK" & finalLine).value
        
        If articleRange = "" Then
            ac.listBox_polozky.RowSource = vbNullString
        Else
        
            ws.Range("AS:BA").ClearContents
            'musim zkopirovat oblast vybranych artiklu do samostatne oblasti, kde bude na prvnim radku zahlavi
                         
            'zkopiruji zahlavi
            ws.Range("AA1:AE1").copy
            ws.Range("AV1").PasteSpecial xlPasteValues
            
            'rozsirim oblast o jeden sloupec doprava, abych zkopiroval i popis artiklu
            Dim r As Range
            Set r = ws.Range(articleRange)
            Set r = r.offset(, -2)
            Set r = r.Resize(, r.Columns.count + 4) '+2 aby se zkopiroval popis artiklu a puvodni cislo radku ve zdroji
            
            'zkoupiruji oblast artiklu pro vybranou soubkategorii
            'ws.Range(articleRange).copy
            r.copy
            ws.Range("AT2").PasteSpecial xlPasteValues
            
            Dim lastLine As Long
            lastLine = ws.Range("AT" & Rows.count).End(xlUp).Row
            
            ac.listBox_polozky.RowSource = sheetName & "!" & "AV2:AY" & lastLine
        End If
    Else
        ac.listBox_polozky.RowSource = vbNullString
    End If
    
    Application.CutCopyMode = False
    
    Set ws = Nothing
    Exit Function
     
ErrHandler:
    Application.DisplayAlerts = True
    MsgBox Err.Description
End Function

Function insertArticle(tmpMenuCategory As String, listSelectedLines() As Long, modifyLinePosition As Integer) 'Kostelnik 2018-11-28, 2019-02-08
    On Error GoTo ErrHandler
    Dim ws As Worksheet
    Dim ws_specifikace As Worksheet
    Dim ws_zdroj As Worksheet
           
    Dim zdrojAktivni As String
    zdrojAktivni = getActivePricelistSheetSourceName 'Kostelnik 2019-03-06
    
    Set ws = ThisWorkbook.Worksheets(tmpMenuCategory)
    Set ws_specifikace = ThisWorkbook.Worksheets("Specifikace")
    Set ws_zdroj = ThisWorkbook.Worksheets(zdrojAktivni)
    
    Dim collectionArticles As Collection
    Set collectionArticles = getListOfArticles(ws, ws_zdroj, listSelectedLines)
       
    'article properties
    Dim iap As InsertArticleProperties
    Set iap = New InsertArticleProperties
    iap.initClass

    Dim startLine As Integer
    startLine = spec_input_start_line '13 - od tohoto radku se zadavaji artikly
    
    Dim endLine As Integer
    Dim currentLine As Long
        
    Dim clArticle As article
    
    Call unprotectSpecifikace
   
    Dim isIzolantArticle As Boolean
    
    Dim i As Integer
    For i = 1 To collectionArticles.count
        Set clArticle = collectionArticles.Item(i)
        
        isIzolantArticle = iap.isArcticleIzolant(clArticle.articleNo, clArticle.pg) 'stejna funkce je i u sablon
        
        endLine = getLastWorkingRow()  '34
        currentLine = findNextEmptyRowInSpecifikace(ws_specifikace)
        
        If modifyLinePosition <> -1 Then 'formular vyvolan dvojklikem nad existujicim radkem, takze bude modifikace stavajiciho
            currentLine = modifyLinePosition
        End If
                
        If currentLine < startLine Then
            MsgBox "Prostor pro z|fffd|pis nov|fffd|ho |fffd||fffd|dku zapln|fffd|n.", vbExclamation
            GoTo konec
        End If
        
        If currentLine > endLine Then 'pokud u|fffd| nen|fffd| voln|fffd| |fffd||fffd|dek, tak automaticky p|fffd|id|fffd|
            Call insertBlankRows(1, protecting:=False)
            endLine = getLastWorkingRow()
        End If
    
        Application.EnableEvents = False 'musim deaktivovat udalost, nebo se zacykluje - ve sloupci U se v udalosti zaokrouhluje hodnota, pokud jde o VF
        
        Call refreshSpecificationFormulas(currentLine, currentLine, True, False, False)
                              
        ws_specifikace.Cells(currentLine, 1) = clArticle.skupina
        ws_specifikace.Cells(currentLine, 2) = clArticle.articleNo
        ws_specifikace.Cells(currentLine, 3) = clArticle.pg
        ws_specifikace.Cells(currentLine, 4) = clArticle.key
                
        Call nastaveniSlevNaRadku(iap, ws_specifikace, currentLine, clArticle.sleva, isIzolantArticle)
                                    
        Call lockCells(ws_specifikace, currentLine, iap.modeType, iap.priceListType, isIzolantArticle)
        Call setArticleNameValidation(ws_specifikace, clArticle.articleNo, currentLine, False)
                
        Application.EnableEvents = True
        Set clArticle = Nothing
    Next i
            
konec:
    iap.cleanClass
    Set iap = Nothing
    Call protectSpecifikace
    Set collectionArticles = Nothing
    Set ws = Nothing
    Set ws_specifikace = Nothing
    Set ws_zdroj = Nothing
    Exit Function
    
ErrHandler:
    Call protectSpecifikace
    MsgBox Err.Description
End Function

Function nastaveniSlevNaRadku(ByRef iap As InsertArticleProperties, ByRef ws_specifikace As Worksheet, currentLine As Long, ByVal rabatArticlu As Double, ByVal isIzolantArticle As Boolean) 'Kostelnik 2019-05-13
    've sloupci U se v udalosti zaokrouhluje hodnota, pokud jde o VF
    'pokud jsem v rezimu VF a vkladam izolant, muzu editovat jednotkovou cenu bez rabatu, pokud ale tento radek upravim a uz tam nebude izolant, opet musi byt bunka uzamcena, Kostelnik 2019-03-25
    'pro RD, variantu 3 take zjistuji zda jde o izolant, kvuli (ne)odecitani hodnoty "cena pro investora" od rabatu
    'stejna funkce je i u sablon
    
    If (iap.modeType = 1) Then 'VF
        ws_specifikace.Cells(currentLine, 21) = rabatArticlu 'Kostelnik 2019-02-15
    ElseIf (iap.modeType = 2) Then 'RD
        If (iap.priceListType = 3) And (iap.variantaKalkulace = 3) Then
            If isIzolantArticle Then
                ws_specifikace.Cells(currentLine, 21) = 0
            Else
                ws_specifikace.Cells(currentLine, 21) = rabatArticlu - iap.cenaProInvestora 'Kostelnik 2019-04-01, pokud je rezim RD, MF cenik, varianta 3, tak se snizuje sleva o "cena pro investora [%]"
                'Kostelnik 2019-04-30, oprava, nektere polozky maji mensi puvodni rabat v ceniku nez je  v poli "cena pro investora" a proto dochazi k zapornemu rabatu, napr. 08221-018 3M Scotch 244 Super Malerabdeckband_1ks ma nulvy rabat a tak se dostane do minusu
                'zadani je, ze se ma odecist hodnota cena pro investora maximalne do nuly vice ne, aby nebylo zaporne cislo
                If ws_specifikace.Cells(currentLine, 21) < 0 Then
                    ws_specifikace.Cells(currentLine, 21) = 0
                End If
            End If
        Else 'varianta 1, 2
            ws_specifikace.Cells(currentLine, 21) = rabatArticlu
        End If
    Else 'nemelo by nastat
        MsgBox "Pro tento typ specifikace neni definovana funkce pro zpusob vlozeni slevy.", vbExclamation
        ws_specifikace.Cells(currentLine, 21) = rabatArticlu 'Kostelnik 2019-02-15
    End If
End Function

Function getListOfArticles(ws As Worksheet, ws_zdroj As Worksheet, listSelectedLines() As Long) As Collection
    Set getListOfArticles = New Collection
    
    Dim clArticle As article
    
    Dim i As Integer
    Dim entryValue As Long
    Dim line_zdroj As Long
    
    For i = LBound(listSelectedLines) To UBound(listSelectedLines)
        entryValue = listSelectedLines(i)
        If entryValue = 0 Then 'jsem na konci seznamu vybranych polozek
            Exit For
        End If

        line_zdroj = ws.Cells(entryValue, 53).value
        
        Set clArticle = New article
        
        clArticle.skupina = ws.Cells(entryValue, 46).value
        clArticle.key = ws_zdroj.Cells(line_zdroj, 1).value
        clArticle.articleNo = ws_zdroj.Cells(line_zdroj, 3).value
        clArticle.pg = ws_zdroj.Cells(line_zdroj, 4).value
        clArticle.mj = ws_zdroj.Cells(line_zdroj, 8).value
        
        'Kostelnik 2019-02-15------------------------START
        If IsError(ws_zdroj.Cells(line_zdroj, 15).value) Then
            clArticle.sleva = 0
        Else
            clArticle.sleva = ws_zdroj.Cells(line_zdroj, 15).value
        End If
        'Kostelnik 2019-02-15------------------------KONEC
        
        clArticle.skupina = convertSkupinaToText(clArticle.skupina)
        If clArticle.skupina = "" Then
            'GoTo konec
            MsgBox "Chyba p|fffd|i zpracov|fffd|n|fffd| artiklu " & clArticle.articleNo & " " & clArticle.key & ". Chyba p|fffd|i zpracov|fffd|n|fffd| skupiny."
        End If
        
        getListOfArticles.Add clArticle, "" & i
    Next

End Function

Function getBlockPricesRangeFromNames(blockName As String, zdroj As String) As Long() 'Kostelnik 2019-03-25
    Dim block_range(1 To 2) As Long
    
    Dim nm As name
    Dim strTMP As String
    
    Dim i As Integer
    Dim r_first As Long
    Dim r_last As Long
    
    For Each nm In ThisWorkbook.Names
        If (nm.name = blockName) Then
            strTMP = " " & nm.RefersTo
            strTMP = Right(strTMP, Len(strTMP) - 2) 'odstranim prvni dva znaky, mezeru a rovnitko
            
            If InStr(1, strTMP, zdroj & "!") > 0 Then 'pouze odkazy do listu zdroj
                If InStr(1, strTMP, "#REF!", vbTextCompare) = 0 Then 'test na validni odkaz, jinak to neumim
                    r_first = Range(strTMP).Row
                    
                    i = InStr(1, strTMP, ":")
                    r_last = Range(Mid(strTMP, i + 1)).Row
                                                                                           
                End If
            End If
        End If
    Next nm
    
    Set nm = Nothing
    
    block_range(1) = r_first
    block_range(2) = r_last
    getBlockPricesRangeFromNames = block_range
End Function

Function isArticleInBlockPrices(articleNo As String, pg As String, ByRef ws_zdroj As Worksheet, block_range_start As Long, block_range_end As Long) As Boolean 'Kostelnik 2019-03-25
    Dim articleNo_ As String
    Dim pg_ As String
    
    Dim i As Long
    For i = block_range_start To block_range_end
        articleNo_ = ws_zdroj.Cells(i, 3).value
        
        If articleNo = articleNo_ Then
            pg_ = ws_zdroj.Cells(i, 4).value
            
            If pg = pg_ Then
                isArticleInBlockPrices = True
                Exit Function
            End If
        End If
    Next i
    
    isArticleInBlockPrices = False
End Function

Function updateRowsDiscount() 'Kostelnik 2019-05-13
    On Error GoTo ErrHandler

    Dim ws_specifikace As Worksheet
    Set ws_specifikace = ThisWorkbook.Worksheets("Specifikace")
    
    Dim iap As InsertArticleProperties
    Set iap = New InsertArticleProperties
    iap.initClass
    
    Dim startLine As Integer
    startLine = spec_input_start_line '13 - od tohoto radku se zadavaji artikly
    
    Dim endLine As Integer
    endLine = getLastWorkingRow()
    
    Dim articleNo As String
    Dim pg As String
    Dim cenikovaSleva As Double
    
    Dim isIzolantArticle As Boolean
    
    Call unprotectSpecifikace
    
    Dim i As Long
    For i = startLine To endLine
        articleNo = ws_specifikace.Cells(i, 2).value
        If articleNo <> "" Then
            pg = ws_specifikace.Cells(i, 3).value
            cenikovaSleva = getOriginalDiscountFromSalesPrice(articleNo, pg)
            
            isIzolantArticle = iap.isArcticleIzolant(articleNo, pg) 'stejna funkce je i u sablon
            
            Call nastaveniSlevNaRadku(iap, ws_specifikace, i, cenikovaSleva, isIzolantArticle)
        End If
    Next i
    
    Call protectSpecifikace
    
    iap.cleanClass
    Set iap = Nothing
    
    Set ws_specifikace = Nothing
    
    Exit Function
    
ErrHandler:
    Dim strErr As String
    strErr = Err.Description
    Call protectSpecifikace
    MsgBox strErr, vbExclamation
End Function

Function getOriginalDiscountFromSalesPrice(article As String, pg As String) As Double 'Kostelnik 2019-05-13
    Dim zdrojAktivni As String
    zdrojAktivni = getActivePricelistSheetSourceName 'Kostelnik 2019-03-06
    
    Dim ws_zdroj As Worksheet
    Set ws_zdroj = ThisWorkbook.Worksheets(zdrojAktivni)
    
    Dim lastLine As Long
    lastLine = ws_zdroj.Range("A" & Rows.count).End(xlUp).Row
    
    Dim sleva As Double
    
    Dim line As Long
    For line = 1 To lastLine
        If (article = ws_zdroj.Cells(line, 3).value) And (pg = ws_zdroj.Cells(line, 4).value) Then
            'popis = ws_zdroj.Cells(line, 1).value
            'mj = ws_zdroj.Cells(line, 8).value
            
            'Kostelnik 2019-02-15------------------------START
            If IsError(ws_zdroj.Cells(line, 15).value) Then
                sleva = 0
            Else
                sleva = ws_zdroj.Cells(line, 15).value
            End If
            'Kostelnik 2019-02-15------------------------KONEC
            
            Exit For
        End If
    Next line
    
    getOriginalDiscountFromSalesPrice = sleva
    
    Set ws_zdroj = Nothing
End Function

Function testBlockRange()
    Dim aa() As Long
    aa = getBlockPricesRangeFromNames("IZO", "zdroj")
    Debug.Print aa(1) & "  " & aa(2)
End Function

Function testGenerateMenuCategory()
    Call generateAllMenuCategory
End Function

Function testVyhl()
    Application.ScreenUpdating = False
    Call vyhledejArtikly("", tmpMenuCategory)
    Call createFilteredMenuItems(tmpMenuCategory)
    Application.ScreenUpdating = True
End Function

Function testAddColumnToRange()
    Dim ws As Worksheet
    
    Set ws = ThisWorkbook.Worksheets("tmpMenuCategory")
    
    Dim r As Range
    
    Set r = ws.Range("AT1:AW2")
    Set r = r.Resize(, r.Columns.count + 1)
    r.Select
            
    Set ws = Nothing
End Function

Function testAP()
    Dim iap As InsertArticleProperties
    Set iap = New InsertArticleProperties
    iap.initClass
    iap.cleanClass
    Set iap = Nothing
End Function

Function testWriteFormulas()
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("List2")
    
    Dim wspec As Worksheet
    Set wspec = ThisWorkbook.Worksheets("Specifikace")
    
    Dim line As Long
    line = 13
    
    Dim i As Long
    
    ws.Range("A:AZ").ClearContents
    
    For i = 1 To 26
        If wspec.Cells(line, i).HasFormula Then
            ws.Cells(1, i).value = "'" & wspec.Cells(line, i).FormulaR1C1
            ws.Cells(2, i).value = "'" & wspec.Cells(line, i).FormulaR1C1Local
            ws.Cells(3, i).value = "'" & wspec.Cells(line, i).FormulaLocal
        End If
    Next i
    
    Set ws = Nothing
    Set wspec = Nothing
    
    'InputBox "", "", ActiveCell.FormulaR1C1Local
    'InputBox "", "", ActiveCell.FormulaR1C1
End Function
Attribute VB_Name = "M03_pomocne_funkce"
'Module3 - pomocne funkce

Option Explicit

Function convertSkupinaToText(str As String) 'Kostelnik 2018-11-29
    Dim skupina As String
    
    Dim nalez As Boolean
    
    Select Case (str)
        'VF cenik
        Case "F": skupina = "Fas|fffd|da"
        Case "I": skupina = "Interi|fffd|ry"
        Case "A": skupina = "Akustika"
        Case "B": skupina = "Betony"
        Case "L": skupina = "Laky&Lazury"
        Case "P": skupina = "Podlahy"
        Case "N": skupina = "N|fffd||fffd|ad|fffd|"
        Case "FSTX": skupina = "Fas|fffd|daSTX"
        Case "ISTX": skupina = "Interi|fffd|rySTX"
        Case "IND": skupina = "Industry"
        Case "IZO": skupina = "Izolace"
        'MF cenik
        Case "MF_F": skupina = "Fas|fffd|da"
        Case "MF_I": skupina = "Interi|fffd|ry"
        Case "MF_A": skupina = "Akustika"
        Case "MF_B": skupina = "Betony"
        Case "MF_L": skupina = "Laky&Lazury"
        Case "MF_P": skupina = "Podlahy"
        Case "MF_N": skupina = "N|fffd||fffd|ad|fffd|"
        Case "MF_FSTX": skupina = "Fas|fffd|daSTX"
        Case "MF_ISTX": skupina = "Interi|fffd|rySTX"
        Case "MF_IND": skupina = "Industry"
        Case "MF_IZO": skupina = "Izolace"
        Case Else
            nalez = False
            
            'Kostelnik 2019-03-06, komplikace, protoze STX ceniky nema po importu oznacene polozky, kam patri do skupiny (names)
            If (Len(str) >= 3) Then
                If Left(str, 3) = "STX" Then
                    nalez = True
                    skupina = "STX" 'str
                End If
            End If
            
            If Not nalez Then
                skupina = ""
                MsgBox "Nezn|fffd|m|fffd| typ skupiny: " & skupina & ". Proces p|fffd|eru|fffd|en.", vbExclamation
            End If
    End Select
    
    convertSkupinaToText = skupina
End Function

Function convertTextToSkupina(ByVal str As String) 'Kostelnik 2018-11-29
    Dim sk As String
    
    sk = Left(str, 1)
       
    If str = "Fas|fffd|daSTX" Then 'Kostelnik 2018-07-23
        sk = "FSTX"
    ElseIf str = "Interi|fffd|rySTX" Then
        sk = "ISTX"
    ElseIf str = "Industry" Then
        sk = "IND"
    ElseIf str = "Izolace" Then
        sk = "IZO"
    Else
        'Kostelnik 2019-03-06, komplikace, protoze STX ceniky nema po importu oznacene polozky, kam patri do skupiny (names)
        If (Len(str) >= 3) Then
            If Left(str, 3) = "STX" Then
                sk = getActivePricelistName 'str
            End If
        End If
    End If
    
    'Kostelnik 2019-03-14
    Dim oblastPrefix As String
    oblastPrefix = ""
    
    If sk <> "" Then
        If "MF" = getActivePricelistName Then
            oblastPrefix = "MF_"
        End If
    End If
    
    convertTextToSkupina = oblastPrefix & sk
End Function

Function findNextEmptyRowInSpecifikace(ws_specifikace As Worksheet) As Long 'Kostlenik 2018-11-29
    findNextEmptyRowInSpecifikace = -1
    
    Dim i As Long

    For i = getLastWorkingRow() To spec_input_start_line Step -1
        If (ws_specifikace.Cells(i, 4).value <> "") Or isNoteRow(i, 1) Then
            findNextEmptyRowInSpecifikace = i + 1
            Exit Function
        End If
    Next
    
    If (ws_specifikace.Cells(spec_input_start_line, 4).value = "") And (Not isNoteRow(spec_input_start_line, 1)) Then
        findNextEmptyRowInSpecifikace = spec_input_start_line
    End If
    
End Function

Function getPocetPoSobeNasledujicichPrazdnychRadku(ws As Worksheet, i As Long) As Long 'Kostelnik 2019-02-18
    getPocetPoSobeNasledujicichPrazdnychRadku = 0

    Dim end_line As Long
    end_line = getLastWorkingRow()
    
    If i > end_line Then
        getPocetPoSobeNasledujicichPrazdnychRadku = 0
        Exit Function
    End If
    
    Dim p As Long
    p = 0
    Dim line As Long
    For line = i To end_line
        If isNoteRow(line, 1) Then 'Kostelnik 2019-04-12 uprava funkce, aby se vlozena poznamka (sloucene bunky) nepovazovali za prazdne
            Exit For
        End If
        
        If (ws.Cells(line, 4).value) = "" Then
            p = p + 1
        Else
            Exit For
        End If
    Next
    
    getPocetPoSobeNasledujicichPrazdnychRadku = p
End Function

Function refreshSpecificationFormulasAllRowsByOriginal() 'Kostelnik 2019-04-16, funkce se vola rucne tlacitkem, napr. po vlozeni radku z jine specifikace, aby nebyly propojeni na zdrojovy list
    'specifikace musi byt odemknuta
    Call refreshSpecificationFormulas(spec_input_start_line, getLastWorkingRow(), True, False, False)
End Function

Function refreshSpecificationFormulas(lineFrom As Long, lineTo As Long, Optional nastavit_vzorec_pro_vsechny As Boolean = False, Optional protecting As Boolean = True, Optional clearingRow As Boolean = False) 'Kostelnik-12-06
    Application.ScreenUpdating = False
        
    Dim wspec As Worksheet
    Set wspec = ThisWorkbook.Worksheets("Specifikace")
      
    If protecting Then
        Call unprotectSpecifikace
    End If
            
    Dim zdrojAktivni As String
    zdrojAktivni = getActivePricelistSheetSourceName 'Kostelnik 2019-03-06
    
    'rychlostni optimalizace pro blokovani bunek, Kostelnik 2019-03-25
    'article properties, Kostelnik 2019-04-15
    Dim iap As InsertArticleProperties
    Set iap = New InsertArticleProperties
    iap.initClass
        
    Dim j As Long
    For j = lineFrom To lineTo
        If Not isNoteRow(j, 1) Then 'Kostelnik 2019-04-16
            If nastavit_vzorec_pro_vsechny Or (wspec.Cells(j, 1).value <> "") Then 'rychlostni optimalizace
                'B
                '=KDY|fffd|(RC[2]="";"";SVYHLEDAT(RC[2];zdroj!C1:C19;3;0))
                '=KDY|fffd|(D13="";"";SVYHLEDAT(D13;zdroj!$A:$S;3;0))
                'Kostelnik 2019-02-07, deaktivovano----------START
                'wspec.Cells(j, 2).FormulaR1C1 = "=IF(RC[2]="""","""",VLOOKUP(RC[2],zdroj!C1:C19,3,0))"
                'Kostelnik 2019-02-07----------KONEC
                   
                'C
                '=KDY|fffd|(ZLEVA(RC[-2];1)="P";SVYHLEDAT(RC[1];zdroj!C1:C19;4;0);"")
                '=KDY|fffd|(ZLEVA(A13;1)="P";SVYHLEDAT(D13;zdroj!$A:$S;4;0);"")
                'Kostelnik 2019-02-07, deaktivovano----------START
                'wspec.Cells(j, 3).FormulaR1C1 = "=IF(LEFT(RC[-2],1)=""P"",VLOOKUP(RC[1],zdroj!C1:C19,4,0),"""")"
                'Kostelnik 2019-02-07----------KONEC
                
                'I
                '=KDY|fffd|(CONCATENATE(RC[-7];RC[-6])="";"---------";KDY|fffd|(RC[-6]="";SVYHLEDAT(RC[-7];zdroj!C3:C10;8;0);SVYHLEDAT(CONCATENATE(RC[-7];RC[-6]);zdroj!C2:C10;9;0)))
                '=KDY|fffd|(CONCATENATE(B13;C13)="";"---------";KDY|fffd|(C13="";SVYHLEDAT(B13;zdroj!$C:$J;8;0);SVYHLEDAT(CONCATENATE(B13;C13);zdroj!$B:$J;9;0)))
                wspec.Cells(j, 9).FormulaR1C1 = "=IF(CONCATENATE(RC[-7],RC[-6])="""",""---------"",IF(RC[-6]="""",VLOOKUP(RC[-7]," & zdrojAktivni & "!C3:C10,8,0),VLOOKUP(CONCATENATE(RC[-7],RC[-6])," & zdrojAktivni & "!C2:C10,9,0)))"
                
                'K
                '=RC[-3]*RC[-1]
                '=H13*J13
                wspec.Cells(j, 11).FormulaR1C1 = "=RC[-3]*RC[-1]"
                
                'L
                '=KDY|fffd|(CONCATENATE(RC[-10];RC[-9])="";"---------";KDY|fffd|(RC[-9]="";SVYHLEDAT(RC[-10];zdroj!C3:C8;5;0);SVYHLEDAT(CONCATENATE(RC[-10];RC[-9]);zdroj!C2:C8;6;0)))
                '=KDY|fffd|(CONCATENATE(B13;C13)="";"---------";KDY|fffd|(C13="";SVYHLEDAT(B13;zdroj!$C:$H;5;0);SVYHLEDAT(CONCATENATE(B13;C13);zdroj!$B:$H;6;0)))
                wspec.Cells(j, 12).FormulaR1C1 = "=IF(CONCATENATE(RC[-10],RC[-9])="""",""---------"",IF(RC[-9]="""",VLOOKUP(RC[-10]," & zdrojAktivni & "!C3:C8,5,0),VLOOKUP(CONCATENATE(RC[-10],RC[-9])," & zdrojAktivni & "!C2:C8,6,0)))"
                
                'M
                '=KDY|fffd|(CONCATENATE(RC[-11];RC[-10])="";"---------";KDY|fffd|(RC[-10]="";SVYHLEDAT(RC[-11];zdroj!C3:C8;6;0);SVYHLEDAT(CONCATENATE(RC[-11];RC[-10]);zdroj!C2:C8;7;0)))
                '=KDY|fffd|(CONCATENATE(B13;C13)="";"---------";KDY|fffd|(C13="";SVYHLEDAT(B13;zdroj!$C:$H;6;0);SVYHLEDAT(CONCATENATE(B13;C13);zdroj!$B:$H;7;0)))
                wspec.Cells(j, 13).FormulaR1C1 = "=IF(CONCATENATE(RC[-11],RC[-10])="""",""---------"",IF(RC[-10]="""",VLOOKUP(RC[-11]," & zdrojAktivni & "!C3:C8,6,0),VLOOKUP(CONCATENATE(RC[-11],RC[-10])," & zdrojAktivni & "!C2:C8,7,0)))"
                
                'N
                '=KDY|fffd|(JE.CHYBHODN(RC[-3]/RC[-2]);"---";RC[-3]/RC[-2])
                '=KDY|fffd|(JE.CHYBHODN(K13/L13);"---";K13/L13)
                wspec.Cells(j, 14).FormulaR1C1 = "=IF(ISERROR(RC[-3]/RC[-2]),""---"",RC[-3]/RC[-2])"
                
                'O
                '=KDY|fffd|(JE.CHYBHODN(RC[-3]*RC[-1]);"---";RC[-3]*RC[-1])
                '=KDY|fffd|(JE.CHYBHODN(L13*N13);"---";L13*N13)
                wspec.Cells(j, 15).FormulaR1C1 = "=IF(ISERROR(RC[-3]*RC[-1]),""---"",RC[-3]*RC[-1])"
                
                'P
                '=+RC[-3]
                '=+M13
                wspec.Cells(j, 16).FormulaR1C1 = "=+RC[-3]"
                
                'Q
                '=KDY|fffd|(CONCATENATE(RC[-15];RC[-14])="";"---------";KDY|fffd|(RC[-14]="";SVYHLEDAT(RC[-15];zdroj!C3:C21;11;0);SVYHLEDAT(CONCATENATE(RC[-15];RC[-14]);zdroj!C2:C21;12;0)))
                '=KDY|fffd|(CONCATENATE(B13;C13)="";"---------";KDY|fffd|(C13="";SVYHLEDAT(B13;zdroj!$C:$U;11;0);SVYHLEDAT(CONCATENATE(B13;C13);zdroj!$B:$U;12;0)))
                wspec.Cells(j, 17).FormulaR1C1 = "=IF(CONCATENATE(RC[-15],RC[-14])="""",""---------"",IF(RC[-14]="""",VLOOKUP(RC[-15]," & zdrojAktivni & "!C3:C21,11,0),VLOOKUP(CONCATENATE(RC[-15],RC[-14])," & zdrojAktivni & "!C2:C21,12,0)))"
                
                'R
                '=KDY|fffd|(CONCATENATE(RC[-16];RC[-15])="";"";KDY|fffd|(RC[-15]="";SVYHLEDAT(RC[-16];zdroj!C3:C14;12;0);SVYHLEDAT(CONCATENATE(RC[-16];RC[-15]);zdroj!C2:C14;13;0)))
                '=KDY|fffd|(CONCATENATE(B13;C13)="";"";KDY|fffd|(C13="";SVYHLEDAT(B13;zdroj!$C:$N;12;0);SVYHLEDAT(CONCATENATE(B13;C13);zdroj!$B:$N;13;0)))
                wspec.Cells(j, 18).FormulaR1C1 = "=IF(CONCATENATE(RC[-16],RC[-15])="""","""",IF(RC[-15]="""",VLOOKUP(RC[-16]," & zdrojAktivni & "!C3:C14,12,0),VLOOKUP(CONCATENATE(RC[-16],RC[-15])," & zdrojAktivni & "!C2:C14,13,0)))"
                
                'T
                '=KDY|fffd|(NEBO(CONCATENATE(RC[-18];RC[-17])="";RC[-1]=0);"";"/"&HODNOTA.NA.TEXT(RC[-7];"0,00")&"")
                '=KDY|fffd|(NEBO(CONCATENATE(B13;C13)="";S13=0);"";"/"&HODNOTA.NA.TEXT(M13;"0,00")&"")
                wspec.Cells(j, 20).FormulaR1C1 = "=IF(OR(CONCATENATE(RC[-18],RC[-17])="""",RC[-1]=0),"""",""/""&TEXT(RC[-7],""0,00"")&"""")"
                
                'V
                '=KDY|fffd|(JE.CHYBHODN((RC[-5]-(RC[-5]*RC[-1]))+RC[-3]);"---------";((RC[-5]-(RC[-5]*RC[-1]))+RC[-3]))
                '=KDY|fffd|(JE.CHYBHODN((Q13-(Q13*U13))+S13);"---------";((Q13-(Q13*U13))+S13))
                wspec.Cells(j, 22).FormulaR1C1 = "=IF(ISERROR((RC[-5]-(RC[-5]*RC[-1]))+RC[-3]),""---------"",((RC[-5]-(RC[-5]*RC[-1]))+RC[-3]))"
                
                'W
                '=KDY|fffd|(JE.CHYBHODN(RC[-1]*RC[-8]);"---------";RC[-1]*RC[-8])
                '=KDY|fffd|(JE.CHYBHODN(V13*O13);"---------";V13*O13)
                wspec.Cells(j, 23).FormulaR1C1 = "=IF(ISERROR(RC[-1]*RC[-8]),""---------"",RC[-1]*RC[-8])"
                
                'X
                'Kostlnik 2019-02-05: puvodni
                
                '=KDY|fffd|(RC[-2]="---------";"";KDY|fffd|(RC[-2]<KDY|fffd|(RC[-21]="";SVYHLEDAT(RC[-22];zdroj!C3:C20;16;0);SVYHLEDAT(CONCATENATE(RC[-22];RC[-21]);zdroj!C2:C20;17;0));"X";""))
                '=KDY|fffd|(V13="---------";"";KDY|fffd|(V13<KDY|fffd|(C13="";SVYHLEDAT(B13;zdroj!$C:$T;16;0);SVYHLEDAT(CONCATENATE(B13;C13);zdroj!$B:$T;17;0));"X";""))
                'wspec.Cells(j, 24).FormulaR1C1 = "=IF(RC[-2]=""---------"","""",IF(RC[-2]<IF(RC[-21]="""",VLOOKUP(RC[-22],zdroj!C3:C20,16,0),VLOOKUP(CONCATENATE(RC[-22],RC[-21]),zdroj!C2:C20,17,0)),""X"",""""))"
                
                'Kostlnik 2019-02-05 oprava vzorcu, sleva puvodne tahala cenu po rabatu ze sloupce R (TL), ale spravne ma z P,
                'a oprava druhe chyby, kdy se ma spravne vyhodnocovat sleva za jednotkovou cenu, bez priplatku
                
                '=KDY|fffd|(RC[-2]="---------";"";KDY|fffd|((RC[-7]-(RC[-7]*RC[-3]))<KDY|fffd|(RC[-21]="";SVYHLEDAT(RC[-22];zdroj!C3:C20;14;0);SVYHLEDAT(CONCATENATE(RC[-22];RC[-21]);zdroj!C2:C20;15;0));"X";""))
                '=KDY|fffd|(V13="---------";"";KDY|fffd|((Q13-(Q13*U13))<KDY|fffd|(C13="";SVYHLEDAT(B13;zdroj!$C:$T;14;0);SVYHLEDAT(CONCATENATE(B13;C13);zdroj!$B:$T;15;0));"X";""))
                
                'Kostelnik, vzorec platny do 2019-04-29:
                'wspec.Cells(j, 24).FormulaR1C1 = "=IF(RC[-2]=""---------"","""",IF((RC[-7]-(RC[-7]*RC[-3]))<IF(RC[-21]="""",VLOOKUP(RC[-22]," & zdrojAktivni & "!C3:C20,14,0),VLOOKUP(CONCATENATE(RC[-22],RC[-21])," & zdrojAktivni & "!C2:C20,15,0)),""X"",""""))"
                
                'Kostelnik 2019-04-29 upraven vzorec, u STX ceniku byl problem s presnosti 89,7999999999 < 87,8, protoze rabat byl vypocten jako nekonecne desetinne cislo, proto stanovena povolena odchylka 0,00001
                'wspec.Cells(j, 24).FormulaR1C1 = "=IF(RC[-2]=""---------"","""",IF((RC[-7]-(RC[-7]*RC[-3]))<IF(RC[-21]="""",VLOOKUP(RC[-22]," & zdrojAktivni & "!C3:C20,14,0),VLOOKUP(CONCATENATE(RC[-22],RC[-21])," & zdrojAktivni & "!C2:C20,15,0)),""X"",""""))"
                wspec.Cells(j, 24).FormulaR1C1 = "=IF(RC[-2]=""---------"","""",IF(((RC[-7]-(RC[-7]*RC[-3]))-IF(RC[-21]="""",VLOOKUP(RC[-22]," & zdrojAktivni & "!C3:C20,14,0),VLOOKUP(CONCATENATE(RC[-22],RC[-21])," & zdrojAktivni & "!C2:C20,15,0)))<-0.00001,""X"",""""))"
                                
                'uzamknuti bunek
                Call lockCells(wspec, j, iap.modeType, iap.priceListType)
                
                'vymaz hodnot radku
                If clearingRow Then
                    Call clearRow(wspec, j)
                End If
            End If
        End If
    Next j
    
    iap.cleanClass
    Set iap = Nothing
    
    'nastavim vzorec sumy za celkovou specifikaci - tento vzorec je nutne aktualizovat pri vkladani radku
    wspec.Range("field_celkem").Formula = "=SUM(W" & spec_input_start_line & ":W" & getLastWorkingRow() & ")"
    
    Call updateSubTotalFormulas(False) 'aktualizace vzorcu mezisouctu
    
    If isDBmode Then
        Call aktualizaceVzorcuDBmodeSouctovyRadek(wspec)
        Call aktualizaceVzrocuDBmodeRadky(wspec, lineFrom, lineTo)
    End If
    
    If protecting Then
        Call protectSpecifikace
    End If
   
    Set wspec = Nothing
End Function

Function lockCells(ByRef ws As Worksheet, line As Long, modeType As Integer, priceListType As Integer, Optional isIzolantArticle As Boolean = False, Optional isManualArticle As Boolean = False) 'Kostelnik 2019-03-25
    If isManualArticle Then 'Kostelnik 2019-04-15, rucne zadany artikl odemkne vsechny bunky na radku
        ws.Range("A" & line & ":Z" & line).Locked = False
        ws.Range("X" & line).Locked = True 've sloupci X bude priznak "R", ze se jedna o manualne vlozeny radek, proto tento sloupec bude uzamcen
        Exit Function
    End If
        
    ws.Range("X" & line).Locked = True
    
    If modeType = 1 Then 'VF
        'u VF se muzou u izolantu meni jednotkova cena, Kostelnik 2019-03-25
        ws.Range("Q" & line).Locked = Not isIzolantArticle
        
        ws.Range("V" & line).Locked = True
        ws.Range("W" & line).Locked = True
                
        'U Rabat
        If priceListType = 2 Then 'STX cenik
            ws.Range("U" & line).Locked = True
        Else
            ws.Range("U" & line).Locked = False
        End If
    ElseIf modeType = 2 Then 'RD
        ws.Range("Q" & line).Locked = False
        
        'Kostelnik 2019-03-27
        ws.Range("U" & line).Locked = True 'U Rabat - zrusene!!! //neplati: implementovano omezeni: nemuze nastavit vetsi hodnotu nez maximum dle ceniku
        ws.Range("V" & line).Locked = True
        ws.Range("W" & line).Locked = True
    Else
        MsgBox "Pro tento typ specifikace nen|fffd| implementov|fffd|na funkce ""lockCells""", vbExclamation
    End If
End Function

Function unlockAllCells(ByRef ws As Worksheet, line As Long) 'Kostelnik 2019-04-15

End Function

Function clearRow(ByRef ws As Worksheet, line As Long) 'Kostelnik 2019-03-25
     If (line >= spec_input_start_line) And (line <= getLastWorkingRow()) Then
            ws.Cells(line, 1).value = ""
            ws.Cells(line, 2).value = ""
            ws.Cells(line, 3).value = ""
            ws.Cells(line, 4).value = ""
            ws.Cells(line, 7).value = "" 'G
            ws.Cells(line, 8).value = "" 'H
            ws.Cells(line, 10).value = "" 'J
            ws.Cells(line, 19).value = "" 'S
            ws.Cells(line, 21).value = "" 'U
            ws.Cells(line, 25).value = "" 'Y
     End If
End Function

Function getOfficeUserName() As String 'Kostelnik 2019-01-21
    getOfficeUserName = Application.userName
End Function

Function existsSheet(wb As Workbook, sheetName As String) As Boolean 'Kostelnik 2019-03-05
    existsSheet = False
    
    Dim ws As Worksheet
    
    For Each ws In wb.Worksheets
        If sheetName = ws.name Then
            existsSheet = True
            Exit For
        End If
    Next ws
    
    Set ws = Nothing
End Function
Function deleteList(sheetName As String) 'Kostelnik 2018-11-13
    On Error GoTo ErrHandler

    If existsSheet(ThisWorkbook, sheetName) Then
        ThisWorkbook.Unprotect Password:="cube"
        Application.DisplayAlerts = False
        ThisWorkbook.Worksheets(sheetName).Delete
        Application.DisplayAlerts = True
        Call protectWorkBook
    End If
    
    Exit Function
    
ErrHandler:
    Call protectWorkBook
    Application.DisplayAlerts = True
    MsgBox Err.Description
End Function

Function protectSpecifikace()
    If g_is_sheet_specifikace_unlocked Then 'Kostelnik 2019-05-14
        Exit Function
    End If

    Call showHideSpecLockFormulasButtons(False)
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    If ws.ProtectContents Then
        Set ws = Nothing
        Exit Function
    End If
        
    ws.Protect Password:="cube", DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowFormattingCells:=True, AllowFormattingColumns:=True, _
        AllowFormattingRows:=True, AllowInsertingRows:=True, _
        AllowInsertingHyperlinks:=True, AllowDeletingRows:=True, AllowSorting:= _
        True, AllowFiltering:=True, AllowUsingPivotTables:=True
        
    Set ws = Nothing
End Function

Function unprotectSpecifikace()
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    If Not ws.ProtectContents Then
        Set ws = Nothing
        Exit Function
    End If
    
    ws.Unprotect Password:="cube"
    Set ws = Nothing
End Function

Function protectRD_StoSystemSheet()
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(rd_stosystem)
    
    If ws.ProtectContents Then
        Set ws = Nothing
        Exit Function
    End If
        
    ws.Protect Password:="cube", DrawingObjects:=True, Contents:=True, Scenarios:=True _
        , AllowFormattingCells:=True, AllowFormattingColumns:=True, _
        AllowFormattingRows:=True, AllowInsertingRows:=True, _
        AllowInsertingHyperlinks:=True, AllowDeletingRows:=True, AllowSorting:= _
        True, AllowFiltering:=True, AllowUsingPivotTables:=True
        
    Set ws = Nothing
End Function

Function unprotectRD_StoSystemSheet()
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(rd_stosystem)
    
    If Not ws.ProtectContents Then
        Set ws = Nothing
        Exit Function
    End If
    
    ws.Unprotect Password:="cube"
    Set ws = Nothing
End Function

Function protectWorkBook()
    With ThisWorkbook
        'If (.ProtectStructure = False) Or (.ProtectWindows = False) Then
        If (.ProtectStructure = False) Then
            ThisWorkbook.Protect Password:="cube", Structure:=True
        End If
    End With
End Function

Public Function EndsWith(str As String, ending As String) As Boolean
     Dim endingLen As Integer
     endingLen = Len(ending)
     EndsWith = (Right(Trim(UCase(str)), endingLen) = UCase(ending))
End Function

Public Function StartsWith(str As String, start As String) As Boolean
     Dim startLen As Integer
     startLen = Len(start)
     StartsWith = (Left(Trim(UCase(str)), startLen) = UCase(start))
End Function

Function zarovnaniNastaveniSpecTlacitekRadku() 'Kostelnik 2019-03-29
    On Error GoTo ErrHandler
    
    Application.ScreenUpdating = False
    
    Dim s1, s2, s3, s4, s5, sTxt, sSubTotal As Shape
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    Set s1 = getShapeObject(ws, "Obr|fffd|zek 11")
    s1.LockAspectRatio = False
    s1.height = 17.3826
    s1.Width = 33.62677
    s1.Top = ws.Range("stop_cell").Top
    s1.Left = 0.4538583

    Set s2 = getShapeObject(ws, "Obr|fffd|zek 9")
    s2.LockAspectRatio = False
    s2.height = s1.height
    s2.Width = s1.Width
    s2.Top = s1.Top
    s2.Left = 35.53496
    
    Set s3 = getShapeObject(ws, "Obr|fffd|zek 12")
    s3.LockAspectRatio = False
    s3.height = s1.height
    s3.Width = s1.Width
    s3.Top = s1.Top + 19
    s3.Left = s1.Left
    
    Set s4 = getShapeObject(ws, "Obr|fffd|zek 13")
    s4.LockAspectRatio = False
    s4.height = s1.height
    s4.Width = s1.Width
    s4.Top = s3.Top
    s4.Left = s2.Left
    
    Set s5 = getShapeObject(ws, "Zaoblen|fffd| obd|fffd|ln|fffd|k 17")
    s5.LockAspectRatio = False
    s5.height = s1.height
    s5.Width = s1.Width
    s5.Top = s3.Top
    s5.Left = s2.Left + 35
    
    Set sTxt = getShapeObject(ws, "Zaoblen|fffd| obd|fffd|ln|fffd|k 19")
    sTxt.LockAspectRatio = False
    sTxt.height = s1.height
    sTxt.Width = s1.Width
    sTxt.Top = s2.Top
    sTxt.Left = s2.Left + 35
    'sTxt.Visible = True
        
    Set sSubTotal = getShapeObject(ws, "Zaoblen|fffd| obd|fffd|ln|fffd|k 20")
    sSubTotal.LockAspectRatio = False
    sSubTotal.height = s1.height
    sSubTotal.Width = s1.Width
    sSubTotal.Top = s1.Top
    sSubTotal.Left = sTxt.Left + 36
    
    Set s1 = Nothing
    Set s2 = Nothing
    Set s3 = Nothing
    Set s4 = Nothing
    Set s5 = Nothing
    Set sTxt = Nothing
    Set sSubTotal = Nothing
    Set ws = Nothing
    
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    MsgBox Err.Description, vbExclamation
End Function

Function showHideButtonShchvalovaniNastavObr(status As Boolean) 'Kostelnik 2019-04-18
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    Dim s1 As Shape
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    Set s1 = getShapeObject(ws, "Zaoblen|fffd| obd|fffd|ln|fffd|k 25")
    s1.Visible = status
    
    Set s1 = Nothing
    Set ws = Nothing
    
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    MsgBox Err.Description, vbExclamation
End Function

Function setSubTotalFormula(ByRef ws As Worksheet, lineFrom As Long, lineTo As Long)  'Kostelnik 2019-04-15, mezisoucet
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    ws.Cells(lineTo + 1, 22).Formula = "=SUM(W" & lineFrom & ":W" & lineTo & ")"

    Exit Function
ErrHandler:
    Call protectSpecifikace
    Application.DisplayAlerts = True
    MsgBox Err.Description, vbExclamation
End Function

Function updateSubTotalFormulas(Optional protecting As Boolean = True) 'Kostelnik 2019-04-15, funkce najde vsechny mezisouctove radky a povede aktualizaci vzorcu, nutne pokud se napr. vlozil novy radek, tak aby se zapocetl do sumy
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    Dim ee_status As Boolean
    ee_status = Application.EnableEvents
    Application.EnableEvents = False
    
    If protecting Then
        Call unprotectSpecifikace
    End If
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
        
    Dim lastLine As Long
    lastLine = getLastWorkingRow
    
    Dim v As Variant
    
    'projedu vsechny radky a vyhledam mezisouctove radky
    Dim i As Long
    For i = spec_input_start_line To lastLine
        'Debug.Print i & "   " & isSubTotalRow(ws, i)
        
        If isSubTotalRow(ws, i) Then
            v = getRangeOfSubtotalRow(ws, i)
            Call setSubTotalFormula(ws, CLng(v(1)), CLng(v(2)))
        End If
    Next i
            
    Set ws = Nothing
    
    If protecting Then
        Call protectSpecifikace
    End If
    
    Application.EnableEvents = ee_status
    
    Exit Function
ErrHandler:
    Call protectSpecifikace
    Application.EnableEvents = True
    Application.DisplayAlerts = True
    MsgBox Err.Description, vbExclamation
End Function

Function isNoteRow(ByVal r As Long, ByVal c As Long) As Boolean 'Kostelnik 2019-04-11
    isNoteRow = False
    
    If (c = 1) Then
        With ActiveSheet.Cells(r, c)
            If .MergeCells Then
                If .MergeArea.Columns.count > 5 Then
                    isNoteRow = True
                    Exit Function
                End If
            End If
        End With
    End If
End Function

Function isSubTotalRow(ByRef ws As Worksheet, r As Long) As Boolean 'Kostelnik 2019-04-11
    isSubTotalRow = hasMergeredAndEqualCount(ws, r, 22, 2) 'subtotal zacina na 22. radku a ma dve sloucene bunky
End Function

Function getRangeOfSubtotalRow(ByRef ws As Worksheet, r As Long) As Variant 'Kostelnik 2019-04-15
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    Dim result(1 To 2) As Long
    getRangeOfSubtotalRow = result 'prozatim nulove hodnoty, pro pripad chyby
        
    Dim stop_line As Long
    stop_line = spec_input_start_line
    
    Dim i As Long
    For i = (r - 1) To spec_input_start_line Step -1 'od mezisouctu jedu nahoru dokud nenarazim na jiny mezisoucet, poznamku, nebo zacetek tubulky, tim zjistim zacatek oblasti pro mezisoucet
        If isSubTotalRow(ws, i) Then
            stop_line = i + 1 '+1 vynecham radek s poznamkou nebo mezisouctovy radek
            Exit For
        End If
        
        If isNoteRow(i, 1) Then
            stop_line = i + 1
            Exit For
        End If
    Next i
            
    result(1) = stop_line
    result(2) = r - 1
    getRangeOfSubtotalRow = result
    
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    MsgBox Err.Description, vbExclamation
End Function

Function hasMergeredAndEqualCount(ByRef ws As Worksheet, ByVal r As Long, ByVal c As Long, ByVal count As Integer) As Boolean 'Kostelnik 2019-04-11
    hasMergeredAndEqualCount = False
        
    With ws.Cells(r, c)
        If .MergeCells Then
            If .MergeArea.Columns.count = count Then
                hasMergeredAndEqualCount = True
                Exit Function
            End If
        End If
    End With
End Function

Function setArticleNameValidation(ByRef ws As Worksheet, articleNo As String, line As Long, protecting As Boolean) 'Kostelnik 2019-04-15
    If protecting Then
        Call unprotectSpecifikace
    End If
        
    'If articleNo <> "" Then
        With ws.Range("D" & line & ":F" & line).Validation
             .Delete
             .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:=xlBetween, Formula1:=ws.Cells(line, 4).value
             .IgnoreBlank = True
             '.InCellDropdown = True
             .InCellDropdown = False
             .InputTitle = ""
             .ErrorTitle = "Chyba!"
             .InputMessage = ""
             .ErrorMessage = "Je nutn|fffd| zadat polo|fffd|ku ze seznamu."
             .ShowInput = True
             .ShowError = True
        End With
    'End If
    
    If protecting Then
        Call protectSpecifikace
    End If
End Function

Function updateRowsLockAfterPasteData() 'Kostelnik 2019-05-14
    On Error GoTo ErrHandler

    Dim ws_specifikace As Worksheet
    Set ws_specifikace = ThisWorkbook.Worksheets("Specifikace")
    
    Dim iap As InsertArticleProperties
    Set iap = New InsertArticleProperties
    iap.initClass
    
    Dim startLine As Integer
    startLine = spec_input_start_line '13 - od tohoto radku se zadavaji artikly
    
    Dim endLine As Integer
    endLine = getLastWorkingRow()
    
    Dim articleNo As String
    Dim pg As String
      
    Dim isIzolantArticle As Boolean
    Dim isManualArticle As Boolean
    
    Dim activePriceListName As String
    activePriceListName = getActivePricelistSheetSourceName
    
    'specifikace je jiz odemknuta, tato funkce se vola prizamikani po vlozeni dat
    'Call unprotectSpecifikace
    
    Dim i As Long
    For i = startLine To endLine
        articleNo = ws_specifikace.Cells(i, 2).value
        If articleNo <> "" Then
            pg = ws_specifikace.Cells(i, 3).value
            
            isIzolantArticle = iap.isArcticleIzolant(articleNo, pg)
            isManualArticle = Not isArticleInPricelist(activePriceListName, articleNo)
            If isManualArticle Then
                ws_specifikace.Cells(i, 24).value = "R" 'priznak ze jde o rucni vlozeni
            End If
            
            Call lockCells(ws_specifikace, i, iap.modeType, iap.priceListType, isIzolantArticle, isManualArticle)
        End If
    Next i
    
    'Call protectSpecifikace
    
    iap.cleanClass
    Set iap = Nothing
    
    Set ws_specifikace = Nothing
    
    Exit Function
    
ErrHandler:
    Dim strErr As String
    strErr = Err.Description
    Call protectSpecifikace
    MsgBox strErr, vbExclamation
End Function

'zatim nevyuzito
Function getRGBfromColor()
    Dim r, g, B, c As Long
        
    c = ActiveCell.Interior.Color
    r = c Mod 256
    g = c \ 256 Mod 256
    B = c \ 65536 Mod 256
    
    Debug.Print r & ", " & g & "," & B
End Function

Function isFileExist(filePath As String) As Boolean 'Kostelnik 2019-06-10
    'Reference "Microsoft Scripting Runtime"

    Dim objFSO As Scripting.FileSystemObject
    Set objFSO = New FileSystemObject
    
    isFileExist = objFSO.FileExists(filePath)
    
    Set objFSO = Nothing
End Function

Function vymazDiac(str As String) 'Kostelnik 2019-06-10
    Dim A As String
    Dim B As String
    Dim i As Integer
    Const AccChars = "|fffd||fffd||fffd||fffd||fffd||20a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||2a3||fffd||4c70f||fffd||fffd||fffd|"
    Const RegChars = "TtEDRCSZszcreAAACEEIINOOOUUUYaaaceeiinooouuuylzalescCCELNnSsZzZz"
    
    For i = 1 To Len(AccChars)
        A = Mid(AccChars, i, 1)
        B = Mid(RegChars, i, 1)
        str = Replace(str, A, B)
    Next i
    
    vymazDiac = str
End Function

Function testVymazDiac()
    Dim s As String
    
    Dim i As Long
    For i = 1 To 15
        s = ThisWorkbook.Worksheets("mutace").Range("B" & i).value
        Debug.Print s
        Debug.Print vymazDiac(s)
        Debug.Print vbNewLine
    Next i
End Function

Function testShowFormulas()
    'InputBox "", "", ActiveCell.FormulaR1C1Local
    InputBox "", "", ActiveCell.FormulaLocal
    InputBox "", "", ActiveCell.Formula
    InputBox "", "", ActiveCell.FormulaR1C1 'tento pouzivat pro nastavovani vzorcu
End Function

Function testShowNumberFormat()
    InputBox "", "", ActiveCell.NumberFormat
End Function

Function testLockCells()
    Call unprotectSpecifikace
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    Dim i As Long
    For i = spec_input_start_line To getLastWorkingRow
        Call lockCells(ws, i, 1, 1)
    Next i
        
    Set ws = Nothing
    
    Call protectSpecifikace
End Function

Function testPoleKolekce()
    Dim pole(1 To 2) As Long
    Dim i As Long
    
    Dim c As Collection
    Set c = New Collection
    
    For i = 1 To 10
        Erase pole
        pole(1) = i * 10
        pole(2) = i * 100
        c.Add pole, CStr(i)
    Next i
    
    Dim v As Variant
    For i = 1 To c.count
        v = c.Item(i)
    Next i
    
    Erase pole
    Erase v
    Set c = Nothing
End Function

Function testaaa()
    Call showHideButtonShchvalovaniNastavObr(False)
End Function
Attribute VB_Name = "M04_inicializace_specifikace"
'Module4 - inicializace specifikace
Option Explicit

Public g_str_datum As String
Public g_str_platnost_do As String
Public g_aktualizovat_radu As Boolean
Public g_zakazka_stopro As String
Public g_variant_calc As Integer

Public g_inic_form_set_rd_nastaveni As Boolean

Function createNewTemporaryFile() 'Kostelnik 2019-01-21
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    Dim r
    r = MsgBox("Chcete vytvo|fffd|it novou specifikaci?", vbYesNo + vbQuestion) 'Kostelnik 2019-04-24
    If r = vbNo Then
        Exit Function
    End If
    
    Dim cesta As String
    cesta = ThisWorkbook.path
    
    Dim docID As String
    docID = getRandomIDString()
    
    Dim nazev_souboru As String
    'nazev_souboru = "~specifikace_" & Application.UserName & "_ID" & getRandomIDString()
    nazev_souboru = "~specifikace_" & "_ID" & docID & ".xlsm"
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    Call clearValuesSpecifikace(ws)
    Call clearNastaveniHodnoty 'musim vycistit
    
    If doLogging Then
        Call logFile("createNewTemporaryFile: #100")
    End If
    
    'MsgBox ActiveWorkbook.FileFormat 'pro xlsm vraci 52: xlOpenXMLWorkbookMacroEnabled.
    ThisWorkbook.SaveAs fileName:=cesta & "\" & nazev_souboru, FileFormat:=xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
    
    If doLogging Then
        Call logFile("createNewTemporaryFile: #200")
    End If
        
    'zobrazit init form
    g_str_datum = ""
    g_str_platnost_do = ""
    g_aktualizovat_radu = False
    g_zakazka_stopro = ""
    g_selected_pricelist = ""
    
    'RD
    g_variant_calc = 0
    g_rd_plocha = 0
    g_rd_system_selected = ""
    g_rd_cena_inv = 0
    g_rd_zpetny_bonus = 0
        
    Dim inForm As InicForm
    Set inForm = New InicForm
    inForm.show
    Unload inForm
    Set inForm = Nothing
    
    If doLogging Then
        Call logFile("createNewTemporaryFile: #300")
    End If
          
    Dim old_pricelist As String
    old_pricelist = getActivePricelistName
              
    Call nastavInicializacniHodnoty(ws) 'nastavit hlavicku
    Call nastavNastaveniHodnoty(nazev_souboru, docID)
    
    Call setActivePricelistName(g_selected_pricelist)
    Call refreshSpecificationFormulasAllRows(ws) 'nastavi se ve vzorcich aktivni zdroj ceniku, uzamcou se bunky
    
    Dim ws_rd As Worksheet
    Set ws_rd = ThisWorkbook.Worksheets(rd_stosystem)
    
    ThisWorkbook.Unprotect Password:="cube" 'potrebuji, abych mohl skryt a zobrazit list
    
    If doLogging Then
        Call logFile("createNewTemporaryFile: #400")
    End If
    
    'spolecny clearing
    ws_rd.Visible = xlSheetHidden
    ws_rd.Range("field_rd_plocha") = 0
    
    Call unprotectRD_StoSystemSheet
    
    Call clearRDspecRows(ws_rd, False)
    Call clearThermTextLinesDescription(ws_rd, False)
    Call deleteShapeObject(ws_rd, pict_rd_thermsystem, False)
    Call deleteShapeObject(ws_rd, pict_house, False)
    Call clearRDManualUserFilledData(ws_rd)
    Call clearSheetTMPcalcRD
    Call setRDCalculationVariant(False) 'skryti radku v listu Specifikace, RD_StoSystem
    Call zarovnaniNastaveniSpecTlacitekRadku 'tlacitka pro pridavani radku na specifikaci
    
    If doLogging Then
        Call logFile("createNewTemporaryFile: #500")
    End If
    
    'RD inicializace
    If isRDmode Then
        ws_rd.Visible = xlSheetVisible
        ws_rd.Range("field_rd_plocha") = g_rd_plocha
        ws_rd.Range("field_rd_system_name") = g_rd_system_selected
        
        Call setObchodniPodminky("OBCHODNI_PODMINKY_RD_", getLang) 'RD  verze obchodnich podminek
        
        Call unprotectRD_StoSystemSheet 'dochazi k zamikani listu, asi u .paste pri vkladani thermsystem obrazku, vola se udalost sheet.activate
        Call setThermSystemImage(g_rd_system_selected, False, False)
        
        Call unprotectRD_StoSystemSheet 'dochazi k zamikani listu, asi u .paste pri vkladani thermsystem obrazku, vola se udalost sheet.activate
        Call setThermSystemDefaultHousePicture(False, False)
        
        Call unprotectRD_StoSystemSheet 'dochazi k zamikani listu, asi u .paste pri vkladani thermsystem obrazku, vola se udalost sheet.activate
        Call setThermTextLinesDescription(getLang, False)
        
        Call showHideZakladniCenaSlevovyRadek
    Else 'VF inicializace
        Call setObchodniPodminky("OBCHODNI_PODMINKY_", getLang) 'VF  verze obchodnich podminek
    End If

    Set ws_rd = Nothing
    
    Call protectRD_StoSystemSheet
    Call protectWorkBook
    
    If doLogging Then
        Call logFile("createNewTemporaryFile: #600")
    End If
        
    'desifruji jen ty, ktere nejsou jiz desifrovane
    Dim activePricelistSheetSourceName As String
    activePricelistSheetSourceName = getActivePricelistSheetSourceName
    
    If Not isSheetDecrypted(activePricelistSheetSourceName) Then
        Call decryptAllRowsOfSheet(getActivePricelistSheetSourceName) 'desifruje sloupce O,P
    End If
    
    If old_pricelist <> getActivePricelistName Then 'pouze pokud se zmeni cenik, tak pregenerovat
        Call generateAllMenuCategory
        Call findArticlesAndCreateMenu("")
    End If
    
    If doLogging Then
        Call logFile("createNewTemporaryFile: #700")
    End If
    
    Call readContact
    
    If doLogging Then
        Call logFile("createNewTemporaryFile: #800")
    End If
    
    Call setFooter 'do hlavicky se zapisuje tak datum platnosti
    
    If doLogging Then
        Call logFile("createNewTemporaryFile: #900")
    End If
    
    Set ws = Nothing
    ThisWorkbook.Save
    
    ThisWorkbook.Worksheets("nastaveni").Range("B5").value = CInt(ThisWorkbook.Worksheets("nastaveni").Range("B5").value) + 1
    
    If doLogging Then
        Call logFile("createNewTemporaryFile: #EXIT")
    End If
    
    Exit Function
    
ErrHandler:
    Dim strErr As String
    strErr = Err.Description
    Call protectRD_StoSystemSheet
    Call protectWorkBook
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    
    If doLogging Then
        Call logFile("createNewTemporaryFile: ErrHandler:" & strErr)
    End If
    MsgBox strErr
End Function

Function saveTemporaryFileAsNamedNewWorkFile() As Boolean 'Kostelnik 2019-01-22
    saveTemporaryFileAsNamedNewWorkFile = True
   
    Dim ws_n As Worksheet
    Set ws_n = ThisWorkbook.Worksheets("nastaveni")
    
    If CInt(ws_n.Range("B5").value) <= 1 Then 'save counter
        Exit Function
    End If
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    Dim jmeno As String
    jmeno = getValidFileName(ws.Range("C4").value) 'ziskam validni jmeno
    
    If jmeno = "" Then
        saveTemporaryFileAsNamedNewWorkFile = False
        ws.Activate
        ws.Range("C4").Select
        MsgBox "Soubor nelze prozat|fffd|m ulo|fffd|it. Nejprve vypl|fffd|te jm|fffd|no (bu|fffd|ka C4).", vbExclamation
        Exit Function
    End If
        
    Dim strDatum As String
    strDatum = Format(Date, "yyyy-mm-dd")
    strDatum = Replace(strDatum, " ", "")
    
    Dim str_non_evid As String
    str_non_evid = ""
    
    If ws_n.Range("B6").value = "0" Then
        str_non_evid = "NEEVIDOVANO_"
    End If
    
    'RD/VF_jm|fffd|no obchodn|fffd|ka_n|fffd|zev zak|fffd|zky_datum.xlsm
    Dim nazev_souboru As String
    'Kostelnik 2019-02-25 zmeneno, v nazvu souboru bude zakazka
    'nazev_souboru = "specifikace_" & Application.userName & "_" & jmeno & "_" & str_non_evid & strDatum & ".xlsm"
    
    Dim zakazkaStoPro As String
    zakazkaStoPro = ws.Range("field_zakazka")  'toto pole je uz otestovane na vhodnost pro nazev souboru, v inicFormu
    'nazev_souboru = "specifikace_" & Application.userName & "_" & zakazkaStoPro & "_" & str_non_evid & strDatum & ".xlsm"
    nazev_souboru = "specifikace_" & vymazDiac(Application.userName) & "_" & ws_n.Range("field_spec_sequence") & "_" & str_non_evid & strDatum & ".xlsm" 'Kostelnik 2019-06-10
        
    ws_n.Range("B4").value = "1"
    
    Application.EnableEvents = False
    
    Call createArchiveFolder
    
    Dim cesta As String
    cesta = ThisWorkbook.path
    
    Dim komplet_cesta_nazev As String
    komplet_cesta_nazev = cesta
        
    'Kostelnik 2019-02-25
    Dim slozka As String
    slozka = ws_n.Range("field_archiv_cesta")
    
    If slozka <> "" Then
        'zjistim, jestli jiz tento soubor neni v archivni slozce, pokud ano tak osetrim, aby se nezanorovalo do dalsi stejne podslozky
        If Not EndsWith(komplet_cesta_nazev, slozka) Then
            komplet_cesta_nazev = komplet_cesta_nazev & "\" & slozka
        End If
    End If
    
    komplet_cesta_nazev = komplet_cesta_nazev & "\" & nazev_souboru
    
    ws_n.Range("field_origin_filename") = nazev_souboru 'Kostelnik 2019-04-18
    ThisWorkbook.SaveAs fileName:=komplet_cesta_nazev, FileFormat:=xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
    Call vymazDocasnySoubor(cesta) 'po vymazu souboru vymaze parametr v nastaveni, proto jeste ulozim soubor
    
    'ws.Shapes("Obr|fffd|zek 5").Visible = False 'obrazek pro ulozeni final nazvu souboru
    Set ws = Nothing
    Set ws_n = Nothing
    
    saveTemporaryFileAsNamedNewWorkFile = False 'ochrana, jinak se to cele zacykli a spadne
    ThisWorkbook.Save
    Call addHeaderEntryToDB 'pokud se uklada finalni soubor, ulozim hlavicku do DB seznamu
    Application.EnableEvents = True
End Function

Function getRandomIDString() As String 'Kostelnik 2019-01-21
    Dim max_long As Long
    max_long = 2147483647 'max long value
    
    'To create a random integer number between two values (range), you can use the following formula:
    'Int ((upperbound - lowerbound + 1) * Rnd + lowerbound)
    
    'nahodne cislo
    Dim rnd_num As Long
    Randomize 'Randomize creates a new seed number based on your computer|fffd|s system time and the system time
    rnd_num = CLng(((max_long - 1 + 1) * rnd + 1))
    
    'casova stopa
    Dim time_stamp As String
    time_stamp = CStr(DateDiff("s", "01/01/1970 00:00:00", Now()))
    
    Dim id As String
    id = time_stamp & "_" & rnd_num
    
    getRandomIDString = id
End Function

Function clearValuesSpecifikace(ByRef ws As Worksheet) 'Kostelnik 2019-01-21, vymaze list specifikace, jako by zacinal uzivatel s novou cistou sablonou
    'vymaz zahlavi
    Application.EnableEvents = False
    Call unprotectSpecifikace
    ws.Range("E2", "F2").ClearContents 'cislo specifikace + /rok/jmeno OTP
    
    ws.Range("C3:C8").value = "" 'nelze vymazat sloucene bunky
    ws.Range("L3:L8").value = ""
    ws.Range("T3:T8").value = ""
       
    Call clearAllRows(ws)
        
    'vymaz paticky - data
    ws.Range("field_datum").ClearContents 'datum
    ws.Range("field_platnost").ClearContents 'platnost do
    
    ws.Range("C3").Select
    
    Call protectSpecifikace
    Application.EnableEvents = True
End Function

Function clearAllRows(ByRef ws As Worksheet) 'Kostelnik 2019-01-30
    Dim end_line As Long
    end_line = getLastWorkingRow()
    
    ws.Range("A" & spec_input_start_line & ":Z" & end_line).value = ""
End Function

Function refreshSpecificationFormulasAllRows(ByRef ws As Worksheet) 'Kostelnik 2019-01-30
    Dim end_line As Long
    end_line = getLastWorkingRow()
    
    Call refreshSpecificationFormulas(spec_input_start_line, end_line, True, True)
End Function

Function getDateDDMMYYYYfromString(strDatum As String) As Date 'Kostelnik 2019-01-22
    Dim day, month, year As Integer
    year = Int(Mid(strDatum, 7, 4))
    month = Int(Mid(strDatum, 4, 2))
    day = Int(Mid(strDatum, 1, 2))
      
    getDateDDMMYYYYfromString = VBA.DateSerial(year, month, day)
End Function

Function vypoctiPlatnostDoString(strDatum As String, dny As Integer) As String 'Kostelnik 2019-01-22
    Dim date_datum As Date
    date_datum = getDateDDMMYYYYfromString(strDatum)
    
    Dim date_platnostDo As Date
    date_platnostDo = DateAdd("d", dny, date_datum)
    vypoctiPlatnostDoString = Format(date_platnostDo, "dd/mm/yyyy")
    vypoctiPlatnostDoString = Replace(vypoctiPlatnostDoString, " ", "")
End Function

Function nastavInicializacniHodnoty(ws As Worksheet) 'Kostelnik 2019-01-22
    Call unprotectSpecifikace
    
    ws.Range("field_datum").value = g_str_datum
    ws.Range("field_platnost").value = g_str_platnost_do
    If g_aktualizovat_radu Then
        Dim vRada As Variant
        vRada = getCiselnaRada
        
        ws.Range("field_cislo_spec").value = vRada(1)
        ws.Range("field_zakazka").value = g_zakazka_stopro
        
        ThisWorkbook.Worksheets("nastaveni").Range("field_spec_sequence").value = vRada(2)
    Else
        ws.Range("field_cislo_spec").value = "XXXXX"
        ws.Range("field_zakazka").value = ""
        
        ThisWorkbook.Worksheets("nastaveni").Range("field_spec_sequence").value = "XXXXX"
    End If
        
    Call protectSpecifikace
End Function

Function clearNastaveniHodnoty() 'Kostelnik 2019-01-23
    Dim ws_nastaveni As Worksheet
    Set ws_nastaveni = ThisWorkbook.Worksheets("nastaveni")
    ws_nastaveni.Range("B2").value = ""
    ws_nastaveni.Range("B3").value = ""
    ws_nastaveni.Range("B4").value = 0
    ws_nastaveni.Range("B5").value = 0
    ws_nastaveni.Range("B6").value = 0 'evidovat specifikaci
    ws_nastaveni.Range("field_variant_calc").ClearContents
    ws_nastaveni.Range("field_active_system").ClearContents
    ws_nastaveni.Range("field_plocha").ClearContents
    ws_nastaveni.Range("field_rd_mode").ClearContents
    ws_nastaveni.Range("field_cena_pro_investora").ClearContents
    ws_nastaveni.Range("field_zpetny_bonus").ClearContents
    ws_nastaveni.Range("field_origin_filename").ClearContents
    ws_nastaveni.Range("field_origin_path_file").ClearContents 'nastavuje se pri zmene do DB rezimu
        
    ws_nastaveni.Range("field_schvalovani_status").ClearContents
    ws_nastaveni.Range("field_schvalovani_kdo").ClearContents
    ws_nastaveni.Range("field_schvalovani_kdy").ClearContents
    ws_nastaveni.Range("field_schvalovani_pozn").ClearContents
    
    ws_nastaveni.Range("field_hide_basic_price_discount_row").ClearContents
    ws_nastaveni.Range("field_spec_sequence").ClearContents
    
    Set ws_nastaveni = Nothing
End Function

Function nastavNastaveniHodnoty(nazev_docasneho_souboru As String, docID As String) 'Kostelnik 2019-01-23
    Dim ws_nastaveni As Worksheet
    Set ws_nastaveni = ThisWorkbook.Worksheets("nastaveni")
    ws_nastaveni.Range("B2").value = nazev_docasneho_souboru
    ws_nastaveni.Range("B3").value = docID
    ws_nastaveni.Range("B4").value = 0 'pokud je 0 pri prvnim ukladani souboru ze zmeni nazev souboru (obsahuje jmeno firmy/osoby) a vymaze docasny soubor
    ws_nastaveni.Range("B5").value = 1
    
    If g_aktualizovat_radu Then
        ws_nastaveni.Range("B6").value = 1 'evidovat specifikaci
    End If
    
    If isUnlockedMFpricelist Then
        Call setRDNastaveniVariantaKalkulace(g_variant_calc)
        ws_nastaveni.Range("field_active_system") = g_rd_system_selected
        ws_nastaveni.Range("field_plocha") = g_rd_plocha
        ws_nastaveni.Range("field_rd_mode") = 1
        ws_nastaveni.Range("field_cena_pro_investora") = g_rd_cena_inv
        ws_nastaveni.Range("field_zpetny_bonus") = g_rd_zpetny_bonus
    End If
    
    Set ws_nastaveni = Nothing
End Function

Function getCiselnaRada(Optional s As Worksheet = Nothing) As Variant  'Kostelnik 2019-01-24
    Dim rok As Integer
    Dim result(1 To 2) As String
        
    On Error GoTo ErrHandler
    rok = CInt(Format(Date, "yyyy"))
    
    Dim cislo As Integer
    cislo = 0
    
    Dim ws_seznam As Worksheet
    
    'ziskam db
    Dim wb_db As Workbook
    
    If Not s Is Nothing Then
        Set ws_seznam = s
    Else
        Set wb_db = getZdrojDat(specifikace_zakaznici, True)
        
        If wb_db Is Nothing Then 'soubor nenalezen
            MsgBox "Nenalezen soubor " & specifikace_zakaznici & ".", vbExclamation
            GoTo konec
        End If
            
        Set ws_seznam = wb_db.Worksheets("seznam_specifikaci")
    End If
    'vyhledam v db nejvyssi ciselnou radu v aktualnim roce a zvysim o jednicku, pokud nenajdu, vytvorim novou "001/aktualni rok/uzivatel"
    cislo = findLastSpecNumberForYear(ws_seznam, rok)
        
konec:

    Set ws_seznam = Nothing
    If Not wb_db Is Nothing Then
        wb_db.Close SaveChanges:=False
        Set wb_db = Nothing
    End If
        
    If (cislo < 0) Then 'nejaka chyba pri parsovani
        GoTo ErrHandler
    End If
    
    cislo = cislo + 1
    result(1) = Format(cislo, "#000") & "/" & rok & "/" & getOfficeUserName
    result(2) = rok & "_" & Format(cislo, "#000")
    
    getCiselnaRada = result
    Exit Function
    
ErrHandler:
    result(1) = "000" & "/" & rok & "/" & getOfficeUserName
    result(2) = rok & "_" & "000"
    getCiselnaRada = result
    MsgBox "Nastala chyba p|fffd|i hled|fffd|n|fffd| posledn|fffd|ho |fffd||fffd|sla specifikace." & vbNewLine & "Zkontrolujte pros|fffd|m zdrojov|fffd| soubor." & vbNewLine & Err.Description
End Function

Function vymazDocasnySoubor(cesta As String) 'Kostelnik 2019-01-22
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("nastaveni")
    
    Dim soubor_nazev As String
    soubor_nazev = ws.Range("B2").value 'vlozim aktualni cestu
    
    'bezpecnostni ochrana, mazu jen soubor s tildou nazacatku
    If soubor_nazev = "" Then
        Exit Function
    End If
    
    If Left(soubor_nazev, 1) <> "~" Then
        Exit Function
    End If
    
    Dim full_cesta As String
    'full_cesta = ThisWorkbook.Path & "\" & soubor_nazev
    full_cesta = cesta & "\" & soubor_nazev 'Kostelnik 2019-02-25
     
    If Dir(full_cesta) <> "" Then 'soubor nalezen
        Kill full_cesta
    End If
    
    ws.Range("B2").value = ""
    Set ws = Nothing
End Function

Function getValidFileName(fileName As String) As String 'Kostelnik 2019-01-22
    Const sBadChar As String = "\/:*?<>|[]"""
    Dim i As Long
    
    'validFileName = True
    
    Dim str As String
    
    'Loop through each "Bad Character" and test for an instance
    For i = 1 To Len(sBadChar)
        str = Mid$(sBadChar, i, 1)
        If InStr(fileName, str) > 0 Then
            fileName = Replace(fileName, str, "_")
            'validFileName = False 'Invalid
            'Exit For
        End If
    Next
    
    getValidFileName = fileName
End Function

Function createArchiveFolder() 'Kostelnik 2019-02-25
    On Error GoTo ErrHandler
    
    Dim cesta As String
    cesta = ThisWorkbook.path
    
    Dim slozka As String
    slozka = ThisWorkbook.Worksheets("nastaveni").Range("field_archiv_cesta")
    
    If slozka <> "" Then
        'zjistim, jestli jiz tento soubor neni v archivni slozce, pokud ano tak osetrim, aby se nezanorovalo do dalsi stejne podslozky
        If Not EndsWith(cesta, slozka) Then
             If Dir(cesta & "\" & slozka, vbDirectory) = "" Then 'slozka nenalezena
                MkDir cesta & "\" & slozka
            End If
        End If
    End If
    
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    MsgBox Err.Description
End Function

Function testImage()
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    ws.Shapes("Obr|fffd|zek 5").Visible = True
    
    Set ws = Nothing
End Function

Function testValidName()
    MsgBox getValidFileName("ab*/cd.xm+sl[")
End Function

Function testTemporaryFile()

    Dim strTemplate As String
    strTemplate = ThisWorkbook.path & "\" & ThisWorkbook.name
       
    Application.DisplayAlerts = False
    Dim wb As Workbook
    Set wb = Workbooks.Add(strTemplate) 'bohuzel, sice se vytvori docasny novy soubor v pameti, ale ztrati cestu
    
    wb.Worksheets("nastaveni").Range("A2").value = ThisWorkbook.path
    Application.DisplayAlerts = True
End Function

Function testClear()
    Call clearValuesSpecifikace(ThisWorkbook.Worksheets("Specifikace"))
End Function

Function testX()
    MsgBox getCiselnaRada
End Function

Function testInicForm()
    Dim inForm As InicForm
    Set inForm = New InicForm
    inForm.show
    Unload inForm
    Set inForm = Nothing
End Function
Attribute VB_Name = "M05_seznam_specifikaci"
'Module5 - zapis hlavicky do databaze
Option Explicit

Function addHeaderEntryToDB() 'Kostelnik 2019-01-23
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    
    If isDBmode Then 'Kostelnik 2019-03-10, pri ulozeni/modifikaci debecka se nebude propisovat do seznamu specifikaci
        Exit Function
    End If
    
    If ThisWorkbook.Worksheets("nastaveni").Range("B6").value <> "1" Then 'pokud pri inicalizaci specifikace bylo zruseno zaskrtnuti evidovac specfikaci, tak tato spec, se nebude ukladat do seznamu
        Exit Function
    End If
    
    'ziskam db
    Dim wb_db As Workbook
    Set wb_db = getZdrojDat(specifikace_zakaznici, False)
    
    If wb_db Is Nothing Then 'soubor nenalezen
        MsgBox "Nenalezen soubor " & specifikace_zakaznici & ".", vbExclamation
        GoTo konec
    End If
    
    Dim ws_seznam As Worksheet
    Set ws_seznam = wb_db.Worksheets("seznam_specifikaci")
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    Dim idSouboru As String
    idSouboru = getIDsouboru()
    
    'kontrola a osetreni duplicity - pokud je nalezena duplicita, zobrazi se varovna hlaska a automaticky se vygeneruje nove cislo
    Call kontrolaAosetreniDuplicityCislaSpecifikace(ws, ws_seznam, idSouboru)
       
    'vyhledani zaznamu
    Dim lineRecord As Long
    lineRecord = findHeaderEntry(ws_seznam, idSouboru)
    
    If lineRecord = 0 Then 'zapis noveho zaznamu
        Call insertNewHeaderEntry(ws_seznam, ws)
    Else 'aktualizace existujiciho
        Call updateHeaderEntry(lineRecord, ws_seznam, ws)
    End If

    Set ws_seznam = Nothing
    Set ws = Nothing
    
    wb_db.Save
    
    If Not wb_db Is Nothing Then
        wb_db.Close
        Set wb_db = Nothing
    End If
    
    'ulozim - mohl se zmenit po pridani docID, pokud puvodne nebyl
    'ThisWorkbook.Save
                
konec:
    ThisWorkbook.Worksheets("Specifikace").Activate
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    MsgBox Err.Description
End Function

Function getIDsouboru() As String 'Kostelnik 2019-01-23
    Dim idSouboru As String
    idSouboru = ThisWorkbook.Worksheets("nastaveni").Range("B3").value
    
    If idSouboru = "" Then 'nejaky poskozeny soubor? vygeneruji mu ID, aby bylo mozne jej ulozit do DB
        idSouboru = getRandomIDString()
        Call setIDsouboru(idSouboru)
    End If
    
    getIDsouboru = idSouboru
End Function

Function setIDsouboru(docID As String) 'Kostelnik 2019-01-23
    ThisWorkbook.Worksheets("nastaveni").Range("B3").value = docID
End Function

Function findHeaderEntry(ws As Worksheet, docID As String) As Long 'Kostelnik 2019-01-23
    findHeaderEntry = 0
    
    Dim line As Long
    line = 2 'preskocim zahlavi
    
    Dim hodnotaID As String
    
    Do While (ws.Cells(line, 25).value <> "") 'Y - ID souboru
        hodnotaID = ws.Cells(line, 25).value
        If (hodnotaID = docID) Then
            findHeaderEntry = line
            Exit Function
        End If
        line = line + 1
    Loop
End Function

Function findLastSpecNumberForYear(ws As Worksheet, r As Integer) As Integer 'Kostelnik 2019-01-24
    findLastSpecNumberForYear = 0
        
    Dim hodnota As String
    
    Dim line As Long
    line = 2 'preskocim zahlavi
    
    'rozparsovani
    Dim index1 As Integer
    Dim index2 As Integer
        
    Dim strCislo As String
    Dim strRok As String
    
    Dim cislo As Integer
    Dim rok As Integer
    
    Dim maxCislo As Integer
    maxCislo = 0
    
    Do While (ws.Cells(line, 25).value <> "") 'jdu podle sloupce Y, u cisla specifikace je mozne ze bude prazdne, ze nekdo takto blbe ulozil soubor
        hodnota = ws.Cells(line, 2).value
        If (hodnota <> "") Then
            index1 = InStr(1, hodnota, "/")
            If index1 <= 0 Then 'tuto specifikaci preskocim
                GoTo step2
            End If
            strCislo = Left(hodnota, index1 - 1)
                    
            index2 = InStr(index1 + 1, hodnota, "/")
            If index2 <= 0 Then
                GoTo step2
            End If
            strRok = Mid(hodnota, index1 + 1, index2 - index1 - 1)
                            
            cislo = CInt(strCislo)
            rok = CInt(strRok)
    
            If (rok = r) Then 'hledam nejvyssi cislo v danem roce
                If cislo > maxCislo Then
                    maxCislo = cislo
                End If
            End If
        End If
step2:
        line = line + 1
    Loop
        
    findLastSpecNumberForYear = maxCislo
End Function

Function kontrolaAosetreniDuplicityCislaSpecifikace(ws As Worksheet, ws_seznam As Worksheet, idSouboru As String) 'Kostelnik 2019-01-29
    Dim cislo_specifikace As String
    cislo_specifikace = ws.Range("field_cislo_spec").value 'cislo specifikace
    
    Dim cislo_radku_duplicity As Long
    cislo_radku_duplicity = getCisloRadkuDuplicityCislaSpecifikace(ws_seznam, idSouboru, cislo_specifikace)
    
    If cislo_radku_duplicity > 0 Then
        'vyhledam nove cislo specifikace
        Dim nove_cislo_specifikace As String
        nove_cislo_specifikace = getCiselnaRada(ws_seznam)
        
        Call unprotectSpecifikace
        ws.Range("field_cislo_spec").value = nove_cislo_specifikace
        Call protectSpecifikace
        
        MsgBox "|fffd||fffd|slo specifikace " & cislo_specifikace & " je duplicitn|fffd| v seznamu specifikac|fffd|." & vbNewLine & "Duplicita nalezena v seznamu na |fffd||fffd|dku |fffd|. " & cislo_radku_duplicity & "." & vbNewLine & vbNewLine & "Vygenerov|fffd|no nov|fffd| |fffd||fffd|slo specifikace: " & nove_cislo_specifikace, vbExclamation
    End If
End Function

Function getCisloRadkuDuplicityCislaSpecifikace(ws, idSouboru, cislo_specifikace) As Long 'Kostelnik 2019-01-29
    getCisloRadkuDuplicityCislaSpecifikace = 0
    
    Dim line As Long
    line = 2 'preskocim zahlavi
    
    Dim curr_cislo_spec As String
    Dim curr_id_souboru As String
        
    Do While (ws.Cells(line, 25).value <> "") 'jdu podle sloupce Y, u cisla specifikace je mozne ze bude prazdne, ze nekdo takto blbe ulozil soubor
        curr_id_souboru = ws.Cells(line, 25).value
        If (curr_id_souboru <> idSouboru) Then 'duplicitu hledam pro radky mimo daneho souboru, ktery uz muze ve specifikaci byt
            curr_cislo_spec = ws.Cells(line, 2).value
            If (curr_cislo_spec = cislo_specifikace) Then
                getCisloRadkuDuplicityCislaSpecifikace = line
                Exit Function
            End If
        End If

        line = line + 1
    Loop
End Function
Function insertNewHeaderEntry(ws_seznam As Worksheet, ws As Worksheet) 'Kostelnik 2019-01-23
    Dim line As Long
    line = ws_seznam.Range("Y" & Rows.count).End(xlUp).Row 'posledni radek
    line = line + 1
    
    Call writeHeaderFieldsToLine(line, ws_seznam, ws)
End Function

Function updateHeaderEntry(line As Long, ws_seznam As Worksheet, ws As Worksheet) 'Kostelnik 2019-01-23
    Call writeHeaderFieldsToLine(line, ws_seznam, ws)
End Function

Function writeHeaderFieldsToLine(line As Long, ws_seznam As Worksheet, ws As Worksheet) 'Kostelnik 2019-01-23
    ws_seznam.Range("L:L").NumberFormat = "@" 'tel/fax
    ws_seznam.Range("W:W").NumberFormat = "@" 'tel
    ws_seznam.Range("R:R").NumberFormat = "#,##0.00" 'celkem
    
    ws_seznam.Range("B" & line).value = ws.Range("field_cislo_spec").value 'cislo specifikace
    ws_seznam.Range("C" & line).value = ws.Range("field_zakazka").value 'zakazka stopro
    
    ws_seznam.Range("D" & line).value = ws.Range("C3").value 'kupujici
    ws_seznam.Range("E" & line).value = ws.Range("C4").value 'jmeno
    ws_seznam.Range("F" & line).value = ws.Range("C5").value 'funkce
    ws_seznam.Range("G" & line).value = ws.Range("C6").value 'ulice
    ws_seznam.Range("H" & line).value = ws.Range("C7").value 'mesto
    ws_seznam.Range("I" & line).value = ws.Range("C8").value 'psc
    ws_seznam.Range("J" & line).value = ws.Range("L3").value 'IC
    
    ws_seznam.Range("K" & line).value = ws.Range("L4").value 'DIC
    ws_seznam.Range("L" & line).value = ws.Range("L5").value 'tel/fax
    ws_seznam.Range("M" & line).value = ws.Range("L6").value 'zpusob uhrady
    ws_seznam.Range("N" & line).value = ws.Range("L7").value 'splatnost faktury
    ws_seznam.Range("O" & line).value = ws.Range("L8").value 'limit
    
    ws_seznam.Range("P" & line).value = ws.Range("field_datum").value 'datum
    ws_seznam.Range("Q" & line).value = ws.Range("field_platnost").value 'platnost do
    ws_seznam.Range("R" & line).value = ws.Range("field_celkem").value 'celkem bez DPH
    
    ws_seznam.Range("S" & line).value = ws.Range("T3").value 'misto dodani
    ws_seznam.Range("T" & line).value = ws.Range("T4").value 'akce
    ws_seznam.Range("U" & line).value = ws.Range("T5").value 'kont. osoba
    ws_seznam.Range("V" & line).value = ws.Range("T6").value 'email
    ws_seznam.Range("W" & line).value = ws.Range("T7").value 'tel
    ws_seznam.Range("X" & line).value = ws.Range("T8").value 'termin dodani
    
    ws_seznam.Range("Y" & line).value = ThisWorkbook.Worksheets("nastaveni").Range("B3").value
    ws_seznam.Range("Z" & line).value = Format(Now, "dd/mm/yyyy hh:mm:ss")
        
    'ws_seznam.Range("AA" & line).Value = ThisWorkbook.Name 'nazev souboru
    Dim cestaArchiv As String
    cestaArchiv = ThisWorkbook.Worksheets("nastaveni").Range("field_archiv_cesta").value
    
    Dim fullCesta As String
    If cestaArchiv <> "" Then
        fullCesta = cestaArchiv & "\"
    End If
    
    fullCesta = fullCesta & ThisWorkbook.name
    ws_seznam.Range("AA" & line).value = fullCesta 'nazev souboru
    
    'ws_seznam.Range("A" & line).Formula = "=HYPERLINK(""" & ThisWorkbook.Name & """,""[O]"")"
    ws_seznam.Range("A" & line).Formula = "=HYPERLINK(AA" & line & ",""[O]"")"
End Function
Attribute VB_Name = "M06_programova_verze"
Option Explicit

Public Const verze_programu = "10.06.2019"
Public Const verze_popis = "Specifikace"

Function showAboutForm() 'Kostelnik 2019-01-28
    Application.ScreenUpdating = False
    
    Dim aboutForm  As About 'nad timto formularem se muze spustit proces zmeny DB modu, to lze pouze az kdyz je formular about uzavrny
    Set aboutForm = New About
    aboutForm.show
    Unload aboutForm
    Set aboutForm = Nothing
    
    'Kostelnik 2019-03-11
    If Not isDBmode Then 'soubor je v modu normalni specifikace
        If isUnlockedDBmode Then 'prave doslo k prepnuti do DB modu
            Call switchToDBmode 'pokud neni odemceno, nic se neprovede
            Exit Function
        End If
    End If
    
    If isUnlockedMUTSKtrans Then 'Kostelnik 2019-04-03
        Call setMutace("SK")
        Exit Function
    End If
End Function

Attribute VB_Name = "M07_sablony"
'Module7 - sablony, Kostelnik 2019-01-30
Public Const tmpTemplateList = "tmpTemplateList"
Public templateImport_selectedLine As Long
Public g_vyplnit_spotrebu As Boolean
Public g_template_openlist_selected_id As Long
Public g_template_openlist_selected_popis As String
Option Explicit

Function readTemplates() 'Kostelnik 2019-01-30, funkce nacte z externiho souboru specifikace_zakaznici dostupne sablony a zobrazi form pro vyber
    On Error GoTo ErrHandler
    
    Application.ScreenUpdating = False
    
    Dim sheetName As String
    sheetName = tmpTemplateList
    
    Dim ret As Integer
    
    'pripravim data z externiho souboru
    ret = deleteAndCreateTmpTemplateList(sheetName)
    If ret = -1 Then 'nejaka chyba, napr. nenalezen soubor se zakazniky
        GoTo konec
    End If
    
    ThisWorkbook.Worksheets("Specifikace").Activate
    
    Call zobrazTemplateGUI(sheetName)
    templateImport_selectedLine = templateImport_selectedLine + 1 'kvuli radku zahlavi
    
    If templateImport_selectedLine > 1 Then
        Call insertTemplateRowsIntoSpec(sheetName)
    End If
    
konec:
    'mazu, aby soubor mel co nejmensi velikost, pracuje se na sitovem disku
    'TODO
    Call deleteList(sheetName)
        
    Call protectWorkBook
    ThisWorkbook.Worksheets("Specifikace").Activate
    Application.ScreenUpdating = True
    Exit Function
    
ErrHandler:
    Call protectWorkBook
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    MsgBox Err.Description
End Function

Function onlyDeleteAndCreateSheetTmpTemplateList()
 On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    'vymazu list, pokud existuje
    Call deleteList(tmpTemplateList)
    
    'vytvoreni noveho cisteho listu
    ThisWorkbook.Unprotect Password:="cube"
    
    Dim ws As Worksheet
    
    Set ws = Sheets.Add(After:=Sheets(ThisWorkbook.Worksheets.count))
    ws.name = tmpTemplateList
    'TODO - aktivovat
    ws.Visible = xlSheetHidden
    
    Set ws = Nothing
    Call protectWorkBook
    
    Exit Function
    
ErrHandler:
    Call protectWorkBook
    Application.DisplayAlerts = True
    MsgBox Err.Description
End Function

Function deleteAndCreateTmpTemplateList(sheetName As String) As Integer 'Kostelnik 2019-01-30
    deleteAndCreateTmpTemplateList = 0
    
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    
    Call onlyDeleteAndCreateSheetTmpTemplateList
    
    'zkopiruji hodnoty ze zdroje
    Dim wb As Workbook
    Set wb = getZdrojDat(specifikace_zakaznici, True)
    
    If wb Is Nothing Then 'soubor nenalezen
        MsgBox "Nenalezen soubor " & specifikace_zakaznici & ".", vbExclamation
        deleteAndCreateTmpTemplateList = -1
        GoTo konec
    End If
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(sheetName)
    
    'zkopiruji hlavicky a radky
    wb.Worksheets("sablony").Range("A:L").copy
    ws.Range("A1").PasteSpecial xlPasteValues
    ws.Range("A1").PasteSpecial xlPasteFormats
    
    'vymazu prvni radek nad zahlavi
    ws.Range("A1").EntireRow.Delete
    
    'provedu refresh nazvu, MJ, dle aktualniho zdroje podle artiklu
    'TODO - aktiovovat
    Call updateAtributesForTemplates(ws)
        
    ws.Activate
    ws.Range("A1").Select
    Application.CutCopyMode = False
    
    If Not wb Is Nothing Then
        wb.Close
        Set wb = Nothing
    End If
    
konec:
    Application.DisplayAlerts = True
    Set ws = Nothing
    Exit Function
    
ErrHandler:
    Call protectWorkBook
    Application.DisplayAlerts = True
    MsgBox Err.Description
End Function

Function updateAtributesForTemplates(ws_tmpTemplateList As Worksheet) 'Kostelnik 2019-01-30
    Dim zdrojAktivni As String
    zdrojAktivni = getActivePricelistSheetSourceName 'Kostelnik 2019-03-06
    
    Dim ws_zdroj As Worksheet
    Set ws_zdroj = ThisWorkbook.Worksheets(zdrojAktivni)
    
    Dim lastLine As Long
    lastLine = ws_zdroj.Range("A" & Rows.count).End(xlUp).Row
    
    'prochazim tabulku sablon
    Dim lineT As Long
    Dim lastLineT As Long
    lastLineT = ws_tmpTemplateList.Range("F" & Rows.count).End(xlUp).Row
    
    Dim article As String
    Dim pg As String
    Dim popis As String
    Dim mj As String
    Dim sleva As Double
    Dim uniqueKey As String
    
    Dim puvodniNazevArtikluVsablone As String
    
    Dim line As Long
    
    Dim c As Collection
    Set c = New Collection
            
    For lineT = 2 To lastLineT
        article = ws_tmpTemplateList.Cells(lineT, 8).value
        pg = ws_tmpTemplateList.Cells(lineT, 9).value
        uniqueKey = article & pg
        puvodniNazevArtikluVsablone = ws_tmpTemplateList.Cells(lineT, 10).value
        
        If Not Contains(c, uniqueKey) Then 'rychlostni optimalizace, pokud artikl jiz byl drive vyhledan, nebudu jej v 3000+ radkove tabulce znovu hledat
            'prochazim tabulku zdroj

            For line = 1 To lastLine
                If (article = ws_zdroj.Cells(line, 3).value) And (pg = ws_zdroj.Cells(line, 4).value) Then
                    popis = ws_zdroj.Cells(line, 1).value
                    mj = ws_zdroj.Cells(line, 8).value
                    
                    'Kostelnik 2019-02-15------------------------START
                    If IsError(ws_zdroj.Cells(line, 15).value) Then
                        sleva = 0
                    Else
                        sleva = ws_zdroj.Cells(line, 15).value
                    End If
                    'Kostelnik 2019-02-15------------------------KONEC
                    
                    'c.Add "Data1", "Key1"
                    c.Add article, uniqueKey
                    c.Add popis, uniqueKey & "POPIS"
                    c.Add mj, uniqueKey & "MJ"
                    c.Add sleva, uniqueKey & "SLEVA"
                    Exit For
                End If
            Next
        End If
        
        'muze se stat, ze artikl v sablonach uz neni ve zdrojovem listu
        If Not Contains(c, uniqueKey) Then
            ws_tmpTemplateList.Cells(lineT, 10).value = "ARTIKL NENI V CENIKU !!!!" & " (" & puvodniNazevArtikluVsablone & ")"
            ws_tmpTemplateList.Cells(lineT, 12).value = ""
            ws_tmpTemplateList.Cells(lineT, 13).value = 0 'Sleva VB, Kostelnik 2019-02-15
        Else
            ws_tmpTemplateList.Cells(lineT, 10).value = c.Item(uniqueKey & "POPIS")
            ws_tmpTemplateList.Cells(lineT, 12).value = c.Item(uniqueKey & "MJ")
            ws_tmpTemplateList.Cells(lineT, 13).value = c.Item(uniqueKey & "SLEVA") 'Kostelnik 2019-02-15
        End If
    Next

    Set c = Nothing
    Set ws_zdroj = Nothing
    
End Function

Function Contains(col As Collection, key As Variant) As Boolean 'Kostelnik 2019-01-30
    On Error Resume Next
    col (key)
    Contains = (Err.Number = 0)
    Err.Clear
End Function

Function zobrazTemplateGUI(sheetName As String) 'Kostelnik 2019-01-30
    Dim t As Template
    Set t = Template
    
    'nastavim RowSource
    Dim lastLine As Long
    lastLine = ThisWorkbook.Worksheets(sheetName).Range("A" & Rows.count).End(xlUp).Row
    
    If lastLine > 1 Then 'pokud neni zadny nalezeny zaznam, tak nic nezobrazim, bet teto podminky by se vlozilo zahlavi (prvni radek)
        t.listBox_sablony.RowSource = sheetName & "!B2:B" & lastLine
    Else
        t.listBox_sablony.RowSource = sheetName & "!B2:B2" 'bude prazdny radek, ale zustane zahlavi
    End If
       
    templateImport_selectedLine = -1 'Tato hodnota se nastavi ve formu
    g_vyplnit_spotrebu = False
    t.show
    
    Unload t
    Set t = Nothing
End Function

Function prepareRowsByTemplateID(template_line As Long, t As Template) 'Kostelnik 2019-01-30
    Dim sheetName As String
    sheetName = tmpTemplateList
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(sheetName)
    
    'oblast, kde bude obsazeny radky dle vybrane sablony
    'T - puvodni mnozstvi ze sablony
    'U - nasobny koeficient
    
    ws.Range("N:V").ClearContents
    ws.Range("F1:L1").copy
    ws.Range("N1").PasteSpecial xlPasteValues
    ws.Range("N1").PasteSpecial xlPasteFormats
    
    Dim id As String
    template_line = template_line + 1 'protoze ve zdrojovem listu je pouzito zahlavi
    id = ws.Cells(template_line, 1).value 'z cisla radku z listboxu zjistim index

    
    Dim lineT As Long
    Dim lastLineT As Long
    lastLineT = ws.Range("F" & Rows.count).End(xlUp).Row 'posledni radek vyhledavaci oblasti
    
    Dim newLine As Long
    newLine = 1
    
    Dim curr_id As String
    
    For lineT = 2 To lastLineT 'radeji projedu uplne celou tabulky, kdyby bylo nejak poprehazovane radky
        curr_id = ws.Cells(lineT, 6).value
        If curr_id = id Then
            newLine = newLine + 1
            ws.Cells(newLine, 14).value = ws.Cells(lineT, 6).value 'ID
            ws.Cells(newLine, 14 + 1).value = ws.Cells(lineT, 6 + 1).value 'skupina
            ws.Cells(newLine, 14 + 2).value = ws.Cells(lineT, 6 + 2).value 'artikl
            ws.Cells(newLine, 14 + 3).value = ws.Cells(lineT, 6 + 3).value 'PG
            ws.Cells(newLine, 14 + 4).value = ws.Cells(lineT, 6 + 4).value 'nazev
            'ws.Cells(newLine, 14 + 4).Value = ws.Cells(lineT, 6 + 4).Value 'mnozstvi

            ws.Cells(newLine, 14 + 6).value = ws.Cells(lineT, 6 + 6).value 'mj
            
            ws.Cells(newLine, 14 + 7).value = ws.Cells(lineT, 6 + 5).value 'U - puvodni mnozstvi ze sablony
            ws.Cells(newLine, 14 + 8).value = 1 'V - nasobny koeficient, predpoklada se, ze sablony jsou prepocteny pro jednotkovy koeficient
            ws.Cells(newLine, 14 + 5).FormulaR1C1 = "=RC[2]*RC[3]"
            ws.Cells(newLine, 14 + 9).value = ws.Cells(lineT, 6 + 7) 'W - sleva VB, Kostelnik 2019-02-15
        End If
    Next
    
    If newLine = 1 Then 'zada data
        t.listBox_polozky.RowSource = vbNullString
    Else
        t.listBox_polozky.RowSource = sheetName & "!" & "O2:T" & newLine
    End If
    
    Application.CutCopyMode = False
    Set ws = Nothing
End Function

Function updateTemplateKoef(koef As Double) 'Kostelnik 2019-01-30
    Dim sheetName As String
    sheetName = tmpTemplateList
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(sheetName)
    
    Dim line As Long
    Dim lastLine As Long
    lastLine = ws.Range("N" & Rows.count).End(xlUp).Row 'posledni radek vyhledavaci oblasti
    
    For line = 2 To lastLine
        ws.Cells(line, 22).value = koef
    Next
    
    Set ws = Nothing
End Function

Function insertTemplateRowsIntoSpec(sheetName As String) 'Kostelnik 2019-01-30
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    Application.EnableEvents = False

    Dim ws_template As Worksheet
    Set ws_template = ThisWorkbook.Worksheets(sheetName)
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
     
    'Kostelnik 2019-02-18 prepracovani vkladani sablon, umozneni vlozeni vice sablon
    'sablona se vsadi do zvoleneho radku, pokud neni vybrany radek, zacne se vkladan na konec - od posledniho neprazdneho radku
    'pokud je oznacena bunka/radek uprostred specifikace, vsadi se sablona mezi tyto radky
    
    Dim i As Long
    Dim vybranyRadek As Boolean
    i = cisloVybranehoRadkuVradcichSpecifikace
    
    If (i = -1) Then 'neni vybran aktivni radek v pracovni oblasti radku specifikace, v tom pripade najdu posledni volny radek
        i = findNextEmptyRowInSpecifikace(ws)
        vybranyRadek = False
    Else
        vybranyRadek = True
    End If
        
    'pocet nasledujicich prazdnych radku od oznaceneho startovaciho radku vlozeni (zda se vleze cela sablona)
    Dim pocetNasledujichPrazdnychRadku As Long
    pocetNasledujichPrazdnychRadku = getPocetPoSobeNasledujicichPrazdnychRadku(ws, i)
            
    Dim line As Long
    line = i 'radek, kde zacnu vkladat sablonu
        
    Dim lastLineT As Long
    lastLineT = ws_template.Range("N" & Rows.count).End(xlUp).Row 'posledni radek vyhledavaci oblasti
    
    Dim lineT As Long
    lineT = 2
    
    'kontrola zda se sablona vubec vleze
    Dim pocetRadkuSablony As Long
    pocetRadkuSablony = lastLineT - lineT + 1
    
    Dim radkuKvytvoreni As Long
    radkuKvytvoreni = pocetRadkuSablony - pocetNasledujichPrazdnychRadku
    
    If radkuKvytvoreni > 0 Then
        If vybranyRadek Then
             Call insertBlankRows(radkuKvytvoreni, i)
        Else
             Call insertBlankRows(radkuKvytvoreni)
        End If
    End If
    
    'article properties, 'stejna funkce je i u vyber artiklu
    Dim iap As InsertArticleProperties
    Set iap = New InsertArticleProperties
    iap.initClass
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Dim articleNo As String
    Dim pg As String
    Dim sleva As Double
    
    Call unprotectSpecifikace
           
    Call refreshSpecificationFormulas(line, line + pocetRadkuSablony - 1, True, False, True)
    
    Dim isIzolantArticle As Boolean
    
    For lineT = 2 To lastLineT
        ws.Cells(line, 1).value = ws_template.Cells(lineT, 15).value 'skupina
        articleNo = ws_template.Cells(lineT, 15 + 1).value
        pg = ws_template.Cells(lineT, 15 + 2).value
        
        isIzolantArticle = iap.isArcticleIzolant(articleNo, pg) 'stejna funkce je i u vyberu artiklu
        
        ws.Cells(line, 1 + 1).value = articleNo 'artikl
        ws.Cells(line, 1 + 2).value = pg 'PG
        ws.Cells(line, 1 + 3).value = ws_template.Cells(lineT, 15 + 3).value 'popis
        
        've sloupci U se v udalosti zaokrouhluje hodnota, pokud jde o VF
        sleva = ws_template.Cells(lineT, 23).value 'VB sleva, Kostelnik 2019-02-15
        
        If g_vyplnit_spotrebu Then
             ws.Cells(line, 1 + 7).value = ws_template.Cells(lineT, 15 + 7).value 'vymera
             ws.Cells(line, 1 + 9).value = ws_template.Cells(lineT, 15 + 6).value 'musim vlozit puvodni spotrebu na 1m2
        End If

        Call nastaveniSlevNaRadku(iap, ws, line, sleva, isIzolantArticle) 'Kostelnik 2019-05-13
                                    
        Call lockCells(ws, line, iap.modeType, iap.priceListType, isIzolantArticle)
        Call setArticleNameValidation(ws, articleNo, line, False)
        
        line = line + 1
    Next
    
    Call protectSpecifikace
    Application.EnableEvents = True
    
    iap.cleanClass
    Set iap = Nothing
    
    Set ws_template = Nothing
    Set ws = Nothing
    
    Exit Function
    
ErrHandler:
    Application.EnableEvents = True
    Call protectSpecifikace
    Application.DisplayAlerts = True
    MsgBox Err.Description, vbExclamation
End Function

Function getArticleRowFromArticleForm() As Collection 'Kostelnik 2018-11-29
    On Error GoTo ErrHandler
    If g_protected_mode Then
        Exit Function
    End If
    
    Set getArticleRowFromArticleForm = Nothing
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    Dim sk As String
    'sk = "F" 'toto bude vychozi skupina
    sk = getDefaultGroupBySelesprice 'Kostelnik 2019-03-06
    
    Call findArticlesAndCreateMenu("")
    
    Application.ScreenUpdating = False
     
    Dim ac As ArticleChooser
    Set ac = New ArticleChooser
    
    Dim retFlag As Integer
    retFlag = setSourceDataIntoArticleForm_Skupiny(tmpMenuCategory, ac, sk)
    If retFlag = -1 Then 'nejaka chyba
        GoTo konec
    End If
                          
    Erase listSelectedArticlesFromListBox
        
    ac.listBox_polozky.MultiSelect = fmMultiSelectExtended
    
    ac.show
    Unload ac
    Set ac = Nothing
           
    If listSelectedArticlesFromListBox(LBound(listSelectedArticlesFromListBox)) > 0 Then
        Dim wsc As Worksheet
        Dim ws_zdroj As Worksheet
    
        Set wsc = ThisWorkbook.Worksheets(tmpMenuCategory)
        
        Dim zdrojAktivni As String
        zdrojAktivni = getActivePricelistSheetSourceName 'Kostelnik 2019-03-06
    
        Set ws_zdroj = ThisWorkbook.Worksheets(zdrojAktivni)
                      
        Set getArticleRowFromArticleForm = getListOfArticles(wsc, ws_zdroj, listSelectedArticlesFromListBox)
              
        Set wsc = Nothing
        Set ws_zdroj = Nothing
    End If
    
konec:
    
    Set ws = Nothing
    
    Application.DisplayAlerts = True
    'Application.ScreenUpdating = True
    Exit Function

ErrHandler:
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    MsgBox Err.Description
End Function

Function initArticleRowsListIntoTemplate(Optional idHeader As Long = -1) As Long 'Kostelnik 2019-02-20
    initArticleRowsListIntoTemplate = 0
    
    Dim wsTemplate As Worksheet
    Set wsTemplate = ThisWorkbook.Worksheets(tmpTemplateList)
    
    wsTemplate.Range("AA:AG").ClearContents
    wsTemplate.Cells(1, 27).value = "Skupina"
    wsTemplate.Cells(1, 28).value = "Artikl"
    wsTemplate.Cells(1, 29).value = "PG"
    wsTemplate.Cells(1, 30).value = "N|fffd|zev"
    wsTemplate.Cells(1, 31).value = "Mno|fffd|."
    wsTemplate.Cells(1, 32).value = "MJ"
    wsTemplate.Cells(1, 33).value = "Poradi"
    
    If idHeader <> -1 Then 'nacist radky existujici sablony
        'zkopiruji radky sablony do vyberove oblasti
        Dim lastLineZdroj As Long
        lastLineZdroj = wsTemplate.Range("F" & Rows.count).End(xlUp).Row
        
        Dim line As Long
        line = 1
        
        Dim poradi As Long
        poradi = 10
        
        Dim i As Long
        For i = 2 To lastLineZdroj
            If idHeader = wsTemplate.Cells(i, 6).value Then
                line = line + 1
                wsTemplate.Cells(line, 27).value = wsTemplate.Cells(i, 7).value
                wsTemplate.Cells(line, 28).value = wsTemplate.Cells(i, 8).value
                wsTemplate.Cells(line, 29).value = wsTemplate.Cells(i, 9).value
                wsTemplate.Cells(line, 30).value = wsTemplate.Cells(i, 10).value
                wsTemplate.Cells(line, 31).value = wsTemplate.Cells(i, 11).value
                wsTemplate.Cells(line, 32).value = wsTemplate.Cells(i, 12).value
                wsTemplate.Cells(line, 33).value = poradi
                poradi = poradi + 10
            End If
        Next
        
        initArticleRowsListIntoTemplate = line
    End If
    
    Set wsTemplate = Nothing
End Function

Function writeArticleRowsListIntoTemplate(col As Collection) As Long 'Kostelnik 2019-02-20, kolekce ma zatim vzdy jen jednu polozku, vyber pouze jednoho artiklu ve formulari
    On Error GoTo ErrHandler
    
    Dim wsTemplate As Worksheet
    Set wsTemplate = ThisWorkbook.Worksheets(tmpTemplateList)
    
    Dim line As Long
    line = wsTemplate.Range("AA" & Rows.count).End(xlUp).Row 'posledni radek vyhledavaci oblasti
        
    Dim clArticle As article
    
    Dim i As Integer
    For i = 1 To col.count
        Set clArticle = col.Item(i)
        line = line + 1
        wsTemplate.Cells(line, 27).value = clArticle.skupina
        wsTemplate.Cells(line, 28).value = clArticle.articleNo
        wsTemplate.Cells(line, 29).value = clArticle.pg
        wsTemplate.Cells(line, 30).value = clArticle.key
        wsTemplate.Cells(line, 31).value = 0#
        wsTemplate.Cells(line, 32).value = clArticle.mj
        Set clArticle = Nothing
    Next
    
    Dim idx As Integer
    Dim poradi As Long
    poradi = 10
    For idx = 2 To line
        wsTemplate.Cells(idx, 33).value = poradi
        poradi = poradi + 10
    Next
    
    Set clArticle = Nothing
    writeArticleRowsListIntoTemplate = line
    
konec:
    Set wsTemplate = Nothing

    Application.DisplayAlerts = True
    Exit Function

ErrHandler:
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    MsgBox Err.Description
End Function

Function changeOrderOfRowTemplate(index As Long, direction As String) As Long 'Kostelnik 2019-02-20
    Dim newIndex As Long 'poradi polozky v listboxu po serazeni
    index = index + 2 'kvuli UI indexovani od nuly, a ve zdrojovem listu je prvni radek zahlavi
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(tmpTemplateList)
    
    Dim lastLine As Long
    lastLine = ws.Range("AG" & Rows.count).End(xlUp).Row 'posledni radek vyhledavaci oblasti
    
    'nastavim poradi
    Dim poradi As Long
    poradi = ws.Cells(index, 33).value
    
    If direction = "down" Then
        poradi = poradi + 11 '11 moje zazracna konstanta, diky tomu nastavim poradi takove, aby nemelo vice polozek stejnou hodnotu poradi
        newIndex = index - 2 + 1
    ElseIf direction = "up" Then
        poradi = poradi - 11
        newIndex = index - 2 - 1
    End If
    
    ws.Cells(index, 33).value = poradi
    
    'provedu serazeni dle poradi (sloupec AG)
    ws.Sort.SortFields.Clear
    ws.Sort.SortFields.Add key:=Range("AG2" & ":AG" & lastLine), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal 'seradit chci ascendig
    With ws.Sort
        .SetRange Range("AA2" & ":" & "AG" & lastLine)  'seradit jen jeden sloupec, bez ohledu na okolni sloupce
        '.Header = xlYes
        .Header = xlNo
        .MatchCase = False
        .Orientation = xlTopToBottom
        .SortMethod = xlPinYin
        .Apply
    End With
    
    'nove ocislovani poradi
    Dim idx As Integer
    poradi = 10
    For idx = 2 To lastLine
        ws.Cells(idx, 33).value = poradi
        poradi = poradi + 10
    Next
    
    Set ws = Nothing
    
    changeOrderOfRowTemplate = newIndex
End Function

Function updateQtyForTemplateRow(index As Long, num As Double) 'Kostelnik 2019-02-20
    index = index + 2 'kvuli UI indexovani od nuly, a ve zdrojovem listu je prvni radek zahlavi
    
    If index > 1 Then
        Dim ws As Worksheet
        Set ws = ThisWorkbook.Worksheets(tmpTemplateList)
        ws.Cells(index, 31).value = num
        
        Set ws = Nothing
    End If
End Function

Function getQtyFromTemplateRow(index As Long) As Double 'Kostelnik 2019-02-20
    index = index + 2
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(tmpTemplateList)
    getQtyFromTemplateRow = ws.Cells(index, 31).value
    
    Set ws = Nothing
End Function

Function removeRowFromTemplates(index) As Long 'Kostelnik 2019-02-20
    index = index + 2
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(tmpTemplateList)
    ws.Range("AA" & index & ":AG" & index).Delete Shift:=xlUp
    
    Dim lastLine As Long
    lastLine = ws.Range("AA" & Rows.count).End(xlUp).Row
    
    removeRowFromTemplates = lastLine
    
    Set ws = Nothing
End Function

Function templateCreatorSaveTemplate(id_sablony As Long, popisSablony As String) As Boolean 'Kostelnik 2019-02-20
    On Error GoTo ErrHandler
    templateCreatorSaveTemplate = True
    
    Application.DisplayAlerts = False
    
    If popisSablony = "" Then
        MsgBox "Vypl|fffd|te n|fffd|zev |fffd|ablony.", vbExclamation
        templateCreatorSaveTemplate = False
        GoTo konec
    End If
    
    Dim wsSpecT As Worksheet
    Set wsSpecT = ThisWorkbook.Worksheets(tmpTemplateList)
    
    'radky zdroj
    Dim lastLineRadkyZdroj As Long
    lastLineRadkyZdroj = wsSpecT.Range("AA" & Rows.count).End(xlUp).Row
    
    If lastLineRadkyZdroj < 2 Then
         MsgBox "|fffd|ablona neobsahuje |fffd||fffd|dn|fffd| artikl.", vbExclamation
        templateCreatorSaveTemplate = False
        GoTo konec
    End If
    
    Dim wb As Workbook
    Set wb = getZdrojDat(specifikace_zakaznici, False) 'false - oteviram pro zapis
    
    If wb Is Nothing Then 'soubor nenalezen
        MsgBox "Nenalezen soubor " & specifikace_zakaznici & ".", vbExclamation
        templateCreatorSaveTemplate = False
        GoTo konec
    End If
    
    Dim ws As Worksheet
    Set ws = wb.Worksheets("sablony")
        
    Dim lineHlavicka As Long
    lineHlavicka = -1
    
    Dim lineRadky As Long
    lineRadky = -1
    
    Dim lastLine As Long
    
    If id_sablony < 0 Then '-1 = nova sablona, najdu nove max id, jinak aktualizace stavajici, -2 duplikace existujici, chovase to jako kdyby se ukladala nova sablona s ID -1
        id_sablony = CLng(Application.WorksheetFunction.Max(ws.Range("A:A"))) + 1
        
        'hlavicka
        lineHlavicka = ws.Range("A" & Rows.count).End(xlUp).Row
        lineHlavicka = lineHlavicka + 1
        
        'radky
        lineRadky = ws.Range("F" & Rows.count).End(xlUp).Row
        lineRadky = lineRadky + 1
    Else
        'musim najit radek dle id
        
        'hlavicka
        Dim j As Long
        lastLine = ws.Range("A" & Rows.count).End(xlUp).Row
        For j = 3 To lastLine
            If id_sablony = ws.Cells(j, 1).value Then
                lineHlavicka = j
                Exit For
            End If
        Next
        
        'radky, jednodusi je vymazat oblast a vlozit na konec novou, ktera muze mit jiny pocet radku
        lastLine = ws.Range("F" & Rows.count).End(xlUp).Row
        For j = 3 To lastLine
            If id_sablony = ws.Cells(j, 6).value Then 'radky se shodnym id vymazu
                ws.Range("F" & j & ":L" & j).Delete Shift:=xlUp
                j = j - 1 'musim se vratit o radek zpet, protoze pri vymazu jsem posunul radky o jednu pozici nahoru
            End If
        Next
        
        lineRadky = ws.Range("F" & Rows.count).End(xlUp).Row
        lineRadky = lineRadky + 1
    End If
    
    If lineHlavicka = -1 Or lineRadky = -1 Then
        templateCreatorSaveTemplate = False
        GoTo konec
    End If
    
    'hlavicka
    ws.Cells(lineHlavicka, 1).value = id_sablony
    ws.Cells(lineHlavicka, 2).value = popisSablony
   
    'radky
    Dim i As Long
    For i = 2 To lastLineRadkyZdroj
        ws.Cells(lineRadky, 6).value = id_sablony
        ws.Cells(lineRadky, 7).value = wsSpecT.Cells(i, 27).value 'Skupina
        ws.Cells(lineRadky, 8).value = wsSpecT.Cells(i, 28).value 'Artikl
        ws.Cells(lineRadky, 9).value = wsSpecT.Cells(i, 29).value 'PG
        ws.Cells(lineRadky, 10).value = wsSpecT.Cells(i, 30).value 'N|fffd|zev
        ws.Cells(lineRadky, 11).value = wsSpecT.Cells(i, 31).value 'Mno|fffd|.
        ws.Cells(lineRadky, 12).value = wsSpecT.Cells(i, 32).value 'MJ

        lineRadky = lineRadky + 1
    Next
        
    wb.Save
    Set ws = Nothing
    Set wsSpecT = Nothing
    
konec:
    If Not wb Is Nothing Then
        wb.Close
        Set wb = Nothing
    End If
   
    Application.DisplayAlerts = True
    Exit Function

ErrHandler:
    templateCreatorSaveTemplate = False
    Application.DisplayAlerts = True
    MsgBox Err.Description
End Function

Function setDataTemplateHeaders(ByRef listBox_hlavicky As MSForms.listBox) 'Kostelnik 2019-02-21
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(tmpTemplateList)
    
    Dim lastLine As Long
    lastLine = ws.Range("A" & Rows.count).End(xlUp).Row 'posledni radek vyhledavaci oblasti
    
    If lastLine <= 2 Then
        listBox_hlavicky.RowSource = tmpTemplateList & "!A2:B2"
    Else
        listBox_hlavicky.RowSource = tmpTemplateList & "!A2:B" & lastLine
    End If
    
    Set ws = Nothing
End Function

Function deleteTemplate(id_sablony) As Boolean 'Kostelnik 2019-02-21
    On Error GoTo ErrHandler
    deleteTemplate = True
        
    If id_sablony = -1 Then
        deleteTemplate = False
        MsgBox "Nejprve vyberte |fffd|ablonu, kterou chcete smazat.", vbExclamation
        Exit Function
    End If
    
    Dim r
    r = MsgBox("Opravdu chcete vymazat |fffd|ablonu?", vbYesNo + vbQuestion)
    If r = vbNo Then
        deleteTemplate = False
        Exit Function
    End If
    
    Application.DisplayAlerts = False
        
    Dim wb As Workbook
    Set wb = getZdrojDat(specifikace_zakaznici, False) 'false - oteviram pro zapis
    
    If wb Is Nothing Then 'soubor nenalezen
        MsgBox "Nenalezen soubor " & specifikace_zakaznici & ".", vbExclamation
        deleteTemplate = False
        GoTo konec
    End If
    
    'vymaz sablony
    Dim ws As Worksheet
    Set ws = wb.Worksheets("sablony")
    
    'hlavicka
    Dim lastLine As Long
    lastLine = ws.Range("A" & Rows.count).End(xlUp).Row
    
    'vymaz hlavicky dle ID
    Dim j As Long
    For j = 3 To lastLine
        If id_sablony = ws.Cells(j, 1).value Then
            ws.Range("A" & j & ":B" & j).Delete Shift:=xlUp
            Exit For
        End If
    Next
        
    'radky, jednodusi je vymazat oblast a vlozit na konec novou, ktera muze mit jiny pocet radku
    lastLine = ws.Range("F" & Rows.count).End(xlUp).Row
    For j = 3 To lastLine
        If id_sablony = ws.Cells(j, 6).value Then 'radky se shodnym id vymazu
            ws.Range("F" & j & ":L" & j).Delete Shift:=xlUp
            j = j - 1 'musim se vratit o radek zpet, protoze pri vymazu jsem posunul radky o jednu pozici nahoru
        End If
    Next
        
    wb.Save
    Set ws = Nothing
    
konec:
    If Not wb Is Nothing Then
        wb.Close
        Set wb = Nothing
    End If
   
    Application.DisplayAlerts = True
    Exit Function
    
ErrHandler:
    deleteTemplate = False
    Application.DisplayAlerts = True
    MsgBox Err.Description
End Function

Function openTemplateCreator()
    'TODO
    Call onlyDeleteAndCreateSheetTmpTemplateList
    
    Dim t As TemplateCreator
    Set t = New TemplateCreator
    
    t.show
    Unload t
    Set t = Nothing
    
    'TODO
    Call deleteList(tmpTemplateList)
    
     ThisWorkbook.Worksheets("Specifikace").Activate
End Function

Function testSaveTemplateData()
    Debug.Print templateCreatorSaveTemplate(-1, "AAAxxxx")
End Function
Attribute VB_Name = "M08_kontaktni_udaje"
Option Explicit
Public Const tmpContactList = "tmpContactList"

Function readContact() 'Kostelnik 2019-02-05, funkce nacte z externiho souboru specifikace_zakaznici dostupne udaje o obchodnikovi, pouziva se dale pro tisk zapati
    On Error GoTo ErrHandler
    
    Application.ScreenUpdating = False
    
    Dim sheetName As String
    sheetName = tmpContactList
    
    Dim ret As Integer
    
    If doLogging Then
        Call logFile("readContact: #100")
    End If
    
    'pripravim data z externiho souboru
    ret = deleteAndCreateTmpContactList(sheetName)
    If ret = -1 Then 'nejaka chyba, napr. nenalezen soubor se zakazniky
        GoTo konec
    End If
    
    If doLogging Then
        Call logFile("readContact: #200")
    End If
    
    ThisWorkbook.Worksheets("Specifikace").Activate
   
konec:
    Call protectWorkBook
    ThisWorkbook.Worksheets("Specifikace").Activate
    
    If doLogging Then
        Call logFile("readContact: #EXIT")
    End If
    Exit Function
    
ErrHandler:
    Dim strErr As String
    strErr = Err.Description
    
    Call protectWorkBook
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    
    If doLogging Then
        Call logFile("readContact: ErrHandler:" & strErr)
    End If
    MsgBox strErr
End Function

Function deleteAndCreateTmpContactList(sheetName As String) As Integer 'Kostelnik 2019-02-05
    deleteAndCreateTmpContactList = 0
    
    On Error GoTo ErrHandler
    
    Dim ws As Worksheet
    
    If doLogging Then
        Call logFile("deleteAndCreateTmpContactList: #100")
    End If
    
    'vymazu list, pokud existuje
    Call deleteList(sheetName)

    If doLogging Then
        Call logFile("deleteAndCreateTmpContactList: #200")
    End If
    
    'vytvoreni noveho cisteho listu
    ThisWorkbook.Unprotect Password:="cube"
    
    Set ws = Sheets.Add(After:=Sheets(ThisWorkbook.Worksheets.count))
    ws.name = sheetName
    'TODO - aktivovat
    ws.Visible = xlSheetHidden
    
    Call protectWorkBook
    
    If doLogging Then
        Call logFile("deleteAndCreateTmpContactList: #300")
    End If
    
    'zkopiruji hodnoty ze zdroje
    Dim wb As Workbook
    Set wb = getZdrojDat(specifikace_zakaznici, True)
    
    If wb Is Nothing Then 'soubor nenalezen
        MsgBox "Nenalezen soubor " & specifikace_zakaznici & ".", vbExclamation
        deleteAndCreateTmpContactList = -1
        GoTo konec
    End If
    
    If doLogging Then
        Call logFile("deleteAndCreateTmpContactList: #400")
    End If
    
    Application.DisplayAlerts = False
    
    ws.Range("C2:C2").NumberFormat = "@" 'tel/fax 'format na jednu bunku
    
    'zkopiruji hlavicku a rade
    wb.Worksheets("kontaktni_udaje").Range("A1:D2").copy
    ws.Range("A1").PasteSpecial xlPasteValues
    'ws.Range("A1").PasteSpecial xlPasteFormats
        
    ws.Activate
    ws.Range("A1").Select
    Application.CutCopyMode = False
    
    If Not wb Is Nothing Then
        wb.Close
        Set wb = Nothing
    End If
    
    If doLogging Then
        Call logFile("deleteAndCreateTmpContactList: #500")
    End If
    
konec:
    Application.DisplayAlerts = True
    Set ws = Nothing
    
    If doLogging Then
        Call logFile("deleteAndCreateTmpContactList: #EXIT")
    End If
    Exit Function
    
ErrHandler:
    Dim strErr As String
    strErr = Err.Description
    
    Call protectWorkBook
    Application.DisplayAlerts = True
    
    If doLogging Then
        Call logFile("deleteAndCreateTmpContactList: ErrHandler:" & strErr)
    End If
    MsgBox strErr
End Function

Function zobrazContactGUI() 'Kostelnik 2019-02-05
    Dim u As UdajeObchodnika
    Set u = New UdajeObchodnika
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(tmpContactList)
    
    u.textbox_jmeno = ws.Cells(2, 1).value
    u.textbox_mail = ws.Cells(2, 2).value
    u.textbox_tel = ws.Cells(2, 3).value
    u.CheckBox1.value = "1" = ws.Cells(2, 4).value
    
    Set ws = Nothing
        
    u.show
    
    Unload u
    Set u = Nothing
End Function

Function saveContact(u As UdajeObchodnika)
 On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    Dim wb As Workbook
    Set wb = getZdrojDat(specifikace_zakaznici, False)
    
    If wb Is Nothing Then 'soubor nenalezen
        MsgBox "Nenalezen soubor " & specifikace_zakaznici & ".", vbExclamation
        'saveContact = -1
        GoTo konec
    End If
    
    Dim ws_db As Worksheet
    Set ws_db = wb.Worksheets("kontaktni_udaje")
        
    Application.DisplayAlerts = False
    
    ws_db.Range("C2:C2").NumberFormat = "@" 'tel - format na jednu bunku
    
    ws_db.Cells(2, 1).value = u.textbox_jmeno
    ws_db.Cells(2, 2).value = u.textbox_mail
    ws_db.Cells(2, 3).value = u.textbox_tel
    
    If u.CheckBox1.value Then
        ws_db.Cells(2, 4).value = "1"
    Else
        ws_db.Cells(2, 4).value = ""
    End If
            
    wb.Save
    ThisWorkbook.Worksheets(tmpContactList).Range("A1:D2").value = ws_db.Range("A1:D2").value
        
konec:
    Application.DisplayAlerts = True
    Set ws_db = Nothing
    If Not wb Is Nothing Then
        wb.Close
        Set wb = Nothing
    End If
    
    Exit Function
    
ErrHandler:
    Call protectWorkBook
    Application.DisplayAlerts = True
    MsgBox Err.Description
End Function

Attribute VB_Name = "M09_formatovani_a_tisk"
Option Explicit

'Modul pro nastaveni formatovani pred tiskem, hlavicky, paticky

Public Const formats_sheet = "formats_sheet"

Function setFooter() 'Kostelnik 2019-02-05
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    Dim ws_contact As Worksheet
    Set ws_contact = ThisWorkbook.Worksheets(tmpContactList)
    
    Dim jmeno As String
    Dim email As String
    Dim tel As String
    Dim platnost As String
    
    If doLogging Then
        Call logFile("setFooter: #100")
    End If
        
    Dim obchodnik_footer As String
    obchodnik_footer = ""
    
    If ws_contact.Cells(2, 4).value = "1" Then 'povolen tisk udaju do paticky
        jmeno = ws_contact.Cells(2, 1).value
        email = ws_contact.Cells(2, 2).value
        tel = ws_contact.Cells(2, 3).value
        platnost = ThisWorkbook.Worksheets("Specifikace").Range("field_platnost")
        obchodnik_footer = "     " & jmeno & ", e-mail: " & email & ", tel.: " & tel & ", platnost do: " & platnost
    End If
    
    Set ws_contact = Nothing
    
    If doLogging Then
        Call logFile("setFooter: #200")
    End If
        
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    With ws.PageSetup
        '.LeftMargin = Application.CentimetersToPoints(0.5) 'okraje stranky
        '.FooterMargin = Application.CentimetersToPoints(0.5) '-nefunguje, nastavena rucne volba zarovnat s okrajji stranky
        '.RightFooter = ""
        .LeftFooter = "Strana &P/&N" & obchodnik_footer
    End With
    
    If doLogging Then
        Call logFile("setFooter: #300")
    End If
    
    Call setPrintArea(ws)
    
    If doLogging Then
        Call logFile("setFooter: #400")
    End If
    
    Set ws = Nothing
    
    If doLogging Then
        Call logFile("setFooter: #EXIT")
    End If
    
    Exit Function
    
ErrHandler:
    Dim strErr As String
    strErr = Err.Description
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    
    If doLogging Then
        Call logFile("setFooter: ErrHandler:" & strErr)
    End If
    
    MsgBox strErr
End Function

Function removeAllBlankRows() 'Kostelnik 2019-02-06, vymaze vsechny prazdne radky od konce, jakmile najde prvni neprazdny radek, proces se ukonci
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Dim stop_line As Long
    stop_line = getLastWorkingRow()
    
    Dim v1 As String
    Dim v2 As String
    Dim v3 As String
    Dim v4 As String
    
    Call unprotectSpecifikace
    Dim i As Long
    For i = stop_line To (spec_input_start_line + 1) Step -1 'vymazu vsechny prazdne radky krome prvniho, ten potrebuji, aby se zachovalo celkove souctove pole a prvni radek se pouziva pro kopirovani formatu
        v1 = ws.Cells(i, 1).value
        v2 = ws.Cells(i, 2).value
        v3 = ws.Cells(i, 3).value
        v4 = ws.Cells(i, 4).value
        
        If v1 = "" And v2 = "" And v3 = "" And v4 = "" Then
            ws.Rows(i).Delete
        Else
            Exit For
        End If
    Next
    
    stop_line = getLastWorkingRow()
    ws.Range("A" & stop_line).Select
    
    Call protectSpecifikace
    Application.EnableEvents = True
        
    Set ws = Nothing
End Function

Function insertBlankRows(count As Long, Optional beforeLineNo As Long = -1, Optional protecting As Boolean = True) 'Kostelnik 2019-02-06, vlozi zadany pocet radku na konec tabulky
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    Dim ws_f As Worksheet
    Set ws_f = ThisWorkbook.Worksheets(formats_sheet)
    
    If protecting Then
        Call unprotectSpecifikace
    End If
    
    Dim refFormatRow As Long
    refFormatRow = ws_f.Range("field_formatsheet_row").Row
            
    Dim currentLineNo As Long
    Dim vyskaRadku As Double

    Dim i As Integer
    For i = 1 To count
        If beforeLineNo = -1 Then
            currentLineNo = getLastWorkingRow() + 1
        Else
            currentLineNo = beforeLineNo
        End If
        ws.Rows(currentLineNo).Insert Shift:=xlDown
        
        'Kostelnik 2019-04-11 puvodne, nyni vyreseno pres vkladani formatu, kvuli vkladani poznamky do prvniho radku...pak nelze treba zkopirovat format, kdyz je poznamka na 1. i 2. radku
        
        ''kdyz se vklada na uplne prvni radek, tak se chybne nastavuje format ze zahlavi tabulky, v tomto pripade pouziji format z druheho radku
        'If currentLineNo = spec_input_start_line Then
        '    'ws.Range("A" & (spec_input_start_line + 1) & ":Z" & (spec_input_start_line + 1)).copy
        '    ws.Range("A" & (spec_input_start_line + 1) & ":AD" & (spec_input_start_line + 1)).copy 'A:AD - kdyz bude DeBe mod, at se kopiruje vse
        '    vyskaRadku = ws.Rows(spec_input_start_line + 1).RowHeight
        'Else
        '    'ws.Range("A" & spec_input_start_line & ":Z" & spec_input_start_line).copy
        '    ws.Range("A" & spec_input_start_line & ":AD" & spec_input_start_line).copy 'A:AD - kdyz bude DeBe mod, at se kopiruje vse
        '    vyskaRadku = ws.Rows(spec_input_start_line).RowHeight
        'End If
        
        vyskaRadku = ws_f.Rows(refFormatRow).RowHeight
        
        If isDBmode Then
            ws_f.Range("B" & refFormatRow & ":AE" & refFormatRow).copy 'A:AD - kdyz bude DeBe mod
        Else
            ws_f.Range("B" & refFormatRow & ":AA" & refFormatRow).copy
        End If
        
        ws.Range("A" & currentLineNo).PasteSpecial xlPasteFormats
        ws.Rows(currentLineNo).RowHeight = vyskaRadku
        
        Call refreshSpecificationFormulas(currentLineNo, currentLineNo, True, False) 'v cyklu se vola nekolikrat, proto zamerne priznak false = protecting, toto osetrim pred a za cyklem
        ws.Range("D" & currentLineNo & ":F" & currentLineNo).Validation.Delete
    Next
    
    If beforeLineNo = -1 Then
        currentLineNo = getLastWorkingRow()
    Else
        currentLineNo = beforeLineNo
    End If
    ws.Range("A" & currentLineNo).Select
    
    Call zarovnaniNastaveniSpecTlacitekRadku
    
    If protecting Then
        Call protectSpecifikace
    End If
        
    Application.EnableEvents = True
    
    Set ws = Nothing
    Set ws_f = Nothing
End Function
Function getLastWorkingRow() As Long 'Kostelnik 2019-02-06
    getLastWorkingRow = ThisWorkbook.Worksheets("Specifikace").Range("stop_cell").Row - 1
End Function

Function insertBlankRows_1()
    Call insertBlankRows(1)
End Function

Function insertBlankRows_10()
    Call insertBlankRows(10)
End Function

Function insertBlankRowBetween()
    Dim i As Long
    i = cisloVybranehoRadkuVradcichSpecifikace
    If (i = -1) Then
        Exit Function
    End If
    
    Call insertBlankRows(1, i)
End Function

Function cisloVybranehoRadkuVradcichSpecifikace() As Long 'Kostelnik 2019-02-18
    Dim i As Long
    i = ActiveCell.Row
    If ((spec_input_start_line <= i) And (i <= getLastWorkingRow)) = False Then
        cisloVybranehoRadkuVradcichSpecifikace = -1
        Exit Function
    End If
    
    cisloVybranehoRadkuVradcichSpecifikace = i
End Function

Function fitWindowToScreen(Optional r As String = "A12:Z12") 'Kostelnik 2019-02-06
    Application.ScreenUpdating = False
    
    Dim c As Range
    Set c = ActiveCell
    Range(r).Select
    ActiveWindow.Zoom = True
    ActiveSheet.Range(c.Address).Select
End Function

Function scrollWindowToWorkingTable() 'Kostelnik 2019-02-07
    ActiveWindow.ScrollRow = spec_input_start_line - 1
End Function

Function aaa()
    'ThisWorkbook.Worksheets("Specifikace").Rows(31).EntireRow.AutoFit
End Function

Function getLastPrintedRow(ByRef ws As Worksheet) As Long 'Kostelnik 2019-03-25
    Dim lineMax As Long
    Dim line As Long
    
    line = ws.Range("A" & Rows.count).End(xlUp).Row
    lineMax = line
    
    line = ws.Range("B" & Rows.count).End(xlUp).Row 've sloupci B se propisuje popis produktu, beru v potaz i tuto variantu
    If line > lineMax Then
        lineMax = line
    End If
    
    getLastPrintedRow = lineMax
End Function

Function setPrintArea(ByRef ws As Worksheet) 'Kostelnik 2019-03-25
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    With ws.PageSetup
        .printArea = "A1:Z" & getLastPrintedRow(ws)
    End With
    
    If doLogging Then
        Call logFile("setPrintArea: #EXIT")
    End If
    
    Exit Function
    
ErrHandler:
    Dim strErr As String
    strErr = Err.Description
    
    If doLogging Then
        Call logFile("setPrintArea: ErrHandler:" & strErr)
    End If
    MsgBox strErr
End Function

Function removeSelectedSpecRow() 'Kostelnik 2019-04-04
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    If ws.name = ActiveSheet.name Then
        Dim rng As Range
        Set rng = Selection
        
        'Debug.Print rng.Address 'Will return addresses of selected range, muze vratit napr. toto (pomoci ctrl jsem uznacil nektere bunky vicekrat) $D$14:$F$18,$D$20:$F$20,$D$21:$F$21,$D$21:$F$21,$D$21:$F$21,$D$21:$F$21,$D$20:$F$20,$D$21:$F$21,$D$21:$F$21,$D$20:$F$20,$D$21:$F$21), nutne ocistit od duplicit
        'Debug.Print Selection.Areas.count
           
        Dim c As Collection
        Set c = New Collection
        
        Dim c_lines As Collection
        Set c_lines = New Collection
                
        Dim radka As Long
        Dim pocet As Long
        
        Dim i As Long
        Dim j As Long
        
        For i = 1 To rng.Areas.count
            radka = rng.Areas(i).Row
            pocet = rng.Areas(i).Rows.count
            
            If Not Contains(c, "" & radka) Then
                c.Add "", key:=("" & radka)
                For j = radka To (radka + pocet - 1)
                    c_lines.Add j
                Next j
                'Debug.Print radka & "  " & pocet
            End If
        Next i
        
        Dim id_line As Long
        
        Dim strRange As String
        strRange = ""
                
        Dim lastLine As Long
        lastLine = getLastWorkingRow
        
        Dim pocetRadku As Long
        pocetRadku = lastLine - spec_input_start_line + 1
        
        Dim clearLastRow As Boolean
        clearLastRow = False
        
        Dim radkuKvymazu As Long
        radkuKvymazu = 0
        
        For i = 1 To c_lines.count
            id_line = c_lines.Item(i)
            
            If (id_line >= spec_input_start_line) And (id_line <= lastLine) Then 'mazu jen v oblasti radku specifikace
                radkuKvymazu = radkuKvymazu + 1
                If radkuKvymazu < pocetRadku Then 'ochrana, abych nevymazal vsechny radky, posledni radek vyloucim, aby zustal aspon jeden
                    If Len(strRange) > 0 Then
                        strRange = strRange & ","
                    End If
                    strRange = strRange & CStr(id_line) & ":" & CStr(id_line)
                    
                Else
                    clearLastRow = True 'posledni radek nemuzu fyzicky vymazat, tak jej vycistim
                End If
            End If
        Next i
                
        Call unprotectSpecifikace
        Application.EnableEvents = False
        
        If Len(strRange) > 0 Then
            ws.Range(strRange).EntireRow.Delete 'v strRange muze byt oznaceno vice radku soucasne a vymazou se v jednom kroce
        End If
        
        If clearLastRow Then
            Call refreshSpecificationFormulas(spec_input_start_line, spec_input_start_line, True, False, True)
        End If
        
        Call updateSubTotalFormulas(False)
        
        Application.EnableEvents = True
        Call protectSpecifikace
                
        ws.Range("A" & spec_input_start_line).Select
                    
        Set c_lines = Nothing
        Set c = Nothing
    End If
    
    Set ws = Nothing

    'Dim ar As Range
    'Dim c As Range
    
    'For Each ar In Selection.Areas
     '   For Each c In ar ' loop through the area's cells
     '       Debug.Print c.Address
      '  Next c
    'Next ar
    
    Exit Function
    
ErrHandler:
    Application.EnableEvents = True
    Call protectSpecifikace
    Application.DisplayAlerts = True
    MsgBox Err.Description, vbExclamation
End Function

Function insertNote() 'Kostelnik 2019-04-11, poznamka se vlozi do vybranych radku
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    If ws.name = ActiveSheet.name Then
        Dim rng As Range
        Set rng = Selection
           
        Dim c As Collection
        Set c = New Collection
        
        Dim c_lines As Collection
        Set c_lines = New Collection
                
        Dim radka As Long
        Dim pocet As Long
        
        Dim i As Long
        Dim j As Long
        
        Dim lastLine As Long
        lastLine = getLastWorkingRow
        
        For i = 1 To rng.Areas.count
            radka = rng.Areas(i).Row
            pocet = rng.Areas(i).Rows.count
            
            If Not Contains(c, "" & radka) Then
                c.Add "", key:=("" & radka)
                For j = radka To (radka + pocet - 1)
                    If (j >= spec_input_start_line) And (j <= lastLine) Then
                        c_lines.Add j
                        'Debug.Print j
                    End If
                Next j
            End If
        Next i
        
        'seradim cisla
        'https://analystcave.com/vba-arraylist-using-vba-arraylist-excel/
        Dim arr As Object
        Set arr = CreateObject("System.Collections.ArrayList")
        
        For i = 1 To c_lines.count
            arr.Add c_lines.Item(i)
        Next i
  
        arr.Sort
    
        'Optionally reverse the order
        'arr.Reverse
        'arr.RemoveAt (0)
        'Debug.Print arr.Count
 
        'Dim i As Variant
        'For Each i In arr
        '    Debug.Print i
        'Next i
        
        Set c_lines = Nothing 'uz tuto kolekci nepotrebuji
                   
        Dim longMax As Long
        longMax = 2147483647 'maximalni hodnota long
        
        Dim minRow As Long
        minRow = longMax
        
        Dim id_line As Long
        Dim str As String
        
        Dim offset As Long
        offset = 0
        
        'vlozeni radku
        Call unprotectSpecifikace
        Application.EnableEvents = False
                        
        For i = 0 To (arr.count - 1) 'indexing in the VBA ArrayList starts at 0
            id_line = arr.Item(i)
            
            If id_line < minRow Then
                minRow = id_line
            End If
                        
            id_line = id_line + offset 'kvuli posuvu radku po vlozeni predchoziho radku, pokud se vklada vice radku
            
            Call insertBlankRows(1, id_line, False)
            Call formatRowAsNote(ws, id_line)
            
            offset = offset + 1
        Next i
                            
        Application.EnableEvents = True
        Call protectSpecifikace
                
        If minRow = longMax Then 'kdyby neco
            minRow = spec_input_start_line
        End If
        ws.Range("A" & minRow).Select
                            
        Set c = Nothing
        
        arr.Clear
        Set arr = Nothing
    End If
    
    Set ws = Nothing

    Exit Function
    
ErrHandler:
    Application.EnableEvents = True
    Call protectSpecifikace
    Application.DisplayAlerts = True
    MsgBox Err.Description, vbExclamation
End Function

Function formatRowAsNote(ByRef ws As Worksheet, id_line As Long) 'Kostelnik 2019-04-15
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Dim str As String
    str = "A" & id_line & ":Z" & id_line
    ws.Range(str) = ""
                        
    With ws.Range(str)
        .MergeCells = True
        .HorizontalAlignment = xlLeft
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        .Locked = False
    End With
    
    ws.Cells(id_line, 1).Validation.Delete
    ws.Cells(id_line, 4).Validation.Delete
    ws.Cells(id_line, 5).Validation.Delete
    ws.Cells(id_line, 6).Validation.Delete
    
    Application.EnableEvents = True
            
    Exit Function
    
ErrHandler:
    Application.EnableEvents = True
    Application.DisplayAlerts = True
    MsgBox Err.Description, vbExclamation
End Function

Function insertSubTotal() 'Kostelnik 2019-04-12, vlozeni
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    Dim ws_f As Worksheet
    
    If ws.name = ActiveSheet.name Then
        Dim rng As Range
        Set rng = Selection
           
        Dim c As Collection
        Set c = New Collection
        
        Dim c_lines As Collection
        
        Dim c_oblasti As Collection
        Set c_oblasti = New Collection
                
        Dim radka As Long
        Dim pocet As Long
        
        Dim i As Long
        Dim j As Long
        
        Dim lastLine As Long
        lastLine = getLastWorkingRow
        
        Dim longMax As Long
        longMax = 2147483647 'maximalni hodnota long
        
        'If you want to be able to reference a particular item in your VBA Collection by a certain string/name you can also define a key for object added to your VBA Collection like so:
        'myCol.Add 10, "Key10"
        'Debug.Print myCol("Key10") 'Returns 10
        
        Dim pole(1 To 2) As Long
        Dim tmpMin As Long
        Dim tmpMax As Long
        Dim tmpNum As Long
        
        For i = 1 To rng.Areas.count
            radka = rng.Areas(i).Row
            pocet = rng.Areas(i).Rows.count
            
            'Debug.Print radka & "   " & pocet
                                    
            If Not Contains(c, "" & radka) Then
                c.Add radka, key:=("" & radka)
                
                Set c_lines = New Collection
                
                For j = radka To (radka + pocet - 1)
                    If (j >= spec_input_start_line) And (j <= lastLine) Then 'validace na rozsah pouze pro pracovni radky specifikace
                        c_lines.Add j
                        'Debug.Print j
                    End If
                Next j
                    
                'z radku pro danou oblast vyberu validni min, max
                tmpMin = longMax
                tmpMax = 0
                
                For j = 1 To c_lines.count
                    tmpNum = c_lines.Item(j)
                    If tmpNum > tmpMax Then
                        tmpMax = tmpNum
                    End If
                    
                    If tmpNum < tmpMin Then
                        tmpMin = tmpNum
                    End If
                Next j
                
                Erase pole
                pole(1) = tmpMin
                pole(2) = tmpMax
                c_oblasti.Add pole, "" & radka
                
                Set c_lines = Nothing
            End If
        Next i
        
        'seradim cisla
        'https://analystcave.com/vba-arraylist-using-vba-arraylist-excel/
        Dim arr As Object
        Set arr = CreateObject("System.Collections.ArrayList")
        
        For i = 1 To c.count
            arr.Add c.Item(i)
        Next i
  
        arr.Sort
        
        Set c = Nothing 'uz tuto kolekci nepotrebuji
        
        Dim minRow As Long
        minRow = longMax
        
        Dim id_line As Long
        Dim str As String
        
        Dim offset As Long
        offset = 0

        Dim tvar As Variant
                
        Set ws_f = ThisWorkbook.Worksheets(formats_sheet)
        
        Dim vyskaRadku As Double
        
        Dim refFormatRow As Long
        refFormatRow = ws_f.Range("field_formatsheet_row_subtotal").Row
        
        'vlozeni radku
        Call unprotectSpecifikace
        Application.EnableEvents = False
                        
        For i = 0 To (arr.count - 1) 'indexing in the VBA ArrayList starts at 0
            id_line = arr.Item(i)
            
            If id_line < minRow Then
                minRow = id_line
            End If
            
            tvar = c_oblasti.Item("" & id_line)
            
            'kvuli posuvu radku po vlozeni mezisouctoveho radku se vklada offset
            tmpMin = tvar(1) + offset
            'vlozim na prvni radek oblasti poznamku ohranicujici zacatek mezisouctu
            Call insertBlankRows(1, tmpMin, False)
            Call formatRowAsNote(ws, tmpMin)
            offset = offset + 1
            
            tmpMax = tvar(2) + 1 + offset '+1 aby se mezisoucet vlozil pod tento radek, ne "do tohoto radku"
                                               
            Call insertBlankRows(1, tmpMax, False)
            
            Application.EnableEvents = False
            str = "A" & tmpMax & ":Z" & tmpMax 'vymazu hodnoty/vzorce
            ws.Range(str) = ""
                                
            str = "A" & tmpMax & ":U" & tmpMax
            With ws.Range(str)
                .MergeCells = True
                .HorizontalAlignment = xlRight
                .VerticalAlignment = xlCenter
                .WrapText = False
                .Orientation = 0
                .AddIndent = False
                .IndentLevel = 0
                .ShrinkToFit = False
                .ReadingOrder = xlContext
                .Locked = False
                .value = getSheetCaptionTranslationForField(ws.name, "field_cap_mezisoucet", getLang) 'mutace mezisouctu
            End With
            
            str = "V" & tmpMax & ":W" & tmpMax
            With ws.Range(str)
                .MergeCells = True
                .HorizontalAlignment = xlRight
                .VerticalAlignment = xlCenter
                .WrapText = False
                .Orientation = 0
                .AddIndent = False
                .IndentLevel = 0
                .ShrinkToFit = False
                .ReadingOrder = xlContext
                .Locked = True
            End With
            
            If isDBmode Then
                ws_f.Range("B" & refFormatRow & ":AE" & refFormatRow).copy 'A:AD - kdyz bude DeBe mod
                ws.Range("A" & tmpMax & ":AD" & tmpMax).PasteSpecial xlPasteFormats
            Else
                ws_f.Range("B" & refFormatRow & ":AA" & refFormatRow).copy
                ws.Range("A" & tmpMax & ":Z" & tmpMax).PasteSpecial xlPasteFormats
            End If
            
            'nastavit format meny SK pro mezisoucet V:W
            Dim langCode As String
            langCode = getLang
            
            If langCode = "CZ" Then
                'nebudu nic menit, uz je format nastaven v listu formats_sheet
            ElseIf langCode = "SK" Then
                ws.Range("V" & tmpMax & ":W" & tmpMax).NumberFormat = formatUcetniEur2des
            Else
                MsgBox "Pro tutu jazykovou mutaci nen|fffd| nastaven form|fffd|t m|fffd|ny.", vbExclamation
            End If

            'nastavim format pro radek
            vyskaRadku = ws_f.Rows(refFormatRow).RowHeight
            ws.Rows(tmpMax).RowHeight = vyskaRadku
            
            offset = offset + 1
            
            Call setSubTotalFormula(ws, tmpMin + 1, tmpMax - 1) 'korekce +-1 protoze aby se do vzorcu nezahrnul radek poznamky a radek mezisouctu
        Next i
                            
        Call updateSubTotalFormulas(False) 'nutne jeste zaktualizovat aby se po vlozeni noveho mezisouctu spravne aktualizovali i ty ostatni nize zalozene
        
        Application.EnableEvents = True
        Call protectSpecifikace
                
        If minRow = longMax Then 'kdyby neco
            minRow = spec_input_start_line
        End If
        ws.Range("A" & minRow).Select
                            
        Set c = Nothing
        Set c_oblasti = Nothing
        
        Erase pole
        
        arr.Clear
        Set arr = Nothing
    End If
    
    Set ws = Nothing
    Set ws_f = Nothing

    Exit Function
    
ErrHandler:
    Application.EnableEvents = True
    Call protectSpecifikace
    Application.DisplayAlerts = True
    MsgBox Err.Description, vbExclamation
End Function
Attribute VB_Name = "M10_security"
Option Explicit

Private Const unlockSheetSpecifikace = "speclock+"

Public g_protected_mode As Boolean
Public g_is_sheet_specifikace_unlocked As Boolean

Function checkUnlockSpecPassword(pswd As String) As Boolean 'Kostelnik 2019-04-16
    checkUnlockSpecPassword = (pswd = unlockSheetSpecifikace)
End Function

Function isCompanyEnviroment() As Boolean 'Kostelnik 2019-02-07
    On Error GoTo ErrHandler
    
    isCompanyEnviroment = True
    'Dim cn As String
    'Dim un As String
    
    'Note that Environ variables must be handled with care because they are a security risk
    'cn = Environ$("computername")
    'un = Environ$("username")
    
    'MsgBox cn & ", " & un
    
    'https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/windows-scripting/s6wt333f%28v%3dvs.84%29'
    Dim objNetwork As Object
    Set objNetwork = CreateObject("WScript.Network")

    Dim userName As String
    Dim domena As String
    Dim computerName As String
    
    domena = objNetwork.UserDomain
    userName = objNetwork.userName
    computerName = objNetwork.computerName
    
    If InStr(LCase(domena), "sto") = -1 Then
        isCompanyEnviroment = False
        Exit Function
    End If
    
    If Len(userName) <> 8 Then
        isCompanyEnviroment = False
        Exit Function
    End If
    
    If Len(computerName) <> 8 Then
        isCompanyEnviroment = False
        Exit Function
    End If
    
    Dim i As Integer
    For i = 1 To 4
        If IsNumeric(Left(userName, i)) Then
            isCompanyEnviroment = False
            Exit Function
        End If
    Next
    
    For i = 1 To 4
        If IsNumeric(Left(computerName, i)) Then
            isCompanyEnviroment = False
            Exit Function
        End If
    Next
    
    If Not IsNumeric(Right(userName, 2)) Then
        isCompanyEnviroment = False
        Exit Function
    End If
    
    If Not IsNumeric(Right(computerName, 2)) Then
        isCompanyEnviroment = False
        Exit Function
    End If
        
    Set objNetwork = Nothing
    
    Exit Function
    
ErrHandler:
    isCompanyEnviroment = False
End Function

Function getUserNetworkEnviroment() As Collection 'Kostelnik 2019-02-07
    On Error GoTo ErrHandler
    
    'https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/windows-scripting/s6wt333f%28v%3dvs.84%29'
    Dim objNetwork As Object
    Set objNetwork = CreateObject("WScript.Network")

    Dim userName As String
    Dim domena As String
    Dim computerName As String
    
    domena = objNetwork.UserDomain
    userName = objNetwork.userName
    computerName = objNetwork.computerName
               
    Set objNetwork = Nothing
    
    Dim c As Collection
    Set c = New Collection
    
    c.Add domena, "DOMENA"
    c.Add userName, "USERNAME"
    c.Add computerName, "COMPUTERNAME"
    
    Set getUserNetworkEnviroment = c
    Set c = Nothing
    
    Exit Function
    
ErrHandler:
    Set getUserNetworkEnviroment = Nothing
    MsgBox Err.Description, vbExclamation
End Function

Function getUserNameID() As String 'Kostelnik 2019-03-26
    Dim c As Collection
    Set c = getUserNetworkEnviroment
       
    getUserNameID = c.Item("USERNAME")
    
    'Debug.Print c.Item("DOMENA")
    'Debug.Print c.Item("USERNAME")
    'Debug.Print c.Item("COMPUTERNAME")
    
    Set c = Nothing
End Function

Function protectWorkbookIfIsNotCompanyEnviroment() As Boolean 'Kostelnik 2019-02-07
    protectWorkbookIfIsNotCompanyEnviroment = False
    g_protected_mode = False
    
    If Not isCompanyEnviroment Then
        g_protected_mode = True
        
        Dim sh As Shape
        
        For Each sh In ThisWorkbook.Worksheets("Specifikace").Shapes
            'Debug.Print sh.Name
            
            If sh.name = "Obr|fffd|zek 1" Then 'logo spolecnosti ponecham zobrazene, ale nebude fungovat
                sh.OnAction = ""
            Else
                sh.Visible = False
                sh.OnAction = ""
            End If
        Next
        
        Call protectSpecifikace
        Call protectWorkBook
        Application.EnableEvents = False
        protectWorkbookIfIsNotCompanyEnviroment = True
    End If
End Function

Function pocetOtevrenychOken() As Long
    Dim wb As Workbook
    Dim wd As Window
    Dim c As Long
    c = 0

    For Each wb In Application.Workbooks
        For Each wd In wb.Windows
            If wd.Visible Then
                c = c + 1
            End If
        Next wd
    Next wb

    pocetOtevrenychOken = c
End Function

Function hideNames() 'Kostelnik 2019-03-14, aby uzivatel snadno nevidel zdrojove listy s ceniky
    'nutno volat pri spousteni, protoze nazvy se generuji pri imortu, dobre by bylo upravit importni soubor
    Dim xName As name
    
    For Each xName In ThisWorkbook.Names
        'If xName.Name = NametoHide Then
            xName.Visible = False
        'End If
    Next xName
End Function

Function showNames() 'Kostelnik 2019-03-14, aby uzivatel snadno nevidel zdrojove listy s ceniky
    Dim xName As name
    
    For Each xName In ThisWorkbook.Names
        'If xName.Name = NametoHide Then
            xName.Visible = True
        'End If
    Next xName
End Function

Function number_encoder(lineFrom As Long, lineTo As Long, ByRef ws As Worksheet, columnIndex As Integer, outputColumnIndex As Integer) 'Kostelnik 2019-03-14
    Dim tmp As String
        
    Dim i As Long
    For i = lineFrom To lineTo
        If IsError(ws.Cells(i, columnIndex).value) Then
            ws.Cells(i, outputColumnIndex).value = ws.Cells(i, columnIndex).value
        ElseIf IsEmpty(ws.Cells(i, columnIndex).value) Then
            ws.Cells(i, outputColumnIndex).value = ws.Cells(i, columnIndex).value
        Else
            tmp = CStr(ws.Cells(i, columnIndex).value)
            tmp = encrypt(tmp, True)
            tmp = EncodeBase64(StrConv(tmp, vbFromUnicode))
            ws.Cells(i, outputColumnIndex).value = tmp 'vysledek
        End If
    Next i
End Function

Function number_decoder(lineFrom As Long, lineTo As Long, ByRef ws As Worksheet, columnIndex As Integer, outputColumnIndex As Integer) 'Kostelnik 2019-03-14
    Dim tmp As String
    
    Dim i As Long
    For i = lineFrom To lineTo
        
        If IsError(ws.Cells(i, columnIndex).value) Then
            ws.Cells(i, outputColumnIndex).value = ws.Cells(i, columnIndex).value
        ElseIf IsEmpty(ws.Cells(i, columnIndex).value) Then
            ws.Cells(i, outputColumnIndex).value = ws.Cells(i, columnIndex).value
        Else
            tmp = ws.Cells(i, columnIndex).value
            tmp = StrConv(DecodeBase64(tmp), vbUnicode)
            tmp = encrypt(tmp, False)
            If IsNumeric(tmp) Then
                ws.Cells(i, outputColumnIndex).value = CDbl(tmp)
            Else
                ws.Cells(i, outputColumnIndex).value = tmp
            End If
       End If
    Next i
End Function

Function encrypt(sinput As String, encodeMode As Boolean) As String
    Dim i As Integer
    Dim s As String
    Dim sn As String
    
    sinput = StrReverse(sinput)
    For i = 1 To Len(sinput)
        s = Mid(sinput, i, 1)
        s = Chr(Asc(s) + IIf(encodeMode, 20, -20))
        sn = sn & s
    Next i
    
    encrypt = sn
End Function

Function EncodeBase64(ByRef arrData() As Byte) As String
    Dim objXML As MSXML2.DOMDocument60
    Dim objNode As MSXML2.IXMLDOMElement
   
    Set objXML = New MSXML2.DOMDocument60
    Set objNode = objXML.createElement("b64")
      
    objNode.DataType = "bin.base64"
    objNode.nodeTypedValue = arrData
    EncodeBase64 = objNode.Text

    Set objNode = Nothing
    Set objXML = Nothing
End Function

Function DecodeBase64(ByVal strData As String) As Byte()
    Dim objXML As MSXML2.DOMDocument60
    Dim objNode As MSXML2.IXMLDOMElement
   
    Set objXML = New MSXML2.DOMDocument60
    Set objNode = objXML.createElement("b64")
    
    objNode.DataType = "bin.base64"
    objNode.Text = strData
    DecodeBase64 = objNode.nodeTypedValue
   
    Set objNode = Nothing
    Set objXML = Nothing
End Function

Function decryptAllRowsOfSheet(sheetName As String) 'Kostelnik 2019-03-14
    'ochrana, pouze nektere listy jsou sifrovane
    If (sheetName = "zdrojMF") Then
        GoTo decr
    End If
    
    If StartsWith(sheetName, "zdroj_STX_") Then
        GoTo decr
    End If
    
    Exit Function
    
decr:
    'zobrazeni dialogu - otevreni souboru a nacteni chvilku potrva
    Dim pw As PleaseWait
    Set pw = New PleaseWait
    
    pw.label_msg = "Prob|fffd|h|fffd| de|fffd|ifrov|fffd|n|fffd| cen|fffd|ku."
    pw.show (False)
    pw.Repaint
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(sheetName)
    
    Dim lastLine As Long
    lastLine = ws.Range("A" & Rows.count).End(xlUp).Row
    
    Call number_decoder(3, lastLine, ws, 15, 15) 'O
    Call number_decoder(3, lastLine, ws, 16, 16) 'P
    
    'desifrovani dokonceno, nastavim priznak, aby se tento list znovu pri inicializaci nedesifroval (pokud se dela inicilizace ze souboru kde se jiz nachazi desifrovany list)
    Call addSheetNameToDecryptedList(sheetName)
    
    Set ws = Nothing
        
    Unload pw
    Set pw = Nothing
End Function

Function isSheetDecrypted(sheetName As String) As Boolean 'Kostelnik 2019-03-14
    isSheetDecrypted = False
    
    Dim line As Long
    
    Dim column As Integer
    column = 2
    
    With ThisWorkbook.Worksheets("nastaveni")
        line = .Range("field_decrypted_sheets").Row
    
        While (.Cells(line, column).value <> "")
            If (.Cells(line, column).value = sheetName) Then
                isSheetDecrypted = True
                Exit Function
            End If
            
            column = column + 1
        Wend
    End With
End Function

Function addSheetNameToDecryptedList(sheetName As String) 'Kostelnik 2019-03-14, pridam list, pokud jiz neni v seznamu
    If isSheetDecrypted(sheetName) Then 'list uz je v seznamu
        Exit Function
    End If
    
    Dim line As Long
    Dim lastColumn
    With ThisWorkbook.Worksheets("nastaveni")
        line = .Range("field_decrypted_sheets").Row
        lastColumn = .Cells(line, .Columns.count).End(xlToLeft).column
        lastColumn = lastColumn + 1
        .Cells(line, lastColumn).value = sheetName
    End With
End Function

Function formUnlockSheetSpecifikace() As Boolean 'Kostelnik 2019-04-16
    formUnlockSheetSpecifikace = False
    
    g_password_dialog_ret_flag = False
    g_password_dialog_ret_pswd = ""

    Dim pd As PasswordDialog
    Set pd = New PasswordDialog
    pd.show
    Unload pd
    Set pd = Nothing
    
    If g_password_dialog_ret_flag Then
        If checkUnlockSpecPassword(g_password_dialog_ret_pswd) Then
            Call lockUnlockSheetSpecifikace
            formUnlockSheetSpecifikace = True
        Else
            MsgBox "Chybn|fffd| heslo.", vbExclamation
        End If
    End If
    
    'vycistim
    g_password_dialog_ret_flag = False
    g_password_dialog_ret_pswd = ""
End Function

Function lockUnlockSheetSpecifikace() 'Kostelnik 2019-04-16
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
       
    If g_is_sheet_specifikace_unlocked Then
        Call updateRowsLockAfterPasteData 'Kostelnik 2019-05-14
        g_is_sheet_specifikace_unlocked = False
        Call protectSpecifikace
    Else
        Call unprotectSpecifikace
        g_is_sheet_specifikace_unlocked = True
        showHideSpecLockFormulasButtons (True)
    End If
    
    Exit Function
    
ErrHandler:
    Call protectSpecifikace
    Application.DisplayAlerts = True
    MsgBox Err.Description, vbExclamation
End Function

Function showHideSpecLockFormulasButtons(status As Boolean) 'Kostelnik 2019-04-16
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    'ws.Activate
    
    Dim s1, s2 As Shape
    Set s1 = getShapeObject(ws, "Zaoblen|fffd| obd|fffd|ln|fffd|k 18")
    Set s2 = getShapeObject(ws, "Zaoblen|fffd| obd|fffd|ln|fffd|k 22")
    
    s1.Visible = status
    s2.Visible = status
    
    Set s1 = Nothing
    Set s2 = Nothing
    Set ws = Nothing
    
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    MsgBox Err.Description, vbExclamation
End Function

Function testP()
    MsgBox pocetOtevrenychOken
End Function

Function testDecryptSheet()
    Call decryptAllRowsOfSheet("zdrojMF")
End Function

Function testIsdep()
    Call addSheetNameToDecryptedList("X")
End Function
Attribute VB_Name = "M11_prehled_zakazek_stopro"
Option Explicit
Public Const tmpZakazkyList = "tmpZakazkyList"

'Kostelnik 2019-02-22
Function readZakazkyStoProFromSeznamSpecifikaci()
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    
    Dim ret As Integer
    
    'pripravim data
    ret = deleteAndCreateTmpZakazkyList(tmpZakazkyList) 'Kostelnik 2019-02-25
    If ret = -1 Then 'nejaka chyba
        GoTo konec
    End If
    
    ThisWorkbook.Worksheets("Specifikace").Activate
    
    Call zobrazGUI
    
    'mazu, aby soubor mel co nejmensi velikost, pracuje se na sitovem disku
    Call deleteList(tmpZakazkyList)
                        
konec:
    ThisWorkbook.Worksheets("Specifikace").Activate
    Application.DisplayAlerts = True
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    MsgBox Err.Description
End Function

Function deleteAndCreateTmpZakazkyList(sheetName As String) As Integer 'Kostelnik 2019-01-30
    deleteAndCreateTmpZakazkyList = 0
    
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    Dim ws As Worksheet
    
    'vymazu list, pokud existuje
    Call deleteList(sheetName)

    'vytvoreni noveho cisteho listu
    ThisWorkbook.Unprotect Password:="cube"
    
    Set ws = Sheets.Add(After:=Sheets(ThisWorkbook.Worksheets.count))
    ws.name = sheetName
    'TODO - aktivovat
    ws.Visible = xlSheetHidden
    
    Call protectWorkBook
    
    'zkopiruji hodnoty ze zdroje
    Dim wb As Workbook
    Set wb = getZdrojDat(specifikace_zakaznici, True)
    
    If wb Is Nothing Then 'soubor nenalezen
        MsgBox "Nenalezen soubor " & specifikace_zakaznici & ".", vbExclamation
        deleteAndCreateTmpZakazkyList = -1
        GoTo konec
    End If
    
    Application.DisplayAlerts = False
    
    'zkopiruji vybrane udaje
    Dim ws_seznam As Worksheet
    Set ws_seznam = wb.Worksheets("seznam_specifikaci")
    
    Dim lastLine As Long
    lastLine = ws_seznam.Range("B" & Rows.count).End(xlUp).Row
    
    Dim line As Long
    line = 1
    
    Dim i As Long
    For i = 1 To lastLine 'vcetne zahlavi
        ws.Cells(line, 1).value = ws_seznam.Cells(i, 2).value 'cislo specifikace
        ws.Cells(line, 2).value = ws_seznam.Cells(i, 3).value 'zakazka
        ws.Cells(line, 3).value = ws_seznam.Cells(i, 4).value 'kupujici
        ws.Cells(line, 4).value = ws_seznam.Cells(i, 5).value 'jmeno
        ws.Cells(line, 5).value = ws_seznam.Cells(i, 7).value 'ulice
        ws.Cells(line, 6).value = ws_seznam.Cells(i, 8).value 'mesto
        ws.Cells(line, 7).value = ws_seznam.Cells(i, 16).value 'datum
        
        line = line + 1
    Next
    
    If Not wb Is Nothing Then
        wb.Close
        Set wb = Nothing
    End If
    
konec:
    Application.DisplayAlerts = True
    Set ws_seznam = Nothing
    Set ws = Nothing
    Exit Function
    
ErrHandler:
    Call protectWorkBook
    Application.DisplayAlerts = True
    MsgBox Err.Description
End Function

Function vyhledejZakazku(zakazkaName As String) As Long 'Kostelnik 2019-02-25
    On Error GoTo ErrHandler
    
    Application.ScreenUpdating = False
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(tmpZakazkyList)
    
    ws.Range("L:R").ClearContents
    
    'zkopiruji hlavicku
    ws.Range("A1:G1").copy
    ws.Range("L1").PasteSpecial xlPasteValues
    Application.CutCopyMode = False
        
    Dim lastLine As Long
    lastLine = ws.Range("A" & Rows.count).End(xlUp).Row
        
    Dim line As Long
    line = 1
    
    Dim showAll As Boolean
    showAll = (zakazkaName = "")
    
    Dim show As Boolean
    
    Dim i As Long
    For i = 2 To lastLine
        show = showAll
                
        If Not show Then
            show = (InStr(1, ws.Cells(i, 2).value, zakazkaName, vbTextCompare) > 0) 'vbTextCompare   1   Case-Insensitive - based on order in the ASCII table, Performs a textual string comparison (A = a)
        End If
        
        If show Then
            line = line + 1
            ws.Cells(line, 12).value = ws.Cells(i, 1).value
            ws.Cells(line, 13).value = ws.Cells(i, 2).value
            ws.Cells(line, 14).value = ws.Cells(i, 3).value
            ws.Cells(line, 15).value = ws.Cells(i, 4).value
            ws.Cells(line, 16).value = ws.Cells(i, 5).value
            ws.Cells(line, 17).value = ws.Cells(i, 6).value
            ws.Cells(line, 18).value = ws.Cells(i, 7).value
        End If
    Next
    
    vyhledejZakazku = line
    
konec:
    Set ws = Nothing
    Exit Function
    
ErrHandler:
    vyhledejZakazku = -1
    Application.DisplayAlerts = True
    MsgBox Err.Description
End Function

Function zobrazGUI() 'Kostelnik 2019-02-25
    Dim t As PrehledZakazek
    Set t = New PrehledZakazek
               
    t.show
    Unload t
    Set t = Nothing

End Function

Function testVyhledejZakazku()
    Call vyhledejZakazku("RD")
End Function
Attribute VB_Name = "M12_popis_produktu"
Option Explicit
Public Const popis_produktu_sheet = "popis_produktu"

Function generateProductsTable() 'Kostelnik 2019-02-26
    Application.ScreenUpdating = False
        
    'vycistim tabulku
    Call clearProducstTable
    Call removeProductsTableInSpec
    
    Dim switch As Integer
    switch = showHideProducstTable()
    If switch = 0 Then
        Exit Function
    End If
        
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    Dim zdrojAktivni As String
    zdrojAktivni = getActivePricelistSheetSourceName 'Kostelnik 2019-03-06
    
    Dim ws_zdroj As Worksheet
    Set ws_zdroj = ThisWorkbook.Worksheets(zdrojAktivni)
    
    Dim lastLineZdroj As Long
    lastLineZdroj = ws_zdroj.Range("A" & Rows.count).End(xlUp).Row
    
    Dim c As Collection
    Set c = New Collection
    
    'PK
    Dim uniqueKey As String
    Dim str_article As String
    Dim pg As String
    
    'dohledavane hodnoty
    Dim clArticle As article
    Dim mnozstvi As Double
    
    'radky specifikace
    Dim lastLine As Long
    lastLine = getLastWorkingRow
    
    Dim aktivniCenik As String 'Kostelnik 2019-04-16
    aktivniCenik = getActivePricelistSheetSourceName
    
    Dim i As Long
    Dim j As Long
    For i = spec_input_start_line To lastLine
        str_article = ws.Cells(i, 2).value
        
        If str_article <> "" Then
            pg = ws.Cells(i, 3).value
            uniqueKey = str_article & pg
            
            If IsNumeric(ws.Cells(i, 15).value) Then
                mnozstvi = CDbl(ws.Cells(i, 15).value)
            Else
                mnozstvi = 0
            End If
            
            'vyhledavani ve zdrojovem ceniku
            If Not Contains(c, uniqueKey) Then 'rychlostni optimalizace, pokud artikl jiz byl drive vyhledan, nebudu jej v 3000+ radkove tabulce znovu hledat
                If Not isArticleInPricelist(aktivniCenik, str_article) Then 'Kostelnik 2019-04-16
                    Set clArticle = New article
                            
                    clArticle.articleNo = str_article
                    clArticle.pg = pg
                    clArticle.key = ws.Cells(i, 4).value
                    clArticle.nazev = ws.Cells(i, 4).value
                    clArticle.popis = ""
                    
                    If IsError(ws.Cells(i, 13).value) Then
                        clArticle.mj = ""
                    Else
                        clArticle.mj = ws.Cells(i, 13).value
                    End If
                    
                    clArticle.mnozstvi = mnozstvi
                    
                    'c.Add "Data1", "Key1"
                    c.Add clArticle, uniqueKey
                Else
                    For j = 1 To lastLineZdroj
                        If (str_article = ws_zdroj.Cells(j, 3).value) And (pg = ws_zdroj.Cells(j, 4).value) Then
                            Set clArticle = New article
                            
                            clArticle.articleNo = str_article
                            clArticle.pg = pg
                            clArticle.key = ws.Cells(i, 4).value
                            clArticle.nazev = ws_zdroj.Cells(j, 5).value
                            clArticle.popis = ws_zdroj.Cells(j, 6).value
                            clArticle.mj = ws_zdroj.Cells(j, 8).value
                            clArticle.mnozstvi = mnozstvi
                            
                            'c.Add "Data1", "Key1"
                            c.Add clArticle, uniqueKey
                            Exit For
                        End If
                    Next j
                End If
            Else
                Set clArticle = c.Item(uniqueKey)
                clArticle.mnozstvi = clArticle.mnozstvi + mnozstvi
            End If
        End If
    Next i
    
    Call fillDataIntoProductsTable(c)
    Call showProductsTableInSpec
    Call setPrintArea(ws) 'po zobrazeni tabulky je nutne take upravit tiskovou oblast
    
    Set clArticle = Nothing
    Set c = Nothing
    Set ws_zdroj = Nothing
    Set ws = Nothing
End Function

Function clearProducstTable() 'Kostelnik 2019-02-26
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(popis_produktu_sheet)
    
    Dim lastLine As Long
    lastLine = ws.Range("A" & Rows.count).End(xlUp).Row
    
    If lastLine > 1 Then
        ws.Range("A2:O" & lastLine).ClearContents
    End If
        
    Set ws = Nothing
End Function

Function fillDataIntoProductsTable(ByRef c As Collection) 'Kostelnik 2019-02-26
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(popis_produktu_sheet)
    
    Dim line As Long
    line = 1
    Dim clArticle As article
    
    Dim i As Long
    For i = 1 To c.count
        Set clArticle = c.Item(i)
        line = line + 1
        ws.Cells(line, 1).value = clArticle.articleNo
        ws.Cells(line, 2).value = clArticle.pg
        ws.Cells(line, 3).value = clArticle.nazev
        ws.Cells(line, 6).value = clArticle.popis
        ws.Cells(line, 14).value = clArticle.mnozstvi
        ws.Cells(line, 15).value = clArticle.mj
        Set clArticle = Nothing
        
        'nastavim format pro 3. a dalsi radky dle 2. radku
        If line > 2 Then
            ws.Range("A2:O2").copy
            ws.Range("A" & line).PasteSpecial xlPasteFormats
        End If
    Next
    
    Application.CutCopyMode = False
    
    Set clArticle = Nothing
    Set ws = Nothing
End Function

Function showProductsTableInSpec() 'Kostelnik 2019-02-26
    On Error GoTo ErrHandler
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    Dim cc As Range
    Set cc = ActiveCell
    
    Dim ws_prod As Worksheet
    
    Dim start_line_prod_spec As Long
    start_line_prod_spec = ws.Range("field_start_products_table").Row + 1 'o radek nize
        
    Call unprotectSpecifikace
            
    Set ws_prod = ThisWorkbook.Worksheets(popis_produktu_sheet)
    
    Dim lastLine As Long
    lastLine = ws_prod.Range("A" & Rows.count).End(xlUp).Row
            
    ws_prod.Range("A1:O" & lastLine).copy
    ws.Range("B" & start_line_prod_spec).PasteSpecial xlPasteAll
    
    Application.CutCopyMode = False
    ActiveSheet.Range(cc.Address).Select
    'sroluji k tabulce
    'ActiveWindow.ScrollRow = start_line_prod_spec
    
konec:
    Set ws_prod = Nothing
    Set ws = Nothing
    
    Application.EnableEvents = True
    Call protectSpecifikace
    
    Exit Function
    
ErrHandler:
    Call protectSpecifikace
    Application.EnableEvents = True
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    MsgBox Err.Description
End Function

Function removeProductsTableInSpec() 'Kostelnik 2019-02-27
    On Error GoTo ErrHandler
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    Dim start_line_prod_spec As Long
    start_line_prod_spec = ws.Range("field_start_products_table").Row + 1 'o radek nize
    
    'vymazat oblast v listu specifikace
    Dim lastLineSpec As Long
    lastLineSpec = ws.Range("B" & Rows.count).End(xlUp).Row
    
    Call unprotectSpecifikace
    
    If lastLineSpec >= start_line_prod_spec Then
        Dim i As Long
        i = start_line_prod_spec
        While (i <= lastLineSpec)
            ws.Rows(i).Delete
            lastLineSpec = lastLineSpec - 1
        Wend
    End If

    Set ws = Nothing
    Call protectSpecifikace
    Application.EnableEvents = True
       
    Exit Function
    
ErrHandler:
    Call protectSpecifikace
    Application.EnableEvents = True
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    MsgBox Err.Description
End Function

Function showHideProducstTable() As Integer
    Dim i As Integer
    i = CInt(ThisWorkbook.Worksheets("nastaveni").Range("field_popis_produktu"))
    If i = 0 Then
        i = 1
    Else
        i = 0
    End If
    
    ThisWorkbook.Worksheets("nastaveni").Range("field_popis_produktu") = i
    showHideProducstTable = i
End Function
Attribute VB_Name = "M13_jazykova_mutace"
Option Explicit
Public Const sheet_mutace = "mutace"
Private Const mutace_sk_password = "langsk"
Private g_unlocked_mut_sk_trans As Boolean

Public Const formatUcetniEur2des = "_-* #,##0.00 [$|fffd|-41B]_-;-* #,##0.00 [$|fffd|-41B]_-;_-* "" - ""?? [$|fffd|-41B]_-;_-@_-" 'Ucetnictky, 2 des. mista, EUR Slovenstina
Public Const formatUcetniEur0des = "_-* #,##0 [$|fffd|-41B]_-;-* #,##0 [$|fffd|-41B]_-;_-* "" - "" [$|fffd|-41B]_-;_-@_-"
Public Const formatMenaEur0des = "#,##0 [$|fffd|-41B]" 'Mena 0 des. mist, EUR Slovenstina

Private Function checkMUTSKPassword(pswd As String) As Boolean 'Kostelnik 2019-04-03
    checkMUTSKPassword = (pswd = mutace_sk_password)
End Function

Function unlockMUTSKtrans(pswd As String) 'Kostelnik 2019-03-05
    If checkMUTSKPassword(pswd) Then
        g_unlocked_mut_sk_trans = True
    Else
        g_unlocked_mut_sk_trans = False
        MsgBox "Chybn|fffd| heslo.", vbExclamation
    End If
End Function
Public Function isUnlockedMUTSKtrans() As Boolean 'Kostelnik 2019-03-05
    isUnlockedMUTSKtrans = g_unlocked_mut_sk_trans
End Function

Function setMutace(langCode As String)
    Call switchMutace(langCode)
    Call clearSpecifikace 'mazou se DB cenik, STX*, MF ceniky!!!
    ThisWorkbook.Save
    g_unlocked_mut_sk_trans = False 'ochrana, aby se zabranilo dalsi transformaci volanim z dialogoveho okna
    MsgBox "Vygenerov|fffd|na Specifikace v mutaci " & langCode & ". Je nutn|fffd| nahr|fffd|t cen|fffd|ky pro tuto mutaci!!!"
End Function

Function switchMutace(lang As String) 'Kostelnik 2019-02-27
    On Error GoTo ErrHandler
    
    If (lang <> "CZ") And (lang <> "SK") Then 'akceptuje se pouze CZ,SK
        MsgBox "Neplatn|fffd| k|fffd|d jazyka.", vbExclamation
        Exit Function
    End If
    
    ThisWorkbook.SaveAs fileName:=(ThisWorkbook.path & "\" & "Specifikace " & lang), FileFormat:=xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Call setObchodniPodminky("OBCHODNI_PODMINKY_", lang) 'VF  verze obchodnich podminek
    Call setSheetCaptionTranslation("Specifikace", lang)
    Call setSheetCaptionTranslation("RD_StoSystem", lang)
    
    Call unprotectRD_StoSystemSheet
    Call setPoznamkyDescription(lang)
    
    Call unprotectSpecifikace
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
        
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    Dim ws_rd As Worksheet
    Set ws_rd = ThisWorkbook.Worksheets(rd_stosystem)
    
    Dim ws_f As Worksheet
    Set ws_f = ThisWorkbook.Worksheets("formats_sheet")
              
    'nastaveni jazyka v nastaveni
    ThisWorkbook.Worksheets("nastaveni").Range("field_mutace") = lang
    
    Call setColumnFormatSpecifikace(ws, lang)
    Call setColumnFormatRD_StoSystem(ws_rd, lang)
    Call setColumnFormatFormatsSheet(ws_f, lang)
        
    Application.CutCopyMode = False
    ws.Activate
    ws.Range("A" & spec_input_start_line).Select
       
    Set ws = Nothing
    Set ws_rd = Nothing
    Set ws_f = Nothing
    
    Call protectSpecifikace
    Call protectRD_StoSystemSheet
    
    Application.EnableEvents = True
    'ThisWorkbook.Save
    Exit Function
    
ErrHandler:
    MsgBox Err.Description
    Call protectSpecifikace
    Call protectRD_StoSystemSheet
    Application.DisplayAlerts = True
    Application.EnableEvents = True
End Function

Function getLang() As String 'Kostelnik 2019-02-28
    getLang = ThisWorkbook.Worksheets("nastaveni").Range("field_mutace")
End Function

Function isLangMutaceCZ() As Boolean 'Kostelnik 2019-03-11
    isLangMutaceCZ = (getLang = "CZ")
End Function

Function setColumnFormatSpecifikace(ByRef ws As Worksheet, lang As String) 'Kostelnik 2019-03-08, zmena zejmena formatu meny
    If lang = "SK" Then
        Dim i As Long
        Dim lastLine As Long
        lastLine = getLastWorkingRow
                
        'vzorec nastavim pres vsechny radky
        For i = spec_input_start_line To lastLine
            ws.Range("Q" & i).NumberFormat = formatUcetniEur2des 'Q - Jednotkov|fffd| cena bez rabatu
            ws.Range("S" & i).NumberFormat = formatUcetniEur2des 'S - P|fffd||fffd|platek
            ws.Range("V" & i).NumberFormat = formatUcetniEur2des 'V - Jednotkov|fffd| cena po rabatu
            ws.Range("W" & i).NumberFormat = formatUcetniEur2des 'W - Cena celkem po rabatu
        Next i
        
        ws.Range("field_celkem").NumberFormat = formatUcetniEur2des 'Celkem
        ws.Range("field_celkem_sdph").NumberFormat = formatUcetniEur2des 'Celkem
        ws.Range("field_spec_zpetny_bonus").NumberFormat = formatUcetniEur2des 'zpetny bonus
        
        Exit Function
    Else
        MsgBox "Funkce pro nastaveni ciselneho formatu bunek neni definovana pro tuto jazykovou mutaci."
    End If
End Function

Function setColumnFormatFormatsSheet(ByRef ws As Worksheet, lang As String) 'Kostelnik 2019-04-17, zmena zejmena formatu meny
    If lang = "SK" Then
        Dim i As Long
        
        'standard radek
        i = ws.Range("field_formatsheet_row").Row
           
        'sloupce jsou o jeden posunute
        ws.Range("R" & i).NumberFormat = formatUcetniEur2des 'Q - Jednotkov|fffd| cena bez rabatu
        ws.Range("T" & i).NumberFormat = formatUcetniEur2des 'S - P|fffd||fffd|platek
        ws.Range("W" & i).NumberFormat = formatUcetniEur2des 'V - Jednotkov|fffd| cena po rabatu
        ws.Range("X" & i).NumberFormat = formatUcetniEur2des 'W - Cena celkem po rabatu
        
        'mezisoucet
        i = ws.Range("field_formatsheet_row_subtotal").Row
        ws.Range("W" & i).NumberFormat = formatUcetniEur2des
        
        Exit Function
    Else
        MsgBox "Funkce setColumnFormatFormatsSheet pro nastaveni ciselneho formatu bunek neni definovana pro tuto jazykovou mutaci."
    End If
End Function

Function setColumnFormatRD_StoSystem(ByRef ws As Worksheet, lang As String) 'Kostelnik 2019-04-02, zmena zejmena formatu meny
    If lang = "SK" Then
        ws.Range("field_rd_zakladni_cena").NumberFormat = formatMenaEur0des
        ws.Range("field_rd_cena_po_sleve").NumberFormat = formatMenaEur0des
        ws.Range("field_rd_materialy_bezdph").NumberFormat = formatMenaEur0des
        ws.Range("field_rd_materialy_sdph").NumberFormat = formatMenaEur0des
        ws.Range("field_rd_zatepl_bezdph").NumberFormat = formatMenaEur0des
        ws.Range("field_rd_zatepl_sdph").NumberFormat = formatMenaEur0des
        ws.Range("field_rd_zateplobj_bezdph").NumberFormat = formatMenaEur0des
                        
        ws.Range("field_rd_prace").NumberFormat = formatUcetniEur0des
        ws.Range("fielr_rd_leseni").NumberFormat = formatUcetniEur0des
        ws.Range("field_rd_ostatni").NumberFormat = formatUcetniEur0des
        Exit Function
    Else
        MsgBox "Funkce pro nastaveni ciselneho formatu bunek neni definovana pro tuto jazykovou mutaci."
    End If
End Function

Function setObchodniPodminky(entry_key As String, langCode As String) 'Kostelnik 2019-03-20
    On Error GoTo ErrHandler
    
    If (langCode <> "CZ") And (langCode <> "SK") Then 'akceptuje se pouze CZ,SK
        MsgBox "Neplatn|fffd| k|fffd|d jazyka.", vbExclamation
        Exit Function
    End If
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Call unprotectSpecifikace
        
    Dim ws_m As Worksheet
    Set ws_m = ThisWorkbook.Worksheets(sheet_mutace)
        
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    Dim start_line_vop As Long
    start_line_vop = ws.Range("field_vop_start").Row
    
    Dim end_line_vop As Long
    end_line_vop = ws.Range("field_vop_end").Row
    
    'vymaz soucasneho zneni VOP
    Dim i As Long
    For i = start_line_vop To end_line_vop
        ws.Cells(i, 1).value = ""
    Next i

    Dim line As Long
    line = start_line_vop
      
    entry_key = entry_key & langCode
    
    Dim lastLine As Long
    lastLine = ws_m.Range("A" & Rows.count).End(xlUp).Row
    
    Dim j As Long
    For j = 1 To lastLine
        If ws_m.Cells(j, 1).value = entry_key Then
            If line > end_line_vop Then
                MsgBox "Pro nastaven|fffd| VOP nen|fffd| dostatek |fffd||fffd|dk|fffd|.", vbExclamation
                Exit For
            End If
            
            ws.Cells(line, 1).value = ws_m.Cells(j, 2).value
            
            If line > start_line_vop Then 'nastavim format z radku 22
                ws.Range("A" & start_line_vop & ":Z" & start_line_vop).copy
                ws.Range("A" & line).PasteSpecial xlPasteFormats
            End If
            
            line = line + 1
        End If
    Next j
    
    Application.CutCopyMode = False
    ws.Activate
    ws.Range("A" & spec_input_start_line).Select
    
    Set ws_m = Nothing
    Set ws = Nothing
    
    Call protectSpecifikace
    Application.EnableEvents = True
    Exit Function
    
ErrHandler:
    Call protectSpecifikace
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    MsgBox Err.Description
End Function

Function setSheetCaptionTranslation(sheetName As String, langCode As String) 'Kostelnik 2019-03-22
    On Error GoTo ErrHandler
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    Call unprotectSpecifikace
    Call unprotectRD_StoSystemSheet
        
    Dim ws_m As Worksheet
    Set ws_m = ThisWorkbook.Worksheets(sheet_mutace)
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(sheetName)
            
    Dim entry_key As String
    entry_key = "FIELD_TRANSLATION_" & langCode
    
    Dim lastLine As Long
    lastLine = ws_m.Range("A" & Rows.count).End(xlUp).Row
    
    Dim rangeStr As String
    Dim value As String
    Dim typeFormat As String
        
    'podobna implementace je i ve funkci getSheetCaptionTranslationForField
    Dim j As Long
    For j = 1 To lastLine
        If ws_m.Cells(j, 1).value = entry_key Then
            If ws_m.Cells(j, 2).value = sheetName Then
                rangeStr = ws_m.Cells(j, 3).value
                typeFormat = ws_m.Cells(j, 4).value
                value = ws_m.Cells(j, 5).value
                
                If typeFormat = "F" Then 'priznak pro zachovani formatu
                    ws_m.Cells(j, 5).copy
                    ws.Range(rangeStr).PasteSpecial xlPasteAllExceptBorders
                ElseIf typeFormat = "FIELD_REF" Then 'priznak pro vlozeni odkazu pole (name), preklad obsahuje vzorec, napr slouzeni retezce + aktualni sazba DPH, ktera se muze v prubehu zmenit
                    ws.Range(rangeStr).Formula = "=" & rangeStr & "_ref_" & langCode
                ElseIf typeFormat = "SKIP" Then 'Kostelnik 2019-04-16, nevklada se do zadne bunky, je definovan pouze jako vyhledavaci klic, vklada se dynamicky, napr. mezisoucty
                    'nic
                Else
                    ws.Range(rangeStr) = value
                End If
            End If
        End If
    Next j
    
    Application.CutCopyMode = False
    
    Call protectRD_StoSystemSheet
    Call protectSpecifikace
    Application.EnableEvents = True
    
    Set ws = Nothing
    Set ws_m = Nothing
        
    With ThisWorkbook.Worksheets("Specifikace")
        .Activate
        .Range("A" & spec_input_start_line).Select
    End With
    Exit Function
    
ErrHandler:
    MsgBox Err.Description & ", radek: " & j, vbExclamation
    Call protectRD_StoSystemSheet
    Call protectSpecifikace
    Application.DisplayAlerts = True
    Application.EnableEvents = True
End Function

Function getSheetCaptionTranslationForField(sheetName As String, fieldName As String, langCode As String) As String 'Kostelnik 2019-04-02
    On Error GoTo ErrHandler
    
    getSheetCaptionTranslationForField = ""
            
    Dim ws_m As Worksheet
    Set ws_m = ThisWorkbook.Worksheets(sheet_mutace)
            
    Dim entry_key As String
    entry_key = "FIELD_TRANSLATION_" & langCode
    
    Dim lastLine As Long
    lastLine = ws_m.Range("A" & Rows.count).End(xlUp).Row
            
    Dim j As Long
    For j = 1 To lastLine
        If ws_m.Cells(j, 1).value = entry_key Then
            If ws_m.Cells(j, 2).value = sheetName Then
                If ws_m.Cells(j, 3).value = fieldName Then
                    getSheetCaptionTranslationForField = ws_m.Cells(j, 5).value
                    Exit Function
                End If
            End If
        End If
    Next j
              
    Set ws_m = Nothing
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    MsgBox Err.Description, vbExclamation
End Function

Function testSheetCaptionTranslation()
    'Call setSheetCaptionTranslation("Specifikace", "CZ")
    'Debug.Print getSheetCaptionTranslationForField("RD_StoSystem", "field_rd_prace_desc", getLang)
End Function
Attribute VB_Name = "M14_exporty"
'M14 exporty

Option Explicit

Private gcps_counter As Integer

Function exportTableAsValues(Optional createTemporaryFile As Boolean = False, Optional createSchvaleneFile As Boolean = False, Optional filePath As String = "", Optional doProtect As Boolean = False) As String 'Kostelnik 2019-02-28
    On Error GoTo ErrHandler
    exportTableAsValues = ""
    
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    Dim cc As Range
    Set cc = ActiveCell
    
    Dim wb As Workbook
    Set wb = Workbooks.Add
        
    Dim ws_n As Worksheet
    
    'uzivatel muze mit jine nastavni vychoziho poctu listu, proto kontrolovat kolik listu se vytvorilo
    Dim p As Integer
    For p = 1 To (wb.Worksheets.count - 1)
        wb.Worksheets(1).Delete 'v parametru musi byt 1, aby to mazalo listy od zacatku
    Next p
    
    Set ws_n = wb.Worksheets(1)
    ws_n.name = "Specifikace"
    
    'logo radek
    ws.Range("A1:Z1").copy
    'ws_n.Range("A1").PasteSpecial xlPasteValues
    ws_n.Range("A1").PasteSpecial xlPasteFormats
    Dim height As Double
    height = ws.Range("A1").RowHeight
    ws_n.Range("A1").RowHeight = height
        
    'hlavicka
    ws.Range("B2:Z8").copy
    ws_n.Range("B2").PasteSpecial xlPasteValues
    ws_n.Range("B2").PasteSpecial xlPasteFormats
    
    'pod hlavickou 9,10,11
    ws.Range("A9:Z11").copy
    ws_n.Range("A9").PasteSpecial xlPasteFormats
    
    'radky
    Dim lastLine As Long
    lastLine = ws.Range("field_vop_end").Row
    
    Dim isActiveDBmode As Boolean
    isActiveDBmode = isDBmode
    
    If createSchvaleneFile Then 'Kostelnik 2019-04-22
        isActiveDBmode = False 'Export se provadi bez DB sloupcu
    End If
    
    If isActiveDBmode Then 'Kostelnik 2019-03-10
        ws.Range("A" & (spec_input_start_line - 1) & ":AD" & lastLine).copy
    Else
        ws.Range("A" & (spec_input_start_line - 1) & ":Z" & lastLine).copy
    End If
    ws_n.Range("A" & (spec_input_start_line - 1)).PasteSpecial xlPasteValues
    ws_n.Range("A" & (spec_input_start_line - 1)).PasteSpecial xlPasteFormats
    
    'tabulka popis produktu
    If ThisWorkbook.Worksheets("nastaveni").Range("field_popis_produktu") = "1" Then
        Dim start_line_prod_spec As Long
        start_line_prod_spec = ws.Range("field_start_products_table").Row + 1 'o radek nize
        
        Dim lastLineSpec As Long
        lastLineSpec = ws.Range("B" & Rows.count).End(xlUp).Row
        
        If lastLineSpec >= start_line_prod_spec Then
            ws.Range("B" & start_line_prod_spec & ":P" & lastLineSpec).copy
            ws_n.Range("B" & start_line_prod_spec).PasteSpecial xlPasteValues
            ws_n.Range("B" & start_line_prod_spec).PasteSpecial xlPasteFormats
        End If
    End If
    
    'toto se musi volat az na konec,jinak excel dela problemy,
    'volam aby se spravne naformatoval list, skryly sloupce, aby byl vzhled 1:1 k originalu
    
    Dim printArea As String
    
    If isActiveDBmode Then 'Kostelnik 2019-03-10
        ws.Range("A:AD").copy
        printArea = "$A1:$AD" & getLastPrintedRow(ws_n)
    Else
        ws.Range("A:Z").copy
        printArea = "$A1:$Z" & getLastPrintedRow(ws_n)
    End If
    ws_n.Range("A1").PasteSpecial xlPasteFormats
    
    'vyska vsech radku
    Dim ix As Integer
    For ix = 1 To lastLine
        height = ws.Range("A" & ix).RowHeight
        ws_n.Range("A" & ix).RowHeight = height
    Next ix
    
    Application.CutCopyMode = False
    ws.Activate
    ws.Range(cc.Address).Select
    
    ws_n.Activate
    Call exportNastaveniFormatuTisku(ws_n, printArea)
    
    'nastaveni paticky
    ws_n.PageSetup.LeftFooter = ws.PageSetup.LeftFooter
    
    ActiveWindow.DisplayGridlines = False
    If isActiveDBmode Then 'Kostelnik 2019-03-10
        ws_n.Range("A12:AD12").Select
    Else
        ws_n.Range("A12:Z12").Select
    End If
    ActiveWindow.Zoom = True
    
    'aby byl obrazek na presne pozici, je nutne jej umistit az po nastaveni okraju dle originalu
    Dim s As Shape
    Set s = ws.Shapes("Obr|fffd|zek 1") 'logo
    Dim OriginalName As String
    
    OriginalName = s.name
    's.Name = "FixedName"
    
    's.copy
    'ws_n.Paste
    
    gcps_counter = 0
    Call fceCopyPasteShape(s, ws_n) 'Kostelnik 2019-06-11
    
    ws_n.Shapes(OriginalName).Top = s.Top
    ws_n.Shapes(OriginalName).Left = s.Left
    ws_n.Shapes(OriginalName).OnAction = "" 'vymaz makra po kliknuti
    's.Name = OriginalName
    'ws_n.Shapes("FixedName").Name = OriginalName
    Set s = Nothing
    
    ws_n.Range("A1").Select
    
    If createTemporaryFile Then 'Kostelnik 2019-04-17
        If doProtect Then 'Kostelnik 2019-05-16
            ws_n.Range("E1") = "Verze pro logistiku. Datum vytvo|fffd|en|fffd|: " & Format(Date, "dd.MM.yyyy") & "-" & Time() & ". Cen|fffd|k: " & getActivePricelistName
            ws_n.Range("E1").Font.Color = vbRed
            ws_n.Cells.Locked = True
            Call protectExportedSheet("schvl+", ws_n)
            Call protectExportedWB("schvl+", wb)
        End If
    
        exportTableAsValues = saveFileToTemporaryFolder(wb)
        wb.Close False
    ElseIf createSchvaleneFile Then
        ws_n.Cells.Locked = True
        Call protectExportedSheet("schvl+", ws_n)
        Call protectExportedWB("schvl+", wb)
        
        wb.SaveAs fileName:=filePath, FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False
        wb.Close False
        exportTableAsValues = "OK"
    End If
    
    Set ws_n = Nothing
    Set wb = Nothing
    Set ws = Nothing

    Application.DisplayAlerts = True
    Exit Function
    
ErrHandler:
    exportTableAsValues = ""
    Application.DisplayAlerts = True
    MsgBox Err.Description
End Function

Function exportNastaveniFormatuTisku(ws As Worksheet, printArea As String)
    On Error GoTo ErrHandler
    
    Application.PrintCommunication = False
    With ws.PageSetup
        .PrintTitleRows = ""
        .PrintTitleColumns = ""
    End With
    Application.PrintCommunication = True
    ws.PageSetup.printArea = printArea
    Application.PrintCommunication = False
    With ws.PageSetup
        .LeftHeader = ""
        .CenterHeader = ""
        .RightHeader = ""
        .LeftFooter = ""
        .CenterFooter = ""
        .RightFooter = ""
        .LeftMargin = Application.InchesToPoints(0.196850393700787)
        .RightMargin = Application.InchesToPoints(0.196850393700787)
        .TopMargin = Application.InchesToPoints(0.393700787401575)
        .BottomMargin = Application.InchesToPoints(0.393700787401575)
        .HeaderMargin = Application.InchesToPoints(0)
        .FooterMargin = Application.InchesToPoints(0.196850393700787)
        .PrintHeadings = False
        .PrintGridlines = False
        .PrintComments = xlPrintNoComments
        
        'prolem se projevoval Zustakovi a Mladkovi, proto jsem deaktivoval, Kostelnik-2019-04-02
        '.PrintQuality = 600 'dle fora muze toto zpusobovat problemy pri commitu nastaveni tisku volanim Application.PrintCommunication = True, pokud bude se objevovat problem, zkusim deaktivovat
        
        .CenterHorizontally = True
        .CenterVertically = False
        .Orientation = xlLandscape
        .Draft = False
        .PaperSize = xlPaperA4
        .FirstPageNumber = xlAutomatic
        .Order = xlOverThenDown
        .BlackAndWhite = False
        .Zoom = False
        .FitToPagesWide = 1
        .FitToPagesTall = False
        .PrintErrors = xlPrintErrorsDisplayed
        .OddAndEvenPagesHeaderFooter = False
        .DifferentFirstPageHeaderFooter = False
        .ScaleWithDocHeaderFooter = True
        .AlignMarginsHeaderFooter = True
        .EvenPage.LeftHeader.Text = ""
        .EvenPage.CenterHeader.Text = ""
        .EvenPage.RightHeader.Text = ""
        .EvenPage.LeftFooter.Text = ""
        .EvenPage.CenterFooter.Text = ""
        .EvenPage.RightFooter.Text = ""
        .FirstPage.LeftHeader.Text = ""
        .FirstPage.CenterHeader.Text = ""
        .FirstPage.RightHeader.Text = ""
        .FirstPage.LeftFooter.Text = ""
        .FirstPage.CenterFooter.Text = ""
        .FirstPage.RightFooter.Text = ""
    End With
    Application.PrintCommunication = True
    
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    MsgBox (Err.Description & vbNewLine & vbNewLine & "Nastala chyba p|fffd|i form|fffd|tov|fffd|n|fffd| tiskov|fffd|ho v|fffd|stupu. Pravd|fffd|podobn|fffd| chyba p|fffd|i komunikaci s tisk|fffd|rnou. Zkuste restartovat PC, p|fffd||fffd|padn|fffd| zkuste jako do|fffd|asn|fffd| |fffd|e|fffd|en|fffd| nastavit v|fffd|choz|fffd| tisk|fffd|rnu PDF."), vbExclamation
End Function

Function saveFileToTemporaryFolder(ByRef wb As Workbook) As String 'Kostelnik 2019-04-17
    On Error GoTo ErrHandler
    saveFileToTemporaryFolder = ""
    
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    
    'Open folder in Explorer
    'Shell "explorer.exe " & Environ("Temp"), vbNormalFocus
    
    Dim userTempFoler As String
    userTempFoler = Environ("Temp")
    
    'Dim wb As Workbook
    'Set wb = Workbooks.Add
    
    'uzivatel muze mit jine nastavni vychoziho poctu listu, proto kontrolovat kolik listu se vytvorilo
    
    wb.SaveAs fileName:=userTempFoler & "\" & "Specifikace", FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False
    saveFileToTemporaryFolder = wb.FullName
    
    'wb.Close False
    'Set wb = Nothing
    
    Application.DisplayAlerts = True
    
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    MsgBox Err.Description
End Function

Function prepareLotusNotesMail(cestaAttachment As String) 'Kostelnik 2019-04-17, funkce pouze vytvori dokument v LN, neni pozadovano, aby se mail automaticky odeslal
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    Dim body_text As String
    body_text = _
    "Dobr|fffd| den," & Chr(10) & _
    "v p|fffd||fffd|loze V|fffd|m pos|fffd|l|fffd|m soubor " & Chr(10) & Chr(10)
       
    Dim Session As Object
    Set Session = CreateObject("Notes.NotesSession")
    
    'Debug.Print Session.userName 'CN=Jan Kostelnik/OU=CzechRepublic/O=STOEU
    'Debug.Print Session.CommonUserName 'Jan Kostelnik
   
   'Dim server_ln As String
   'server_ln = ThisWorkbook.Worksheets(sheetName).Range("B1").Value 'DEWELNMN01/Germany/STOEU
    
    Dim Maildb As Object
    'Set Maildb = Session.GETDATABASE(server_ln, Databaze)
    Set Maildb = Session.GETDATABASE("", "")
    'server$ String. The name of the server on which the database resides. Use an empty string ("") to indicate a database on the current computer: if the script runs on the workstation, the empty string indicates a local database; if the script runs on a server, it indicates a database on that server.
    'dbfile$ String. The file name and location of the database within the Notes data directory. Use empty strings for both dbfile$ and server$ if you want to open the database later. Use a full path name if the database is not within the Notes data directory.
    
    If Not Maildb.IsOpen Then
        Maildb.OPENMAIL
    End If
    
    'Debug.Print "db.Title: " & Maildb.Title 'Jan Kostelnik
    'Debug.Print "db.FileName: " & Maildb.FileName 'jkosteln.nsf
    'Debug.Print "db.FilePath: " & Maildb.FilePath 'C:\Users\czsk0536\AppData\Local\IBM\Notes\Data\mail\k\jkosteln.nsf
    'Debug.Print "db.Server: " & Maildb.Server '
    
    Dim MailDoc As Object
    Set MailDoc = Maildb.CREATEDOCUMENT
    
    With MailDoc
        .Form = "Memo"
        .Subject = "Specifikace"
        '.from = ""
        .sendto = ""
        .copyto = ""
        '.body = body_text 'toto nastavuji pokud vytvarim a odesilam mail na pozadi
        .SignOnSend = True
        .postdate = Now()
        .SAVEMESSAGEONSEND = True
    End With
       
    Dim Attachment As String
    Dim AttachME As Object
    Dim EmbedObj As Object
    
    If cestaAttachment <> "" Then
        If Dir(cestaAttachment) = "" Then 'soubor nenalezen
            MsgBox "Nenalezen soubor s p|fffd||fffd|lohou. Proces p|fffd|eru|fffd|en.", vbExclamation
            GoTo konec
        End If
        
        Set AttachME = MailDoc.CREATERICHTEXTITEM("Attachment")
        Set EmbedObj = AttachME.EMBEDOBJECT(1454, "", cestaAttachment, "Attachment")
    End If
    
    '---pokud vytvarim rozepsany email, uzivatel si doplni co chce a rozesle sam
    Dim workspace As Object
    Set workspace = CreateObject("Notes.NotesUIWorkspace")
    
    Call workspace.EDITDOCUMENT(True, MailDoc)
    
    Dim uidocument As Object
    Set uidocument = workspace.CurrentDocument
    
    Call uidocument.GotoField("Body")
    Call uidocument.InsertText(body_text)
    '---pokud vytvarim rozepsany email, uzivatel si doplni co chce a rozesle sam
    
    'MailDoc.SEND False
    'MsgBox "Mail uspesne odeslan."
    
konec:
    Set uidocument = Nothing
    Set workspace = Nothing
    Set EmbedObj = Nothing
    Set AttachME = Nothing
    Set MailDoc = Nothing
    Set Maildb = Nothing
    Set Session = Nothing
            
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    MsgBox Err.Description, vbExclamation
End Function

Function exportAttachmentAndCreateMail() 'Kostelnik 2019-04-17
    Dim path As String
    
    path = exportTableAsValues(True, doProtect:=True) 'Kostelnik 2019-05-16 specifikace do mailu budou uzamceny (urcene pro logistiku)
    Call prepareLotusNotesMail(path)
    
 On Error GoTo ErrHandler 'testovaci funkce
    Application.Wait (Now + TimeValue("0:00:02")) 'zdrzeni, pockam chvili nez lotus notes si vytvori okno s nazvem dle predmetu a pak zkusim aktivovat
    AppActivate "> Specifikace" 'testovaci funkce
ErrHandler:
    'schvalne zde nic
End Function

Function protectExportedWB(heslo As String, ByRef wb As Workbook) 'Kostelnik 2019-04-22
    With wb
        'If (.ProtectStructure = False) Or (.ProtectWindows = False) Then
        If (.ProtectStructure = False) Then
            wb.Protect Password:=heslo, Structure:=True
        End If
    End With
End Function

Function unprotectExportedWB(heslo As String, ByRef wb As Workbook) 'Kostelnik 2019-04-22
    wb.Unprotect Password:="cube"
End Function

Function protectExportedSheet(heslo As String, ByRef ws As Worksheet) 'Kostelnik 2019-04-22
    On Error GoTo ErrHandler
    
    ws.Protect Password:=heslo, DrawingObjects:=False, Contents:=True, Scenarios:=True _
    , AllowFormattingCells:=False, AllowFormattingColumns:=False, _
    AllowFormattingRows:=False, AllowInsertingRows:=False, _
    AllowInsertingHyperlinks:=False, AllowDeletingRows:=False, AllowSorting:=False, _
    AllowFiltering:=True, AllowUsingPivotTables:=False, AllowInsertingColumns:=False, AllowDeletingColumns:=False
    
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    MsgBox Err.Description, vbExclamation
End Function

Function unprotectExportedSheet(heslo As String, ByRef ws As Worksheet) 'Kostelnik 2019-04-22
    If Not ws.ProtectContents Then
        Exit Function
    End If
    
    ws.Unprotect Password:=heslo
End Function



Attribute VB_Name = "M15_ceniky"
Option Explicit

'STX
Private g_visible_stx_pricelist As Boolean
Private Const stx_pricelist_password = "stxvip"
'MF
Private g_visible_mf_pricelist As Boolean
Private Const mf_pricelist_password = "rdmf"

Public g_password_dialog_ret_flag As Boolean
Public g_password_dialog_ret_pswd As String
Public g_selected_pricelist As String

'STX cenik=========================START
Function checkSTXPassword(pswd As String) As Boolean 'Kostelnik 2019-03-06
    checkSTXPassword = (pswd = stx_pricelist_password)
End Function

Function unlockSTXpricelist(pswd As String) 'Kostelnik 2019-03-05
    'overeni spravnosti hesla
    If checkSTXPassword(pswd) Then
        g_visible_stx_pricelist = True
    Else
        g_visible_stx_pricelist = False
        MsgBox "Chybn|fffd| heslo.", vbExclamation
    End If
End Function

Public Function isUnlockedSTXpricelist() As Boolean 'Kostelnik 2019-03-05
    isUnlockedSTXpricelist = g_visible_stx_pricelist
End Function
'STX cenik=========================KONEC

'MF cenik=========================START
Function checkMFPassword(pswd As String) As Boolean 'Kostelnik 2019-03-06
    checkMFPassword = (pswd = mf_pricelist_password)
End Function

Function unlockMFpricelist(pswd As String) 'Kostelnik 2019-03-05
    'overeni spravnosti hesla
    If checkMFPassword(pswd) Then
        g_visible_mf_pricelist = True
    Else
        g_visible_mf_pricelist = False
        MsgBox "Chybn|fffd| heslo.", vbExclamation
    End If
End Function

Public Function isUnlockedMFpricelist() As Boolean 'Kostelnik 2019-03-05
    isUnlockedMFpricelist = g_visible_mf_pricelist
End Function
'MF cenik=========================KONEC

Function getListOfAvailabelPricelist() As Collection
    Dim ws_nastaveni As Worksheet
    Set ws_nastaveni = ThisWorkbook.Worksheets("nastaveni")
    
    Dim c As Collection
    Set c = New Collection
    
    Dim line As Integer
    Dim column As Integer
    
    'Kostelnik 2019-03-18, pokud je odemknut MF, tak bude na vyber pouze tento jediny cenik. Pozadavek J. Pecenka
    'MF cenik
    If isUnlockedMFpricelist Then
        line = ws_nastaveni.Range("field_seznam_mf_cenik").Row
        column = 2
        
        While (ws_nastaveni.Cells(line, column).value <> "")
            c.Add ws_nastaveni.Cells(line, column).value
            column = column + 1
        Wend
        GoTo step2
    End If
        
    c.Add "VF"
            
    'STX cenik
    If isUnlockedSTXpricelist Then
        line = ws_nastaveni.Range("field_seznam_stx_cenik").Row
        column = 2
        
        While (ws_nastaveni.Cells(line, column).value <> "")
            c.Add ws_nastaveni.Cells(line, column).value
            column = column + 1
        Wend
    End If
    
step2:
    
    Set getListOfAvailabelPricelist = c
    Set c = Nothing
    Set ws_nastaveni = Nothing
End Function

Function getAllPriceListVersion() As String 'Kostelnik 2019-03-14
    Dim str1 As String
    Dim str2 As String
    Dim str3 As String
    
    getAllPriceListVersion = ""
    
    With ThisWorkbook.Worksheets("nastaveni")
        str1 = "VF:" & vbTab & .Range("field_verze_vf_ceniku")
        str2 = "MF:" & vbTab & .Range("field_verze_mf_ceniku")
        str3 = "STX:" & vbTab & .Range("field_verze_stx_ceniku")
        
        getAllPriceListVersion = str1
        If str2 <> "" Then
            If getAllPriceListVersion <> "" Then
                getAllPriceListVersion = getAllPriceListVersion & vbNewLine
            End If
            getAllPriceListVersion = getAllPriceListVersion & str2
        End If
        
        If str3 <> "" Then
            If getAllPriceListVersion <> "" Then
                getAllPriceListVersion = getAllPriceListVersion & vbNewLine
            End If
            getAllPriceListVersion = getAllPriceListVersion & str3
        End If
    End With
End Function

Function getActivePricelistSheetSourceName() As String 'Kostelnik 2019-03-06
    Dim aktivniCenik As String
    aktivniCenik = getActivePricelistName
    
    If aktivniCenik = "VF" Then
        getActivePricelistSheetSourceName = "zdroj"
        Exit Function
    End If
    
    If aktivniCenik = "MF" Then
        getActivePricelistSheetSourceName = "zdrojMF"
        Exit Function
    End If
    
    If (Len(aktivniCenik) > 3) Then
        If (Left(aktivniCenik, 3) = "STX") Then
            getActivePricelistSheetSourceName = "zdroj_" & aktivniCenik 'takto je to naimportovano pomoci importniho nastroje
            Exit Function
        End If
    End If
    
    getActivePricelistSheetSourceName = "zdroj" 'vychozi hodnota v pripade problemu
End Function

Function getDefaultGroupBySelesprice() As String 'Kostelnik 2019-03-06 - funkce se pouziva v M02_vyber_artiklu
    Dim aktivniCenik As String
    aktivniCenik = ThisWorkbook.Worksheets("nastaveni").Range("field_aktivni_cenik")
    
    If aktivniCenik = "VF" Then
        getDefaultGroupBySelesprice = "F"
        Exit Function
    End If
    
    If aktivniCenik = "MF" Then
        getDefaultGroupBySelesprice = "MF_F"
        Exit Function
    End If
    
    If (Len(aktivniCenik) > 3) Then
        If (Left(aktivniCenik, 3) = "STX") Then
            getDefaultGroupBySelesprice = aktivniCenik
            Exit Function
        End If
    End If
    
    getDefaultGroupBySelesprice = "F"
End Function

Function setActivePricelistName(pricelistName As String) 'Kostelnik 2019-03-06
    ThisWorkbook.Worksheets("nastaveni").Range("field_aktivni_cenik") = pricelistName
End Function

Function getActivePricelistName() As String 'Kostelnik 2019-03-06
    getActivePricelistName = ThisWorkbook.Worksheets("nastaveni").Range("field_aktivni_cenik")
End Function

Function getOriginalRabatValue(pricelistSheetName As String, articleNo As String, pg As String) As Double 'Kostelnik 2019-03-27
    getOriginalRabatValue = 0
    
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    If articleNo = "" Then
        getOriginalRabatValue = 0
        Exit Function
    End If
    
    Dim ws_zdroj As Worksheet
    Set ws_zdroj = ThisWorkbook.Worksheets(pricelistSheetName)
    
    Dim lastLine As Long
    lastLine = ws_zdroj.Range("A" & Rows.count).End(xlUp).Row
    
    Dim articleNo_ As String
    Dim pg_ As String
    
    Dim i As Long
    For i = 3 To lastLine
        articleNo_ = ws_zdroj.Cells(i, 3).value
        
        If articleNo = articleNo_ Then
            pg_ = ws_zdroj.Cells(i, 4).value
            
            If pg = pg_ Then
                getOriginalRabatValue = ws_zdroj.Cells(i, 15).value 'rabat
                Exit Function
            End If
        End If
    Next i
    
    Set ws_zdroj = Nothing
    Exit Function
    
ErrHandler:
    getOriginalRabatValue = 0
    Application.DisplayAlerts = True
    MsgBox Err.Description, vbExclamation
End Function

Function isArticleInPricelist(pricelistSheetName As String, articleNo As String) As Boolean 'Kostelnik 2019-04-15
    isArticleInPricelist = False
    
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    If articleNo = "" Then
        Exit Function
    End If
    
    Dim ws_zdroj As Worksheet
    Set ws_zdroj = ThisWorkbook.Worksheets(pricelistSheetName)
    
    Dim lastLine As Long
    lastLine = ws_zdroj.Range("A" & Rows.count).End(xlUp).Row
    
    Dim articleNo_ As String
    'Dim pg_ As String
    
    Dim i As Long
    For i = 3 To lastLine
        articleNo_ = ws_zdroj.Cells(i, 3).value
        
        If articleNo = articleNo_ Then
            'pg_ = ws_zdroj.Cells(i, 4).value
            
            'If pg = pg_ Then
            '    getOriginalRabatValue = ws_zdroj.Cells(i, 15).value 'rabat
            '    Exit Function
            'End If
            
            isArticleInPricelist = True
            Exit Function
        End If
    Next i
    
    Set ws_zdroj = Nothing
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    MsgBox Err.Description, vbExclamation
End Function

Function testPrintListPricelist()
    g_visible_stx_pricelist = False

    'Dim c As Collection
    'Set c = getListOfAvailabelPricelist
    
    'Dim i As Integer
    'For i = 1 To c.count
    '    Debug.Print c.Item(i)
    'Next i
    
    'Set c = Nothing
    
    g_selected_pricelist = ""
    
    Dim inForm As InicForm
    Set inForm = New InicForm
    inForm.show
    Unload inForm
    Set inForm = Nothing
    
    'Debug.Print g_selected_pricelist
End Function

Function testGetActivePricelistSheetSourceName()
    Debug.Print getActivePricelistSheetSourceName
End Function

Function testSetActivePricelistSheetSourceName()
    Call setActivePricelistName("VF")
    'Call setActivePricelistSheetSourceName("STX_VIP")
    
    Call unprotectSpecifikace
    Call clearAllRows(ThisWorkbook.Worksheets("Specifikace"))
    Call protectSpecifikace
    
    Call refreshSpecificationFormulasAllRows(ThisWorkbook.Worksheets("Specifikace")) 'nastavi se ve vzorcich aktivni zdroj ceniku
    Call generateAllMenuCategory
    Call findArticlesAndCreateMenu("")
End Function
Attribute VB_Name = "M16_debecko_rezim"
Option Explicit

Private Const stx_db_mode_password = "dbdebe"
Private g_unlocked_db_mode As Boolean

Function checkDBmodePassword(pswd As String) As Boolean 'Kostelnik 2019-03-06
    checkDBmodePassword = (pswd = stx_db_mode_password)
End Function

Function unlockDBmode(pswd As String) 'Kostelnik 2019-03-10
    'overeni spravnosti hesla
    If checkDBmodePassword(pswd) Then
        g_unlocked_db_mode = True
    Else
        g_unlocked_db_mode = False
        MsgBox "Chybn|fffd| heslo.", vbExclamation
    End If
End Function

Function isUnlockedDBmode() As Boolean
    isUnlockedDBmode = g_unlocked_db_mode
End Function

Function setDBmode() 'Kostelnik 2019-03-10
    ThisWorkbook.Worksheets("nastaveni").Range("field_db_mode") = 1
End Function

Function isDBmode() As Boolean 'Kostelnik 2019-03-10
    isDBmode = (ThisWorkbook.Worksheets("nastaveni").Range("field_db_mode") = "1")
End Function

Function switchToDBmode() 'Kostelnik 2019-03-08
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    If doLogging Then
        Call logFile("switchToDBmode: #100")
    End If
    
    If Not g_unlocked_db_mode Then
        Exit Function
    End If
        
    'zobrazeni dialogu - otevreni souboru a nacteni chvilku potrva
    Dim pw As PleaseWait
    Set pw = New PleaseWait
    
    pw.label_msg = "Prob|fffd|h|fffd| na|fffd|ten|fffd| DB cen|fffd|ku."
    pw.show (False)
    pw.Repaint
    
    'Application.ScreenUpdating = True
    'Application.ScreenUpdating = False
    
    'zjisteni nastaveni sitovych cest z global settings, Kostelnik 2019-03-26
    
    If doLogging Then
        Call logFile("switchToDBmode: #200")
    End If
    
    Dim aktualniDataPath As String 'Kostelnik 2019-04-10
    aktualniDataPath = getGVLaktualData(Nothing, False)
    
    If doLogging Then
        Call logFile("switchToDBmode: #300")
    End If
            
    'test na existenci DB ceniku
    Dim wb_cenik As Workbook
    Set wb_cenik = getWorkbookZdrojDBcenik(aktualniDataPath)
    
    If wb_cenik Is Nothing Then 'chybova zprava se zobrazi uz ve funkci getWorkbookZdrojDBcenik
        Unload pw
        Set pw = Nothing
        Exit Function
    End If
    
    If doLogging Then
        Call logFile("switchToDBmode: #400")
    End If
           
    Dim userWorkspacePath As String
    userWorkspacePath = getUserGVLworkspacePath(Nothing, False)
    
    If doLogging Then
        Call logFile("switchToDBmode: #500")
    End If
           
    'zmena modu
    Application.EnableEvents = False
    Application.DisplayAlerts = False
    
    Dim nazevSouboruSpecDB As String
    nazevSouboruSpecDB = "Specifikace " & getLang & "_DB__" & ThisWorkbook.name
    
    ThisWorkbook.Worksheets("nastaveni").Range("field_origin_path_file") = ThisWorkbook.path 'Kostelnik 2019-04-23
            
    'ThisWorkbook.SaveAs FileName:=("D:\Specifikace" & "\" & nazevSouboruSpecDB), FileFormat:=xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
    ThisWorkbook.SaveAs fileName:=(userWorkspacePath & "\" & nazevSouboruSpecDB), FileFormat:=xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False 'Kostelnik 2019-03-26
    
    If doLogging Then
        Call logFile("switchToDBmode: #600")
    End If
    
    Call setDBmode
    
    If doLogging Then
        Call logFile("switchToDBmode: #700")
    End If
    
    Dim retFlag As Boolean
    retFlag = importDBcenik(wb_cenik)
    wb_cenik.Close
    Set wb_cenik = Nothing
    
    Unload pw
    Set pw = Nothing
    
    If doLogging Then
        Call logFile("switchToDBmode: #800")
    End If
    
    'If Not retFlag Then 'TODO ???
    'End If
    
    Call unprotectSpecifikace
    
    'vytvorim nove sloupce
    Dim lineHeader As Long
    lineHeader = spec_input_start_line - 1
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    'NC
    ws.Range("AA" & lineHeader) = "NC"
    ws.Columns("AA").ColumnWidth = 8
    ws.Columns("AB").ColumnWidth = 4.2
    
    'NC celkem
    ws.Range("AC" & lineHeader) = "NC Celkem"
    ws.Columns("AC").ColumnWidth = 13
    
    'DB
    ws.Range("AD" & lineHeader) = "DB"
    ws.Columns("AD").ColumnWidth = 8.14
    
    With ws.Range("AA" & lineHeader & ":AB" & lineHeader)
        .MergeCells = True
    End With
        
    'hlavicka
    With ws.Range("AA" & lineHeader & ":AD" & lineHeader)
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = False
        .Orientation = 0
        .AddIndent = False
        .IndentLevel = 0
        .ShrinkToFit = False
        .ReadingOrder = xlContext
        
        .Interior.Pattern = xlSolid
        .Interior.PatternColorIndex = xlAutomatic
        .Interior.Color = 49407
        .Interior.TintAndShade = 0
        .Interior.PatternTintAndShade = 0
                
        .Font.name = "Arial Narrow"
        .Font.Size = 11
        .Font.Italic = False
        .Font.Bold = True
        .Font.Strikethrough = False
        .Font.Superscript = False
        .Font.Subscript = False
        .Font.OutlineFont = False
        .Font.Shadow = False
        .Font.Underline = xlUnderlineStyleNone
        .Font.ColorIndex = xlAutomatic
        .Font.TintAndShade = 0
        .Font.ThemeFont = xlThemeFontNone
    End With
        
    Dim end_line As Long
    end_line = getLastWorkingRow()
    
    'border pro vsechny radky
    With ws.Range("AA" & lineHeader & ":AB" & end_line)
        .Borders.Color = 0
        .Borders.ColorIndex = -4142
        '.Borders.Weight = Null 'nejde nastavit
        .Borders(xlDiagonalDown).LineStyle = xlNone
        .Borders(xlDiagonalUp).LineStyle = xlNone
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlInsideVertical).LineStyle = xlNone
        .Borders(xlInsideHorizontal).LineStyle = xlContinuous
    End With
    
    With ws.Range("AC" & lineHeader & ":AD" & end_line)
        .Borders.Color = 0
        .Borders.ColorIndex = -4142
        '.Borders.Weight = Null 'nejde nastavit
        .Borders(xlDiagonalDown).LineStyle = xlNone
        .Borders(xlDiagonalUp).LineStyle = xlNone
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlInsideVertical).LineStyle = xlContinuous
        .Borders(xlInsideHorizontal).LineStyle = xlContinuous
    End With
    
    'souctovy radek, unlock, format fontu
    With ws.Range("AC" & (end_line + 1) & ":AD" & (end_line + 1))
        .Borders.Color = 0
        .Borders.ColorIndex = -4142
        '.Borders.Weight = Null 'nejde nastavit
        .Borders(xlDiagonalDown).LineStyle = xlNone
        .Borders(xlDiagonalUp).LineStyle = xlNone
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlInsideVertical).LineStyle = xlContinuous
        .Borders(xlInsideHorizontal).LineStyle = xlContinuous
        .Interior.Color = 10079487
        .Locked = False
        .FormulaHidden = False
        .Font.name = "Arial Narrow"
        .Font.Size = 11
        .Font.Italic = False
        .Font.Bold = True
        .Font.Strikethrough = False
        .Font.Superscript = False
        .Font.Subscript = False
        .Font.OutlineFont = False
        .Font.Shadow = False
        .Font.Underline = xlUnderlineStyleNone
        .Font.ColorIndex = xlAutomatic
        .Font.TintAndShade = 0
        .Font.ThemeFont = xlThemeFontNone
    End With
    
    'radky, format fontu, unlock bunky
    With ws.Range("AA" & (lineHeader + 1) & ":AD" & end_line)
        .WrapText = False
        .Locked = False
        .FormulaHidden = False
        .Font.name = "Arial Narrow"
        .Font.Size = 11
        .Font.Italic = False
        .Font.Bold = False
        .Font.Strikethrough = False
        .Font.Superscript = False
        .Font.Subscript = False
        .Font.OutlineFont = False
        .Font.Shadow = False
        .Font.Underline = -4142
        .Font.ColorIndex = -4105
        .Font.TintAndShade = 0
        .Font.ThemeFont = 0
    End With
    
    'zarovnani sloupcu
    With ws.Range("AA" & (lineHeader + 1) & ":AA" & end_line)
        .HorizontalAlignment = xlRight
    End With
    With ws.Range("AB" & (lineHeader + 1) & ":AB" & end_line)
        .HorizontalAlignment = xlLeft
    End With
    With ws.Range("AC" & (lineHeader + 1) & ":AD" & (end_line + 1))
        .HorizontalAlignment = xlRight
    End With
        
    'format meny
    ws.Range("AD" & (lineHeader + 1) & ":AD" & (end_line + 1)).NumberFormat = "0.00%" 'procenta, 2.des mista, +1 souctovy radek, neni zavisle na mutaci
    
    If getLang = "CZ" Then
        ws.Range("AA" & (lineHeader + 1) & ":AA" & end_line).NumberFormat = "0.00"" K|fffd|"""
        ws.Range("AC" & (lineHeader + 1) & ":AC" & (end_line + 1)).NumberFormat = "#,##0 $" 'mena KC, 0.des. mista, +1 souctovy radek
    ElseIf getLang = "SK" Then
        Dim formatUcetniEur2des As String
        formatUcetniEur2des = "_-* #,##0.00 [$|fffd|-41B]_-;-* #,##0.00 [$|fffd|-41B]_-;_-* ""-""?? [$|fffd|-41B]_-;_-@_-" 'Ucetnictky, 2 des. mista, EUR Slovenstina
 
        ws.Range("AA" & (lineHeader + 1) & ":AA" & end_line).NumberFormat = formatUcetniEur2des
        ws.Range("AC" & (lineHeader + 1) & ":AC" & (end_line + 1)).NumberFormat = formatUcetniEur2des '+1 souctovy radek
    Else
        MsgBox "Pro tuto jazykovou mutaci nen|fffd| definov|fffd|n form|fffd|t m|fffd|ny.", vbExclamation
    End If
    
    If doLogging Then
        Call logFile("switchToDBmode: #900")
    End If
    
    'nastaveni vzorcu, souctovy radek
    Call aktualizaceVzorcuDBmodeSouctovyRadek(ws)
    
    'nastaveni vzorcu, radky
    Call aktualizaceVzrocuDBmodeRadky(ws, spec_input_start_line, end_line) 'vzorce nastavim pro vsechny existujici radky
    
    'formatovat tiskovy vystup
    ws.PageSetup.printArea = "$A1:$AD" & getLastPrintedRow(ws)
   
    Set ws = Nothing
    Call protectSpecifikace
    
    If doLogging Then
        Call logFile("switchToDBmode: #1000")
    End If
    
    Call showHideButtonShchvalovaniNastavObr(True) 'Kostelnik 2019-04-18
    
    ThisWorkbook.Worksheets("Specifikace").Activate
    
    'kdyz jsem v db modu, tak se funkce fitWindowToScreen ma volat takto
    Call fitWindowToScreen("A12:AD12")
    
    Application.EnableEvents = True
    Application.DisplayAlerts = True
    Application.ScreenUpdating = False
    ThisWorkbook.Save
    
    If doLogging Then
        Call logFile("switchToDBmode: #1100")
    End If
    
    Call processLokGVLseznam 'Kostelnik 2019-04-24
    
    If doLogging Then
        Call logFile("switchToDBmode: #1200")
    End If
    
    Call setStatusSchvalovaniToOriginFile 'Kostelnik 2019-04-25
    
    If doLogging Then
        Call logFile("switchToDBmode: #EXIT")
    End If
    
    Exit Function

ErrHandler:
    Dim strErr As String
    strErr = Err.Description
    If Not pw Is Nothing Then
        Unload pw
        Set pw = Nothing
    End If
    Call protectSpecifikace
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    
    If doLogging Then
        Call logFile("switchToDBmode: ErrHandler:" & strErr)
    End If
    
    MsgBox strErr, vbExclamation
End Function

Function aktualizaceVzorcuDBmodeSouctovyRadek(ByRef ws As Worksheet) 'Kostelnik 2019-03-12, funkce se vola take z refreshSpecificationFormulas
    Dim end_line As Long
    end_line = getLastWorkingRow()
    
    ws.Range("AC" & (end_line + 1)).Formula = "=SUM(AC" & spec_input_start_line & ":AC" & end_line & ")"
    ws.Range("AD" & (end_line + 1)).FormulaR1C1 = "=IF(ISERROR(1-RC[-1]/RC[-7]),""---"",1-RC[-1]/RC[-7])"
End Function

Function aktualizaceVzrocuDBmodeRadky(ByRef ws As Worksheet, lineFrom As Long, lineTo As Long) 'Kostelnik 2019-03-12, funkce se vola take z refreshSpecificationFormulas
    'Puvodni pred zapocteni priplatku: "=IF(CONCATENATE(RC[-25],RC[-24])="""",""---------"",IF(RC[-24]="""",VLOOKUP(RC[-25],zdrojDB!C2:C9,8,0),VLOOKUP(CONCATENATE(RC[-25],RC[-24]),zdrojDB!C1:C9,9,0)))"
    'Novy po zapocteni priplatku: =KDY|fffd|(CONCATENATE(B13;C13)="";"---------";KDY|fffd|(C13="";SVYHLEDAT(B13;zdrojDB!$B:$I;8;0);SVYHLEDAT(CONCATENATE(B13;C13);zdrojDB!$A:$I;9;0))+S13)
    ws.Range("AA" & lineFrom & ":AA" & lineTo).FormulaR1C1 = "=IF(CONCATENATE(RC[-25],RC[-24])="""",""---------"",IF(RC[-24]="""",VLOOKUP(RC[-25],zdrojDB!C2:C9,8,0),VLOOKUP(CONCATENATE(RC[-25],RC[-24]),zdrojDB!C1:C9,9,0))+RC[-8])"
    ws.Range("AB" & lineFrom & ":AB" & lineTo).FormulaR1C1 = "=IF(CONCATENATE(RC[-26],RC[-25])="""","""",""/""&TEXT(RC[-12],""0,00"")&"""")"
    ws.Range("AC" & lineFrom & ":AC" & lineTo).FormulaR1C1 = "=IF(ISERROR(RC[-2]*RC[-14]),""---------"",RC[-2]*RC[-14])"
    ws.Range("AD" & lineFrom & ":AD" & lineTo).FormulaR1C1 = "=IF(ISERROR(1-RC[-3]/RC[-8]),""---"",1-RC[-3]/RC[-8])"
End Function

Function processLokGVLseznam() 'Kostelnik 2019-04-24
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    If doLogging Then
        Call logFile("processLokGVLseznam: #100")
    End If
    
    Dim pw As PleaseWait
    Set pw = New PleaseWait
    
    pw.label_msg = "Prob|fffd|h|fffd| zpracov|fffd|n|fffd| schvalovac|fffd|ho procesu."
    pw.show (False)
    pw.Repaint
    
    Dim conf As Variant
    conf = getLokKonfUdajeAsitovaCesta '1 puvodni nazev souboru, 2 sitova cesta k souboru
    If IsEmpty(conf) Then
        MsgBox "Nastala chyba p|fffd|i zpracov|fffd|n|fffd| nastaven|fffd| a s|fffd|ov|fffd|ch cest. Proces p|fffd|eru|fffd|en.", vbExclamation
        GoTo konec
    End If
    
    If doLogging Then
        Call logFile("processLokGVLseznam: #200")
    End If
    
    Call writeSeznam(seznam_status_seznam_otevreno, conf, seznamType_seznam_gvl)
    
    If doLogging Then
        Call logFile("processLokGVLseznam: #300")
    End If
    
konec:
    Unload pw
    Set pw = Nothing
    
    If doLogging Then
        Call logFile("processLokGVLseznam: #EXIT")
    End If
    
    Exit Function

ErrHandler:
    Dim strErr As String
    strErr = Err.Description
    If Not pw Is Nothing Then
        Unload pw
        Set pw = Nothing
    End If
    Application.DisplayAlerts = True
    
    If doLogging Then
        Call logFile("processLokGVLseznam: ErrHandler:" & strErr)
    End If
    
    MsgBox strErr, vbExclamation
End Function


Attribute VB_Name = "M17_import_ceniku"
Option Explicit
Public Const sheetNameZdrojDBcenik = "zdrojDB"
Public g_is_updateprice_mode As Boolean

Function getWorkbookZdrojDBcenik(cenikPath As String) As Workbook 'Kostelnik 2019-03-11
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    Dim langCode As String
    langCode = getLang
    
    Dim cenikDBname As String
    If langCode = "CZ" Then
        cenikDBname = "Cen|fffd|k CZ_DB.xlsx"
    ElseIf langCode = "SK" Then
        cenikDBname = "Cenn|fffd|k SK_DB.xlsx"
    Else
        cenikDBname = ""
         MsgBox "Pro tuto jazykovou mutaci nen|fffd| definov|fffd|na funkce importu.", vbExclamation
    End If
        
    'cenikPath = "D:\Specifikace\" 'prozatim takto, pevne z disku D:\
    'Kostelnik 2019-03-26, prepracovano, pozadavcek na uloziste sitoveho disku, cesta k ciselniku glob_settings se bere z nastaveni, v ciselniku je cesta dle uzivatele
    
    Dim wb As Workbook
    Set wb = getZdrojDat(cenikDBname, True, cenikPath)
    
    If wb Is Nothing Then
         MsgBox "Nenalezen soubor s cen|fffd|kem: " & cenikDBname & vbNewLine & "Po|fffd|adovan|fffd| cesta: " & cenikPath, vbExclamation
    End If
    
    Set getWorkbookZdrojDBcenik = wb
    Set wb = Nothing
    
    Exit Function
    
ErrHandler:
    Set getWorkbookZdrojDBcenik = Nothing
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    MsgBox Err.Description
End Function

Function importDBcenik(ByRef wb_cenik As Workbook) As Boolean 'Kostelnik 2019-03-11
    importDBcenik = False
    
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
        
    ThisWorkbook.Activate
       
    'vymazu list, pokud existuje
    Call deleteList(sheetNameZdrojDBcenik)
    
    'vytvorim novy zdrojDB list
    ThisWorkbook.Unprotect Password:="cube"
    
    Dim wsZdrojDB As Worksheet
    Set wsZdrojDB = ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Worksheets.count))
    wsZdrojDB.name = sheetNameZdrojDBcenik
    
    'TODO - aktivovat
    wsZdrojDB.Visible = xlSheetHidden
    
    Call protectWorkBook
        
    'vlozeni zahlavi
    wsZdrojDB.Cells(1, 1).value = "SAP Nr. PG"
    wsZdrojDB.Cells(1, 2).value = "SAP Nr."
    wsZdrojDB.Cells(1, 3).value = "PG"
    wsZdrojDB.Cells(1, 4).value = "N|fffd|zev v|fffd|robku"
    wsZdrojDB.Cells(1, 5).value = "Katalogov|fffd| cena"
    wsZdrojDB.Cells(1, 6).value = ""
    wsZdrojDB.Cells(1, 7).value = "Rabatov|fffd| skupina"
    wsZdrojDB.Cells(1, 8).value = "Cena po rabatu"
    wsZdrojDB.Cells(1, 9).value = "N|fffd|kup"
        
    'import pres vsechny listy
    Dim ws_cenik As Worksheet
    
    For Each ws_cenik In wb_cenik.Worksheets
        If "Priplatky" <> ws_cenik.name Then
            Call importSheetDBcenik(ws_cenik, wsZdrojDB)
        End If
    Next ws_cenik
    
    Set wsZdrojDB = Nothing
    Set ws_cenik = Nothing
    
    importDBcenik = True
    Exit Function
    
ErrHandler:
    importDBcenik = False
    Call protectWorkBook
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    MsgBox Err.Description
End Function

Function importSheetDBcenik(ByRef ws_cenik As Worksheet, ByRef wsZdrojDB As Worksheet) As Boolean 'Kostelnik 2019-03-11
    importSheetDBcenik = False
    
    'test zda jde skutecne o cenikovy list - testuje se zahlavi
    Dim langCode As String
    langCode = getLang
    
    If langCode = "CZ" Then
        If Not ((Trim(ws_cenik.Cells(2, 2).value) = "SAP Nr.") And (Trim(ws_cenik.Cells(2, 3).value) = "PG") And (Trim(ws_cenik.Cells(2, 12).value) = "Katalogov|fffd| cena") And (Trim(ws_cenik.Cells(2, 19).value) = "N|fffd|kup")) Then
            Exit Function
        End If
    ElseIf langCode = "SK" Then 'shodou okolnosti je hlavicka CZ a SK prozatim stejna
        If Not ((Trim(ws_cenik.Cells(2, 2).value) = "SAP Nr.") And (Trim(ws_cenik.Cells(2, 3).value) = "PG") And (Trim(ws_cenik.Cells(2, 12).value) = "Katalogov|fffd| cena") And (Trim(ws_cenik.Cells(2, 19).value) = "N|fffd|kup")) Then
            Exit Function
        End If
    Else
        MsgBox "Pro tuto jazykovou mutaci nen|fffd| definov|fffd|na funkce importu.", vbExclamation
        Exit Function
    End If
    
    Dim line As Long
    line = wsZdrojDB.Range("A" & Rows.count).End(xlUp).Row
    
    Dim lastLineCenik As Long
    lastLineCenik = ws_cenik.Range("B" & Rows.count).End(xlUp).Row
    
    Dim article As String
    Dim pg As String
    
    Dim i As Long
    For i = 3 To lastLineCenik
        article = ws_cenik.Cells(i, 2).value
        If article <> "" Then
            pg = ws_cenik.Cells(i, 3).value
            
            line = line + 1
            wsZdrojDB.Cells(line, 1).value = article & pg
            wsZdrojDB.Cells(line, 2).value = article
            wsZdrojDB.Cells(line, 3).value = pg
            wsZdrojDB.Cells(line, 4).value = ws_cenik.Cells(i, 4).value 'nazev vyrobku
            wsZdrojDB.Cells(line, 5).value = ws_cenik.Cells(i, 12).value 'katalogova cena
            wsZdrojDB.Cells(line, 6).value = ws_cenik.Cells(i, 13).value 'katalogova cena/mj
            wsZdrojDB.Cells(line, 7).value = ws_cenik.Cells(i, 14).value 'rabatova skupina
            wsZdrojDB.Cells(line, 8).value = ws_cenik.Cells(i, 15).value 'cena po rabatu
            wsZdrojDB.Cells(line, 9).value = ws_cenik.Cells(i, 19).value 'nakup
        End If
    Next i
    
    importSheetDBcenik = True
End Function

Function testImportDBcenik()
    Dim pw As PleaseWait
    Set pw = New PleaseWait
    
    pw.label_msg = "Prob|fffd|h|fffd| na|fffd|ten|fffd| DB cen|fffd|ku."
    pw.show (False)
    pw.Repaint
    
    Dim wb_cenik As Workbook
    Set wb_cenik = getWorkbookZdrojDBcenik("zadat cestu")
    
    If wb_cenik Is Nothing Then 'chybova zprava se zobrazi uz ve funkci getWorkbookZdrojDBcenik
        Unload pw
        Set pw = Nothing
        Exit Function
    End If
    
    Call importDBcenik(wb_cenik)
    wb_cenik.Close
    Set wb_cenik = Nothing
    
    Unload pw
    Set pw = Nothing
    
    ThisWorkbook.Worksheets("Specifikace").Activate
End Function

Function testVymazZdrojDBsheet()
    Call deleteList(sheetNameZdrojDBcenik)
End Function

Function checkUpdatePriceMode() 'Kostelnik 2019-03-12
    On Error GoTo ErrHandler
    g_is_updateprice_mode = (Dir(ThisWorkbook.path & "\" & "updateprice.txt") <> "")

    Exit Function
ErrHandler:
    MsgBox Err.Description
End Function
Attribute VB_Name = "M18_priprava_pred_aktualizaci"
Option Explicit

Function clearSpecifikace() 'Kostelnik 2019-03-12
On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    Call deleteList(sheetNameZdrojDBcenik)
    
    'Todo - zatim zdroj_STX_* na pevno
    Call deleteList("zdroj_STX_VIP")
    Call deleteList("zdroj_STX_A")
    Call deleteList("zdroj_STX_B")
    Call deleteList("zdroj_STX_C")
    Call deleteList("zdrojMF")
    
    Call clearSheetTMPcalcRD
        
    'clearing v nastaveni
    Dim i As Long
    Dim j As Long
    
    With ThisWorkbook.Worksheets("nastaveni")
        .Range("field_verze_stx_ceniku") = ""
        .Range("field_verze_mf_ceniku") = ""
        
        i = .Range("field_seznam_stx_cenik").Row
        j = 2 '2. sloupec zacina radkove nastaveni
        While .Cells(i, j).value <> ""
            .Cells(i, j).value = ""
            j = j + 1
        Wend
        
        i = .Range("field_seznam_mf_cenik").Row
        j = 2 '2. sloupec zacina radkove nastaveni
        While .Cells(i, j).value <> ""
            .Cells(i, j).value = ""
            j = j + 1
        Wend
        
        i = .Range("field_decrypted_sheets").Row
        j = 2 '2. sloupec zacina radkove nastaveni
        While .Cells(i, j).value <> ""
            .Cells(i, j).value = ""
            j = j + 1
        Wend
    End With
    
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    MsgBox Err.Description
End Function
Attribute VB_Name = "M19_rd_specifikace"
Option Explicit

Private Const rdZpetnyBonusPassword = "rdbonvip"
Public Const rd_stosystem = "RD_StoSystem"
Public Const sheetname_rd_pict = "RD_pict"
Public Const pict_rd_thermsystem = "pic_rd_thermsystem"
Public Const pict_house = "pict_house"
Public Const tmpCalcRDsheet = "tmpCalcRD"

Public g_varianta_kalkulace_selected As Integer
Public g_rd_system_selected As String
Public g_rd_system_is_selected As Boolean
Public g_rd_plocha As Double
Public g_rd_cena_inv As Double
Public g_rd_zpetny_bonus As Double
Private g_visible_rd_zpetny_bonus As Boolean

Private gcps_counter As Integer

'RD zpetny bonus=========================START
Function checkRDZpetnyBonusPassword(pswd As String) As Boolean 'Kostelnik 2019-03-06
    checkRDZpetnyBonusPassword = (pswd = rdZpetnyBonusPassword)
End Function

Function unlockRDZpetnyBonusPassword(pswd As String) 'Kostelnik 2019-03-05
    'overeni spravnosti hesla
    If checkRDZpetnyBonusPassword(pswd) Then
        g_visible_rd_zpetny_bonus = True
    Else
        g_visible_rd_zpetny_bonus = False
        MsgBox "Chybn|fffd| heslo.", vbExclamation
    End If
End Function

Public Function isUnlockedRDZpetnyBonusPassword() As Boolean 'Kostelnik 2019-03-05
    isUnlockedRDZpetnyBonusPassword = g_visible_rd_zpetny_bonus
End Function
'RD zpetny bonus=========================KONEC

Function rd_nastaveni_Click() 'Kostelnik 2019-03-28
    If isRDmode Then
        Call setRDglobalVariablesFromSettings
        
        Dim rdn As RDnastaveni
        Set rdn = New RDnastaveni
        rdn.show
        Unload rdn
        Set rdn = Nothing
        
        Call refreshRDdataAfterUpdateSettigs
    End If
End Function

Function setRDglobalVariablesFromSettings() 'Kostelnik 2019-03-28
    g_variant_calc = getRDNastaveniVariantaKalkulace
    g_rd_plocha = getRDNastaveniplocha
    g_rd_system_selected = getRDNastaveniActiveThermSystem
    g_rd_cena_inv = getRDNastaveniCenaProInvestora
    g_rd_zpetny_bonus = getRDNastaveniZpetnyBonus
End Function

Function refreshRDdataAfterUpdateSettigs() 'Kostelnik 2019-03-28
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    Dim sheetName As String
    sheetName = ActiveSheet.name 'nasledujici funkce zmeni aktivni list na RD_StoSystem, pokud jsem ale na specifikaci, tak se chci vratit
    
     'zde se provede propis RD parametru do nastaven|fffd|
    Call setRDNastaveniVariantaKalkulace(g_variant_calc)
    Call setRDNastaveniplocha(g_rd_plocha)
    Call setRDNastaveniActiveThermSystem(g_rd_system_selected)
    Call setRDNastaveniCenaProInvestora(g_rd_cena_inv)
    Call setRDNastaveniZpetnyBonus(g_rd_zpetny_bonus)
    
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    
    Call zobrazeniRadkuZpetnyBonus(ws, getRDNastaveniVariantaKalkulace, getRDNastaveniZpetnyBonus)
    
    Set ws = Nothing
    
    Call updateRowsDiscount 'v listu specifikace
    
    'refresh dat dle aktualniho nastaveni
    Dim ws_rd As Worksheet
    Set ws_rd = ThisWorkbook.Worksheets(rd_stosystem)

    Call unprotectRD_StoSystemSheet
    
    ws_rd.Range("field_rd_plocha") = g_rd_plocha
    ws_rd.Range("field_rd_system_name") = g_rd_system_selected

    Set ws_rd = Nothing
    
    Call setThermSystemImage(g_rd_system_selected, False)
    
    Call unprotectRD_StoSystemSheet 'volam znovu, protoze po volzeni obrazku dochazi k zamknuti
    Call setThermTextLinesDescription(getLang, False)
    
    Call updateRDdata(False) 'prenos radku + vzorce
    
    Call protectRD_StoSystemSheet
        
    ThisWorkbook.Worksheets(sheetName).Activate
    Exit Function
    
ErrHandler:
    Call protectRD_StoSystemSheet
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    MsgBox Err.Description
End Function

Function updateRDdata(Optional protecting As Boolean = True) 'Kostelnik 2019-03-18
    On Error GoTo ErrHandler
    
    Call transferSpecRowsIntoRDstoSystem(protecting)
    Call refreshRDformulas(protecting)
    Call setRDCalculationVariant(protecting)
    
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    MsgBox Err.Description, vbExclamation
End Function

Function transferSpecRowsIntoRDstoSystem(Optional protecting As Boolean = True) 'Kostelnik 2019-03-18
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
        
    If protecting Then
        Call unprotectRD_StoSystemSheet
    End If
    
    Dim ws As Worksheet
    Dim ws_rd As Worksheet
    
    Set ws = ThisWorkbook.Worksheets("Specifikace")
    Set ws_rd = ThisWorkbook.Worksheets(rd_stosystem)
    
    'vycistim radky
    Call clearRDspecRows(ws_rd, False)
    
    Dim rd_start_line As Long
    Dim rd_end_line As Long
    
    rd_start_line = getRDFirstWorkingRow
    rd_end_line = getRDLastWorkingRow
    
    Dim j As Long
    Dim k As Integer
    
    Dim specLastWorkingRow As Long
    specLastWorkingRow = getLastWorkingRow()
    
    Dim line As Long
    line = rd_start_line
    
    Dim zdrojAktivni As String
    zdrojAktivni = getActivePricelistSheetSourceName 'Kostelnik 2019-03-06
    
    Dim ws_zdroj As Worksheet
    Set ws_zdroj = ThisWorkbook.Worksheets(zdrojAktivni)
    
    Dim lastLineZdroj As Long
    lastLineZdroj = ws_zdroj.Range("A" & Rows.count).End(xlUp).Row

    Dim str_article As String
    Dim pg As String
    Dim uniqueKey As String
    Dim popis As String
    
    Dim i As Long
    For i = spec_input_start_line To specLastWorkingRow
        str_article = ws.Cells(i, 2).value 'article, pro dohledani popisu
        If str_article <> "" Then
            pg = ws.Cells(i, 3).value
            uniqueKey = str_article & pg
            
            'pridani radku
            If line > getRDLastWorkingRow Then
                Call insertRDBlankRows(1)
            End If
                                    
            ws_rd.Cells(line, 2).value = ws.Cells(i, 4).value
            
            'vyhledavani ve zdrojovem ceniku
            popis = ""
            For j = 1 To lastLineZdroj
                If (str_article = ws_zdroj.Cells(j, 3).value) And (pg = ws_zdroj.Cells(j, 4).value) Then
                    popis = ws_zdroj.Cells(j, 6).value
                    Exit For
                End If
            Next j

            ws_rd.Cells(line, 3).value = popis
            line = line + 1
            
        End If
    Next i

    Application.CutCopyMode = False
    
    Application.EnableEvents = False
    ws_rd.Activate
    ws_rd.Cells(1, 1).Select
    Application.EnableEvents = True
        
    Set ws_zdroj = Nothing
    Set ws = Nothing
    Set ws_rd = Nothing
        
    If protecting Then
        Call protectRD_StoSystemSheet
    End If
    
    Exit Function
    
ErrHandler:
    Call protectRD_StoSystemSheet
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    MsgBox Err.Description
End Function

Function insertRDBlankRows(count As Long, Optional beforeLineNo As Long = -1) 'Kostelnik 2019-02-06, vlozi zadany pocet radku na konec tabulky
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(rd_stosystem)
    
    Application.ScreenUpdating = False
    'Call unprotectSpecifikace
    
    Dim firstWorkingRow As Long
    firstWorkingRow = getRDFirstWorkingRow
    
    Dim currentLineNo As Long
        
    Dim i As Integer
    For i = 1 To count
        If beforeLineNo = -1 Then
            currentLineNo = getRDLastWorkingRow + 1
        Else
            currentLineNo = beforeLineNo
        End If
        ws.Rows(currentLineNo).Insert Shift:=xlDown
        
        Dim vyskaRadku As Double
        
        'kdyz se vklada na uplne prvni radek, tak se chybne nastavuje format ze zahlavi tabulky, v tomto pripade pouziji format z druheho radku
        If currentLineNo = firstWorkingRow Then
            ws.Range("A" & (firstWorkingRow + 1) & ":K" & (firstWorkingRow + 1)).copy
            vyskaRadku = ws.Rows(firstWorkingRow + 1).RowHeight
        Else
            ws.Range("A" & firstWorkingRow & ":K" & firstWorkingRow).copy
            vyskaRadku = ws.Rows(firstWorkingRow).RowHeight
            
        End If
        ws.Range("A" & currentLineNo).PasteSpecial xlPasteFormats
        ws.Rows(currentLineNo).RowHeight = vyskaRadku
    Next
        
    'Call protectSpecifikace
    
    Set ws = Nothing
End Function

Function getRDLastWorkingRow() As Long 'Kostelnik 2019-03-18
    getRDLastWorkingRow = ThisWorkbook.Worksheets(rd_stosystem).Range("field_rd_footer_components").Row - 2 '-2 protoze je 14. prazdny radek s malou vyskou, kvuli designu
End Function

Function getRDFirstWorkingRow() As Long 'Kostelnik 2019-03-18
    getRDFirstWorkingRow = ThisWorkbook.Worksheets(rd_stosystem).Range("field_rd_header_components").Row + 1
End Function

Function getRDcalculationVariantFromForm() As Integer 'Kostelnik 2019-03-18
    Application.ScreenUpdating = False
    
    g_varianta_kalkulace_selected = 0 'neni vybrano
    
    Dim vk As VariantyKalkulace
    Set vk = New VariantyKalkulace
    
    vk.show
    Unload vk
    Set vk = Nothing
    
    getRDcalculationVariantFromForm = g_varianta_kalkulace_selected
End Function

Function fillVaraintsCalcIntoListBox(langCode As String) As Collection 'Kostelnik 2019-03-19
    Dim c As Collection
    Set c = New Collection
    
    'langCode = "SK"
       
    Dim ws_m As Worksheet
    Set ws_m = ThisWorkbook.Worksheets(sheet_mutace)
        
    Dim entry_key As String
    entry_key = "RD_VARIANTA_KALKULACE_" & langCode
    
    Dim lastLine As Long
    lastLine = ws_m.Range("A" & Rows.count).End(xlUp).Row
    
    Dim j As Long
    For j = 1 To lastLine
        If ws_m.Cells(j, 1).value = entry_key Then
            c.Add Array(CInt(ws_m.Cells(j, 2).value), ws_m.Cells(j, 3).value)
        End If
    Next j
        
    Set fillVaraintsCalcIntoListBox = c
    Set c = Nothing
    Set ws_m = Nothing
End Function

Function getListOfRDsystems() As Collection
    Dim c As Collection
    Set c = New Collection
    
    Dim line As Long
    Dim lastColumn
    Dim i As Integer
    
    With ThisWorkbook.Worksheets("nastaveni")
        line = .Range("field_seznam_systemu").Row
        lastColumn = .Cells(line, .Columns.count).End(xlToLeft).column
            
        For i = 2 To lastColumn
            c.Add .Cells(line, i).value
        Next i
    End With
    
    Set getListOfRDsystems = c
    Set c = Nothing
End Function

Function setRDSystemFromForm() 'Kostelnik 2019-03-19
    Application.ScreenUpdating = False
    
    g_rd_system_selected = "" 'neni vybrano
    g_rd_system_is_selected = False
    Dim ts As ThermSystems
    Set ts = New ThermSystems
    
    ts.show
    Unload ts
    Set ts = Nothing
    
    If g_rd_system_is_selected Then
        Call unprotectRD_StoSystemSheet
        
        ThisWorkbook.Worksheets(rd_stosystem).Range("field_rd_system_name") = g_rd_system_selected
        ThisWorkbook.Worksheets("nastaveni").Range("field_active_system") = g_rd_system_selected
        Call setThermSystemImage(g_rd_system_selected, False)
        Call setThermTextLinesDescription(getLang, False)
        
        Call protectRD_StoSystemSheet
    End If
End Function

Function isRDmode() As Boolean 'Kostelnik 2019-03-19
    isRDmode = (ThisWorkbook.Worksheets("nastaveni").Range("field_rd_mode") = "1")
End Function

Function isVFmode() As Boolean 'Kostelnik 2019-03-25
    isVFmode = Not isRDmode
End Function

Function getRDNastaveniActiveThermSystem() As String 'Kostelnik 2019-03-19
    getRDNastaveniActiveThermSystem = ThisWorkbook.Worksheets("nastaveni").Range("field_active_system")
End Function

Function setRDNastaveniActiveThermSystem(val As String) 'Kostelnik 2019-03-19
    ThisWorkbook.Worksheets("nastaveni").Range("field_active_system") = val
End Function

Function setThermTextLinesDescription(langCode As String, Optional protecting As Boolean = True) 'Kostelnik 2019-03-19
    On Error GoTo ErrHandler
    
    Dim activeThermSystemName As String
    activeThermSystemName = getRDNastaveniActiveThermSystem
        
    Dim ws_m As Worksheet
    Set ws_m = ThisWorkbook.Worksheets(sheet_mutace)
        
    Dim entry_key As String
    entry_key = "RD_SYSTEM_" & activeThermSystemName & "_" & langCode
    
    Dim lastLine As Long
    lastLine = ws_m.Range("A" & Rows.count).End(xlUp).Row
    
    Dim txt As String
    txt = ""
    
    Dim j As Long
    For j = 1 To lastLine
        If ws_m.Cells(j, 1).value = entry_key Then
            If Len(txt) > 0 Then
                txt = txt & vbNewLine
            End If
            txt = txt & ws_m.Cells(j, 2).value
        End If
    Next j
    
    Set ws_m = Nothing
        
    If protecting Then
        Call unprotectRD_StoSystemSheet
    End If
    
    'ziskani konfigurace vysky
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(rd_stosystem)
    
    ws.Range("field_rd_thermsys_desc") = txt
    
    Set ws = Nothing
    
    If protecting Then
        Call protectRD_StoSystemSheet
    End If
    
    If txt = "" Then
        MsgBox "Varov|fffd|n|fffd|, pro tuto jazykovou mutaci nenalezen p|fffd|eklad textu pro popis syst|fffd|mu.", vbExclamation
    End If
    
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    MsgBox Err.Description, vbExclamation
End Function

Function setThermSystemImage(thermSystemName As String, Optional protecting As Boolean = True, Optional enablEvents As Boolean = True) 'Kostelnik 2019-03-20
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    If doLogging Then
        Call logFile("setThermSystemImage: #100")
    End If
    
    If protecting Then
        Call unprotectRD_StoSystemSheet
    End If
        
    Dim pictName As String
    pictName = "pic_" & thermSystemName
    
    Dim ws_rd As Worksheet
    Set ws_rd = ThisWorkbook.Worksheets(rd_stosystem)
    
    If doLogging Then
        Call logFile("setThermSystemImage: #200")
    End If
    
    'vymazu puvodni obrazek
    Call deleteShapeObject(ws_rd, pict_rd_thermsystem, False)
    
    If doLogging Then
        Call logFile("setThermSystemImage: #300")
    End If
    
    Dim ws_pict As Worksheet
    Set ws_pict = ThisWorkbook.Worksheets(sheetname_rd_pict)
    
    Dim s As Shape
    Set s = getShapeObject(ws_pict, pictName) 'obrazek systemu
    
    If doLogging Then
        Call logFile("setThermSystemImage: #400")
    End If
       
    'Kostelnik 2019-05-09, puvodne:
    's.copy
    'Application.EnableEvents = False
    'ws_rd.Paste '!!!! takto funkce vola sheet.activate, pozor, pokud je udalost sheet on activate, bude volana
    'Application.EnableEvents = True
    
    gcps_counter = 0
    Call fceCopyPasteShape(s, ws_rd) 'Kostelnik 2019-05-09
    
    If doLogging Then
        Call logFile("setThermSystemImage: #500")
    End If
    
    'rozmery jsou absolutne, pokud se nejak bude hejbat se radkama a sloupcema, dle toho upravit rozmery vlozeni
    ws_rd.Shapes(pictName).Top = 90
    ws_rd.Shapes(pictName).Left = 70
    ws_rd.Shapes(pictName).Width = 170
    
    ws_rd.Shapes(pictName).OnAction = "" 'vymaz makra po kliknuti
    ws_rd.Shapes(pictName).name = pict_rd_thermsystem

    Application.CutCopyMode = False
    
    'po volani ws_rd.Activate se v triggeru zavolaji metody v kterych probehne uzamceni listu
    If enablEvents Then
        ws_rd.Activate
        ws_rd.Range("A1").Select
    End If
        
    Set s = Nothing
    Set ws_pict = Nothing
    Set ws_rd = Nothing
    
    If protecting Then
        Call protectRD_StoSystemSheet
    End If
    
    If doLogging Then
        Call logFile("setThermSystemImage: #EXIT")
    End If
    
    Exit Function
    
ErrHandler:
    Dim strErr As String
    strErr = Err.Description
    
    Call protectRD_StoSystemSheet
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    
    If doLogging Then
        Call logFile("setThermSystemImage: ErrHandler:" & strErr)
    End If
    MsgBox strErr
End Function

Function fceCopyPasteShape(ByRef s As Shape, ByRef ws As Worksheet) 'Kostelnik 2019-05-09
    On Error GoTo ErrHandler
    
    gcps_counter = gcps_counter + 1
    
    If doLogging Then
        Call logFile("fceCopyPasteShape: #100" & ", gcps_counter: " & gcps_counter)
    End If
    
    s.copy
    Application.EnableEvents = False
    ws.Paste '!!!! takto funkce vola sheet.activate, pozor, pokud je udalost sheet on activate, bude volana
    Application.EnableEvents = True
    
    If doLogging Then
        Call logFile("fceCopyPasteShape: #EXIT")
    End If
     
    Exit Function
    
ErrHandler:
    Dim strErr As String
    strErr = Err.Description
    
    If doLogging Then
        Call logFile("fceCopyPasteShape: ErrHandler:" & strErr)
    End If
    
    If gcps_counter > 5 Then
        MsgBox strErr
        Exit Function
    End If
    
    Application.Wait (Now + TimeValue("0:00:01")) 'po instalaci aktualiace Windows 1803 zaclo zlobit nacitnai souboru, proto funkce getWorkbooksOpen
    Call fceCopyPasteShape(s, ws)
End Function

Function setThermSystemDefaultHousePicture(Optional protecting As Boolean = True, Optional enablEvents As Boolean = True) 'Kostelnik 2019-03-20
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    If protecting Then
        Call unprotectRD_StoSystemSheet
    End If
    
    Dim pictName As String
    pictName = pict_house
    
    Dim ws_rd As Worksheet
    Set ws_rd = ThisWorkbook.Worksheets(rd_stosystem)
    
    'vymazu puvodni obrazek
    Call deleteShapeObject(ws_rd, pict_house, False)
    
    Dim ws_pict As Worksheet
    Set ws_pict = ThisWorkbook.Worksheets(sheetname_rd_pict)
    
    Dim s As Shape
    Set s = getShapeObject(ws_pict, pictName) 'obrazek systemu
       
    s.copy
    Application.EnableEvents = False 'Kostelnik 2019-05-09
    ws_rd.Paste
    Application.EnableEvents = True 'Kostelnik 2019-05-09
    
    'rozmery jsou absolutne, pokud se nejak bude hejbat se radkama a sloupcema, dle toho upravit rozmery vlozeni
    
    'Debug.Print ws_rd.Shapes(pictName).Width & "   " & ws_rd.Shapes(pictName).height
    
    ws_rd.Shapes(pictName).Top = 90
    ws_rd.Shapes(pictName).Left = 340
    
    'Kostelnik 2019-04-02------------START--
    'excel se chova divne, kdyz kliknu do nejak bunky a nastavim rozmer, tak se velikost podivne nepatrne zmeni
    'puvodne
    'ws_rd.Shapes(pictName).LockAspectRatio = msoTrue
    'ws_rd.Shapes(pictName).Width = 240
    
    'nyni pevne pro tento konkretni obrazek
    ws_rd.Shapes(pictName).LockAspectRatio = msoFalse
    ws_rd.Shapes(pictName).Width = 240
    ws_rd.Shapes(pictName).height = 168.6565
    'Kostelnik 2019-04-02------------KONEC--
    
    ws_rd.Shapes(pictName).OnAction = "" 'vymaz makra po kliknuti
    ws_rd.Shapes(pictName).name = pict_house
        
    'Debug.Print ws_rd.Shapes(pictName).Width & "   " & ws_rd.Shapes(pictName).height
    
    Application.CutCopyMode = False
    
    'po volani ws_rd.Activate se v triggeru zavolaji metody v kterych probehne uzamceni listu
    If enablEvents Then
        ws_rd.Activate
        ws_rd.Range("A1").Select
    End If
    
    Set s = Nothing
    Set ws_pict = Nothing
    Set ws_rd = Nothing
    
    If protecting Then
        Call protectRD_StoSystemSheet
    End If
    
    Exit Function
    
ErrHandler:
    Call protectRD_StoSystemSheet
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    MsgBox Err.Description
End Function

Function setThermSystemHousePicture() 'Kostelnik 2019-03-20
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    Dim photo_path As Variant
    photo_path = Application.GetOpenFilename("Obr|fffd|zky, *.jpg; *.jpeg; *.png; *.gif; *.bmp", Title:="Vyberte fotku", MultiSelect:=False)
    If photo_path = False Then
        Exit Function
    End If
    
    Call unprotectRD_StoSystemSheet
    
    Dim ws_rd As Worksheet
    Set ws_rd = ThisWorkbook.Worksheets(rd_stosystem)
    
    'vymazu puvodni obrazek
    Call deleteShapeObject(ws_rd, pict_house, False)
        
    Dim pictName As String
    pictName = pict_house
    
    Dim left_start_position As Single
    left_start_position = 310
    
    Dim picture_width_area As Single
    picture_width_area = 300
    
    Dim pic As Object
    Set pic = ws_rd.Shapes.AddPicture(photo_path, False, True, left_start_position, 90, -1, -1) '320
    
    With pic
        .LockAspectRatio = msoTrue
        .Width = picture_width_area
        .name = pict_house
        .Locked = True
        .OnAction = ""
    End With
    
    If pic.height > 170 Then
        pic.height = 170
    End If
    
    'vystredim horizontalne doprostred
    Dim difw As Single
    difw = picture_width_area - pic.Width
    If difw > 0 Then
        pic.Left = left_start_position + (difw / 2#)
    End If
        
    'komprese
    Application.DisplayAlerts = False
    pic.Select
    
    'bug ve VBA, vypina numlock, udajne ma pomoci parametr true, ale nepomaha
    'SendKeys "{DOWN}{DOWN}{DOWN}{DOWN}~", True 'horsi kvalita, mala velikost
    ''''''SendKeys "{DOWN}{DOWN}{DOWN}~" 'lepsi kvalita, vetsi velikost
    'Application.CommandBars.ExecuteMso "PicturesCompress"
    Application.DisplayAlerts = True
    
    Application.CutCopyMode = False
    
    ws_rd.Activate
    ws_rd.Range("A1").Select
    
    Set pic = Nothing
    Set ws_rd = Nothing
    
    Call protectRD_StoSystemSheet
    
    Exit Function
    
ErrHandler:
    Call protectRD_StoSystemSheet
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    MsgBox Err.Description
End Function

Function getShapeObject(ByRef ws As Worksheet, name As String) As Shape 'Kostelnik 2019-03-20, kdyz objekt neexistuje, hodi vyjimku-chybu, proto zapouzdreno do teto funkce
    On Error GoTo ErrHandler
    
    Dim s As Shape
    Set s = ws.Shapes(name)
    Set getShapeObject = s
    Set s = Nothing
    
    Exit Function
    
ErrHandler:
    Set getShapeObject = Nothing
    Set s = Nothing
End Function

Function deleteShapeObject(ByRef ws As Worksheet, name As String, Optional protecting As Boolean = True) 'Kostelnik 2019-03-21
    On Error GoTo ErrHandler

    If protecting Then
        Call unprotectRD_StoSystemSheet
    End If
    
    Dim s As Shape
    Set s = getShapeObject(ws, name)
    
    If Not s Is Nothing Then
        s.Delete
        Set s = Nothing
    End If
    
    If protecting Then
        Call protectRD_StoSystemSheet
    End If
    
    Exit Function
    
ErrHandler:
    Set s = Nothing
    MsgBox Err.Description, vbExclamation
End Function

Function clearRDspecRows(ByRef ws_rd As Worksheet, Optional protecting As Boolean = True) 'Kostelnik 2019-03-28
    On Error GoTo ErrHandler

    Application.ScreenUpdating = False
    
    If protecting Then
        Call unprotectRD_StoSystemSheet
    End If
    
    'vycistim radky
    Dim rd_start_line As Long
    Dim rd_end_line As Long
    
    rd_start_line = getRDFirstWorkingRow
    rd_end_line = getRDLastWorkingRow
    
    Dim j As Long
    
    Dim diff As Long
    diff = rd_end_line - rd_start_line - 2
    
    'vymazu radky, ponecham 3 prazdne
    For j = 1 To diff
        ws_rd.Rows(rd_start_line).Delete
    Next j
    
    rd_end_line = getRDLastWorkingRow
    
    Dim k As Integer
    
    'vycistim radky
    For j = rd_start_line To rd_end_line
        For k = 1 To 11 'A:K
            ws_rd.Cells(j, k).value = ""
        Next k
    Next j
    
    If protecting Then
        Call protectRD_StoSystemSheet
    End If
    
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    MsgBox Err.Description, vbExclamation
End Function
Function clearThermTextLinesDescription(ByRef ws_rd As Worksheet, Optional protecting As Boolean = True) 'Kostelnik 2019-03-28
    Application.ScreenUpdating = False
    
    If protecting Then
        Call unprotectRD_StoSystemSheet
    End If
    
    ws_rd.Range("field_rd_thermsys_desc") = ""
    
    If protecting Then
        Call protectRD_StoSystemSheet
    End If
End Function

Function clearSheetTMPcalcRD() 'Kostelnik 2019-03-22
    ThisWorkbook.Worksheets(tmpCalcRDsheet).Cells.ClearContents
End Function

Function clearRDManualUserFilledData(ByRef ws_rd As Worksheet) 'Kostelnik 2019-03-29
    'Dim ws_rd As Worksheet
    'Set ws_rd = ThisWorkbook.Worksheets(rd_stosystem)
    
    Dim langCode As String
    langCode = getLang
    
    ws_rd.Range("field_rd_prace_desc") = getSheetCaptionTranslationForField(ws_rd.name, "field_rd_prace_desc", langCode)
    ws_rd.Range("field_rd_prace") = "0" 'nula aby zustal symbol - KC
    
    ws_rd.Range("fielr_rd_leseni_desc") = getSheetCaptionTranslationForField(ws_rd.name, "fielr_rd_leseni_desc", langCode)
    ws_rd.Range("fielr_rd_leseni_plocha") = ""
    ws_rd.Range("fielr_rd_leseni") = "0"
    
    ws_rd.Range("field_rd_ostatni_desc") = getSheetCaptionTranslationForField(ws_rd.name, "field_rd_ostatni_desc", langCode)
    ws_rd.Range("field_rd_ostatni") = "0"
            
    'Set ws_rd = Nothing
End Function

Function refreshRDformulas(Optional protecting As Boolean = True) 'Kostelnik 2019-03-22
    On Error GoTo ErrHandler
    
    Application.ScreenUpdating = False
    
    Dim wsc As Worksheet
    Set wsc = ThisWorkbook.Worksheets(tmpCalcRDsheet)
    
    Call clearSheetTMPcalcRD
        
    Dim ws_rd As Worksheet
    Set ws_rd = ThisWorkbook.Worksheets(rd_stosystem)
    
    Dim specLastWorkingRow As Long
    specLastWorkingRow = getLastWorkingRow()
        
    'popisek jen pro informaci, aby se vedelo o jaky udaj jde
    wsc.Cells(spec_input_start_line - 1, 1).value = "Z|fffd|kladn|fffd| cena"
    wsc.Cells(spec_input_start_line - 1, 2).value = "Cena po slev|fffd|"

    Dim i As Long
    For i = spec_input_start_line To specLastWorkingRow
        wsc.Cells(i, 1).Formula = "=IF(ISERROR((Specifikace!Q" & i & "+Specifikace!S" & i & ")*Specifikace!O" & i & "),0,(Specifikace!Q" & i & "+Specifikace!S" & i & ")*Specifikace!O" & i & ")"
    Next i
    
    wsc.Cells(specLastWorkingRow + 1, 1).Formula = "=sum(A" & spec_input_start_line & ":A" & specLastWorkingRow & ")" 'zakladni cena
    
    If getRDNastaveniVariantaKalkulace = 3 Then
        wsc.Cells(specLastWorkingRow + 1, 2).Formula = "=field_celkem" 'cena po sleve, pro variantu 3 se propisuje cena z listu Specifikace
    Else
        wsc.Cells(specLastWorkingRow + 1, 2).Formula = "=field_celkem*((field_cena_pro_investora/100)+1)" 'cena po sleve, pocita se jako cena celkem + procenta z teto castky
    End If
    
    If protecting Then
        Call unprotectRD_StoSystemSheet
    End If

    'Kostelnik 2019-05-10
    Dim val As String
    val = getRDNastaveniZakladniCenaSlevaRadek
    
    If val <> "1" Then
        ws_rd.Range("field_rd_zakladni_cena").Formula = "=" & tmpCalcRDsheet & "!" & wsc.Cells(specLastWorkingRow + 1, 1).Address
    End If
    
    ws_rd.Range("field_rd_cena_po_sleve").Formula = "=" & tmpCalcRDsheet & "!" & wsc.Cells(specLastWorkingRow + 1, 2).Address
    ws_rd.Range("field_rd_materialy_sdph").Formula = "=field_rd_materialy_bezdph*((field_variant_calc_dph/100)+1)" 'Cena za mat. s DPH
    ws_rd.Range("field_rd_zatepl_sdph").Formula = "=field_rd_zatepl_bezdph*((field_variant_calc_dph/100)+1)" 'Cena zatepl. s DPH
    
    If protecting Then
        Call protectRD_StoSystemSheet
    End If
             
    Set ws_rd = Nothing
    Set wsc = Nothing
    
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    MsgBox Err.Description, vbExclamation
End Function

Function getRDNastaveniCenaProInvestora() As Double 'Kostelnik 2019-03-28
    getRDNastaveniCenaProInvestora = ThisWorkbook.Worksheets("nastaveni").Range("field_cena_pro_investora")
End Function

Function setRDNastaveniCenaProInvestora(val As Double) 'Kostelnik 2019-03-28
    ThisWorkbook.Worksheets("nastaveni").Range("field_cena_pro_investora") = val
End Function

Function getRDNastaveniCenaProInvestoraMinimum() As Double 'Kostelnik 2019-03-28
    getRDNastaveniCenaProInvestoraMinimum = ThisWorkbook.Worksheets("nastaveni").Range("field_cena_pro_investora_min")
End Function

Function getRDNastaveniVariantaKalkulace() As Integer 'Kostelnik 2019-03-28
    getRDNastaveniVariantaKalkulace = ThisWorkbook.Worksheets("nastaveni").Range("field_variant_calc")
End Function

Function getRDNastaveniVariantaKalkulaceSazbaDPH() As Double 'Kostelnik 2019-03-28
    getRDNastaveniVariantaKalkulaceSazbaDPH = ThisWorkbook.Worksheets("nastaveni").Range("field_variant_calc_dph")
End Function

Function setRDNastaveniVariantaKalkulace(val As Integer) 'Kostelnik 2019-03-28
    ThisWorkbook.Worksheets("nastaveni").Range("field_variant_calc") = val
    ThisWorkbook.Worksheets("nastaveni").Range("field_variant_calc_dph") = getRDNastaveniSazbaDPHdleVarianty(getLang, val)
End Function

Function getRDNastaveniplocha() As Double 'Kostelnik 2019-03-28
    getRDNastaveniplocha = ThisWorkbook.Worksheets("nastaveni").Range("field_plocha")
End Function

Function setRDNastaveniplocha(val As Double) 'Kostelnik 2019-03-28
    ThisWorkbook.Worksheets("nastaveni").Range("field_plocha") = val
End Function

Function getRDNastaveniZpetnyBonus() As Double 'Kostelnik 2019-04-10
    getRDNastaveniZpetnyBonus = ThisWorkbook.Worksheets("nastaveni").Range("field_zpetny_bonus")
End Function

Function setRDNastaveniZpetnyBonus(val As Double) 'Kostelnik 2019-04-10
    ThisWorkbook.Worksheets("nastaveni").Range("field_zpetny_bonus") = val
End Function

Function switchRDNastaveniZakladniCenaSlevaRadek() 'Kostelnik 2019-05-10
    Dim val As String
    val = getRDNastaveniZakladniCenaSlevaRadek
    
    If val = "1" Then
        val = ""
    Else
        val = "1"
    End If
    
    ThisWorkbook.Worksheets("nastaveni").Range("field_hide_basic_price_discount_row") = val
End Function

Function getRDNastaveniZakladniCenaSlevaRadek() As String 'Kostelnik 2019-05-10
    getRDNastaveniZakladniCenaSlevaRadek = ThisWorkbook.Worksheets("nastaveni").Range("field_hide_basic_price_discount_row")
End Function

Function setRDCalculationVariant(Optional protecting As Boolean = True) 'Kostelnik 2019-03-29
    On Error GoTo ErrHandler
    
    Application.ScreenUpdating = False
    
    If protecting Then
        Call unprotectRD_StoSystemSheet
    End If
    
    Dim variantNo As Integer
    variantNo = getRDNastaveniVariantaKalkulace
    
    Dim ws_rd As Worksheet
    Set ws_rd = ThisWorkbook.Worksheets(rd_stosystem)
    
    Dim ws_spec As Worksheet
    Set ws_spec = ThisWorkbook.Worksheets("Specifikace")
    
    ws_rd.Range("field_rd_SH01_123").EntireRow.Hidden = True
    ws_rd.Range("field_rd_SH02_123").EntireRow.Hidden = True
    ws_rd.Range("field_rd_SH03_23").EntireRow.Hidden = True
    ws_rd.Range("field_rd_SH04_23").EntireRow.Hidden = True
    ws_rd.Range("field_rd_SH05_1").EntireRow.Hidden = True
    ws_rd.Range("field_rd_SH06_1").EntireRow.Hidden = True
    ws_rd.Range("field_rd_SH07_1").EntireRow.Hidden = True
    ws_rd.Range("field_rd_SH08_1").EntireRow.Hidden = True
    ws_rd.Range("field_rd_SH09_2").EntireRow.Hidden = True
    ws_rd.Range("field_rd_SH10_2").EntireRow.Hidden = True
    ws_rd.Range("field_rd_SH11_12").EntireRow.Hidden = True
    ws_rd.Range("field_rd_SH12_12").EntireRow.Hidden = True
    ws_rd.Range("field_rd_SH13_12").EntireRow.Hidden = True
    ws_rd.Range("field_rd_SH14_12").EntireRow.Hidden = True
    ws_rd.Range("field_rd_SH15_12").EntireRow.Hidden = True
    ws_rd.Range("field_rd_SH16_12").EntireRow.Hidden = True
    ws_rd.Range("field_rd_SH17_12").EntireRow.Hidden = True
    ws_rd.Range("field_rd_SH18_12").EntireRow.Hidden = True
    
    ws_spec.Range("field_spec_blankrow_underdph").EntireRow.Hidden = True
    ws_spec.Range("field_spec_row_sdph").EntireRow.Hidden = True
           
    If variantNo = 1 Then 'RF platce DPH, material + prace 15%
        ws_rd.Range("field_rd_SH01_123").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH02_123").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH05_1").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH06_1").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH07_1").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH08_1").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH11_12").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH12_12").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH13_12").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH14_12").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH15_12").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH16_12").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH17_12").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH18_12").EntireRow.Hidden = False
        ws_spec.Range("field_spec_blankrow_underdph").EntireRow.Hidden = False
    ElseIf variantNo = 2 Then 'RF neni platce DPH, material 21, prece bez DPH
        ws_rd.Range("field_rd_SH01_123").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH02_123").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH03_23").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH04_23").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH09_2").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH10_2").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH11_12").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH12_12").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH13_12").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH14_12").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH15_12").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH16_12").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH17_12").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH18_12").EntireRow.Hidden = False
        ws_spec.Range("field_spec_blankrow_underdph").EntireRow.Hidden = False
    ElseIf variantNo = 3 Then 'Prodej investorovi, material 21, bez prace
        ws_rd.Range("field_rd_SH01_123").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH02_123").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH03_23").EntireRow.Hidden = False
        ws_rd.Range("field_rd_SH04_23").EntireRow.Hidden = False
        ws_spec.Range("field_spec_row_sdph").EntireRow.Hidden = False
    Else 'VF
        ws_spec.Range("field_spec_blankrow_underdph").EntireRow.Hidden = False
    End If
    
    Call zobrazeniRadkuZpetnyBonus(ws_spec, variantNo, getRDNastaveniZpetnyBonus)
    
    Call zarovnaniNastaveniSpecTlacitekRadku 'se skrytim radku se rozhodni druhy radek tlacitek, proto tato funkce
    
    Set ws_rd = Nothing
    Set ws_spec = Nothing
    
    If protecting Then
        Call protectRD_StoSystemSheet
    End If
    
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    MsgBox Err.Description, vbExclamation
End Function

Function zobrazeniRadkuZpetnyBonus(ByRef ws_spec As Worksheet, variantNo As Integer, hodnotaZpetnyBonus As Double) 'Kostelnik 2019-04-10, volase z funkce setRDCalculationVariant, refreshRDdataAfterUpdateSettigs
    On Error GoTo ErrHandler
    
    ws_spec.Range("field_spec_row_zpetny_bonus").EntireRow.Hidden = True
    ws_spec.Range("field_spec_row_zpetny_bonus2").EntireRow.Hidden = True
    
    If hodnotaZpetnyBonus <> 0 Then
        If variantNo = 1 Then 'RF platce DPH, material + prace 15%
            ws_spec.Range("field_spec_row_zpetny_bonus").EntireRow.Hidden = False
            ws_spec.Range("field_spec_row_zpetny_bonus2").EntireRow.Hidden = False
        ElseIf variantNo = 2 Then 'RF neni platce DPH, material 21, prece bez DPH
            ws_spec.Range("field_spec_row_zpetny_bonus").EntireRow.Hidden = False
            ws_spec.Range("field_spec_row_zpetny_bonus2").EntireRow.Hidden = False
        End If
    End If
    
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    MsgBox Err.Description, vbExclamation
End Function

Function getRDNastaveniSazbaDPHdleVarianty(langCode As String, variantNo As Integer) As Double 'Kostelnik 2019-03-29
    Dim ws_n As Worksheet
    Set ws_n = ThisWorkbook.Worksheets("nastaveni")
    
    Dim lastLine As Long
    lastLine = ws_n.Range("A" & Rows.count).End(xlUp).Row
    
    Dim startLine As Long
    startLine = ws_n.Range("field_varianty_calc_start").Row
    
    Dim key As String
    key = "VARIANT_CALC_" & langCode
    
    Dim i As Long
    For i = startLine To lastLine
        If key = ws_n.Cells(i, 1).value Then
            If variantNo = ws_n.Cells(i, 2).value Then
                getRDNastaveniSazbaDPHdleVarianty = ws_n.Cells(i, 3).value
                Exit Function
            End If
        End If
    Next i
    
    Set ws_n = Nothing

    getRDNastaveniSazbaDPHdleVarianty = 0
    MsgBox "Nenalezena sazba DPH pro variantu kalkulace " & variantNo & ".", vbExclamation
End Function

Function setPoznamkyDescription(langCode As String) 'Kostelnik 2019-04-01
    Dim ws_m As Worksheet
    Set ws_m = ThisWorkbook.Worksheets(sheet_mutace)
        
    Dim entry_key As String
    entry_key = "POZNAMKY_RD_" & langCode
    
    Dim lastLine As Long
    lastLine = ws_m.Range("A" & Rows.count).End(xlUp).Row
    
    Dim txt As String
    txt = ""
    
    Dim j As Long
    For j = 1 To lastLine
        If ws_m.Cells(j, 1).value = entry_key Then
            If Len(txt) > 0 Then
                txt = txt & vbNewLine
            End If
            txt = txt & ws_m.Cells(j, 2).value
        End If
    Next j
    
    Set ws_m = Nothing
        
    'ziskani konfigurace vysky
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets(rd_stosystem)
    
    ws.Range("field_rd_poznamky") = txt
    
    Set ws = Nothing
    
    If txt = "" Then
        MsgBox "Varov|fffd|n|fffd|, pro tuto jazykovou mutaci nenalezen p|fffd|eklad textu pro popis syst|fffd|mu.", vbExclamation
    End If
End Function

Function showHideZakladniCenaSlevovyRadek() 'Kostelnik 2019-05-10
    On Error GoTo ErrHandler
    
    Application.ScreenUpdating = False
        
    Call unprotectRD_StoSystemSheet
    
    Dim val As String
    val = getRDNastaveniZakladniCenaSlevaRadek
    
    Dim ws_rd As Worksheet
    Set ws_rd = ThisWorkbook.Worksheets(rd_stosystem)
        
    If val = "1" Then
        ws_rd.Range("field_rd_cap_slevamat").EntireRow.Hidden = True
        ws_rd.Range("field_rd_cap_zaklcena") = ""
        ws_rd.Range("field_rd_zakladni_cena") = ""
    Else
        ws_rd.Range("field_rd_cap_slevamat").EntireRow.Hidden = False
        ws_rd.Range("field_rd_cap_zaklcena") = getSheetCaptionTranslationForField(ws_rd.name, "field_rd_cap_zaklcena", getLang)
       
        Call refreshRDformulas(False)
    End If

    Set ws_rd = Nothing
    
    Call protectRD_StoSystemSheet
    
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    MsgBox Err.Description, vbExclamation
End Function

Function fceSwitchShowHideZakladniCenaSlevovyRadek() 'Kostelnik 2019-05-10
    Call switchRDNastaveniZakladniCenaSlevaRadek
    Call showHideZakladniCenaSlevovyRadek
End Function

Function testGetRDNastaveniSazbaDPHdleVarianty()
    Debug.Print getRDNastaveniSazbaDPHdleVarianty(getLang, 4)
End Function

Function testVariantaKalkulace()
    Call setRDCalculationVariant
End Function

Function testGetThermSystems()
    Dim c As Collection
    Set c = getListOfRDsystems
    
    Dim i As Integer
    For i = 1 To c.count
        Debug.Print c.Item(i)
    Next i
        
    Set c = Nothing
End Function

Function testClearRDspecRows()
    Dim ws_rd As Worksheet
    Set ws_rd = ThisWorkbook.Worksheets(rd_stosystem)
    
    'spolecny clearing
    ws_rd.Range("field_rd_plocha") = 0
    Call clearRDspecRows(ws_rd)
    Call clearThermTextLinesDescription(ws_rd)
    Call deleteShapeObject(ws_rd, pict_rd_thermsystem)
    Call deleteShapeObject(ws_rd, pict_house)
    Call clearSheetTMPcalcRD
    
    Set ws_rd = Nothing
End Function

Function testABCD()
    'Call setThermTextLinesDescription("CZ")
    'Call setObchodniPodminky("OBCHODNI_PODMINKY_RD_", getLang) 'RD  verze obchodnich podminek
    'Call setObchodniPodminky("OBCHODNI_PODMINKY_", getLang) 'VF  verze obchodnich podminek
    'Call setRDNastaveniVariantaKalkulace(1)
    'Call setPoznamkyDescription("CZ")
End Function

Attribute VB_Name = "M20_settings"
'M20 setings

Option Explicit
Const sheetName_network_path = "network_path"
Const sheetName_settings = "nastaveni"

Function getGlobSettingsGVLPath() As String 'Kostelnik 2019-03-26
    getGlobSettingsGVLPath = ThisWorkbook.Worksheets(sheetName_settings).Range("field_glob_set_gvl")
    getGlobSettingsGVLPath = Replace(getGlobSettingsGVLPath, "#", getLang) 'Kostelnik 2019-04-10
End Function

Function getGlobSettingsGVLWorkbook() As Workbook 'Kostelnik 2019-03-26
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    
    Dim path_file_name As String
    path_file_name = getGlobSettingsGVLPath
    
    Set getGlobSettingsGVLWorkbook = getZdrojDat("", True, path_file_name)
    
    If getGlobSettingsGVLWorkbook Is Nothing Then
         MsgBox "Nenalezen soubor glob|fffd|ln|fffd|m nastaven|fffd|m. Po|fffd|adovan|fffd| cesta: " & path_file_name, vbExclamation
         Exit Function
    End If
        
    'getGlobSettingsGVLWorkbook.Saved = 1
    'getGlobSettingsGVLWorkbook.Windows(1).Visible = False
    
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    MsgBox Err.Description, vbExclamation
End Function

Function getUserGVLworkspacePath(ByRef wb_gl2 As Workbook, useWBfromParam As Boolean) As String 'Kostelnik 2019-03-26
    getUserGVLworkspacePath = ""
    
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    
    Dim wb_gl As Workbook
    Dim ws_gl As Worksheet
    
    Dim userNameID As String
        
    If useWBfromParam Then
        Set wb_gl = wb_gl2
    Else
        Set wb_gl = getGlobSettingsGVLWorkbook
    End If
    
    If wb_gl Is Nothing Then
        GoTo konec
    End If
                    
    If wb_gl.Worksheets("id").Cells(1, 1).value <> "glob_settings_gvl" Then
        MsgBox "Soubor s glob|fffd|ln|fffd|m nastaven|fffd|m nen|fffd| validn|fffd|. Proce p|fffd|eru|fffd|en.", vbExclamation
        GoTo konec
    End If
    
    Set ws_gl = wb_gl.Worksheets(sheetName_network_path)
    userNameID = getUserNameID()
    getUserGVLworkspacePath = getParamFromGlobSettingsGVLbyKey(ws_gl, "DB_SPEC", userNameID)
    
konec:
    Set ws_gl = Nothing
    
    If Not useWBfromParam Then
        If Not wb_gl Is Nothing Then
            wb_gl.Close
            Set wb_gl = Nothing
        End If
    End If
    
    Application.DisplayAlerts = True
    
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    MsgBox Err.Description, vbExclamation
End Function

Function getGVLaktualData(ByRef wb_gl As Workbook, useWBfromParam As Boolean) As String 'Kostelnik 2019-04-10, uklada se ze napr. DB cenik
    getGVLaktualData = getGVLconfDataByFunctionType("AKTUALNI_DATA", wb_gl, useWBfromParam)
End Function

Function getGVLfolderSchvalenePath(ByRef wb_gl As Workbook, useWBfromParam As Boolean) As String 'Kostelnik 2019-04-18
    getGVLfolderSchvalenePath = getGVLconfDataByFunctionType("DB_SPEC_SCHVALENE", wb_gl, useWBfromParam)
End Function

Function getGVLfolderSeznamSchvalenePath(ByRef wb_gl As Workbook, useWBfromParam As Boolean) As String 'Kostelnik 2019-04-22
    getGVLfolderSeznamSchvalenePath = getGVLconfDataByFunctionType("DB_SEZNAM_SCHVALENE", wb_gl, useWBfromParam)
End Function

Function getGVLconfDataByFunctionType(key As String, ByRef wb_gl2 As Workbook, useWBfromParam As Boolean) As String 'Kostelnik 2019-04-18
    getGVLconfDataByFunctionType = ""
    
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    
    Dim wb_gl As Workbook
    Dim ws_gl As Worksheet
            
    If useWBfromParam Then
        Set wb_gl = wb_gl2
    Else
        Set wb_gl = getGlobSettingsGVLWorkbook
    End If
    
    If wb_gl Is Nothing Then
        GoTo konec
    End If
                    
    If wb_gl.Worksheets("id").Cells(1, 1).value <> "glob_settings_gvl" Then
        MsgBox "Soubor s glob|fffd|ln|fffd|m nastaven|fffd|m nen|fffd| validn|fffd|. Proce p|fffd|eru|fffd|en.", vbExclamation
        GoTo konec
    End If
    
    Set ws_gl = wb_gl.Worksheets(sheetName_network_path)
    getGVLconfDataByFunctionType = getParamFromGlobSettingsGVLbyKey(ws_gl, key, "")
    
konec:
    Set ws_gl = Nothing
    
    If Not useWBfromParam Then
        If Not wb_gl Is Nothing Then
            wb_gl.Close
            Set wb_gl = Nothing
        End If
    End If
    
    Application.DisplayAlerts = True
    
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    MsgBox Err.Description, vbExclamation
End Function

Function getParamFromGlobSettingsGVLbyKey(ByRef ws As Worksheet, typ_funkce As String, id As String) As String 'Kostelnik 2019-03-26
    getParamFromGlobSettingsGVLbyKey = ""
    
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    Dim lastLine As Long
    lastLine = ws.Range("A" & Rows.count).End(xlUp).Row
    
    Dim i As Long
    For i = 1 To lastLine
        If ws.Cells(i, 1).value = typ_funkce Then
            If ws.Cells(i, 2).value = id Then
                getParamFromGlobSettingsGVLbyKey = ws.Cells(i, 3).value & "\" & ws.Cells(i, 4).value
                Exit Function
            End If
        End If
    Next i
    
    Set ws = Nothing
    Exit Function
    
ErrHandler:
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    MsgBox Err.Description, vbExclamation
End Function

Function testGetNEpath()
     Debug.Print getGVLfolderSchvalenePath(Nothing, False)
End Function


Attribute VB_Name = "M21_schvalovani"
'schvalovani - komplet
'M14_exporty

' Application.Calculation = xlCalculationManual
' Application.Calculation = xlCalculationAutomatic

Option Explicit

Public Const seznam_status_seznam_chyba = -1
Public Const seznam_status_seznam_otevreno = 0
Public Const seznam_status_seznam_schvaleno = 1
Public Const seznam_status_seznam_zamitnuto = 2

Public Const seznamType_seznam = 1
Public Const seznamType_seznam_gvl = 2

Private Const file_name_seznam_schvalene = "seznam.xlsx"

Public g_schvalovani_option As Integer
Public g_schvalovani_poznamka As String

Function showSchvalovaniForm() 'Kostelnik 2019-04-18
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    Dim pw As PleaseWait
    
    'If isDBmode Then 'TODO
        Set pw = New PleaseWait
        
        pw.label_msg = "Prob|fffd|h|fffd| zpracov|fffd|n|fffd| schvalovac|fffd|ho procesu."
        pw.show (False)
        pw.Repaint
        
        Dim conf As Variant
        conf = getLokKonfUdajeAsitovaCesta '1 puvodni nazev souboru, 2 sitova cesta k souboru
        If IsEmpty(conf) Then
            MsgBox "Nastala chyba p|fffd|i zpracov|fffd|n|fffd| nastaven|fffd| a s|fffd|ov|fffd|ch cest. Proces p|fffd|eru|fffd|en.", vbExclamation
            GoTo konec
        End If
        
        Dim seznamFilePath As String
        seznamFilePath = CStr(conf(3)) & "\" & file_name_seznam_schvalene
        
        Dim filenamePuvodniSpec As String
        filenamePuvodniSpec = CStr(conf(4))
        
        Dim ret As Boolean
        
        'test na resource se vola jeste pri schvaleni/zamitnuti
        ret = resourceTestSeznamSchvalene(seznamFilePath, filenamePuvodniSpec) 'chybove hlasky jsou ve funkci
        If Not ret Then
            GoTo konec
        End If
        
        Dim v As Variant
        v = getStatusSchvalovaniFromOriginFile
        v(5) = getStatusSchvalovaniFromSeznam(conf)
        
        Unload pw
        Set pw = Nothing
        
        g_schvalovani_option = 0
        g_schvalovani_poznamka = ""
        
        Dim sch As Schvalovani
        Set sch = New Schvalovani
        sch.setSchvalovaniData (v)
        sch.show
        Unload sch
        Set sch = Nothing
        
        If g_schvalovani_option = 0 Then 'Kostelnik 2019-04-21
            g_schvalovani_poznamka = ""
            Exit Function
        End If
        
        'zobrazeni dialogu - proces chvilku potrva
        'Dim pw As PleaseWait
        Set pw = New PleaseWait
        
        pw.label_msg = "Prob|fffd|h|fffd| zpracov|fffd|n|fffd| schvalovac|fffd|ho procesu."
        pw.show (False)
        pw.Repaint
        
        'conf puvodne zde
        
        ret = vymazDriveSchvaleneSpecifikaceZeSchvalenych(conf)
        If Not ret Then
            MsgBox "Nastala chyba p|fffd|i pokusu v|fffd|mazu specifikace. Ov|fffd||fffd|te, |fffd|e soubor nem|fffd| otev|fffd|en jin|fffd| u|fffd|ivatel." _
            & vbNewLine _
            & vbNewLine & "Cesta k souboru: " & conf(2) _
            & vbNewLine _
            & vbNewLine & "Proces p|fffd|eru|fffd|en.", vbExclamation
            GoTo konec
        End If
                        
        ret = resourceTestSeznamSchvalene(seznamFilePath, filenamePuvodniSpec) 'chybove hlasky jsou ve funkci
        If Not ret Then
            GoTo konec
        End If
        
        If (g_schvalovani_option = 1) Then 'Schvaleni
            ret = goSchvaleni(conf)
        ElseIf (g_schvalovani_option = 2) Then
            ret = goZamitnuti(conf)
        End If
        
        Call setStatusSchvalovaniToOriginFile
        
konec:
        Unload pw
        Set pw = Nothing
         
        Application.DisplayAlerts = True
        Application.EnableEvents = True
        Application.ScreenUpdating = True
    'End If
    
    Exit Function
    
ErrHandler:
    Dim strErr As String
    strErr = Err.Description
    If Not pw Is Nothing Then
        Unload pw
        Set pw = Nothing
    End If
    Application.DisplayAlerts = True
    MsgBox strErr, vbExclamation
End Function

Function goSchvaleni(conf As Variant) As Boolean 'Kostelnik 2019-04-18
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    goSchvaleni = True
    'TODO lokalni seznam evidence - schvaleni
    
    Dim ret As Boolean
    ret = exportSpecIntoSchvalene(conf) 'export spec. do slozky schvalene (uzamceny, bez db sloupcu)
    
    Dim flagStatus As Integer 'pripraveno na vice typu statusu schvaleni
    
    If ret = False Then
        goSchvaleni = False
        flagStatus = seznam_status_seznam_chyba 'chyba
    Else
        flagStatus = seznam_status_seznam_schvaleno 'schvaleno
    End If
    
    ret = writeSeznam(flagStatus, conf, seznamType_seznam_gvl) 'lokalni GVL seznam
    
    ret = writeSeznam(flagStatus, conf, seznamType_seznam) 'globalni seznam
    
    If Not ret Then
        goSchvaleni = False
    End If
    
    Exit Function
    
ErrHandler:
    goSchvaleni = False
    Dim strErr As String
    strErr = Err.Description
    Application.DisplayAlerts = True
    MsgBox strErr, vbExclamation
End Function

Function goZamitnuti(conf As Variant) As Boolean 'Kostelnik 2019-04-18
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    goZamitnuti = True
    
    'TODO lokalni seznam evidence - zamitnuti
    Dim ret As Boolean
    
    ret = writeSeznam(seznam_status_seznam_zamitnuto, conf, seznamType_seznam_gvl) 'lokalni GVL seznam
    
    ret = writeSeznam(seznam_status_seznam_zamitnuto, conf, seznamType_seznam) 'globalni seznam
    
    If Not ret Then
        goZamitnuti = False
    End If
    
    Exit Function
    
ErrHandler:
    goZamitnuti = False
    Dim strErr As String
    strErr = Err.Description
    Application.DisplayAlerts = True
    MsgBox strErr, vbExclamation
End Function

Function getLokKonfUdajeAsitovaCesta() As Variant 'Kostelnik 2019-04-21
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
       
    Dim result(1 To 5) As String

    Dim puvodniNazevSpec As String
    puvodniNazevSpec = getNastaveniPuvodniNazevSpecifikace
    
    If puvodniNazevSpec = "" Then
        MsgBox "Nen|fffd| zn|fffd|m p|fffd|vodn|fffd| n|fffd|zev specifikace. Proces p|fffd|eru|fffd|en.", vbExclamation
        Exit Function
    End If
    
    Dim nazevSouboru As String
    nazevSouboru = upravaPuvodnihoNazvuNaExportniSchvalne(puvodniNazevSpec) 'z makroveho nazvu bude xlsx
    
    Dim wb_gl As Workbook
    Set wb_gl = getGlobSettingsGVLWorkbook
    
    result(1) = nazevSouboru
    result(2) = getGVLfolderSchvalenePath(wb_gl, True) & "\" & nazevSouboru 'slozka CZ Schvalene - pro ukladani souboru
    
    result(3) = getGVLfolderSeznamSchvalenePath(wb_gl, True) 'slozka CZ Schvalene - pro ukladani seznamu
    'result(3) = ThisWorkbook.path
    result(4) = ThisWorkbook.Worksheets("nastaveni").Range("field_origin_path_file").value & "\" & getNastaveniPuvodniNazevSpecifikace 'puvodni soubor specifikace
    result(5) = getUserGVLworkspacePath(wb_gl, True) 'GVL CZ\Test_Kostelnik - slozka GVL uzivatele
    
    getLokKonfUdajeAsitovaCesta = result
    
    If Not wb_gl Is Nothing Then
        wb_gl.Close
        Set wb_gl = Nothing
    End If
    
    Exit Function
    
ErrHandler:
    Dim strErr As String
    strErr = Err.Description
    Application.DisplayAlerts = True
    MsgBox strErr, vbExclamation
End Function

Function vymazDriveSchvaleneSpecifikaceZeSchvalenych(conf As Variant) As Boolean 'Kostelnik 2019-04-18
    'vola se pri schvalovan i pri zruseni. Pri (opetovnem) schvalovani se bude generovat novy export, proto se vymaze nejprve stara specifikace a tim se otestuje i to, zda soubor neni pozivan
    
    vymazDriveSchvaleneSpecifikaceZeSchvalenych = False

    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    Dim pathFileName As String
    pathFileName = CStr(conf(2))
    
    If pathFileName = "" Then
        MsgBox "Nastala chyba p|fffd|i |fffd|prav|fffd| n|fffd|zvu exportn|fffd|ho souboru.", vbExclamation
        Exit Function
    End If
    
    Dim full_cesta As String
    full_cesta = pathFileName
    
    If Dir(full_cesta) <> "" Then 'soubor nalezen
        Kill full_cesta
    End If
    
    vymazDriveSchvaleneSpecifikaceZeSchvalenych = True
    Exit Function
    
ErrHandler:
    Dim strErr As String
    strErr = Err.Description
    Application.DisplayAlerts = True
    MsgBox "Nastala chyba p|fffd|i pokusu o v|fffd|maz specifikace " & full_cesta & "." & vbNewLine & strErr, vbExclamation
End Function

Function getNastaveniPuvodniNazevSpecifikace() As String 'Kostelnik 2019-04-18
    getNastaveniPuvodniNazevSpecifikace = ThisWorkbook.Worksheets("nastaveni").Range("field_origin_filename")
End Function

Function exportSpecIntoSchvalene(conf As Variant) As Boolean 'Kostelnik 2019-04-22
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    exportSpecIntoSchvalene = False
    
    Dim pathFileName As String
    pathFileName = CStr(conf(2))
    
    If pathFileName = "" Then
        MsgBox "Nastala chyba p|fffd|i |fffd|prav|fffd| n|fffd|zvu exportn|fffd|ho souboru.", vbExclamation
        Exit Function
    End If
    
    Dim strRet As String
    strRet = exportTableAsValues(False, True, pathFileName)
    
    If strRet <> "OK" Then
        MsgBox "Nastala chyba p|fffd|i ukl|fffd|d|fffd|n|fffd| exportu specifikace " & pathFileName & " do slo|fffd|ky Schv|fffd|len|fffd|.", vbExclamation
        Exit Function
    End If
    
    exportSpecIntoSchvalene = True
    Exit Function
    
ErrHandler:
    Dim strErr As String
    strErr = Err.Description
    Application.DisplayAlerts = True
    MsgBox "Nastala chyba p|fffd|i exportu specifikace." & vbNewLine & strErr, vbExclamation
End Function

Function upravaPuvodnihoNazvuNaExportniSchvalne(puvodniNazev As String) As String 'Kostelnik 2019-04-22
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    upravaPuvodnihoNazvuNaExportniSchvalne = ""
        
    If EndsWith(puvodniNazev, "XLSM") Then 'Kostelnik 2019-04-22 puvodni nazev souboru ma priponu s makry, musim upravit
        upravaPuvodnihoNazvuNaExportniSchvalne = Left(puvodniNazev, Len(puvodniNazev) - 4) & "xlsx"
    End If
    
    Exit Function
    
ErrHandler:
    Dim strErr As String
    strErr = Err.Description
    Application.DisplayAlerts = True
    MsgBox strErr, vbExclamation
End Function

Function writeSeznam(flagStatus As Integer, conf As Variant, seznamType As Integer) As Boolean 'Kostelnik 2019-04-22
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    If doLogging Then
        Call logFile("writeSeznam: #100")
    End If
    
    writeSeznam = False
    
    Dim cesta As String
    
    If seznamType = seznamType_seznam Then 'slozka seznam schvalene
        cesta = CStr(conf(3))
    ElseIf seznamType = seznamType_seznam_gvl Then 'slozka GVL uzivatel - seznam vsech (i otevrene)
        cesta = CStr(conf(5))
    Else
        MsgBox "Nezn|fffd|m|fffd| typ seznamu. Proces p|fffd|eru|fffd|en.", vbExclamation
        writeSeznam = False
        Exit Function
    End If
    
    Dim wb_db As Workbook
    Dim ws As Worksheet
    Dim ws_format As Worksheet
    
    If doLogging Then
        Call logFile("writeSeznam: #200")
    End If
    
    Set wb_db = getZdrojDat(file_name_seznam_schvalene, False, cesta)
    
    If wb_db Is Nothing Then 'soubor nenalezen
        MsgBox "Nenalezen soubor " & file_name_seznam_schvalene & ".", vbExclamation
        GoTo konec
    End If
    
    If doLogging Then
        Call logFile("writeSeznam: #300")
    End If
    
    Set ws = wb_db.Worksheets("Souhrn")
    
    If doLogging Then
        Call logFile("writeSeznam: #400")
    End If
    
    Dim idSouboru As String
    idSouboru = ThisWorkbook.Worksheets("nastaveni").Range("B3").value
    If idSouboru = "" Then
        MsgBox "Nenalezeno ID souboru. Proces aktualizace seznamu schv|fffd|len|fffd|ch specifikac|fffd| p|fffd|eru|fffd|en.", vbExclamation
        GoTo konec
    End If
   
    'odemknu seznam
    Call unprotectExportedSheet("schvl+", ws)
    
    If doLogging Then
        Call logFile("writeSeznam: #500")
    End If
    
    'vyhledani existujiciho zaznamu
    Dim lineRecord As Long
    lineRecord = findSeznamSchvaleneEntry(ws, idSouboru, getColumnNoFromSeznamSchvalene(ws, "ID souboru"))
    
    If ((seznamType = seznamType_seznam) And (flagStatus = seznam_status_seznam_zamitnuto)) Then  'pokud je zamitnuto, tak ze seznamu vymazu zaznam
        If lineRecord <> 0 Then 'pokud zaznam v seznamu neexistuje, tak nic neprovedu
            ws.Range("A" & lineRecord).EntireRow.Delete
            
            'zapisu vysledek schvalovani do DB souboru
            Call writeSchvalStatusIntoSettings(flagStatus, g_schvalovani_poznamka)
        End If
    Else
        Set ws_format = wb_db.Worksheets("format_sheet")
     
        'zapisu vysledek schvalovani do DB souboru
        Call writeSchvalStatusIntoSettings(flagStatus, g_schvalovani_poznamka) 'musim zavolat pred logovanimi do seznamu, ve funkci logovani se pouzijou data z nastaveni
            
        If lineRecord = 0 Then 'zapis noveho zaznamu
            Call insertSeznamSchvalene(ws, ws_format, conf, flagStatus, seznamType)
        Else 'aktualizace existujiciho
            Call updateSeznamSchvalene(lineRecord, ws, ws_format, conf, flagStatus, seznamType)
        End If
    End If
    
    If doLogging Then
        Call logFile("writeSeznam: #600")
    End If
    
    'uzamknuti, volam stejnou funkci jako u exportovaneho souboru
    ws.Cells.Locked = True
    Call protectExportedSheet("schvl+", ws)
    Call protectExportedWB("schvl+", wb_db)
    
    If doLogging Then
        Call logFile("writeSeznam: #700")
    End If
    
    wb_db.Save
    writeSeznam = True
    
    If doLogging Then
        Call logFile("writeSeznam: #800")
    End If
    
konec:
    Set ws = Nothing
    Set ws_format = Nothing
    
    If Not wb_db Is Nothing Then
        wb_db.Close
        Set wb_db = Nothing
    End If
    
    If doLogging Then
        Call logFile("writeSeznam: #EXIT")
    End If
    
    Exit Function
    
ErrHandler:
    writeSeznam = False
    Dim strErr As String
    strErr = Err.Description
    Application.DisplayAlerts = True
    
    If doLogging Then
        Call logFile("writeSeznam: ErrHandler:" & strErr)
    End If
    
    MsgBox strErr, vbExclamation
End Function

Function findSeznamSchvaleneEntry(ws As Worksheet, docID As String, columnNo_idSouboru As Integer) As Long 'Kostelnik 2019-04-24
    findSeznamSchvaleneEntry = 0

    Dim lastLine As Long
    lastLine = ws.Cells(Rows.count, columnNo_idSouboru).End(xlUp).Row
    
    Dim hodnotaID As String
    Dim i As Long
    
    For i = 2 To lastLine
        hodnotaID = ws.Cells(i, columnNo_idSouboru).value
        If (hodnotaID = docID) Then
            findSeznamSchvaleneEntry = i
            Exit Function
        End If
    Next i
End Function

Function insertSeznamSchvalene(ByRef ws As Worksheet, ByRef ws_format As Worksheet, conf As Variant, flagStatus As Integer, seznamType As Integer) 'Kostelnik 2019-04-23
    Dim line As Long
    line = ws.Cells(Rows.count, getColumnNoFromSeznamSchvalene(ws, "ID souboru")).End(xlUp).Row 'posledni radek
    line = line + 1
    
    Call writeLineToSeznamSchvalene(line, ws, ws_format, conf, flagStatus, seznamType)
End Function

Function updateSeznamSchvalene(line As Long, ByRef ws As Worksheet, ByRef ws_format As Worksheet, conf As Variant, flagStatus As Integer, seznamType As Integer) 'Kostelnik 2019-04-23
    Call writeLineToSeznamSchvalene(line, ws, ws_format, conf, flagStatus, seznamType)
End Function

Function getColumnNoFromSeznamSchvalene(ByRef ws As Worksheet, columnName As String) As Integer 'Kostelnik 2019-04-23
    getColumnNoFromSeznamSchvalene = -1
    
    Dim lastColumn As Integer
    lastColumn = ws.Cells(1, ws.Columns.count).End(xlToLeft).column 'zahlavi
    
    Dim name As String
    Dim i As Integer
    
    For i = 1 To lastColumn
        name = ws.Cells(1, i).value
        If name = columnName Then
            getColumnNoFromSeznamSchvalene = i
            Exit Function
        End If
    Next i
    
    If getColumnNoFromSeznamSchvalene = -1 Then
        MsgBox "Nenalezen sloupec v seznamu schv|fffd|len|fffd| specifikace: " & columnName, vbExclamation
    End If
End Function

Function writeLineToSeznamSchvalene(line As Long, ByRef ws As Worksheet, ByRef ws_format As Worksheet, conf As Variant, flagStatus As Integer, seznamType As Integer) 'Kostelnik 2019-04-23
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    Dim typSpec As String
    typSpec = getLang & " " & getActivePricelistName
    
    If isRDmode Then
        typSpec = typSpec & " " & getRDNastaveniVariantaKalkulace
    End If
    
    Dim ws_spec As Worksheet
    Set ws_spec = ThisWorkbook.Worksheets("Specifikace")
    
    Dim strStatus As String
    Dim ref_row_format As String
    
    Dim v As Variant
    v = getSchvalStringsDescriptionOfStatus(flagStatus)
  
    strStatus = CStr(v(1))
    ref_row_format = CStr(v(2))
    
    Dim cesta_odkaz_na_soubor As String
    
    If seznamType = seznamType_seznam Then
        cesta_odkaz_na_soubor = CStr(conf(2)) 'absolutni cesta k souboru (uzamceneho, simple format)
    ElseIf seznamType = seznamType_seznam_gvl Then
        cesta_odkaz_na_soubor = CStr(conf(4)) 'absolutni cesta k souboru - puvodni specifikace obchodnika
    Else
        MsgBox "Nezn|fffd|m|fffd| typ seznamu. Proces p|fffd|eru|fffd|en", vbExclamation
        Exit Function
    End If
     
    Dim scn As String
    scn = getNazevSloupce(getColumnNoFromSeznamSchvalene(ws, "Celkem bez DPH"))
    ws_spec.Range(scn & ":" & scn).NumberFormat = "#,##0.00" 'celkem
        
    ws.Cells(line, getColumnNoFromSeznamSchvalene(ws, "Status")).value = strStatus
    ws.Cells(line, getColumnNoFromSeznamSchvalene(ws, "Typ spec.")).value = typSpec
    ws.Cells(line, getColumnNoFromSeznamSchvalene(ws, "|fffd||fffd|slo specifikace")).value = ws_spec.Range("field_cislo_spec").value
    ws.Cells(line, getColumnNoFromSeznamSchvalene(ws, "Zak|fffd|zka (StoPro)")).value = ws_spec.Range("field_zakazka").value
    ws.Cells(line, getColumnNoFromSeznamSchvalene(ws, "Kupuj|fffd|c|fffd|")).value = ws_spec.Range("C3").value
    ws.Cells(line, getColumnNoFromSeznamSchvalene(ws, "Jm|fffd|no")).value = ws_spec.Range("C4").value
    
    ws.Cells(line, getColumnNoFromSeznamSchvalene(ws, "I|fffd|")).value = ws_spec.Range("L3").value
    ws.Cells(line, getColumnNoFromSeznamSchvalene(ws, "DI|fffd|")).value = ws_spec.Range("L4").value
    ws.Cells(line, getColumnNoFromSeznamSchvalene(ws, "Datum")).value = ws_spec.Range("field_datum").value
    ws.Cells(line, getColumnNoFromSeznamSchvalene(ws, "Platnost do")).value = ws_spec.Range("field_platnost").value
    ws.Cells(line, getColumnNoFromSeznamSchvalene(ws, "Celkem bez DPH")).value = ws_spec.Range("field_celkem").value
    
    ws.Cells(line, getColumnNoFromSeznamSchvalene(ws, "ID schvalovatele")).value = getUserNameID
    ws.Cells(line, getColumnNoFromSeznamSchvalene(ws, "Jm|fffd|no schvalovatele")).value = getOfficeUserName
    
    Dim strDatumCas As String
    strDatumCas = CStr(Format(Now, "dd/mm/yyyy hh:mm:ss"))
    ws.Cells(line, getColumnNoFromSeznamSchvalene(ws, "Datum z|fffd|znamu")).value = strDatumCas
        
    ws.Cells(line, getColumnNoFromSeznamSchvalene(ws, "ID souboru")).value = ThisWorkbook.Worksheets("nastaveni").Range("B3").value
    
    ws.Cells(line, getColumnNoFromSeznamSchvalene(ws, "N|fffd|zev souboru")).value = cesta_odkaz_na_soubor
    
    scn = getNazevSloupce(getColumnNoFromSeznamSchvalene(ws, "N|fffd|zev souboru"))
    ws.Cells(line, getColumnNoFromSeznamSchvalene(ws, "Akce")).Formula = "=HYPERLINK(" & scn & line & ",""[O]"")"
    
    ws.Cells(line, getColumnNoFromSeznamSchvalene(ws, "Pozn|fffd|mka")).value = g_schvalovani_poznamka

    'nastaveni formatu dle konkretnich bunek (zamerne takto slozite, podporuje budouci pridavani sloupcu bez dalsich komplikaci)
    Dim radek_formatu As Integer
    radek_formatu = ws_format.Range(ref_row_format).Row
    
    Dim array_columns(1 To 18) As String
    array_columns(1) = "Akce"
    array_columns(2) = "Status"
    array_columns(3) = "Typ spec."
    array_columns(4) = "|fffd||fffd|slo specifikace"
    array_columns(5) = "Zak|fffd|zka (StoPro)"
    array_columns(6) = "Kupuj|fffd|c|fffd|"
    array_columns(7) = "Jm|fffd|no"
    array_columns(8) = "I|fffd|"
    array_columns(9) = "DI|fffd|"
    array_columns(10) = "Datum"
    array_columns(11) = "Platnost do"
    array_columns(12) = "Celkem bez DPH"
    array_columns(13) = "ID schvalovatele"
    array_columns(14) = "Jm|fffd|no schvalovatele"
    array_columns(15) = "Datum z|fffd|znamu"
    array_columns(16) = "ID souboru"
    array_columns(17) = "N|fffd|zev souboru"
    array_columns(18) = "Pozn|fffd|mka"

    Dim i As Integer
    For i = LBound(array_columns) To UBound(array_columns)
        ws_format.Cells(radek_formatu, getColumnNoFromSeznamSchvalene(ws_format, array_columns(i))).copy
        ws.Cells(line, getColumnNoFromSeznamSchvalene(ws, array_columns(i))).PasteSpecial xlPasteFormats
    Next i
    
    Application.CutCopyMode = False
    Set ws_spec = Nothing
    
    Dim aw As Worksheet
    Set aw = ActiveSheet
    
    ws.Activate
    ws.Cells(line, 1).Select
    
    aw.Activate
    Set aw = Nothing
    
    Exit Function
    
ErrHandler:
    Dim strErr As String
    strErr = Err.Description
    Application.DisplayAlerts = True
    MsgBox strErr, vbExclamation
End Function

Function resourceTestSeznamSchvalene(filenameSeznam As String, filenamePuvodniSpec As String) As Boolean 'Kostelnik 2019-04-23
    resourceTestSeznamSchvalene = True 'stav OK

    If Dir(filenameSeznam) = "" Then
        MsgBox "Nenalezen soubor " & filenameSeznam & ". Proces p|fffd|eru|fffd|en.", vbExclamation
        resourceTestSeznamSchvalene = False
        Exit Function
    End If
    
     If Dir(filenamePuvodniSpec) = "" Then
        MsgBox "Nenalezen soubor " & filenamePuvodniSpec & ". Proces p|fffd|eru|fffd|en.", vbExclamation
        resourceTestSeznamSchvalene = False
        Exit Function
    End If
    
    If IsFileOpen(filenameSeznam) Then
        resourceTestSeznamSchvalene = False
        MsgBox "Soubor se seznamem schv|fffd|len|fffd|ch specifikac|fffd| je otev|fffd|en jin|fffd|m u|fffd|ivatelem. Nebude mo|fffd|n|fffd| do n|fffd|j zapisovat." _
        & vbNewLine _
        & vbNewLine & "Cesta k souboru: " & filenameSeznam _
        & vbNewLine _
        & vbNewLine & "Proces p|fffd|eru|fffd|en.", vbExclamation
        Exit Function
    End If
    
    If IsFileOpen(filenamePuvodniSpec) Then
        resourceTestSeznamSchvalene = False
        MsgBox "Soubor p|fffd|vodn|fffd| specifikace je otev|fffd|en jin|fffd|m u|fffd|ivatelem. Nebude mo|fffd|n|fffd| do n|fffd|j zapisovat." _
        & vbNewLine _
        & vbNewLine & "Cesta k souboru: " & filenameSeznam _
        & vbNewLine _
        & vbNewLine & "Proces p|fffd|eru|fffd|en.", vbExclamation
        Exit Function
    End If
End Function
Function IsFileOpen(fileName As String) As Boolean 'Kostelnik 2019-04-23
    Dim filenum As Integer
    Dim errnum As Integer

    On Error Resume Next   ' Turn error checking off.
    filenum = FreeFile()   ' Get a free file number.
    
    ' Attempt to open the file and lock it.
    Open fileName For Input Lock Read As #filenum
    Close filenum          ' Close the file.
    errnum = Err           ' Save the error number that occurred.
    On Error GoTo 0        ' Turn error checking back on.

    ' Check to see which error occurred.
    Select Case errnum

        ' No error occurred.
        ' File is NOT already open by another user.
        Case 0
         IsFileOpen = False

        ' Error number for "Permission Denied."
        ' File is already opened by another user.
        Case 70
            IsFileOpen = True

        ' Another error occurred.
        Case Else
            IsFileOpen = True
            Error errnum
    End Select
End Function

Function setStatusSchvalovaniToOriginFile() 'Kostelnik 2019-04-24
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    'vysledek schvalovani do DB souboru jiz zapsan pri zapisu do seznamu schvalenych
    'zapisu vysledek schvalovani do puvodni specifikace
    Dim wb_db As Workbook
    Dim ws As Worksheet
    
    Dim fileName As String
    fileName = getNastaveniPuvodniNazevSpecifikace
    
    Set wb_db = getZdrojDat(fileName, False, ThisWorkbook.Worksheets("nastaveni").Range("field_origin_path_file").value)
    
    If wb_db Is Nothing Then 'soubor nenalezen
        MsgBox "Nenalezen soubor " & fileName & ".", vbExclamation
        GoTo konec
    End If
    
    Set ws = wb_db.Worksheets("nastaveni")
    
    With ThisWorkbook.Worksheets("nastaveni")
        ws.Range("field_schvalovani_status").value = .Range("field_schvalovani_status").value
        ws.Range("field_schvalovani_kdo").value = .Range("field_schvalovani_kdo").value
        ws.Range("field_schvalovani_kdy").value = .Range("field_schvalovani_kdy").value
        ws.Range("field_schvalovani_pozn").value = .Range("field_schvalovani_pozn").value
    End With
    
    Application.EnableEvents = False 'aby se nespoustel trigger a nezapisoval do specifikace_databaze
    wb_db.Save
    Application.EnableEvents = True
    
konec:
    Set ws = Nothing
    
    If Not wb_db Is Nothing Then
        wb_db.Close
        Set wb_db = Nothing
    End If
     
    Exit Function
    
ErrHandler:
    Dim strErr As String
    strErr = Err.Description
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    MsgBox "Nastala chyba p|fffd|i pokusu z|fffd|pisu schvalovac|fffd|ch informac|fffd| do p|fffd|vodn|fffd|ho souboru specifikace " & fileName & "." & vbNewLine & strErr, vbExclamation
End Function

Function getStatusSchvalovaniFromOriginFile() As Variant 'Kostelnik 2019-04-24
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    Dim v(1 To 5) As Variant

    Dim wb_db As Workbook
    Dim ws As Worksheet
    
    Dim fileName As String
    fileName = getNastaveniPuvodniNazevSpecifikace
    
    Set wb_db = getZdrojDat(fileName, False, ThisWorkbook.Worksheets("nastaveni").Range("field_origin_path_file").value)
    
    If wb_db Is Nothing Then 'soubor nenalezen
        MsgBox "Nenalezen soubor " & fileName & ".", vbExclamation
        GoTo konec
    End If
    
    Set ws = wb_db.Worksheets("nastaveni")
    v(1) = ws.Range("field_schvalovani_status").value
    v(2) = ws.Range("field_schvalovani_kdo").value
    v(3) = ws.Range("field_schvalovani_kdy").value
    v(4) = ws.Range("field_schvalovani_pozn").value
    v(5) = "" 'bude zapsano z jine funkce
    
    getStatusSchvalovaniFromOriginFile = v
    
konec:
    Set ws = Nothing
    
    If Not wb_db Is Nothing Then
        wb_db.Close
        Set wb_db = Nothing
    End If
     
    Exit Function
    
ErrHandler:
    Dim strErr As String
    strErr = Err.Description
    Application.DisplayAlerts = True
    Application.EnableEvents = True
    MsgBox "Nastala chyba p|fffd|i pokusu |fffd|ten|fffd| schvalovac|fffd|ch informac|fffd| z p|fffd|vodn|fffd|ho souboru specifikace " & fileName & "." & vbNewLine & strErr, vbExclamation
End Function

Function getStatusSchvalovaniFromSeznam(conf As Variant) As String 'Kostelnik 2019-04-24
    On Error GoTo ErrHandler
    Application.ScreenUpdating = False
    
    getStatusSchvalovaniFromSeznam = ""
    
    Dim wb_db As Workbook
    Dim ws As Worksheet
 
    Set wb_db = getZdrojDat(file_name_seznam_schvalene, False, CStr(conf(3)))
    
    If wb_db Is Nothing Then 'soubor nenalezen
        MsgBox "Nenalezen soubor " & file_name_seznam_schvalene & ".", vbExclamation
        GoTo konec
    End If
    
    Set ws = wb_db.Worksheets("Souhrn")
    
    Dim idSouboru As String
    idSouboru = ThisWorkbook.Worksheets("nastaveni").Range("B3").value
    If idSouboru = "" Then
        MsgBox "Nenalezeno ID souboru. Proces aktualizace seznamu schv|fffd|len|fffd|ch specifikac|fffd| p|fffd|eru|fffd|en.", vbExclamation
        GoTo konec
    End If
    
    'vyhledani existujiciho zaznamu
    Dim lineRecord As Long
    lineRecord = findSeznamSchvaleneEntry(ws, idSouboru, getColumnNoFromSeznamSchvalene(ws, "ID souboru"))
    
    If lineRecord = 0 Then 'specifikace neni jeste v seznamu
        getStatusSchvalovaniFromSeznam = "Nen|fffd| v seznamu schv|fffd|len|fffd|ch specifikac|fffd|."
    Else
        getStatusSchvalovaniFromSeznam = "|fffd||fffd|dka |fffd|.: " & lineRecord & ", stav: " & ws.Cells(lineRecord, getColumnNoFromSeznamSchvalene(ws, "Status")).value
    End If
     
konec:
    Set ws = Nothing
      
    If Not wb_db Is Nothing Then
        wb_db.Close
        Set wb_db = Nothing
    End If
    
    Exit Function
    
ErrHandler:
    Dim strErr As String
    strErr = Err.Description
    Application.DisplayAlerts = True
    MsgBox strErr, vbExclamation
End Function

Function getSchvalStringsDescriptionOfStatus(flagStatus As Integer) As Variant 'Kostelnik 2019-04-24
    Dim ret(1 To 2) As String
        
    If flagStatus = seznam_status_seznam_otevreno Then
        ret(1) = "Otev|fffd|eno"
        ret(2) = "field_row_format_open"
    ElseIf flagStatus = seznam_status_seznam_schvaleno Then
        ret(1) = "Schv|fffd|leno"
        ret(2) = "field_row_format_approved"
    ElseIf flagStatus = seznam_status_seznam_zamitnuto Then
        ret(1) = "Zam|fffd|tnuto"
        ret(2) = "field_row_format_denied"
    ElseIf flagStatus = seznam_status_seznam_chyba Then
        ret(1) = "Chyba"
        ret(2) = "field_row_format_open" 'prozatim necham toto
    End If
    
    getSchvalStringsDescriptionOfStatus = ret
End Function

Function writeSchvalStatusIntoSettings(flagStatus As Integer, poznamka As String) 'Kostelnik 2019-04-24
    Dim strDatumCas As String
    strDatumCas = CStr(Format(Now, "dd/mm/yyyy hh:mm:ss"))
    
    Dim v As Variant
    v = getSchvalStringsDescriptionOfStatus(flagStatus)
    
    With ThisWorkbook.Worksheets("nastaveni")
        .Range("field_schvalovani_status").value = CStr(v(1))
        .Range("field_schvalovani_kdo").value = getUserNameID & ", " & getOfficeUserName
        .Range("field_schvalovani_kdy").value = strDatumCas
        .Range("field_schvalovani_pozn").value = poznamka
    End With
End Function

'Function getStavSchvaleniForLabel() As String 'Kostelnik 2019-04-24
'    Dim txt As String
'    txt = ""''
'
'    With ThisWorkbook.Worksheets("nastaveni")
'        txt = txt & "Stav:" & WorksheetFunction.Rept(" ", 10 - Len("Stav:")) & .Range("field_schvalovani_status").value & vbNewLine
'        txt = txt & "Schv|fffd|lil:" & WorksheetFunction.Rept(" ", 10 - Len("Schv|fffd|lil:")) & .Range("field_schvalovani_kdo").value & vbNewLine
'        txt = txt & "Datum:" & WorksheetFunction.Rept(" ", 10 - Len("Datum:")) & .Range("field_schvalovani_kdy").value & vbNewLine
'        txt = txt & "Pozn|fffd|mka:" & WorksheetFunction.Rept(" ", 10 - Len("Pozn|fffd|mka:")) & .Range("field_schvalovani_pozn").value & vbNewLine
'    End With
'
'    getStavSchvaleniForLabel = txt
'    Debug.Print txt
'End Function

Function enableScreenUpdating()
    Application.ScreenUpdating = True
End Function

Function testIsFileOpen()
    Debug.Print IsFileOpen(ThisWorkbook.path & "\" & file_name_seznam_schvalene)
End Function


Attribute VB_Name = "M22_logovani"
Option Explicit

'Add the following reference to your project Microsoft Scripting Runtime

Public g_objFSO As Scripting.FileSystemObject
Public g_scrText As Scripting.TextStream
Public specifikace_log_file_cesta As String
Public Const doLogging = False

Public Function logFile(ByVal txt As String) 'Kostelnik 2019-05-07
    
    On Error GoTo ErrorHandler
    
    If specifikace_log_file_cesta = "" Then
        specifikace_log_file_cesta = ThisWorkbook.path & "\" & "specifikace-log.txt"
    End If
    
    If (g_objFSO Is Nothing) Then
        Set g_objFSO = New FileSystemObject
    End If
    
    If (g_scrText Is Nothing) Then
        If (g_objFSO.FileExists(specifikace_log_file_cesta) = False) Then
           Set g_scrText = g_objFSO.OpenTextFile(specifikace_log_file_cesta, IOMode.ForWriting, True)
        Else
           Set g_scrText = g_objFSO.OpenTextFile(specifikace_log_file_cesta, IOMode.ForAppending)
        End If
    End If

    Dim sText As String
    sText = sText & "" & vbCrLf
    sText = sText & Format(Date, "dd.MM.yyyy") & "-" & Time() & vbCrLf
    sText = sText & " " & txt & vbCrLf
    g_scrText.WriteLine sText
    g_scrText.Close
   
   Set g_scrText = Nothing
   
   Exit Function
   
ErrorHandler:
    Dim strErr As String
    strErr = Err.Description
    
    Set g_scrText = Nothing
    Call MsgBox("Unable to write to log file. " & strErr, vbCritical, "logFile")
End Function

Function testLog()
    Call logFile("xxx")
    Call logFile("bbb")
    Call logFile("ccc")
End Function

Function testdialgo()
    Dim retStr As Variant
    Dim xx As String
    xx = ThisWorkbook.path & "\" & specifikace_zakaznici
    
    retStr = Application.GetOpenFilename(FileFilter:="Excel (*.xlsx), *.xlsx", Title:=("Vyberte soubor " & specifikace_zakaznici), MultiSelect:=False)
    Debug.Print retStr
End Function


Attribute VB_Name = "PasswordDialog"
Attribute VB_Base = "0{7F47853B-ADAB-4A7C-8444-AB7C549C282B}{2993EC62-FE3A-4DB3-ADD7-DA77CDB1AEE7}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub CommandButton1_Click()
    g_password_dialog_ret_flag = False
    g_password_dialog_ret_pswd = ""
    
    Unload Me
End Sub

Private Sub CommandButton2_Click()
    g_password_dialog_ret_flag = True
    g_password_dialog_ret_pswd = textBox.value
    
    Unload Me
End Sub

Private Sub textBox_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer) 'Kostelnik 2018-11-28
    If KeyCode = vbKeyReturn Then
        Call CommandButton2_Click
        'textBox.SetFocus
        KeyCode = 0 'aby se neprenastavil focus na tlacitko po stisknuti enter klavesy
    End If
End Sub

Private Sub UserForm_Initialize()
    'Start Userform Centered inside Excel Screen (for dual monitors)
    Me.StartUpPosition = 0
    Me.Left = Application.Left + (0.5 * Application.Width) - (0.5 * Me.Width)
    Me.Top = Application.Top + (0.5 * Application.height) - (0.5 * Me.height)
    
    textBox.SetFocus
End Sub
Attribute VB_Name = "PleaseWait"
Attribute VB_Base = "0{557AA368-5401-446C-AF76-DA47118B0754}{A3BD4D3C-50C4-4119-8A88-450100303364}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub UserForm_Initialize() 'Kostelnik 2019-03-11
    'Start Userform Centered inside Excel Screen (for dual monitors)
    Me.StartUpPosition = 0
    Me.Left = Application.Left + (0.5 * Application.Width) - (0.5 * Me.Width)
    Me.Top = Application.Top + (0.5 * Application.height) - (0.5 * Me.height)
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer) 'Kostelnik 2019-01-23 zakazani zavreni okna
    If CloseMode = vbFormControlMenu Then
        Cancel = True
    End If
End Sub
Attribute VB_Name = "PrehledZakazek"
Attribute VB_Base = "0{77F663B8-A106-4020-B381-EC7945B7BF0A}{1B5CE877-182D-499F-8958-225885C49B8F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub btn_search_Click()
    Call vyhledej(textBox.value)
    textBox.SetFocus
End Sub

Private Sub btn_zobraz_vse_Click()
    textBox.value = ""
    Call vyhledej(textBox.value)
    textBox.SetFocus
End Sub

Private Sub CommandButton2_Click()
    Unload Me
End Sub

Private Sub textBox_KeyDown(ByVal KeyCode As MSForms.ReturnInteger, ByVal Shift As Integer) 'Kostelnik 2019-02-25
    If KeyCode = vbKeyReturn Then
        Call vyhledej(textBox.value)
        textBox.SetFocus
        KeyCode = 0 'aby se neprenastavil focus na tlacitko po stisknuti enter klavesy
    End If
End Sub

Private Sub UserForm_Initialize()
    'Start Userform Centered inside Excel Screen (for dual monitors)
    Me.StartUpPosition = 0
    Me.Left = Application.Left + (0.5 * Application.Width) - (0.5 * Me.Width)
    Me.Top = Application.Top + (0.5 * Application.height) - (0.5 * Me.height)
    
    textBox.SetFocus
    Call vyhledej("")
End Sub

Private Function vyhledej(str As String)
    Dim line As Long
    line = vyhledejZakazku(str)
    
    If line < 2 Then
        listBox.RowSource = tmpZakazkyList & "!L2:R2" 'bude prazdny radek, ale zustane zahlavi
    Else
        listBox.RowSource = tmpZakazkyList & "!L2" & ":R" & line
    End If
End Function
Attribute VB_Name = "RDnastaveni"
Attribute VB_Base = "0{CD23B02E-91F8-4953-907B-0B250C210EF8}{EA31AB03-C127-4DB0-866D-B38A56EF94D9}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub combobox_system_Click()
    If textbox_plocha.Enabled Then
        textbox_plocha.SetFocus
    End If
End Sub

Private Sub combobox_varkalk_click()
    Call refreshAccesFieldZpetnyBonusByVarianta
End Sub

Private Sub CommandButton2_Click()
    Dim tmpNumber As Double
    If isUnlockedMFpricelist Or isRDmode Then
        'plocha
        If Not IsNumeric(textbox_plocha.value) Then
            textbox_plocha.SetFocus
            MsgBox "Neplatn|fffd| hodnota v poli ""Plocha""", vbExclamation
            Exit Sub
        End If
        
        tmpNumber = CDbl(textbox_plocha.value)
        
        If tmpNumber < 0 Then
            textbox_plocha.SetFocus
            MsgBox "Neplatn|fffd| hodnota v poli ""Plocha""", vbExclamation
            Exit Sub
        End If
        
        g_rd_plocha = tmpNumber
        
        'cena pro investora
        If Not IsNumeric(textbox_cena_inv.value) Then
            textbox_cena_inv.SetFocus
            MsgBox "Neplatn|fffd| hodnota v poli ""Cena pro investora""", vbExclamation
            Exit Sub
        End If
        
        tmpNumber = CDbl(textbox_cena_inv.value)
        
        If tmpNumber < getRDNastaveniCenaProInvestoraMinimum Then
            textbox_cena_inv.SetFocus
            MsgBox "Neplatn|fffd| hodnota v poli ""Cena pro investora"". Minim|fffd|ln|fffd| hodnota je " & getRDNastaveniCenaProInvestoraMinimum & ".", vbExclamation
            Exit Sub
        End If
        
        g_rd_cena_inv = tmpNumber
        
        g_variant_calc = CInt(combobox_varkalk.SelText)
        g_rd_system_selected = combobox_system.SelText
        
        'zpetny bonus, 'Kostelnik 2019-04-10
        If (g_variant_calc = 1) Or (g_variant_calc = 2) Then
            If textbox_zpetny_bonus.value = "" Then 'neni povinne pole
                g_rd_zpetny_bonus = 0
            Else
                If Not IsNumeric(textbox_zpetny_bonus.value) Then
                    textbox_zpetny_bonus.SetFocus
                    MsgBox "Neplatn|fffd| hodnota v poli ""Zp|fffd|tn|fffd| bonus""", vbExclamation
                    Exit Sub
                End If
                
                tmpNumber = CDbl(textbox_zpetny_bonus.value)
                
                If tmpNumber < 0 Then
                    textbox_zpetny_bonus.SetFocus
                    MsgBox "Neplatn|fffd| hodnota v poli ""Zp|fffd|tn|fffd| bonus""", vbExclamation
                    Exit Sub
                End If
                                
                g_rd_zpetny_bonus = tmpNumber
            End If
        End If
    Else
        g_variant_calc = 0
        g_rd_plocha = 0
        g_rd_system_selected = ""
        g_rd_cena_inv = 0
        g_rd_zpetny_bonus = 0
    End If
    
    g_inic_form_set_rd_nastaveni = True
    
    Unload Me
End Sub

Private Sub Image1_Click() 'Kostelnik 2019-04-11
    g_password_dialog_ret_flag = False
    g_password_dialog_ret_pswd = ""

    Dim pd As PasswordDialog
    Set pd = New PasswordDialog
    pd.show
    Unload pd
    Set pd = Nothing
    
    If g_password_dialog_ret_flag Then
        Call unlockRDZpetnyBonusPassword(g_password_dialog_ret_pswd)
        Call refreshAccesFieldZpetnyBonusByVarianta
    End If
    
    'vycistim
    g_password_dialog_ret_flag = False
    g_password_dialog_ret_pswd = ""
End Sub

Private Sub UserForm_Initialize() 'Kostelnik 2019-03-28
    'Start Userform Centered inside Excel Screen (for dual monitors)
    Me.StartUpPosition = 0
    Me.Left = Application.Left + (0.5 * Application.Width) - (0.5 * Me.Width)
    Me.Top = Application.Top + (0.5 * Application.height) - (0.5 * Me.height)
        
    If isUnlockedMFpricelist Or isRDmode Then
        CommandButton4.Enabled = True
        
        textbox_plocha.Enabled = True
        textbox_plocha.SetFocus
        
        If g_rd_plocha <> 0 Then
            textbox_plocha.value = g_rd_plocha
        Else
            textbox_plocha.value = ""
        End If
        
        textbox_cena_inv.Enabled = True
        
        If g_rd_cena_inv <> 0 Then
            textbox_cena_inv.value = g_rd_cena_inv
        Else
            textbox_cena_inv.value = ""
        End If
        
        combobox_varkalk.Enabled = True
        Call fillVariantsCalc(g_variant_calc)
        
        combobox_system.Enabled = True
        Call fillRDSystems(g_rd_system_selected)
                
        textbox_zpetny_bonus.value = ""
        If (g_variant_calc = 1) Or (g_variant_calc = 2) Then 'Kostelnik 2019-04-10
            textbox_zpetny_bonus.Enabled = isUnlockedRDZpetnyBonusPassword
            If textbox_zpetny_bonus.Enabled Then
                label_zpetny_bonus.ForeColor = RGB(0, 0, 0) ' black
            Else
                label_zpetny_bonus.ForeColor = RGB(130, 130, 130) 'gray
            End If
        
            If g_rd_zpetny_bonus <> 0 Then
                textbox_zpetny_bonus.value = g_rd_zpetny_bonus
            End If
        End If
    End If
End Sub

Private Sub fillVariantsCalc(selectValue As Integer) 'Kostelnik 2019-03-19
    combobox_varkalk.Clear
    Dim cc As Collection
    
    Set cc = fillVaraintsCalcIntoListBox(getLang)
    
    Dim va As Variant
    Dim selectIndex As Integer
    selectIndex = 0
    
    Dim i As Integer
    For i = 1 To cc.count
        va = cc.Item(i)
        combobox_varkalk.AddItem va(0)
        
        If CInt(va(0)) = selectValue Then
            selectIndex = i - 1
        End If
    Next i
                      
    If combobox_varkalk.ListCount > 0 Then
        If selectIndex = 0 Then
            combobox_varkalk.ListIndex = 0
        Else
            combobox_varkalk.ListIndex = selectIndex
        End If
    End If
           
    Call refreshAccesFieldZpetnyBonusByVarianta
    
    Set cc = Nothing
End Sub

Private Sub refreshAccesFieldZpetnyBonusByVarianta() 'Kostelnik 2019-04-10
    If Not isUnlockedRDZpetnyBonusPassword Then 'Kostelnik 2019-04-11
        textbox_zpetny_bonus.Enabled = False
        textbox_zpetny_bonus.value = ""
        label_zpetny_bonus.ForeColor = RGB(130, 130, 130) 'gray
        Exit Sub
    End If

    Dim v As Integer
    v = CInt(combobox_varkalk.SelText)
    textbox_zpetny_bonus.Enabled = ((v = 1) Or (v = 2))
    
    If Not textbox_zpetny_bonus.Enabled Then
        textbox_zpetny_bonus.value = ""
        label_zpetny_bonus.ForeColor = RGB(130, 130, 130) 'gray
    Else
        label_zpetny_bonus.ForeColor = RGB(0, 0, 0) ' black
    End If
End Sub

Private Sub fillRDSystems(selectValue As String) 'Kostelnik 2019-03-19
    combobox_system.Clear
    
    Dim c As Collection
    Set c = getListOfRDsystems
    
    Dim selectIndex As Integer
    selectIndex = 0
    
    Dim i As Integer
    For i = 1 To c.count
        combobox_system.AddItem c.Item(i)
       
        If c.Item(i) = selectValue Then
            selectIndex = i - 1
        End If
    Next i
    
    If combobox_system.ListCount > 0 Then
        If selectIndex = 0 Then
            combobox_system.ListIndex = 0
        Else
            combobox_system.ListIndex = selectIndex
        End If
    End If
            
    Set c = Nothing
End Sub

Private Sub CommandButton4_Click()
    Dim varCalc As Integer
    varCalc = getRDcalculationVariantFromForm
    Call fillVariantsCalc(varCalc)
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)  'Kostelnik 2019-01-23 zakazani zavreni okna
    If CloseMode = vbFormControlMenu Then
        Cancel = True
    End If
End Sub
Attribute VB_Name = "Schvalovani"
Attribute VB_Base = "0{E709A565-0AAC-4896-A03D-B23B267D35A6}{3C74C930-C9AE-4B6E-917F-A7B49798699C}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub btn_schvalit_Click()
    g_schvalovani_option = 1 'schvaleni
    g_schvalovani_poznamka = textbox_poznamka.value
    Unload Me
End Sub

Private Sub CommandButton1_Click()
    g_schvalovani_option = 0
    Unload Me
End Sub

Private Sub CommandButton3_Click()
    g_schvalovani_option = 2 'zamitnuti
    g_schvalovani_poznamka = textbox_poznamka.value
    Unload Me
End Sub

Private Sub UserForm_Initialize()
    'Start Userform Centered inside Excel Screen (for dual monitors)
    Me.StartUpPosition = 0
    Me.Left = Application.Left + (0.5 * Application.Width) - (0.5 * Me.Width)
    Me.Top = Application.Top + (0.5 * Application.height) - (0.5 * Me.height)
End Sub

Public Sub setSchvalovaniData(v As Variant) 'Kostelnik 2019-04-24
    label_stav.Caption = CStr(v(1))
    label_schvalil.Caption = CStr(v(2))
    label_datum.Caption = CStr(v(3))
    label_poznamka.Caption = CStr(v(4))
    label_seznam.Caption = CStr(v(5))
End Sub
Attribute VB_Name = "Template"
Attribute VB_Base = "0{049A6D44-CAA7-41B2-93B7-059B53EDBD32}{8C6E95DE-0DAC-4956-8ABE-0EAA787E1E7A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub CommandButton1_Click()
    Dim i As Long
    i = Me.listBox_sablony.ListIndex + 1
    
    templateImport_selectedLine = i
    g_vyplnit_spotrebu = Me.CheckBox1.value
    
    Unload Me
End Sub

Private Sub CommandButton2_Click()
    templateImport_selectedLine = -1
    Unload Me
End Sub

Private Sub CheckBox1_Change()
    If Me.listBox_sablony.ListIndex = -1 Then
        CheckBox1.value = False
    End If
    
    TextBox1.Enabled = CheckBox1.value
    
    If CheckBox1.value Then
        TextBox1.SetFocus
    Else
        Me.TextBox1.value = "1"
        Call recalc
    End If
End Sub

Private Sub recalc()
    Dim valid As Boolean
    valid = True
    
    If Not IsNumeric(Me.TextBox1.value) Then
        valid = False
    End If
    
    If valid Then
        If CDbl(Me.TextBox1.value) <= 0 Then
            valid = False
        End If
    End If
    
    If Not valid Then
        'MsgBox "Nen|fffd| zadan|fffd| platn|fffd| |fffd||fffd|slo.", vbExclamation
        'Exit Sub
    End If
    
    Dim num As Double
    
    If valid Then
        num = CDbl(Me.TextBox1.value)
    Else
        num = 0
    End If
    
    Call updateTemplateKoef(num)
    Me.label_prepocet.Visible = Not valid
End Sub

Private Sub listBox_sablony_Click()
    Me.listBox_polozky.RowSource = vbNullString

    Dim i As Long
    i = Me.listBox_sablony.ListIndex + 1
                
    Call prepareRowsByTemplateID(i, Me)
    Me.CommandButton1.Enabled = True
End Sub

Private Sub listBox_sablony_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    Call CommandButton1_Click
End Sub

Private Sub TextBox1_Change()
    Call recalc
End Sub

Private Sub UserForm_Initialize()
    'Start Userform Centered inside Excel Screen (for dual monitors)
    Me.StartUpPosition = 0
    Me.Left = Application.Left + (0.5 * Application.Width) - (0.5 * Me.Width)
    Me.Top = Application.Top + (0.5 * Application.height) - (0.5 * Me.height)
End Sub
Attribute VB_Name = "TemplateCreator"
Attribute VB_Base = "0{4E6D9E62-7993-4238-B21E-1A22A8916559}{4B92F528-DDFD-47B2-8FA7-6E9AB715CEDB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
Private id_sablony As Long

Private Sub btn_close_Click()
    Unload Me
End Sub

Private Sub btn_duplikovat_Click()
    If id_sablony = -1 Then
        MsgBox "Nejprve vyberte |fffd|ablonu, kterou chcete duplikovat.", vbExclamation
        Exit Sub
    End If
    
    If id_sablony > 0 Then
        id_sablony = -2
        textBox_popisSablony.value = "Kopie - " & textBox_popisSablony.value 'popis
        textBox_popisSablony.SetFocus
    End If
End Sub

Private Sub btn_modify_Click()
    'nactu z db vsechny sablony
    Dim ret As Integer
    
    'pripravim data z externiho souboru
    ret = deleteAndCreateTmpTemplateList(tmpTemplateList)
    ThisWorkbook.Worksheets("Specifikace").Activate
    
    If ret = -1 Then 'nejaka chyba, napr. nenalezen soubor se zakazniky
        MsgBox "Nastala chyba p|fffd|i na|fffd||fffd|t|fffd|n|fffd| seznamu |fffd|ablon. Proces p|fffd|eru|fffd|en.", vbExclamation
        Exit Sub
    End If
    
    Dim t As TemplateOpenList
    Set t = New TemplateOpenList
    
    Call setDataTemplateHeaders(t.listBox_hlavicky)
    
    t.show
    Unload t
    Set t = Nothing
    
    If g_template_openlist_selected_id > -1 Then
        Call setTemplate(g_template_openlist_selected_id, g_template_openlist_selected_popis)
    End If
End Sub

Private Sub btn_new_Click()
    Call initForNewTemplate
End Sub

Private Sub CommandButton1_Click()
    Call showArticleFormAndAssignValues
End Sub

Private Sub CommandButton2_Click()
    updateQty (textBox_mnozstvi.value)
End Sub

Private Sub btn_save_Click()
    Dim ret As Boolean
    ret = templateCreatorSaveTemplate(id_sablony, Me.textBox_popisSablony)
    If ret Then
        Call initForNewTemplate
        MsgBox "|fffd|ablona ulo|fffd|ena v po|fffd||fffd|dku."
    Else
        MsgBox "Nastala chyba p|fffd|i ukl|fffd|d|fffd|n|fffd| |fffd|ablony. Proces p|fffd|eru|fffd|en.", vbExclamation
    End If
End Sub

Private Sub CommandButton3_Click()
    Call removeRow(listBox_radky.ListIndex)
End Sub

Private Sub CommandButton4_Click()
    Dim ret As Boolean
    ret = deleteTemplate(id_sablony)
    If ret Then
        Call initForNewTemplate
        MsgBox "|fffd|ablona |fffd|sp|fffd|n|fffd| vymaz|fffd|na."
    End If
End Sub

Private Sub listBox_radky_Click()
    Me.textBox_mnozstvi.value = CStr(getQtyFromTemplateRow(listBox_radky.ListIndex))
End Sub

Private Sub SpinButton1_SpinDown()
    Call spinOrder("down")
End Sub

Private Sub SpinButton1_SpinUp()
    Call spinOrder("up")
End Sub

Private Sub spinOrder(move As String)
    If listBox_radky.ListCount > 1 Then
        If listBox_radky.ListIndex <> -1 Then
            Dim idEntry As Long
            idEntry = changeOrderOfRowTemplate(listBox_radky.ListIndex, move)
            
            If idEntry >= listBox_radky.ListCount Then
                listBox_radky.ListIndex = listBox_radky.ListCount - 1
            ElseIf idEntry < 0 Then
                listBox_radky.ListIndex = 0
            Else
                listBox_radky.ListIndex = idEntry
            End If
        End If
    End If
End Sub

Private Sub UserForm_Initialize()
    'Start Userform Centered inside Excel Screen (for dual monitors)
    Me.StartUpPosition = 0
    Me.Left = Application.Left + (0.5 * Application.Width) - (0.5 * Me.Width)
    Me.Top = Application.Top + (0.5 * Application.height) - (0.5 * Me.height)
    
    Call initForNewTemplate
End Sub

Private Function initForNewTemplate() 'Kostelnik 2019-02-19
    id_sablony = -1
    textBox_popisSablony.value = ""
    textBox_popisSablony.SetFocus
    textBox_mnozstvi.value = ""
    
    Call initArticleRowsListIntoTemplate
    
    listBox_radky.ColumnHeads = True
    listBox_radky.ColumnCount = 6
    listBox_radky.ColumnWidths = "55 pt;55 pt;30 pt;220 pt;45 pt;35 pt"
    listBox_radky.RowSource = tmpTemplateList & "!AA2:AF2" 'aby bylo nastavene zahlavi
End Function

Private Function setTemplate(idHeader As Long, popis As String)
    id_sablony = idHeader
        
    textBox_popisSablony.value = popis
    textBox_popisSablony.SetFocus
    textBox_mnozstvi.value = ""
    
    Dim lastLine As Long
    lastLine = initArticleRowsListIntoTemplate(idHeader)
    
    listBox_radky.ColumnHeads = True
    listBox_radky.ColumnCount = 6
    listBox_radky.ColumnWidths = "55 pt;55 pt;30 pt;220 pt;45 pt;35 pt"
    
    If lastLine < 2 Then
        lastLine = 2
    End If
    
    listBox_radky.RowSource = (tmpTemplateList & "!AA2:AF" & lastLine) 'aby bylo nastavene zahlavi
End Function

Private Function showArticleFormAndAssignValues() 'Kostelnik 2019-02-19
    Dim col As Collection
    Set col = getArticleRowFromArticleForm
            
    If Not (col Is Nothing) Then
        Dim lastLine As Long
        lastLine = writeArticleRowsListIntoTemplate(col)
        listBox_radky.RowSource = tmpTemplateList & "!AA2:AF" & lastLine
        listBox_radky.ListIndex = listBox_radky.ListCount - 1
    End If
    
    textBox_mnozstvi.SetFocus
    
    Set col = Nothing
End Function

Function updateQty(txtQty As String) 'Kostelnik 2019-02-20
    Dim valid As Boolean
    valid = True
    
    If Not IsNumeric(txtQty) Then
        valid = False
    End If
    
    If valid Then
        If CDbl(txtQty) <= 0 Then
            valid = False
        End If
    End If
    
    If Not valid Then
        'MsgBox "Nen|fffd| zadan|fffd| platn|fffd| |fffd||fffd|slo.", vbExclamation
        'Exit Sub
    End If
    
    Dim num As Double
    
    If valid Then
        num = CDbl(txtQty)
    Else
        num = 0
    End If
    
    Dim i As Long
    i = listBox_radky.ListIndex
    Call updateQtyForTemplateRow(listBox_radky.ListIndex, num)
    listBox_radky.ListIndex = i
End Function

Private Function removeRow(index As Long) 'Kostelnik 2019-02-20
    If index <> -1 Then
        Dim lastLine As Long
        lastLine = removeRowFromTemplates(index)
        listBox_radky.RowSource = tmpTemplateList & "!AA2:AF" & lastLine
        listBox_radky.ListIndex = -1
    End If
End Function

Attribute VB_Name = "TemplateOpenList"
Attribute VB_Base = "0{CBD65016-FB23-493B-8EFB-CBA3C9861EBC}{F3121C73-97B1-443B-9F75-A51EF4079053}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub btn_close_Click()
    g_template_openlist_selected_id = -1
    g_template_openlist_selected_popis = ""
    Unload Me
End Sub

Private Sub btn_select_Click()
    Call selectHeader
End Sub

Private Sub UserForm_Initialize()
    'Start Userform Centered inside Excel Screen (for dual monitors)
    Me.StartUpPosition = 0
    Me.Left = Application.Left + (0.5 * Application.Width) - (0.5 * Me.Width)
    Me.Top = Application.Top + (0.5 * Application.height) - (0.5 * Me.height)
    
    g_template_openlist_selected_id = -1
    g_template_openlist_selected_popis = ""
End Sub

Private Sub selectHeader()
    If listBox_hlavicky.ListIndex <> -1 Then
        g_template_openlist_selected_id = CLng(listBox_hlavicky.List(listBox_hlavicky.ListIndex, 0))
        g_template_openlist_selected_popis = listBox_hlavicky.List(listBox_hlavicky.ListIndex, 1)
        Unload Me
    End If
End Sub
Attribute VB_Name = "ThermSystems"
Attribute VB_Base = "0{53273A9E-DF69-4183-9DD0-3F102CEAE4D8}{C7AFF5A4-CD19-471A-935E-FC2E17B9AB8E}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub CommandButton1_Click()
    g_rd_system_selected = ""
    g_rd_system_is_selected = False
    Unload Me
End Sub

Private Sub CommandButton2_Click()
    Call chooseOption
End Sub

Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    Call chooseOption
End Sub

Private Sub UserForm_Initialize()
    'Start Userform Centered inside Excel Screen (for dual monitors)
    Me.StartUpPosition = 0
    Me.Left = Application.Left + (0.5 * Application.Width) - (0.5 * Me.Width)
    Me.Top = Application.Top + (0.5 * Application.height) - (0.5 * Me.height)
    
    Call fillSystems
End Sub

Private Function fillSystems() 'Kostelnik 2019-03-19
    ListBox1.Clear
    
    Dim c As Collection
    Set c = getListOfRDsystems()
    
    Dim i As Integer
    For i = 1 To c.count
        ListBox1.AddItem c.Item(i)
    Next i
    
    Set c = Nothing
           
    'ListBox1.ListIndex = 0
End Function

Private Sub chooseOption() 'Kostelnik 2019-03-19
    If ListBox1.ListIndex <> -1 Then
        g_rd_system_selected = ListBox1.List(ListBox1.ListIndex)
        g_rd_system_is_selected = True
        Unload Me
    End If
End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Activate() 'kdykoliv se prepnu na toto okno a stane se aktivnim
    If g_is_updateprice_mode Then
        Exit Sub
    End If
    
    If isDBmode Then
        Call fitWindowToScreen("A12:AD12")
    Else
        Call fitWindowToScreen
    End If
End Sub

Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
    If g_is_updateprice_mode Then
        Exit Sub
    End If
    
    If ThisWorkbook.Worksheets("nastaveni").Range("B4").value = "1" Then '1 = soubor uz mam korektni final nazev, neni potreba konverze
        Call addHeaderEntryToDB 'pokud se uklada finalni soubor, ulozim hlavicku do DB seznamu
        Exit Sub
    End If
    
    If ThisWorkbook.Worksheets("nastaveni").Range("B3").value = "" Then 'pokud ID souboru neni nastaven, tak neprosel temporary fazi a nebude se ukladat pod novy nazev
        Exit Sub
    End If
    
    If ThisWorkbook.Worksheets("nastaveni").Range("B2").value = "" Then 'nazev docasneho souboru - soubor je ulozen jako docasny
        Exit Sub
    End If
    
    Dim ret As Boolean
    ret = saveTemporaryFileAsNamedNewWorkFile
    If Not ret Then
        Cancel = True
    End If
End Sub

Private Sub Workbook_Open() 'Kostelnik 2018-11-27
    checkUpdatePriceMode
    If g_is_updateprice_mode Then
        Exit Sub
    End If
    
    g_protected_mode = False

    Call hideNames
    
    'Kostelnik 2019-02-13 funkce deaktivovana na zadost V. Kostky
    'If Not protectWorkbookIfIsNotCompanyEnviroment Then
    '    Exit Sub
    'End If
    
    'pouze u docasneho (nefinalniho) souboru provedu inkrementaci citace
    If (Left(ThisWorkbook.name, 1) = "~") Then
        ThisWorkbook.Worksheets("nastaveni").Range("B2").value = ThisWorkbook.name 'aktualizace nazvu docasneho souboru podle realne otevreneho souboru
        ThisWorkbook.Worksheets("nastaveni").Range("B5").value = 2 'aby se zobrazilo varovani. pri ukladani docasneho souboru musi dojit ke konverzi na jmeno zakaznika
    End If

    'Kostelnik 2019-04-25
    If ThisWorkbook.Worksheets("zdroj").Range("N1").value = "" Then 'byl nahran novy cenik, provedu inicializaci
        Dim pw As PleaseWait
        Set pw = New PleaseWait
        
        pw.label_msg = "Prob|fffd|h|fffd| inicializace zdroje dat."
        pw.show (False)
        pw.Repaint
        
        Call generateAllMenuCategory
        Call findArticlesAndCreateMenu("")
        
        ThisWorkbook.Worksheets("zdroj").Range("N1").value = 1
        ThisWorkbook.Save
        
        Unload pw
        Set pw = Nothing
    End If
            
    Call protectSpecifikace 'Kostelnik 2019-04-17
    
    'Kostelnik 2019-02-25 - od otevreni specifikace se nic nezmenilo v radcich specifikace, jen se na pozadi vygenerovalo menu artiklu, kvuli tomu nemusi souboru otravovat s dotazem na ulozeni souboru
    ThisWorkbook.Saved = True
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
    If g_is_updateprice_mode Then
        Exit Sub
    End If

    If (Left(ThisWorkbook.name, 1) = "~") Then 'docasny soubor se po zavreni sam vymaze
        Dim fullPath As String
        fullPath = ThisWorkbook.FullName

        If Dir(FullName) <> "" Then
            With ThisWorkbook
                .Saved = True 'To force a workbook to close without saving any changes
                .ChangeFileAccess xlReadOnly
                Kill .FullName
                If pocetOtevrenychOken = 1 Then
                    Application.Quit
                End If
                '.Close False
                .Close True
            End With
             'MsgBox pocetOtevrenychOken
        End If
    End If
End Sub
Attribute VB_Name = "UdajeObchodnika"
Attribute VB_Base = "0{5BF0D431-8231-42AE-A149-DBCCF5758282}{A32D0CE3-4AF1-492B-9ABF-F7242EA6602A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private Sub CommandButton1_Click()
    Unload Me
End Sub

Private Sub CommandButton2_Click()
    Call saveContact(Me)
    Call setFooter 'aktualizace paticky
    Unload Me
End Sub

Private Sub UserForm_Initialize() 'Kostelnik 2019-02-05
    'Start Userform Centered inside Excel Screen (for dual monitors)
    Me.StartUpPosition = 0
    Me.Left = Application.Left + (0.5 * Application.Width) - (0.5 * Me.Width)
    Me.Top = Application.Top + (0.5 * Application.height) - (0.5 * Me.height)
End Sub
Attribute VB_Name = "VariantyKalkulace"
Attribute VB_Base = "0{6C544F27-7262-4BDA-A4C4-E5804C911DA3}{D0785761-820E-4516-B49E-DF7431461445}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Private c As Collection

Private Sub CommandButton1_Click()
    g_varianta_kalkulace_selected = 0
    Unload Me
End Sub

Private Sub CommandButton2_Click()
    Call chooseOption
End Sub

Private Sub ListBox1_DblClick(ByVal Cancel As MSForms.ReturnBoolean)
    Call chooseOption
End Sub

Private Sub chooseOption() 'Kostelnik 2019-03-19
    Dim va As Variant
    If ListBox1.ListIndex <> -1 Then
        va = c.Item(ListBox1.ListIndex + 1)
        g_varianta_kalkulace_selected = va(0)
        Set c = Nothing
        Unload Me
    End If
End Sub

Private Sub UserForm_Initialize() 'Kostelnik 2019-03-18
    'Start Userform Centered inside Excel Screen (for dual monitors)
    Me.StartUpPosition = 0
    Me.Left = Application.Left + (0.5 * Application.Width) - (0.5 * Me.Width)
    Me.Top = Application.Top + (0.5 * Application.height) - (0.5 * Me.height)
    
    Set c = Nothing
    Call fillVariants
End Sub

Private Function fillVariants() 'Kostelnik 2019-03-18
    ListBox1.Clear
    Set c = fillVaraintsCalcIntoListBox(getLang)
    
    Dim va As Variant
    
    Dim i As Integer
    For i = 1 To c.count
        va = c.Item(i)
        ListBox1.AddItem va(1)
    Next i
           
    'ListBox1.ListIndex = 0
End Function


' InQuest injected base64 decoded content
' RyhrD
' &.+-
' zDZvK
' wRzW
' YLz{
' m:-jQh
' jKnjX
' jKnjX
' NjSzjej
' zjej
' ,.+-"{hM
' zjej
' zjej
' yhrD
' $RyhrD
' ^u(^z
' yhrDCf
' ,"{hD;-
' ~)eU
' \"{h.+-
' K+-za
' *'O*^

INQUEST-PP=macro
