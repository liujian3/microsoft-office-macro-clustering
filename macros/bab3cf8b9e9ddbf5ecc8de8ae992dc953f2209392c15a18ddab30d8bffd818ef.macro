Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Makro_Gi"
Sub Summe_erstellen()

'***********************************************************************
' Erzeugung Summenbl|fffd|tter n. Seite, Anlage oder ISP.
'
' Sauter-Cumulus GmbH, Abt. CASE, gi, 4. Februar 2008
'***********************************************************************
LetzteDatenseite = 0
'Ermittel der Anzahl der Registerbl|fffd|tter welche Daten erhalten
    For i = 1 To Worksheets.Count
        Registername = Sheets(i).Name
        Test1 = Registername Like "Seite*"
        If Test1 = True Then LetzteDatenseite = LetzteDatenseite + 1
    Next i
'Abfrage ob Max. Anzahl der Registerbl|fffd|tter |fffd|berschritten sind
    If Worksheets.Count > 240 Then
        MsgBox ("Achtung es sind 240 Registerbl|fffd|tter |fffd|berschritten")
        Exit Sub
    End If
    
'L|fffd|schen der vorhanden Summen Seiten
Antwort = MsgBox("L|fffd|schen der Summenbl|fffd|tter", vbOKCancel + vbQuestion, "Frage")   '
 If Antwort = 2 Then Exit Sub
    For i = 1 To Worksheets.Count - (LetzteDatenseite + 1)
        Registername = Sheets((LetzteDatenseite + 1)).Name
        If Registername <> "Summe" Then
           Worksheets.Application.DisplayAlerts = False ' Warnungen deaktivieren
          Sheets((LetzteDatenseite + 1)).Delete ' !!!!!! Hier eine Komentarzeile machen wenn Debugmode gew|fffd|nscht ist
           Worksheets.Application.DisplayAlerts = True ' Warnungen aktivieren
        End If
    Next i
Load frmAuswahlSummArt
frmAuswahlSummArt.Show

If frmAuswahlSummArt.CheckBox2.Value = True Then
  Exit Sub
End If
If frmAuswahlSummArt.CheckBox1.Value = True Then
 If frmAuswahlSummArt.OptionButton1.Value = True Then
    Call Anlagensortierung
    Exit Sub
 End If
  If frmAuswahlSummArt.OptionButton3.Value = True Then
    Call Schaltschranksortierung
    Exit Sub
 End If
 
  If frmAuswahlSummArt.OptionButton2.Value = True Then
        ' Kopieren Projektdaten in Summenblattvorlage
            Sheets(Sheets(1).Name).Select
            Range("B30:AN33").Select
            Selection.Copy
            Sheets("Summe").Select
            Range("B30:AN33").Select
            Selection.PasteSpecial Paste:=xlPasteAll, Operation:=xlNone, SkipBlanks:= _
            False, Transpose:=False
        'Grundwerte einstellen
            ZeilenNr = 10
            Register_neu = 0
            AktuelleZeile = 0
            Anzahl_Register = Worksheets.Count
            Summenblatt = 1
            neueSummenseite = 1
        'Erzeugen der Eintr|fffd|ge in Summenblatt
            For i = 1 To Anzahl_Register - 1
                Registername = Sheets(i).Name
                AktuelleZeile = AktuelleZeile + 1
                If AktuelleZeile = 19 Then ' Summenblatt voll |fffd|bertrag ausl|fffd|sen
                    AktuelleZeile = 2
                    neueSummenseite = 1
                End If
        'Abfrage ob neues Summenregisterblatt erstellt werden soll
                If neueSummenseite = 1 Then
                    Sheets("Summe").Select
                    Selection.Copy
                    Application.CutCopyMode = False
                    Sheets("Summe").Copy Before:=Sheets(Anzahl_Register + Register_neu)
                    Sheets("Summe (2)").Select
                    Register_neu = Register_neu + 1
                    Registername_Summe_alt = Registername_Summe
                    Registername_Summe = "Summe Seite " + Trim(Str(Register_neu))
                    Sheets("Summe (2)").Name = Registername_Summe
                    Summenblatt = Summenblatt + 1
                    neueSummenseite = 0
                    
                    If AktuelleZeile = 2 Then ' |fffd|bertag in erste Zeile einf|fffd|gen auf Zweites Summenblatt
                        Sheets(Registername_Summe_alt).Select
                        Range("E29:BB29").Select
                        Selection.Copy
                        Sheets(Registername_Summe).Select
                        Range("E" + Trim(Str(ZeilenNr + 1))).Select
                        Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
                            :=False, Transpose:=False
                        Range("B" + Trim(Str(ZeilenNr + 1))).Select
                        Range("B" + Trim(Str(ZeilenNr + 1))).Value = "|fffd|bertrag von " + Registername_Summe_alt
                    End If
                    
                    Range("BD32").Value = Summenblatt - 1 ' Eintragen der Seitenzahl
                    
                End If
                ' Kopieren der Einzelen Summenzeilen in Summenblatt
                Sheets(Registername).Select
                Range("E29:BB29").Select
                Selection.Copy
                Sheets(Registername_Summe).Select
                Range("E" + Trim(Str(ZeilenNr + AktuelleZeile))).Select
                Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
                    :=False, Transpose:=False
                Range("B" + Trim(Str(ZeilenNr + AktuelleZeile))).Select
                Range("B" + Trim(Str(ZeilenNr + AktuelleZeile))).Value = "Summe " + Registername
                
             Next i
             ' Eintragen der Gesamtseitenzahl in alle Summenbl|fffd|tter
             For ii = Anzahl_Register To Worksheets.Count - 1
               Registername = Sheets(ii).Name
               Sheets(Registername).Select
               Range("BD33").Value = Summenblatt - 1
             Next ii
             Range("B29").Value = "Gesamtsumme Funktionen" ' Austauschen der letzten Textzeile
  End If
End If
End Sub
Sub Anlagensortierung()
'Grundwerte einstellen
    ZeilenNr = 11
    Register_neu = 0
    AktuelleZeile = 0
    Anzahl_Register = Worksheets.Count
    Summenblatt = 1
    neueSummenseite = 1
    NeueAnlage = 0
    Dim Anlage(240, 2)
    Dim Summenwerte(200, 50)
    Dim Summenname(280)
    
    ' Kopieren Projektdaten in Summenblattvorlage
    Sheets(Sheets(1).Name).Select
    Range("B30:AN33").Select
    Selection.Copy
    Sheets("Summe").Select
    Range("B30:AN33").Select
    Selection.PasteSpecial Paste:=xlPasteAll, Operation:=xlNone, SkipBlanks:= _
    False, Transpose:=False
    
    Sheets(Sheets(1).Name).Select
    Anlage(0, 0) = Range("C8").Value
    Anlage(0, 1) = Range("D8").Value
    ' Summierung der Datenpunkte nach Anlage
    For i = 1 To Anzahl_Register - 1
      Sheets(Sheets(i).Name).Select
      Anlage(i, 0) = Range("C8").Value
      Anlage(i, 1) = Range("D8").Value
      If (Anlage(i, 0) = Anlage(i - 1, 0)) Or (NeueAnlage = 1) Then
        If (Anlage(i, 1) = Anlage(i - 1, 1)) Or (NeueAnlage = 1) Then
          For ii = 1 To 50
            If IsEmpty(Cells(29, ii + 4).Value) = False Then Summenwerte(ZeilenNr, ii) = Summenwerte(ZeilenNr, ii) + Cells(29, ii + 4).Value
          Next ii
          NeueAnlage = 0
          If i = Anzahl_Register - 1 Then Summenname(ZeilenNr) = Anlage(i, 0) + " " + Anlage(i, 1)
        Else
          i = i - 1
          Summenname(ZeilenNr) = Anlage(i, 0) + " " + Anlage(i, 1)
          ZeilenNr = ZeilenNr + 1
          NeueAnlage = 1
        End If
      Else
                i = i - 1
          Summenname(ZeilenNr) = Anlage(i, 0) + " " + Anlage(i, 1)
          ZeilenNr = ZeilenNr + 1
          NeueAnlage = 1

      End If
    Next i
      
'Erzeugen der Eintr|fffd|ge in Summenblatt
    For i = 11 To ZeilenNr
    '    Registername = Sheets(i).Name
        AktuelleZeile = AktuelleZeile + 1
        If AktuelleZeile = 19 Then ' Summenblatt voll |fffd|bertrag ausl|fffd|sen
            AktuelleZeile = 2
            neueSummenseite = 1
        End If
'Abfrage ob neues Summenregisterblatt erstellt werden soll
        If neueSummenseite = 1 Then
            Sheets("Summe").Select
            Selection.Copy
            Application.CutCopyMode = False
            Sheets("Summe").Copy Before:=Sheets(Anzahl_Register + Register_neu)
            Sheets("Summe (2)").Select
            Register_neu = Register_neu + 1
            Registername_Summe_alt = Registername_Summe
            Registername_Summe = "Summe Seite " + Trim(Str(Register_neu))
            Sheets("Summe (2)").Name = Registername_Summe
            Summenblatt = Summenblatt + 1
            neueSummenseite = 0
            
            If AktuelleZeile = 2 Then ' |fffd|bertag in erste Zeile einf|fffd|gen auf Zweites Summenblatt
                Sheets(Registername_Summe_alt).Select
                Range("E29:BB29").Select
                Selection.Copy
                Sheets(Registername_Summe).Select
                Range("E11").Select
                Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
                    :=False, Transpose:=False
                Range("B11").Select
                Range("B11").Value = "|fffd|bertrag von " + Registername_Summe_alt
            End If
            
            Range("BD32").Value = Summenblatt - 1 ' Eintragen der Seitenzahl
            
        End If
        ' Kopieren der Einzelen Summenzeilen in Summenblatt
        Sheets(Registername_Summe).Select
              
        Range("B" + Trim(Str(10 + AktuelleZeile))).Value = "Summe " + Summenname(i)
        For iii = 1 To 50
           Cells(10 + AktuelleZeile, iii + 4).Value = Summenwerte(i, iii)
        Next iii


     Next i
     
     ' Eintragen der Gesamtseitenzahl in alle Summenbl|fffd|tter
     For ii = Anzahl_Register To Worksheets.Count - 1
       Registername = Sheets(ii).Name
       Sheets(Registername).Select
       Range("BD33").Value = Summenblatt - 1
     Next ii
     Range("B29").Value = "Gesamtsumme Funktionen" ' Austauschen der letzten Textzeile
End Sub
Sub Schaltschranksortierung()
'Grundwerte einstellen
    ZeilenNr = 11
    Register_neu = 0
    AktuelleZeile = 0
    Anzahl_Register = Worksheets.Count
    Summenblatt = 1
    neueSummenseite = 1
    NeueAnlage = 0
    Dim Anlage(240, 2)
    Dim Summenwerte(200, 50)
    Dim Summenname(280)
    
    ' Kopieren Projektdaten in Summenblattvorlage
    Sheets(Sheets(1).Name).Select
    Range("B30:AN33").Select
    Selection.Copy
    Sheets("Summe").Select
    Range("B30:AN33").Select
    Selection.PasteSpecial Paste:=xlPasteAll, Operation:=xlNone, SkipBlanks:= _
    False, Transpose:=False
    
    Sheets(Sheets(1).Name).Select
    Anlage(0, 0) = Range("C8").Value
''    Anlage(0, 1) = Range("D8").Value
    ' Summierung der Datenpunkte nach Anlage
    For i = 1 To Anzahl_Register - 1
      Sheets(Sheets(i).Name).Select
      Anlage(i, 0) = Range("C8").Value
''      Anlage(i, 1) = Range("D8").Value
      If (Anlage(i, 0) = Anlage(i - 1, 0)) Or (NeueAnlage = 1) Then
          For ii = 1 To 50
            If IsEmpty(Cells(29, ii + 4).Value) = False Then Summenwerte(ZeilenNr, ii) = Summenwerte(ZeilenNr, ii) + Cells(29, ii + 4).Value
          Next ii
          NeueAnlage = 0
          If i = Anzahl_Register - 1 Then Summenname(ZeilenNr) = "Schaltschrank " + Anlage(i, 0)
        Else
          i = i - 1
          Summenname(ZeilenNr) = "Schaltschrank " + Anlage(i, 0)
          ZeilenNr = ZeilenNr + 1
          NeueAnlage = 1
        End If
    Next i
      
'Erzeugen der Eintr|fffd|ge in Summenblatt
    For i = 11 To ZeilenNr
    '    Registername = Sheets(i).Name
        AktuelleZeile = AktuelleZeile + 1
        If AktuelleZeile = 19 Then ' Summenblatt voll |fffd|bertrag ausl|fffd|sen
            AktuelleZeile = 2
            neueSummenseite = 1
        End If
'Abfrage ob neues Summenregisterblatt erstellt werden soll
        If neueSummenseite = 1 Then
            Sheets("Summe").Select
            Selection.Copy
            Application.CutCopyMode = False
            Sheets("Summe").Copy Before:=Sheets(Anzahl_Register + Register_neu)
            Sheets("Summe (2)").Select
            Register_neu = Register_neu + 1
            Registername_Summe_alt = Registername_Summe
            Registername_Summe = "Summe Seite " + Trim(Str(Register_neu))
            Sheets("Summe (2)").Name = Registername_Summe
            Summenblatt = Summenblatt + 1
            neueSummenseite = 0
            
            If AktuelleZeile = 2 Then ' |fffd|bertag in erste Zeile einf|fffd|gen auf Zweites Summenblatt
                Sheets(Registername_Summe_alt).Select
                Range("E29:BB29").Select
                Selection.Copy
                Sheets(Registername_Summe).Select
                Range("E11").Select
                Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
                    :=False, Transpose:=False
                Range("B11").Select
                Range("B11").Value = "|fffd|bertrag von " + Registername_Summe_alt
            End If
            
            Range("BD32").Value = Summenblatt - 1 ' Eintragen der Seitenzahl
            
        End If
        ' Kopieren der Einzelen Summenzeilen in Summenblatt
        Sheets(Registername_Summe).Select
              
        Range("B" + Trim(Str(10 + AktuelleZeile))).Value = "Summe " + Summenname(i)
        For iii = 1 To 50
           Cells(10 + AktuelleZeile, iii + 4).Value = Summenwerte(i, iii)
        Next iii


     Next i
     
     ' Eintragen der Gesamtseitenzahl in alle Summenbl|fffd|tter
     For ii = Anzahl_Register To Worksheets.Count - 1
       Registername = Sheets(ii).Name
       Sheets(Registername).Select
       Range("BD33").Value = Summenblatt - 1
     Next ii
     Range("B29").Value = "Gesamtsumme Funktionen" ' Austauschen der letzten Textzeile
End Sub


Attribute VB_Name = "Tabelle10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    
    Call sNummerierung
    
End Sub
Attribute VB_Name = "Tabelle11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    
    Call sNummerierung
    
End Sub
Attribute VB_Name = "Tabelle12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    
    Call sNummerierung
    
End Sub
Attribute VB_Name = "Tabelle13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()

    Call Summe_erstellen
    
End Sub
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()

    Call Summe_erstellen
    
End Sub
Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    
    Call sNummerierung
    
End Sub
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    
    Call sNummerierung
    
End Sub
Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    
    Call sNummerierung
    
End Sub
Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    
    Call sNummerierung
    
End Sub
Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    
    Call sNummerierung
    
End Sub
Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    
    Call sNummerierung
    
End Sub
Attribute VB_Name = "Tabelle9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 1, 0, MSForms, CommandButton"
Private Sub CommandButton1_Click()
    
    Call sNummerierung
    
End Sub
Attribute VB_Name = "frmAuswahlSummArt"
Attribute VB_Base = "0{A1BA8365-CCED-4437-B735-7891457662C5}{AFA51995-8C91-4715-A9E7-7D44FA0AD70A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Private Sub CommandButton1_Click()
CheckBox1.Value = True
frmAuswahlSummArt.Hide
End Sub

Private Sub CommandButton2_Click()
CheckBox2.Value = True
frmAuswahlSummArt.Hide
End Sub

Private Sub OptionButton1_Click()
OptionButton1.Value = True
OptionButton2.Value = False
OptionButton3.Value = False
End Sub

Private Sub OptionButton2_Click()
OptionButton1.Value = False
OptionButton2.Value = True
OptionButton3.Value = False
End Sub

Private Sub OptionButton3_Click()
OptionButton1.Value = False
OptionButton2.Value = False
OptionButton3.Value = True
End Sub

Private Sub UserForm_Activate()
OptionButton1.Value = False
OptionButton2.Value = True
OptionButton3.Value = False

CheckBox1.Value = False
CheckBox2.Value = False

End Sub



Attribute VB_Name = "mNum"
Option Explicit

Sub sNummerierung()

    '***********************************************************************
    ' Je Tabellenblatt und Anlagennummer 18 Zeilen (A11 - A28) numerieren.
    '
    ' Sauter-Cumulus GmbH, PC-Support, tsi, 14. September 2007
    ' Erweiterung 2. Februar 2008:
    ' Nur Tabellebl|fffd|tter mit dem Namen "Seite x" werden br|fffd|cksichtigt. Der
    ' Tabellenstammname wird als Konstante gef|fffd|hrt ("constName")
    '***********************************************************************

    Dim objWS As Worksheet
    Dim alngTabs() As Long, clngA As Long, clngC As Long
    Dim clngB As Long, lngStk As Long
    Dim strAnl As String, strTmp As String
    Dim strZelle As String * 2

    Const constName As String = "Seite "

    ' Anfangswerte
    clngA = 0: clngB = 1: clngC = 1
    strAnl = "": strTmp = ""
    ' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    strZelle = "D8"     ' <-- Anlagennummer
    lngStk = 18         ' <-- Anz. der zu nummerierenden Zeilen
    ' - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    ' "Index" der Tabellen einlesen und sortieren (Name: "Seite x" --> "Index" = x)
    ' Grund: Die lexikalische Sortierung der Tabellennamen unterscheidet sich eben
    ' von einer Sortierung nach den Ziffern im Tabellennamen. Das Ganze funktioniert,
    ' solange die (betrachteten) Tabellen den selben "Stammnamen" (hier: "Seite") haben
    For Each objWS In ActiveWorkbook.Sheets
        If LCase(Left(objWS.Name, 6)) = LCase(constName) Then
            ReDim Preserve alngTabs(clngA)
            alngTabs(clngA) = CLng(Mid(objWS.Name, Len(constName) + 1))
            clngA = clngA + 1
        End If
    Next objWS
    clngA = 0
    Call fBubbleSort(alngTabs)
    
    ' Anlagenbezeichnung auf erstem Tabellenblatt
    strTmp = Sheets(constName & alngTabs(LBound(alngTabs))).Range(strZelle)
    ' Durcharbeiten aller Tabllenbl|fffd|tter in der Reihenfolge der oben erfolgten Sortierung
    For clngA = LBound(alngTabs) To UBound(alngTabs)
        ' Anlagebezeichnung auf clngA-tem Blatt
        strAnl = Sheets(constName & alngTabs(clngA)).Range(strZelle)
        ' Anlagebezeichnung mit Vergleichswert pr|fffd|fen (evtl. Gruppenwechsel)
        If StrComp(strAnl, strTmp, vbTextCompare) <> 0 Then ' (<-- strAnl <> strTmp)
            ' Wenn ja, dann Vergleichswert anpassen und Z|fffd|hler zur|fffd|cksetzen
            strTmp = strAnl
            clngC = 1
        End If
        ' Zeilennummerierung in der akt. Tabelle vornehmen
        For clngB = 1 To lngStk
            Sheets(constName & alngTabs(clngA)).Cells(clngB + 10, 1) = clngC
            Sheets(constName & alngTabs(clngA)).Cells(clngB + 10, 57) = clngC
            clngC = clngC + 1
        Next clngB
    Next clngA

End Sub

Sub sCopy_komm()

    Dim oSheet As Worksheet
    Dim strName As String

    ' Anfangswerte
    strName = ""

    ' Namen des momentan ausgw. Tabellenblattes
    strName = ActiveSheet.Name

    Application.ScreenUpdating = False
    ' Durchgehen der Tabellen
    For Each oSheet In ActiveWorkbook.Sheets
        Sheets(oSheet.Name).Select
        Range("BG11:BK28").Select
        Selection.Copy
        Range("J11").Select
        Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        Range("B11").Select
    Next oSheet
    ' Ausgangstabelle ausw|fffd|hlen
    Sheets(strName).Select

    Application.ScreenUpdating = True

End Sub

Private Sub fBubbleSort(ByRef avarArray As Variant)

    Dim clngJ As Long, clngI As Long
    Dim vTemp As Variant

    For clngJ = UBound(avarArray) - 1 To LBound(avarArray) Step -1
        ' Alle links davon liegenden Zeichen auf richtige Sortierung
        ' der jeweiligen Nachfolger |fffd|berpr|fffd|fen:
        For clngI = LBound(avarArray) To clngJ
        ' Ist das aktuelle Element seinem Nachfolger gegen|fffd|ber korrekt sortiert?
            If avarArray(clngI) > avarArray(clngI + 1) Then
              ' Element und seinen Nachfolger vertauschen.
                vTemp = avarArray(clngI)
                avarArray(clngI) = avarArray(clngI + 1)
                avarArray(clngI + 1) = vTemp
            End If
        Next clngI
  Next clngJ

End Sub


INQUEST-PP=macro
