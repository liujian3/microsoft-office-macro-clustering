Attribute VB_Name = "Common"
Function checkFile(fname As String) As Boolean
    Dim FileExist As String
    FileExist = Dir(ThisWorkbook.Path & "\" & fname)
    If FileExist = "" Then
        checkFile = False
    Else
        checkFile = True
    End If
End Function
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Translation"
Dim trans As Object   '|fffd|||fffd||fffd|pDictionary

Sub readTrans(fname)
    '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||782||fffd||fffd||7c2||314|z|fffd||fffd|
    Dim splitted
    Dim txt As Object
    
    Set trans = CreateObject("Scripting.Dictionary")  '|fffd|||fffd||fffd|pDict|fffd||fffd||fffd||c42c|
    Set txt = CreateObject("ADODB.Stream")
    With txt
        .Type = 2
        .Charset = "UTF-8"
        .Open
        .LoadFromFile (ThisWorkbook.Path & "\" & fname)

        '|fffd||14f|I|fffd|s|fffd||702||143||fffd||fffd|[|fffd|v|fffd||fffd||fffd||fffd|
        Do While Not .EOS
            '|fffd||fffd||fffd||30d|s|fffd||fffd||1c2||74e||fffd||fffd|
            splitted = Split(.ReadText(-2), Chr(9))
            If UBound(splitted) = 1 Then
                trans(splitted(0)) = splitted(1)
            End If
        Loop

        '|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
        .Close
    End With
        
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
    Set txt = Nothing

End Sub
Function checkTransFile(fname As String) As Boolean
    '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||311||fffd||fffd||743|`|fffd|F|fffd|b|fffd|N|fffd|i|fffd|||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||301|j
    If Not checkFile(fname) Then
      MsgBox ("No data file found." & Chr(13) & _
      "Confirm this ZIP file has been extracted." & Chr(13) & _
      "|fffd|f|fffd|[|fffd|^|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||7cf||fffd||fffd||fffd||fffd||12192|f|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B" & Chr(13) & _
      "|fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||101|A|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|W|fffd|J|fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd||182||fffd||fffd|l|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B" + Chr(13) + "|fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|")
      checkTransFile = False
      Exit Function
    End If
    checkTransFile = True
End Function

Function getTrans(k As String)
    If trans(k) = "" Then
        getTrans = k
    ElseIf trans(k) = " " Then
        getTrans = ""
    Else
        getTrans = trans(k)
    End If
End Function

Sub setFinished()
    Dim kakushi As Worksheet, OldSheet As Variant

    Set OldSheet = ActiveSheet              ''|fffd||fffd||fffd||742||303|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd|L|fffd||fffd||fffd||fffd||fffd||702||fffd|
    Application.ScreenUpdating = False      ''|fffd||fffd||282||30d|X|fffd|V|fffd||fffd|}|fffd|~|fffd||fffd||fffd||702||fffd|
    Set kakushi = Worksheets.Add                 ''|fffd|V|fffd|[|fffd|g|fffd||fffd|}|fffd||fffd||fffd||fffd||fffd|A|fffd||20c||fffd||3d0||fffd|ws|fffd||182||fffd||fffd||111||fffd||fffd||c0b5||fffd||702||fffd|
    kakushi.Visible = False                      ''|fffd|}|fffd||fffd||fffd||fffd||fffd||fffd||fffd|V|fffd|[|fffd|g|fffd||fffd|\|fffd||fffd||fffd||242||fffd||fffd||702||fffd|
    kakushi.Name = "FINISHED"
    OldSheet.Select                         ''|fffd|A|fffd|N|fffd|e|fffd|B|fffd|u|fffd|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||256||7c2||fffd||fffd||702||fffd|
    Application.ScreenUpdating = True       ''|fffd||fffd||282||30d|X|fffd|V|fffd||fffd||fffd||10a|J|fffd||fffd||fffd||702||fffd|
End Sub

Function isFinished()
    For i = 1 To Sheets.Count Step 1
        If Sheets(i).Name = "FINISHED" Then
            isFinished = True
            Exit Function
        End If
    Next
    isFinished = False
End Function
Attribute VB_Name = "mduMain"
Public Const TRANS_FILE = "data\legalinfomatrix_trans.txt" '|fffd|||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
Private Const CNS_SC = "'"              ' |fffd|V|fffd||fffd||fffd|O|fffd||fffd||fffd|N|fffd|H|fffd|[|fffd|e|fffd|[|fffd|V|fffd||fffd||fffd||fffd|
Private Const CNS_DC = """"             ' |fffd|_|fffd|u|fffd||fffd||fffd|N|fffd|H|fffd|[|fffd|e|fffd|[|fffd||fffd||fffd||fffd|
Private Const CNS_COMM = ","            ' |fffd|J|fffd||fffd||fffd|}
Private Const SR_LINE_HEIGHT = 22       ' |fffd|T|fffd|[|fffd|`|fffd||fffd||fffd|||fffd|[|fffd|g|fffd||30d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||202||fffd||fffd||5c1|A|fffd|e|fffd|s|fffd||30d||fffd||fffd||fffd|point|fffd|w|fffd||80b7||fffd||fffd|B
Private Const g_cnsTITLE = "BizCruncher|fffd|c|fffd|[|fffd||fffd||fffd|o|fffd|["
Private linenum(0 To 1) As Long

Sub Auto_Open()
    Dim FilePath As String
    
    If isFinished() Then
        Exit Sub
    End If
    
    If Not checkTransFile(TRANS_FILE) Then
        Exit Sub
    End If
    
    '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||311||fffd||fffd||743|`|fffd|F|fffd|b|fffd|N
    FilePath = "data\matrixdata.xls"
    If Not checkFile(FilePath) Then
      MsgBox (getTrans("|fffd|f|fffd|[|fffd|^|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||7cf||fffd||fffd||fffd||fffd||12192|f|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B") & Chr(13) & _
      getTrans("|fffd||fffd||fffd||fffd||fffd||182||fffd||fffd||101|A|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd|W|fffd|J|fffd||fffd||fffd||102||fffd||fffd||202||fffd||fffd||fffd||fffd||182||fffd||fffd|l|fffd||fffd||fffd||fffd||fffd||702||fffd||fffd|B") & Chr(13) & getTrans("|fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"))
      Exit Sub
    End If

    '|fffd|||fffd||fffd|t|fffd|@|fffd|C|fffd||fffd|
    readTrans (TRANS_FILE)
    
    '|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd|t|fffd|@|fffd|C|fffd||fffd|
    FilePath = "data\legalinfomatrix_params.txt"
    If Not checkFile(FilePath) Then
      MsgBox (getTrans("|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd||fffd||fffd||82||fffd||fffd||fffd||202||fffd||fffd||fffd||fffd||7cf||fffd||fffd||fffd||fffd||12192|f|fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B") & Chr(13) & _
      Chr(13) & getTrans("|fffd||fffd||fffd|m|fffd|F|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"))
      Exit Sub
    End If
    
    '|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd||313||1c2||74d||fffd||fffd||fffd|
    Call readParams(FilePath)
    
    '|fffd|u|fffd||fffd||fffd||303|t|fffd|@|fffd|C|fffd||fffd||fffd||242||82||fffd||fffd||101|v|fffd||fffd|\|fffd||fffd|
    Cells(1, 1) = getTrans("|fffd|{|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||242||82||fffd||fffd||fffd|")
    Cells(2, 2) = getTrans("|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd|I|fffd|[|fffd|v|fffd||fffd||fffd||18b||fffd||fffd||243|}|fffd|N|fffd||fffd||fffd||fffd||fffd|N|fffd||fffd||fffd||fffd||fffd|A|fffd|o|fffd||7cf||fffd||fffd|\|fffd||fffd||fffd||c42c||fffd||fffd||fffd||102||fffd||fffd||702||fffd||fffd|B")
    Cells(3, 2) = getTrans("|fffd|}|fffd|N|fffd||fffd||fffd||16ccc||fffd||fffd||242||fffd||fffd||102||fffd||fffd||fffd||a347||fffd||357|L|fffd||fffd||fffd||242||fffd||fffd||109||fffd||fffd||fffd||fffd||fffd||fffd|B")
    Cells(4, 2) = getTrans("|fffd||702||fffd||fffd|A|fffd||fffd||fffd|k|fffd||fffd||fffd||fffd||fffd||702||716|{|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||fffd|I|fffd|[|fffd|v|fffd||fffd||fffd||fffd||fffd||102||fffd||fffd|}|fffd|N|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||253||fffd||fffd||c0b5||fffd||702||fffd||fffd||fffd|B")
    Cells(5, 2) = getTrans("|fffd||fffd||fffd|O|fffd||241|A|fffd||fffd||fffd|k|fffd||fffd|W|fffd|J|fffd||fffd||fffd||109||fffd||fffd||fffd||fffd||fffd||fffd|B")

    Dim msgCell As Range
    Set msgCell = Range("B8")
    msgCell.Font.Color = RGB(255, 0, 0)
    msgCell.Value = getTrans("|fffd||fffd||fffd||741|A|fffd|o|fffd||7cf||fffd||fffd|\|fffd||fffd||fffd||c42c||fffd||fffd||fffd||142||fffd||fffd|B|fffd||fffd||fffd|X|fffd||fffd||fffd||482||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|B")
    Call ReadApplantData
    Call setDefaultShow
    Call setTitle
    msgCell.Font.Color = RGB(0, 0, 0)
    msgCell.FormulaR1C1 = getTrans("|fffd|o|fffd||7cf||fffd||fffd||30d||c42c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||702||fffd||fffd||fffd||fffd|B")
    

    setFinished
    
    'Worksheets("about").Activate
    ActiveWorkbook.Save
End Sub

'|fffd||fffd||fffd||34e||fffd||fffd|_|fffd||fffd|1|fffd|s|fffd||682||255|\|fffd||fffd|
Private Sub setTitle()
    Dim tit_name As String, tit_len As Integer
    
    Range("A1").Select
    Selection.EntireRow.Insert , CopyOrigin:=xlFormatFromLeftOrAbove
    tit_name = getTrans("|fffd||fffd||fffd||fffd||fffd|o|fffd||7cf||fffd||fffd|\")
    tit_len = Len(tit_name)
    Selection.Value = tit_name + getParams("title")
    With Selection.Characters(1, tit_len).Font '|fffd||fffd||fffd||fffd||fffd|o|fffd||7cf||fffd||fffd| |fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
        .Size = 12
        .Bold = True
    End With
        
End Sub

Private Sub setDefaultShow()
    Dim strFlag As String
    strFlag = getParams("nozero_mode")
    Call SwitchZeroLineShow(strFlag = 1, 0)
End Sub

'nozero_flag=True |fffd|S|fffd||fffd||fffd||fffd|0|fffd||30d||fffd||fffd||68d|s|fffd||fffd|\|fffd||fffd||fffd||fffd||fffd||202||fffd|
Sub SwitchZeroLineShow(ByVal nozero_flag As Boolean, ByVal offset As Integer)
    Const ALLCOL = 3
    Dim dataWS As Worksheet
    Dim nR As Integer
    Dim notSetCells As String
    
    '|fffd||28f||fffd|i|fffd||fffd||290||fffd||fffd|l|fffd|A|fffd||fffd||fffd||28a||fffd||fffd||fffd||fffd||30f||a347||fffd|j|fffd|A|fffd||fffd||28d|s|fffd||310||fffd||fffd||fffd||fffd||fffd||fffd||702||78f||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    '|fffd||fffd||fffd||281|A|fffd|i|fffd||fffd|r|fffd|s|fffd||352|P|fffd|s|fffd||30f||a347|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd|)|fffd|A|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||28d|s|fffd||fffd||fffd||702||702||202||fffd||fffd|B
    notSetCells = "19,37,46,54,55,59,60,63"
    
    Application.ScreenUpdating = False
    Set dataWS = Worksheets(getTrans("|fffd||fffd||fffd||fffd||fffd|o|fffd||7cf||fffd||fffd|\"))

    For nR = 2 + offset To 64 + offset
        Dim v As String
        Dim r As Integer
        r = nR - offset
        If r <> 28 And r <> 49 And r <> 56 And r <> 64 Then
            '|fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|s|fffd||fffd|Value,|fffd||fffd||34c||152||fffd||142|R
            Select Case (r)
            Case 2, 4, 6, 8, 10, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36, 37, 39, 41, 43, 45, 46, 48, 51, 53, 54, 55, 58, 59, 60, 62, 63
                v = Cells(nR, ALLCOL).Value
                v = Replace(v, "|fffd||fffd|/|fffd||fffd||fffd||fffd|", "")
                v = Replace(v, getTrans("|fffd||fffd|/|fffd||fffd||fffd||fffd|"), "")
                v = Replace(v, "|fffd||fffd|/|fffd||fffd||fffd||fffd|", "")
                v = Replace(v, getTrans("|fffd||fffd|/|fffd||fffd||fffd||fffd|"), "")
                v = Replace(v, "(", "")
                v = Replace(v, ")", "")
                v = Replace(v, "%", "")
                v = Trim(v)
    
                If CDbl(v) <= 0 Then
                    Rows(nR).Hidden = nozero_flag
                    If Not inSpecifiedString(notSetCells, r) Then
                        '|fffd||fffd||28d|s|fffd||fffd||fffd|B|fffd||fffd|/|fffd|\|fffd||fffd|
                        Rows(nR - 1).Hidden = nozero_flag
                    End If
                End If
            End Select
        End If
    Next nR
    
    Application.ScreenUpdating = True
End Sub

' |fffd||fffd||fffd||fffd||fffd||fffd||502||256||7c2||fffd||fffd||702||fffd|
Sub reset()
    On Error Resume Next
    Application.DisplayAlerts = False


    Worksheets("about").Activate
    
    Dim msgCell As Range
    Set msgCell = Range("B8")
    msgCell.Value = getTrans("")
    
    For Each objSheet In ActiveWorkbook.Sheets
        SheetName = objSheet.Name
        If SheetName <> "about" Then
            objSheet.Delete
        End If
    Next

    Application.DisplayAlerts = True
    On Error GoTo 0

End Sub

Private Sub ReadApplantData()

On Error GoTo error_ReadApplantData

    Application.ScreenUpdating = False

    Dim current As Workbook, srcBook As Workbook, csv As Workbook, cornerX As Integer, cornerY As Integer, _
    maxv As Integer, r As Range, gap As Double, level As Integer, c As Integer
    
    Dim NewWS As Worksheet
    Dim dataWS As Worksheet
    Set current = ThisWorkbook
    'Dim linenum(0 To 1) As Long
    Dim sheet_name As String
    
    Workbooks.Open fileName:=ThisWorkbook.Path & "\data\matrixdata.xls"
    Set srcBook = Workbooks("matrixdata.xls")

    sheet_name = srcBook.Sheets(1).Name

    Call pasteCsv(getTrans("|fffd||fffd||fffd||fffd||fffd|o|fffd||7cf||fffd||fffd|\"), srcBook, sheet_name, 2, 1, linenum)

    Set dataWS = Worksheets(getTrans("|fffd||fffd||fffd||fffd||fffd|o|fffd||7cf||fffd||fffd|\"))
    
    'layout for output format|fffd||fffd||fffd||682||303|Z|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    Range("A1").Value = getTrans("|fffd||fffd||fffd||fffd|")
    Range("A1").Orientation = 90 'xlVertical
    Range("A1").VerticalAlignment = xlCenter
    
    Range("A2:A27").Merge
    Range("A2").Value = getTrans("|fffd||fffd|{|fffd||fffd||fffd|")
    Range("A2").Orientation = 90 'xlVertical
    Range("A2").VerticalAlignment = xlCenter
    
    Range("A29:A48").Merge
    Range("A29").Value = getTrans("|fffd||fffd||fffd||40c||fffd||fffd||fffd||fffd||fffd||fffd||4d7|~")
    Range("A29").Orientation = 90 'xlVertical
    Range("A29").VerticalAlignment = xlCenter

    Range("A50:A55").Merge
    Range("A50").Value = getTrans("|fffd||fffd||fffd||40c||fffd||fffd||fffd||fffd||fffd|")
    Range("A50").Orientation = 90 'xlVertical
    Range("A50").VerticalAlignment = xlCenter

    Range("A57:A63").Merge
    Range("A57").Value = getTrans("|fffd||fffd||fffd|n|fffd||598|A|fffd||fffd||fffd|")
    Range("A57").Orientation = 90 'xlVertical
    Range("A57").VerticalAlignment = xlCenter
    
    '|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd|[|fffd||656a||fffd|p|fffd||fffd|s|fffd||30d||fffd||fffd||fffd||fffd||fffd|1|fffd||250||752||80b7||fffd||fffd|
    Rows("28").RowHeight = 1
    Rows("49").RowHeight = 1
    Rows("56").RowHeight = 1
    Rows("64").RowHeight = 1
    
    'Set all cell align to center except A colunm
    With Range(Cells(1, 2), Cells(linenum(1) - 1, 2))
        .ColumnWidth = 34
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
    End With
    
    With Range(Cells(1, 1), Cells(linenum(1) - 1, 1))
        .EntireColumn.AutoFit
    End With
    
    With Range(Cells(1, 3), Cells(linenum(1) - 1, 3))
        .EntireColumn.AutoFit
    End With
    
    With Range(Cells(1, 4), Cells(linenum(1) - 1, linenum(0) + 1))
        .ColumnWidth = 18
        .WrapText = True
    End With
    
    With Range(Cells(1, 2), Cells(linenum(1) - 1, linenum(0) + 1))
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
    End With
    
    '|fffd|J|fffd|e|fffd|S|fffd||fffd||fffd|[|fffd||fffd||fffd||250|F|fffd||fffd|t|fffd||fffd||fffd||fffd|
    With Range(Cells(2, 1), Cells(27, linenum(0) + 1)).Interior
        .Color = RGB(255, 255, 204)
        .Pattern = xlSolid
    End With
    
    With Range(Cells(29, 1), Cells(48, linenum(0) + 1)).Interior
        .Color = RGB(204, 255, 204)
        .Pattern = xlSolid
    End With
    
    With Range(Cells(50, 1), Cells(55, linenum(0) + 1)).Interior
        .Color = RGB(204, 255, 255)
        .Pattern = xlSolid
    End With
    
    With Range(Cells(57, 1), Cells(63, linenum(0) + 1)).Interior
        .Color = RGB(255, 255, 153)
        .Pattern = xlSolid
    End With
    
    'Border|fffd|r|fffd||fffd||fffd||fffd|`|fffd||fffd|
    With Range(Cells(1, 1), Cells(1, linenum(0) + 1)).Borders
        .LineStyle = xlDouble
        .Weight = xlMedium
    End With
    
    '2|fffd|s|fffd||fffd|1|fffd||fffd||318|gTOP|fffd||fffd|
    With Range(Cells(2, 1), Cells(linenum(1) - 1, 1)).Borders(xlEdgeTop)
        .LineStyle = xlDouble
        .Weight = xlMedium
    End With
    '2|fffd|s|fffd||fffd|1|fffd||fffd||318|gLEFT|fffd||fffd|
    With Range(Cells(2, 1), Cells(linenum(1) - 1, 1)).Borders(xlEdgeLeft)
        .LineStyle = xlDouble
        .Weight = xlMedium
    End With
    '2|fffd|s|fffd||fffd|1|fffd||fffd||318|gRIGHT|fffd||fffd|
    With Range(Cells(2, 1), Cells(linenum(1) - 1, 1)).Borders(xlEdgeRight)
        .LineStyle = xlDouble
        .Weight = xlMedium
    End With
    
    '2|fffd|s|fffd||fffd|1|fffd||4d1d5||fffd||fffd||fffd||fffd||fffd||fffd|Z|fffd||fffd||fffd||fffd|28,49,56,64|fffd||312||fffd||fffd||fffd||fffd||752||80b7||fffd||fffd|A|fffd||fffd||fffd||356||fffd||fffd||fffd||fffd|
    Dim st As Integer
    For st = 2 To linenum(1) - 1
        If inSpecifiedString("28,49,56,64", st) Then
            With Range(Cells(st, 1), Cells(st, 1)).Borders(xlEdgeBottom)
                .LineStyle = xlDouble
                .Weight = xlMedium
            End With
        Else
            With Range(Cells(st, 1), Cells(st, 1)).Borders(xlEdgeBottom)
                .LineStyle = xlNone
            End With
        End If
    Next st
    
    With Range(Cells(2, 2), Cells(linenum(1) - 1, 2)).Borders
        .LineStyle = xlDouble
        .Weight = xlThin
    End With
   
    With Range(Cells(2, 3), Cells(linenum(1) - 1, linenum(0) + 1)).Borders
        .LineStyle = xlDouble
        .Weight = xlHairline
    End With
   
    
    '|fffd||fffd||fffd||fffd||fffd||656a||fffd|r|fffd||fffd|
    With Range(Cells(24, 2), Cells(28, linenum(0) + 1)).Borders(xlEdgeBottom)
        .LineStyle = xlDouble
        .Weight = xlMedium
    End With
   
    With Range(Cells(49, 2), Cells(49, linenum(0) + 1)).Borders(xlEdgeBottom)
        .LineStyle = xlDouble
        .Weight = xlMedium
    End With
    
    With Range(Cells(56, 2), Cells(56, linenum(0) + 1)).Borders(xlEdgeBottom)
        .LineStyle = xlDouble
        .Weight = xlMedium
    End With
    
    With Range(Cells(64, 2), Cells(64, linenum(0) + 1)).Borders(xlEdgeBottom)
        .LineStyle = xlDouble
        .Weight = xlMedium
    End With
    
    
    With Range(Cells(2, 2), Cells(linenum(1) - 1, linenum(0) + 1)).Borders(xlEdgeRight)
        .LineStyle = xlDouble
        .Weight = xlMedium
    End With
    
    With Range(Cells(linenum(1) - 1, 2), Cells(linenum(1) - 1, linenum(0) + 1)).Borders(xlEdgeBottom)
        .LineStyle = xlDouble
        .Weight = xlMedium
    End With
    
    'Set bold font for title
    With Range(Cells(1, 1), Cells(1, linenum(0) + 1)).Font
        .Bold = True
    End With
    
    With Range(Cells(2, 1), Cells(linenum(1) - 1, 2)).Font
        .Bold = True
    End With
    
    Dim nR As Integer
    Dim notSetCells As String
    
    '|fffd||28f||fffd|i|fffd||fffd||290||fffd||fffd|l|fffd|A|fffd||fffd||fffd||28a||fffd||fffd||fffd||fffd||30f||a347||fffd|j|fffd|A|fffd||fffd||fffd||fffd||fffd||312|l|fffd||fffd||fffd||fffd|r|fffd||fffd||fffd|A|fffd||fffd||28d|s|fffd||310||fffd||fffd||fffd||fffd||fffd|F|fffd|t|fffd||fffd|
    '|fffd||fffd||fffd||281|A|fffd|i|fffd||fffd|r|fffd|s|fffd||352|P|fffd|s|fffd||30f||a347|(|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||742||fffd||fffd||202||fffd|)|fffd|A|fffd||fffd||28d|s|fffd||310|F|fffd|t|fffd||fffd||fffd||202||fffd||fffd|B
    notSetCells = "11,12,17,18,19,37,46,54,55,59,60,63"
    
    '|fffd|e|fffd||fffd||fffd||682||30f||68d||5cc|r|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    For nR = 2 To 64
        Dim i As Integer
        Dim k As Integer
        
        'draw right border with medium weight for all items
        For k = 2 To linenum(0)
            With Range(Cells(nR, k), Cells(nR, k)).Borders(xlEdgeRight)
                .LineStyle = xlDouble
                .Weight = xlMedium
            End With
        Next k
        
        Select Case nR
        Case 3, 5, 7, 9, 13, 15, 20, 22, 24, 26, 29, 31, 33, 35, 38, 40, 42, 44, 47, 50, 52, 57, 61
            '2|fffd||fffd||68c||fffd||fffd||fffd||fffd||18a||fffd||fffd||fffd||fffd||fffd||fffd||30a||502||30c|r|fffd||fffd||fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
            With Range(Cells(nR, 2), Cells(nR, 2)).Borders(xlEdgeBottom)
                .LineStyle = xlLineStyleNone
            End With
        Case 2, 4, 6, 8, 10, 11, 12, 14, 16, 17, 18, 19, 21, 23, 25, 30, 32, 34, 36, 37, 39, 41, 43, 45, 46, 51, 53, 54, 58, 59, 60, 62
            '|fffd||fffd||fffd||682||30a||502||30e||fffd||fffd|r|fffd||fffd|,|fffd|@|fffd||fffd||fffd||353|_|fffd||fffd||fffd||14b||656a||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||18a||fffd||fffd||fffd||fffd||30a||502||30c|r|fffd||fffd|
            With Range(Cells(nR, 2), Cells(nR, linenum(0) + 1)).Borders(xlEdgeBottom)
                .LineStyle = xlDouble
                .Weight = xlThin
            End With
        End Select
        
        'set comparing line(val)
        Select Case nR
         Case 2, 4, 6, 8, 10, 11, 12, 14, 16, 17, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36, 37, 39, 41, 43, 45, 46, 48, 51, 53, 54, 55, 58, 59, 60, 62, 63
            Dim maxValue As Double
            Dim redCell() As Integer
            Dim num As Integer
            
            num = 1
            maxValue = 0
            For i = 4 To linenum(0) + 1
                Dim v As String
                
                v = Cells(nR, i).Value
                v = Replace(v, "|fffd||fffd|/|fffd||fffd||fffd||fffd|", "")
                v = Replace(v, "|fffd||fffd|/|fffd||fffd||fffd||fffd|", "")
                v = Replace(v, "(", "")
                v = Replace(v, ")", "")
                v = Replace(v, "%", "")
                v = Trim(v)
                If maxValue < CDbl(v) And CDbl(v) > 0 Then
                    maxValue = CDbl(v)
                    num = 1
                    ReDim redCell(num)
                    redCell(num - 1) = i
                ElseIf maxValue = CDbl(v) And maxValue > 0 Then
                    num = num + 1
                    ReDim Preserve redCell(num)
                    redCell(num - 1) = i
                End If
            Next i
            If maxValue > 0 Then
                For i = 0 To num
                    If redCell(i) >= 4 Then
                        With Range(Cells(nR, redCell(i)), Cells(nR, redCell(i))).Font
                            .Color = vbRed
                        End With
                        If nR > 2 And Not inSpecifiedString(notSetCells, nR) Then
                            With Range(Cells(nR - 1, redCell(i)), Cells(nR - 1, redCell(i))).Font
                                .Color = vbRed
                            End With
                        End If
                    End If
                Next i
            End If
            maxValue = 0
        End Select
    Next nR
    
    '|fffd||fffd||fffd|[|fffd|U|fffd|[|fffd||fffd||fffd||fffd|
    Dim foot_note_line As Integer
    Dim tarline As Integer
    Dim usname As String
    usname = getParams("targetname")
    foot_note_line = Int(getParams("foot_note_line"))
    fnone = foot_note_line + 1
    tarline = linenum(0) + 1
    If Len(usname) > 0 Then
        Dim kaitxt As String, kailvl As Integer, kaiheig As Integer
        kaitxt = getTrans("|fffd|K|fffd|w|fffd||fffd||fffd|")
        kailvl = Len(kaitxt)
        kaiheig = 150 '|fffd|R|fffd||fffd||fffd||fffd||fffd|g|fffd||30d||fffd||fffd||fffd|
        For nR = 3 To tarline
            Dim kai As String
            If Not Cells(fnone, nR).Value = "" Then
                kai = Cells(fnone, nR).Value
                Cells(1, nR).AddComment kaitxt & Chr(10) & kai
                Cells(fnone, nR).Value = ""
                If Len(kai) > 90 Then
                    kaiheig = 180
                End If
                If Len(kai) < 28 Then
                    With Cells(1, nR).Comment.Shape
                        .TextFrame.Characters(1, kailvl).Font.Bold = True
                        .TextFrame.AutoSize = True
                    End With
                Else
                    With Cells(1, nR).Comment.Shape
                        .TextFrame.Characters(1, kailvl).Font.Bold = True
                        .Width = 120
                        .Height = kaiheig
                    End With
                End If
            End If
        Next nR
        Cells(fnone, 2).Value = ""
        '|fffd|g|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||14f||fffd||fffd||fffd|
        Cells(foot_note_line, 2).HorizontalAlignment = xlLeft
        For nR = 1 To tarline
            With Cells(foot_note_line, nR)
                .Borders(xlEdgeBottom).LineStyle = xlNone
                .Borders(xlEdgeRight).LineStyle = xlNone
                .Borders(xlInsideVertical).LineStyle = xlNone
                .Borders(xlInLeft).LineStyle = xlNone
            End With
        Next nR
    End If
    
    Cells(fnone, 2) = getTrans("*|fffd||fffd||fffd|j|fffd||fffd||fffd||fffd|(|fffd|o|fffd|^)|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|(|fffd|o|fffd|^)|fffd||fffd||fffd||fffd||fffd|^|fffd|i|fffd||fffd||fffd||fffd|(|fffd|o|fffd|^)|fffd||fffd||fffd||fffd||fffd|{|fffd||fffd||fffd||fffd|{|fffd|i|fffd||627a||fffd||fffd||fffd|A|fffd||fffd||fffd||202||fffd||fffd||627a||fffd||fffd||fffd|j|fffd|j")
    With Range(Cells(foot_note_line, 2), Cells(fnone, 2)).Font
        .Bold = True
    End With
    
    srcBook.Close savechanges:=False
    Return

error_ReadApplantData:
    Resume Next

End Sub

Function inSpecifiedString(strCells As String, nR As Integer) As Boolean
    Dim i As Integer
    Dim bRtn As Boolean
    Dim mm As Variant
    
    bRtn = False
    mm = Split(strCells, ",")
    For i = LBound(mm) To UBound(mm)
        If Trim(Str(nR)) = Trim(mm(i)) Then
            bRtn = True
            Exit For
        End If
    Next i
    inSpecifiedString = bRtn
    Exit Function

End Function

Function ExistSheet(ByRef Workbook As Workbook, SheetName) As Boolean
    '|fffd||fffd||fffd||fffd| SheetName |fffd||303|V|fffd|[|fffd|g|fffd||fffd||fffd||fffd||fffd||6c2||242||fffd||fffd||90a9||fffd|`|fffd|F|fffd|b|fffd|N|fffd||fffd||fffd||fffd|
    
    Dim i, cnt As Integer
    
    cnt = Workbook.Sheets.Count
    ExistSheet = False
    For i = 1 To cnt
        If Workbook.Sheets(i).Name = SheetName Then
            ExistSheet = True
            Exit For
        End If
    Next
End Function

Private Sub pasteCsv(SheetName As String, ByRef srcBook As Workbook, srcSheetName As String, _
    toX As Integer, toY As Integer, ByRef Answer() As Long)
    
    Set current = ThisWorkbook
    
    srcBook.Worksheets(srcSheetName).Activate
    
    'CSV|fffd||30d||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    j = 1
    Do
        j = j + 1
    Loop While Cells(j, 1).Text <> ""
    csvY = j - 1
    'CSV|fffd||315||fffd||fffd||fffd||fffd||fffd||fffd||7c2||fffd|
    j = 1
    Do
        j = j + 1
    Loop While Cells(1, j).Text <> ""
    csvX = j - 1
    
    Answer(0) = csvX
    Answer(1) = csvY
    'CSV|fffd||fffd||fffd|R|fffd|s|fffd|y
    Range(Cells(1, 1), Cells(csvY, csvX)).Select
    Selection.Copy
    current.Activate
    Set NewWS = Worksheets.Add()  '|fffd|V|fffd|[|fffd|g|fffd||c42c||fffd|I
    NewWS.Name = SheetName
    Cells(toY, toX).Select

    ActiveSheet.Paste
    
    Excel.Application.CutCopyMode = False  '|fffd|N|fffd||fffd||fffd|b|fffd|v|fffd|{|fffd|[|fffd|h|fffd||fffd||fffd||fffd|

End Sub
Private Function toArray(line As String) As Variant

    ' |fffd||3d0||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
    i = -1
    ReDim vector(0)
    p = 1
    l = Len(line)
    ' |fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|S|fffd||302||303||fffd||fffd|[|fffd|v
    Do While p <= l
        ' |fffd||fffd||fffd||693||fffd||fffd||fffd||310||64ea||fffd||fffd||fffd||fffd||fffd||314||fffd||fffd||fffd|
        c1 = Mid(line, p, 1)
        Select Case c1
            Case CNS_SC         ' |fffd|V|fffd||fffd||fffd|O|fffd||fffd||fffd|N|fffd|H|fffd|[|fffd|e|fffd|[|fffd|V|fffd||fffd||fffd||fffd|
                p = p + 1
            Case CNS_DC         ' |fffd|_|fffd|u|fffd||fffd||fffd|N|fffd|H|fffd|[|fffd|e|fffd|[|fffd||fffd||fffd||fffd|
                p = p + 1
            Case Else           ' |fffd||202||fffd|(|fffd|J|fffd||fffd||fffd|}|fffd||154||fffd||fffd||fffd|)
                c1 = CNS_COMM
        End Select
        p1 = p
        ' |fffd||fffd||fffd||693||fffd||fffd||fffd||30f|I|fffd||fffd||fffd||292|u|fffd||fffd||fffd||fffd|
        Do While p <= l
            c = Mid(line, p, 1)
            ' |fffd|I|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|
            If c = c1 Then
                If c1 <> CNS_COMM Then
                    If p >= l Then
                        Exit Do
                    ElseIf Mid(line, p + 1, 1) = CNS_COMM Then
                        Exit Do
                    End If
                Else
                    Exit Do
                End If
            End If
            p = p + 1
        Loop
        ' 1|fffd||fffd||fffd||682||314|z|fffd||fffd|o|fffd|^(|fffd|z|fffd||fffd||317|v|fffd|f|fffd||fffd||fffd||11742||20b5||fffd||113|o|fffd|^)
        i = i + 1
        ReDim Preserve vector(i)
        If p > p1 Then
            vector(i) = Mid$(line, p1, p - p1)
            ' "=" |fffd||14e|n|fffd||702||fffd||18e||fffd||fffd||194|F|fffd||fffd||fffd||fffd||fffd||fffd||fffd||302||fffd| "'" |fffd||fffd||1c9||fffd|
            If StrComp(Left(vector(i), 1), "=") = 0 Then
                vector(i) = "'" & vector(i)
            End If
        Else
            vector(i) = ""
        End If
        ' |fffd||fffd||fffd||fffd||fffd||682||310||64ea||fffd||248||693||fffd|
        If c <> CNS_COMM Then
            p = p + 2
        Else
            p = p + 1
        End If
    Loop
    ' |fffd||fffd||fffd|R|fffd|[|fffd|h|fffd|E|fffd|[|fffd||fffd||fffd|J|fffd||fffd||fffd|}|fffd||30f||a347||fffd||354|z|fffd||fffd|v|fffd|f|fffd||fffd||fffd|P|fffd||91||fffd||fffd||20b7|
    If line <> "" Then
        If Mid(line, l, 1) = CNS_COMM Then
            i = i + 1
            ReDim Preserve vector(i)
            vector(i) = ""
        End If
    End If
    ' |fffd||7c2||fffd|l|fffd||243|Z|fffd|b|fffd|g
    If i >= 0 Then
        toArray = vector
    Else
        toArray = ""
    End If
End Function

Attribute VB_Name = "params"
Dim params As Object   '|fffd|p|fffd||fffd||fffd||fffd||fffd|[|fffd|^|fffd|i|fffd|[|fffd|pDictionary
Function readParams(fname)
    '|fffd|t|fffd|@|fffd|C|fffd||fffd||fffd||fffd||1c2||74d||fffd||fffd||782||fffd||fffd||7c2||314|z|fffd||fffd|
    Dim splitted
    Set params = CreateObject("Scripting.Dictionary")
    
    Dim File As Object
    Set File = CreateObject("ADODB.Stream")
    With File
        .Type = 2
        .Charset = "UTF-8"
        .LineSeparator = 10  ' |fffd||fffd||fffd|s|fffd|R|fffd|[|fffd|h|fffd||fffd| LF |fffd||242||fffd||fffd||fffd|B
        .Open
        .LoadFromFile (ThisWorkbook.Path & "\" & fname)

        '|fffd||14f|I|fffd|s|fffd||702||143||fffd||fffd|[|fffd|v|fffd||fffd||fffd||fffd|
        Do While Not .EOS
            '|fffd||fffd||fffd||30d|s|fffd||fffd||1c2||74e||fffd||fffd|
            splitted = Split(.ReadText(-2), Chr(9))
            If UBound(splitted) = 1 Then
                params(splitted(0)) = splitted(1)
            End If
        Loop

        '|fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||82||fffd||fffd||fffd|
        .Close
    End With
    
    '|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|I|fffd|u|fffd|W|fffd|F|fffd|N|fffd|g|fffd||fffd||fffd||d3dc||fffd||fffd||fffd||fffd|
    Set File = Nothing
End Function

Function getParams(k As String, Optional defaultStr As String = "")
    If params(k) = "" Then
        getParams = defaultStr
    Else
        getParams = params(k)
    End If
End Function



INQUEST-PP=macro
