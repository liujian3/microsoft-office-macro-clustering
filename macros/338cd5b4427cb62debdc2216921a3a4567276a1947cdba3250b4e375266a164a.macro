Attribute VB_Name = "APVEN"
'*************************************************************
'** Name:  APVEN.BAS
'** View:  Vendors
'** Copyright (c) 1992-2014 Sage Software, Inc.  All rights reserved.
'*************************************************************

'View Roto ID
Public Const ROTOID     As String = "AP0015"
Public Const OBJECTNAME As String = "APVEN"

'View Keys
Public Const KEY1 As Long = 0
Public Const KEY2 As Long = 1
Public Const KEY3 As Long = 2

'View Field Indices
Public Const IDX_VENDORID   As Long = 1
Public Const IDX_SHORTNAME  As Long = 2
Public Const IDX_IDGRP      As Long = 3
Public Const IDX_SWACTV     As Long = 4
Public Const IDX_DATEINAC   As Long = 5
Public Const IDX_DATELASTMN As Long = 6
Public Const IDX_SWHOLD     As Long = 7
Public Const IDX_DATESTART  As Long = 8
Public Const IDX_IDPPNT     As Long = 9
Public Const IDX_VENDNAME   As Long = 10
Public Const IDX_TEXTSTRE1  As Long = 11
Public Const IDX_TEXTSTRE2  As Long = 12
Public Const IDX_TEXTSTRE3  As Long = 13
Public Const IDX_TEXTSTRE4  As Long = 14
Public Const IDX_NAMECITY   As Long = 15
Public Const IDX_CODESTTE   As Long = 16
Public Const IDX_CODEPSTL   As Long = 17
Public Const IDX_CODECTRY   As Long = 18
Public Const IDX_NAMECTAC   As Long = 19
Public Const IDX_TEXTPHON1  As Long = 20
Public Const IDX_TEXTPHON2  As Long = 21
Public Const IDX_PRIMRMIT   As Long = 22
Public Const IDX_IDACCTSET  As Long = 23
Public Const IDX_CURNCODE   As Long = 24
Public Const IDX_RATETYPE   As Long = 25
Public Const IDX_BANKID     As Long = 26
Public Const IDX_PRTSEPCHKS As Long = 27
Public Const IDX_DISTSETID  As Long = 28
Public Const IDX_DISTCODE   As Long = 29
Public Const IDX_GLACCNT    As Long = 30
Public Const IDX_TERMSCODE  As Long = 31
Public Const IDX_DUPINVCCD  As Long = 32
Public Const IDX_DUPAMTCODE As Long = 33
Public Const IDX_DUPDATECD  As Long = 34
Public Const IDX_CODETAXGRP As Long = 35
Public Const IDX_TAXCLASS1  As Long = 36
Public Const IDX_TAXCLASS2  As Long = 37
Public Const IDX_TAXCLASS3  As Long = 38
Public Const IDX_TAXCLASS4  As Long = 39
Public Const IDX_TAXCLASS5  As Long = 40
Public Const IDX_TAXRPTSW   As Long = 41
Public Const IDX_SUBJTOWTHH As Long = 42
Public Const IDX_TAXNBR     As Long = 43
Public Const IDX_TAXIDTYPE  As Long = 44
Public Const IDX_TAXNOTE2SW As Long = 45
Public Const IDX_CLASID     As Long = 46
Public Const IDX_AMTCRLIMT  As Long = 47
Public Const IDX_AMTBALDUET As Long = 48
Public Const IDX_AMTBALDUEH As Long = 49
Public Const IDX_AMTPPDINVT As Long = 50
Public Const IDX_AMTPPDINVH As Long = 51
Public Const IDX_DTLASTRVAL As Long = 52
Public Const IDX_AMTBALLARV As Long = 53
Public Const IDX_CNTOPENINV As Long = 54
Public Const IDX_CNTPPDINVC As Long = 55
Public Const IDX_CNTINVPAID As Long = 56
Public Const IDX_DAYSTOPAY  As Long = 57
Public Const IDX_DATEINVCHI As Long = 58
Public Const IDX_DATEBALHI  As Long = 59
Public Const IDX_DATEINVHIL As Long = 60
Public Const IDX_DATEBALHIL As Long = 61
Public Const IDX_DATELASTAC As Long = 62
Public Const IDX_DATELASTIV As Long = 63
Public Const IDX_DATELASTCR As Long = 64
Public Const IDX_DATELASTDR As Long = 65
Public Const IDX_DATELASTPA As Long = 66
Public Const IDX_DATELASTDI As Long = 67
Public Const IDX_DATELSTADJ As Long = 68
Public Const IDX_IDINVCHI   As Long = 69
Public Const IDX_IDINVCHILY As Long = 70
Public Const IDX_AMTINVHIT  As Long = 71
Public Const IDX_AMTBALHIT  As Long = 72
Public Const IDX_AMTWTHTCUR As Long = 73
Public Const IDX_AMTINVHILT As Long = 74
Public Const IDX_AMTBALHILT As Long = 75
Public Const IDX_AMTWTHLYTC As Long = 76
Public Const IDX_AMTLASTIVT As Long = 77
Public Const IDX_AMTLASTCRT As Long = 78
Public Const IDX_AMTLASTDRT As Long = 79
Public Const IDX_AMTLASTPYT As Long = 80
Public Const IDX_AMTLASTDIT As Long = 81
Public Const IDX_AMTLASTADT As Long = 82
Public Const IDX_AMTINVHIH  As Long = 83
Public Const IDX_AMTBALHIH  As Long = 84
Public Const IDX_AMTWTHHCUR As Long = 85
Public Const IDX_AMTINVHILH As Long = 86
Public Const IDX_AMTBALHILH As Long = 87
Public Const IDX_AMTWTHLYHC As Long = 88
Public Const IDX_AMTLASTIVH As Long = 89
Public Const IDX_AMTLASTCRH As Long = 90
Public Const IDX_AMTLASTDRH As Long = 91
Public Const IDX_AMTLASTPYH As Long = 92
Public Const IDX_AMTLASTDIH As Long = 93
Public Const IDX_AMTLASTADH As Long = 94
Public Const IDX_PAYMCODE   As Long = 103
Public Const IDX_IDTAXREGI1 As Long = 104
Public Const IDX_IDTAXREGI2 As Long = 105
Public Const IDX_IDTAXREGI3 As Long = 106
Public Const IDX_IDTAXREGI4 As Long = 107
Public Const IDX_IDTAXREGI5 As Long = 108
Public Const IDX_SWDISTBY   As Long = 109
Public Const IDX_CODECHECK  As Long = 110
Public Const IDX_AVGDAYSPAY As Long = 111
Public Const IDX_AVGPAYMENT As Long = 112
Public Const IDX_AMTINVPDHC As Long = 113
Public Const IDX_AMTINVPDTC As Long = 114
Public Const IDX_CNTNBRCHKS As Long = 115
Public Const IDX_SWTXINC1   As Long = 116
Public Const IDX_SWTXINC2   As Long = 117
Public Const IDX_SWTXINC3   As Long = 118
Public Const IDX_SWTXINC4   As Long = 119
Public Const IDX_SWTXINC5   As Long = 120
Public Const IDX_EMAIL1     As Long = 121
Public Const IDX_EMAIL2     As Long = 122
Public Const IDX_WEBSITE    As Long = 123
Public Const IDX_CTACPHONE  As Long = 124
Public Const IDX_CTACFAX    As Long = 125
Public Const IDX_DELMETHOD  As Long = 126
Public Const IDX_RTGPERCENT As Long = 127
Public Const IDX_RTGDAYS    As Long = 128
Public Const IDX_RTGTERMS   As Long = 129
Public Const IDX_RTGAMTTC   As Long = 130
Public Const IDX_RTGAMTHC   As Long = 131
Public Const IDX_VALUES     As Long = 132
Public Const IDX_PROCESSCMD As Long = 133
Public Const IDX_NEXTCUID   As Long = 134
Public Const IDX_LEGALNAME  As Long = 135
Public Const IDX_CHK1099AMT As Long = 136
Public Const IDX_IDCUST     As Long = 137
Public Const IDX_EWSUPPRESS As Long = 138
Public Const IDX_EWAPVER    As Long = 139
Public Const IDX_EWORGID    As Long = 140
Public Const IDX_EWMODE     As Long = 141

'View Field Lengths
Public Const LEN_VENDORID   As Integer = 12
Public Const LEN_SHORTNAME  As Integer = 10
Public Const LEN_IDGRP      As Integer = 6
Public Const LEN_SWACTV     As Integer = 2
Public Const LEN_DATEINAC   As Integer = 5
Public Const LEN_DATELASTMN As Integer = 5
Public Const LEN_SWHOLD     As Integer = 2
Public Const LEN_DATESTART  As Integer = 5
Public Const LEN_IDPPNT     As Integer = 12
Public Const LEN_VENDNAME   As Integer = 60
Public Const LEN_TEXTSTRE1  As Integer = 60
Public Const LEN_TEXTSTRE2  As Integer = 60
Public Const LEN_TEXTSTRE3  As Integer = 60
Public Const LEN_TEXTSTRE4  As Integer = 60
Public Const LEN_NAMECITY   As Integer = 30
Public Const LEN_CODESTTE   As Integer = 30
Public Const LEN_CODEPSTL   As Integer = 20
Public Const LEN_CODECTRY   As Integer = 30
Public Const LEN_NAMECTAC   As Integer = 60
Public Const LEN_TEXTPHON1  As Integer = 30
Public Const LEN_TEXTPHON2  As Integer = 30
Public Const LEN_PRIMRMIT   As Integer = 6
Public Const LEN_IDACCTSET  As Integer = 6
Public Const LEN_CURNCODE   As Integer = 3
Public Const LEN_RATETYPE   As Integer = 2
Public Const LEN_BANKID     As Integer = 8
Public Const LEN_PRTSEPCHKS As Integer = 2
Public Const LEN_DISTSETID  As Integer = 6
Public Const LEN_DISTCODE   As Integer = 6
Public Const LEN_GLACCNT    As Integer = 45
Public Const LEN_TERMSCODE  As Integer = 6
Public Const LEN_DUPINVCCD  As Integer = 2
Public Const LEN_DUPAMTCODE As Integer = 2
Public Const LEN_DUPDATECD  As Integer = 2
Public Const LEN_CODETAXGRP As Integer = 12
Public Const LEN_TAXCLASS1  As Integer = 2
Public Const LEN_TAXCLASS2  As Integer = 2
Public Const LEN_TAXCLASS3  As Integer = 2
Public Const LEN_TAXCLASS4  As Integer = 2
Public Const LEN_TAXCLASS5  As Integer = 2
Public Const LEN_TAXRPTSW   As Integer = 2
Public Const LEN_SUBJTOWTHH As Integer = 2
Public Const LEN_TAXNBR     As Integer = 20
Public Const LEN_TAXIDTYPE  As Integer = 2
Public Const LEN_TAXNOTE2SW As Integer = 2
Public Const LEN_CLASID     As Integer = 6
Public Const LEN_AMTCRLIMT  As Integer = 10
Public Const LEN_AMTBALDUET As Integer = 10
Public Const LEN_AMTBALDUEH As Integer = 10
Public Const LEN_AMTPPDINVT As Integer = 10
Public Const LEN_AMTPPDINVH As Integer = 10
Public Const LEN_DTLASTRVAL As Integer = 5
Public Const LEN_AMTBALLARV As Integer = 10
Public Const LEN_CNTOPENINV As Integer = 4
Public Const LEN_CNTPPDINVC As Integer = 4
Public Const LEN_CNTINVPAID As Integer = 4
Public Const LEN_DAYSTOPAY  As Integer = 4
Public Const LEN_DATEINVCHI As Integer = 5
Public Const LEN_DATEBALHI  As Integer = 5
Public Const LEN_DATEINVHIL As Integer = 5
Public Const LEN_DATEBALHIL As Integer = 5
Public Const LEN_DATELASTAC As Integer = 5
Public Const LEN_DATELASTIV As Integer = 5
Public Const LEN_DATELASTCR As Integer = 5
Public Const LEN_DATELASTDR As Integer = 5
Public Const LEN_DATELASTPA As Integer = 5
Public Const LEN_DATELASTDI As Integer = 5
Public Const LEN_DATELSTADJ As Integer = 5
Public Const LEN_IDINVCHI   As Integer = 22
Public Const LEN_IDINVCHILY As Integer = 22
Public Const LEN_AMTINVHIT  As Integer = 10
Public Const LEN_AMTBALHIT  As Integer = 10
Public Const LEN_AMTWTHTCUR As Integer = 10
Public Const LEN_AMTINVHILT As Integer = 10
Public Const LEN_AMTBALHILT As Integer = 10
Public Const LEN_AMTWTHLYTC As Integer = 10
Public Const LEN_AMTLASTIVT As Integer = 10
Public Const LEN_AMTLASTCRT As Integer = 10
Public Const LEN_AMTLASTDRT As Integer = 10
Public Const LEN_AMTLASTPYT As Integer = 10
Public Const LEN_AMTLASTDIT As Integer = 10
Public Const LEN_AMTLASTADT As Integer = 10
Public Const LEN_AMTINVHIH  As Integer = 10
Public Const LEN_AMTBALHIH  As Integer = 10
Public Const LEN_AMTWTHHCUR As Integer = 10
Public Const LEN_AMTINVHILH As Integer = 10
Public Const LEN_AMTBALHILH As Integer = 10
Public Const LEN_AMTWTHLYHC As Integer = 10
Public Const LEN_AMTLASTIVH As Integer = 10
Public Const LEN_AMTLASTCRH As Integer = 10
Public Const LEN_AMTLASTDRH As Integer = 10
Public Const LEN_AMTLASTPYH As Integer = 10
Public Const LEN_AMTLASTDIH As Integer = 10
Public Const LEN_AMTLASTADH As Integer = 10
Public Const LEN_PAYMCODE   As Integer = 12
Public Const LEN_IDTAXREGI1 As Integer = 20
Public Const LEN_IDTAXREGI2 As Integer = 20
Public Const LEN_IDTAXREGI3 As Integer = 20
Public Const LEN_IDTAXREGI4 As Integer = 20
Public Const LEN_IDTAXREGI5 As Integer = 20
Public Const LEN_SWDISTBY   As Integer = 2
Public Const LEN_CODECHECK  As Integer = 3
Public Const LEN_AVGDAYSPAY As Integer = 5
Public Const LEN_AVGPAYMENT As Integer = 10
Public Const LEN_AMTINVPDHC As Integer = 10
Public Const LEN_AMTINVPDTC As Integer = 10
Public Const LEN_CNTNBRCHKS As Integer = 4
Public Const LEN_SWTXINC1   As Integer = 2
Public Const LEN_SWTXINC2   As Integer = 2
Public Const LEN_SWTXINC3   As Integer = 2
Public Const LEN_SWTXINC4   As Integer = 2
Public Const LEN_SWTXINC5   As Integer = 2
Public Const LEN_EMAIL1     As Integer = 50
Public Const LEN_EMAIL2     As Integer = 50
Public Const LEN_WEBSITE    As Integer = 100
Public Const LEN_CTACPHONE  As Integer = 30
Public Const LEN_CTACFAX    As Integer = 30
Public Const LEN_DELMETHOD  As Integer = 2
Public Const LEN_RTGPERCENT As Integer = 5
Public Const LEN_RTGDAYS    As Integer = 2
Public Const LEN_RTGTERMS   As Integer = 6
Public Const LEN_RTGAMTTC   As Integer = 10
Public Const LEN_RTGAMTHC   As Integer = 10
Public Const LEN_VALUES     As Integer = 4
Public Const LEN_PROCESSCMD As Integer = 2
Public Const LEN_NEXTCUID   As Integer = 4
Public Const LEN_LEGALNAME  As Integer = 60
Public Const LEN_CHK1099AMT As Integer = 2
Public Const LEN_IDCUST     As Integer = 12
Public Const LEN_EWSUPPRESS As Integer = 2
Public Const LEN_EWAPVER    As Integer = 3
Public Const LEN_EWORGID    As Integer = 6
Public Const LEN_EWMODE     As Integer = 2


'*************************************************************
'Add any additional subroutines and constants here.


'*************************************************************
Attribute VB_Name = "Form1"
Attribute VB_Base = "0{7F65D28A-1B71-4D7E-BA01-BB6C27E667B7}{828985DF-ED17-4B98-83C3-90F084636E80}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

'API functions
Private Declare Function GetWindowLong Lib "user32" _
                                       Alias "GetWindowLongA" _
                                       (ByVal hWnd As Long, _
                                        ByVal nIndex As Long) As Long
Private Declare Function SetWindowLong Lib "user32" _
                                       Alias "SetWindowLongA" _
                                       (ByVal hWnd As Long, _
                                        ByVal nIndex As Long, _
                                        ByVal dwNewLong As Long) As Long
Private Declare Function SetWindowPos Lib "user32" _
                                      (ByVal hWnd As Long, _
                                       ByVal hWndInsertAfter As Long, _
                                       ByVal X As Long, _
                                       ByVal Y As Long, _
                                       ByVal cx As Long, _
                                       ByVal cy As Long, _
                                       ByVal wFlags As Long) As Long
Private Declare Function FindWindow Lib "user32" _
                                    Alias "FindWindowA" _
                                    (ByVal lpClassName As String, _
                                     ByVal lpWindowName As String) As Long
Private Declare Function GetActiveWindow Lib "user32.dll" _
                                         () As Long


'Constants
Private Const SWP_NOMOVE = &H2
Private Const SWP_NOSIZE = &H1
Private Const GWL_EXSTYLE = (-20)
Private Const HWND_TOP = 0
Private Const SWP_NOACTIVATE = &H10
Private Const SWP_HIDEWINDOW = &H80
Private Const SWP_SHOWWINDOW = &H40
Private Const WS_EX_APPWINDOW = &H40000
Private Const GWL_STYLE = (-16)
Private Const WS_MINIMIZEBOX = &H20000
Private Const SWP_FRAMECHANGED = &H20
Private Const WM_SETICON = &H80
Private Const ICON_SMALL = 0&
Private Const ICON_BIG = 1&

Private strPOOldNum As String
Private strPONewNum As String
Private strCCNew As String
Private strVendor As String
Private blnJobRelated As Boolean
'Private mstrTaxGroup As String

Private Const ParamMarker As String = vbLf
Private Const EqualMarker As String = "\eq"
Private Const EscMarker As String = "\\"


Private vwPTCOSTro As AccpacView
Private vwPTWFro As AccpacView

Private ckPTPORH As AccpacView
Private ckPTPORR As AccpacView
Private ckPTPRH As AccpacView
Private ckPTUCOST As AccpacView
'Private ckPTUWF As AccpacView
Private vwPTUSER As AccpacView
Private vwWDPODOC As AccpacView
Private vwWDPODOCD As AccpacView

Private mstrNewWorkflow As String
Private mblnSettingBlankWF As Boolean

Private WithEvents macfCopyCC As AccpacCustomField
Attribute macfCopyCC.VB_VarHelpID = -1
Private macfCopyCCDesc As AccpacCustomField

Private WithEvents macfCopyWF As AccpacCustomField
Attribute macfCopyWF.VB_VarHelpID = -1
Private macfCopyWFDesc As AccpacCustomField


Public Sub refresh()
    Me.Repaint

End Sub

Private Function ValidateCostCentre(strCostCentre As Variant, strMsg As String) As Boolean

   'check if user has access to the Source CC - if not display an error message
   vwPTUSER.Fields("USERID") = mDBLinkCmpRW.Session.UserID
   If Not vwPTUSER.Read Then  'if the read fails?
       strMsg = "You are logged in as a user that does not exist in PW"
       ValidateCostCentre = False
       Exit Function
   End If
   
   If vwPTUSER.Fields("SWALLCC") = 0 Then    'access to all cost centres?
       ckPTUCOST.Fields("USERID").Value = strUserID
       ckPTUCOST.Fields("COSTCTR").Value = strCostCentre
       If Not ckPTUCOST.Read Then
           strMsg = "Either cost centre " & strCostCentre & " does not exist or is not assigned to you"
           ValidateCostCentre = False
           Exit Function
       End If
   End If

   ValidateCostCentre = True

End Function



Private Sub fecAPVEN_vendorID_OnKillFocus()

End Sub

Private Sub fecCopyWF_OnClickButton(ByVal btnType As AccpacFldEdit.tagButtonType, pStatus As AccpacFldEdit.tagButtonEventStatus)
On Error GoTo ErrHandler
    
   Dim vf As New ViewFinder

   If btnType = BTN_FINDER Then
     pStatus = BUTTON_STATUS_CANCEL
     With vf
         .Session = mDBLinkCmpRW.Session
         .ViewID = "PT0021"
         .DisplayFieldIDs = Array(2, 4) 'WORKFLOW & DESC
         .InitKeyType = USER_PASSING_INIT_KEY
         .InitKeyValue = Array(strUserID, fecCopyWF.AccpacField.Value)
         .Filter = "USERID = """ & strUserID & """" & "AND WRKFLWTYPE = 20 AND INACTIVE = FALSE AND SWCREATE = 1"
         .ReturnFieldIDs = Array(2, 4)

         If .Finder Then
             fecCopyWF.AccpacField.Value = .ReturnFieldValues(0)
             fecCopyWFDesc.AccpacField.Value = .ReturnFieldValues(1)
             pStatus = BUTTON_STATUS_CANCEL_WITH_TABAWAY
         End If
     End With
   End If
 
   Set vf = Nothing
    
Exit Sub
ErrHandler:
    ReportErrors
End Sub



Private Sub macfCopyCC_OnValueChanging(NewValue As Variant, Status As tagEventStatus)
   Dim strMsg As String

On Error GoTo errorHandler

   If ALLOW_COST_CENTRE_CHANGE Then
      If NewValue = ckPTPORH.Fields("COSTCTR") Then
         Status = STATUS_OK
      Else
      'If NewValue <> "" Or ((NewValue <> macfCopyCC.Value) And macfCopyCC.Value <> "") Then
         If Not ValidateCostCentre(NewValue, strMsg) Then
            MsgBox strMsg, vbInformation, FORM_TITLE
            Status = STATUS_CANCEL
            macfCopyCC.Value = ckPTPORH.Fields("COSTCTR")
            'fecCopyCC.SetFocus
            DoEvents
         End If
      End If
   End If

Exit Sub
errorHandler:
   ReportErrors

End Sub

Private Sub macfCopyWF_OnValueChanging(NewValue As Variant, Status As tagEventStatus)
   Dim strMsg As String

On Error GoTo errorHandler

   If ALLOW_WORKFLOW_CHANGE Then
      If mblnSettingBlankWF Then
         mblnSettingBlankWF = False
         Exit Sub
      Else
         If Not POWorkflowIsOK(CStr(NewValue)) Then
            Status = STATUS_CANCEL
            fecCopyWF.Value = ""
            mstrNewWorkflow = ""
            DoEvents
         Else
            mstrNewWorkflow = NewValue
         End If
      End If
   End If

Exit Sub
errorHandler:
   ReportErrors

End Sub


Private Sub cbClose_Click()
    
    ckPTPORH.Close
    ckPTPORR.Close
    ckPTPRH.Close
    ckPTUCOST.Close
    vwPTCOSTro.Close
    vwPTWFro.Close
    dsPTPORH.Active = False
    dsAPVEN.Active = False
    
    Unload Form1
           
End Sub

Private Function Check_PO(inPONum As String, outOK As Boolean)
On Error GoTo ErrHandler

    Dim intNumSourcePRs As Integer
    Dim lngFirstPRSeqNum As Long
    Dim strFirstCC As String
    
    Check_PO = False
    outOK = False
    
    ckPTPORH.Order = 1
    intNumSourcePRs = 0
    lngFirstPRSeqNum = 0
    
    If fecPTPORH_ponumber.Value = "" Or fecPTPORH_ponumber.Value = "*** NEW ***" Then
        strPOOldNum = vbNullString
        UpdateCopyCC ""
        Form1.Repaint
    Else
        strPOOldNum = fecPTPORH_ponumber.Value
        
        If Len(strPOOldNum) > LEN_PONUMBER - 4 Then
            fecPOStatus.AccpacField.Value = "The selected PO is too long, it needs to be " & (LEN_PONUMBER - 4) & " or less characters."
            outOK = False
            Check_PO = False
            Exit Function
        End If

        ckPTPORH.Fields("PONUMBER").Value = strPOOldNum
        If ckPTPORH.Read Then
            
'            If ckPTPORH.Fields("ONHOLD").Value = True Then
'                MsgBox "PO selected is On Hold - so cannot be used as Source PO - consider having it Declined"
'                outOK = False
'                Check_PO = False
'                Exit Function
'            End If
            
            If ckPTPORH.Fields("PTSOURCE").Value = 2 Then   ' PO selected has come from PR's, rather than being a POR
                'go to PTPORR to find all the source PR's, then go to each of them and check what CC they were for
                ckPTPORR.Browse "", True
                ckPTPORR.GoTop
                ckPTPORR.Browse "PORHSEQ = " & ckPTPORH.Fields("PORHSEQ").Value & "", True
                Do While ckPTPORR.Fetch
                    If ckPTPORR.Fields("DOCHSEQ").Value <> lngFirstPRSeqNum Then
                        intNumSourcePRs = intNumSourcePRs + 1
                        ckPTPRH.Fields("RQNHSEQ").Value = ckPTPORR.Fields("DOCHSEQ").Value
                        If ckPTPRH.Read Then
                            If intNumSourcePRs = 1 Then
                                strFirstCC = ckPTPRH.Fields("COSTCTR").Value
                            Else
                                If ckPTPRH.Fields("COSTCTR").Value <> strFirstCC Then
                                    'FUTURE - need to change below - get rid of message - change to enabling the selection of the CC combobox
                                    fecPOStatus.AccpacField.Value = "Source PR's have different CC's - cannot proceed due to this."
                                    UpdateCopyCC ""
                                    'strCCNew = ""
                                    outOK = False
                                    Check_PO = False
                                    Exit Function
                                End If
                            End If
                        Else
                            fecPOStatus.AccpacField.Value = "Cannot find PR that was the source of this PO."
                            outOK = False
                            Check_PO = False
                            Exit Function
                        End If
                        
                    End If
                Loop
                strCCNew = strFirstCC
            Else        ' Source PO was a POR rather than coming from PR's
                strCCNew = ckPTPORH.Fields("COSTCTR").Value
            End If
            
            'check if user has access to the Source CC - if not display an error message
            vwPTUSER.Fields("USERID") = mDBLinkCmpRW.Session.UserID
            If Not vwPTUSER.Read Then  'if the read fails?
                fecPOStatus.AccpacField.Value = "You are logged in as a user that does not exist in PW"
                outOK = False
                Check_PO = False
                Exit Function
            End If
            
            If vwPTUSER.Fields("SWALLCC") = 0 Then    'access to all cost centres?
                ckPTUCOST.Fields("USERID").Value = strUserID
                ckPTUCOST.Fields("COSTCTR").Value = ckPTPORH.Fields("COSTCTR").Value
                If Not ckPTUCOST.Read Then
                    fecPOStatus.AccpacField.Value = "You do not have access to the CC that the Source PO was set to."
                    outOK = False
                    Check_PO = False
                    Exit Function
                End If
            End If 'access to all cost centres
            
            strVendor = ckPTPORH.Fields("VDCODE").Value
            blnJobRelated = ckPTPORH.Fields("HASJOB").Value
'            mstrTaxGroup = dsTXGRP.Fields("GROUPID") 'ckPTPORH.Fields("TAXGROUP").Value
            UpdateCopyCC strCCNew
        
            'Check if Documents attached on Original, if so enable checkbox.
            If blnWDActive Then
                mDBLinkCmpRW.OpenViewInstance "WD0110", vwWDPODOC
                vwWDPODOC.RecordClear
               
                vwWDPODOC.Browse "PORHSEQ =" & ckPTPORH.Fields("PORHSEQ").Value, True
                If vwWDPODOC.Fetch Then
                    chkCopyAttachments.Enabled = True
                       'If PO has attachments set default setting based on constant
                        If CopyAttachedDocsDefault = True Then
                            chkCopyAttachments.Value = True
                        Else
                            chkCopyAttachments.Value = False
                        End If
                Else
                    chkCopyAttachments.Enabled = False
                    chkCopyAttachments.Value = False
                End If
                vwWDPODOC.Close
            End If
            Form1.Repaint
        
        
        Else
            'Error message
        End If
    End If
    
    
    outOK = True
    Check_PO = True
    fecPOStatus.AccpacField.Value = "OK to Process."
    
Exit Function
ErrHandler:
    ReportErrors
End Function

Private Sub cbProcess_Click()
On Error GoTo errorHandler

    Dim blnok As Boolean
    Dim strPOOldNum As String
    Dim intAttachments As Integer
    
    If POWorkflowIsOK(mstrNewWorkflow) Then
      strPOOldNum = fecPTPORH_ponumber.Value
      If CopyPO(strPOOldNum, strPONewNum, intAttachments) Then
      
          If Change_Workflow Then
          End If
          
'          If CompleteOldPO Then
'          End If
          
          If intAttachments > 0 Then
            Form1.tbStatus.Text = "New PO version created - number: " & strPONewNum & ". " & _
                                    intAttachments & " attachments copied."
          Else
            Form1.tbStatus.Text = "New PO version created - number: " & strPONewNum
          End If
          Form1.Repaint
          btnOpen.Enabled = True
          cbProcess.Enabled = False
          fecPOStatus.AccpacField.Value = "PO Processed."
          
      Else
          Form1.tbStatus.Text = "Problem encountered - new PO version NOT created"
          Form1.Repaint
      End If
    Else
      Form1.tbStatus.Text = "Problem encountered - new PO version NOT created"
      Form1.Repaint
    End If
        
Exit Sub
errorHandler:
    ReportErrors
End Sub

Private Function Change_Workflow()
On Error GoTo ErrHandler

    Dim PTPORH As AccpacCOMAPI.AccpacView
    Dim vwPOPORC As AccpacCOMAPI.AccpacView
    Dim vwPOPORL As AccpacCOMAPI.AccpacView
    Dim vwPOPORR As AccpacCOMAPI.AccpacView
    Dim vwPOPORG As AccpacCOMAPI.AccpacView
    Dim vwPOPORHO As AccpacCOMAPI.AccpacView
    
    With mDBLinkCmpRW
        .OpenView "PO0620", PTPORH      'Purchase Orders
        .OpenView "PO0610", vwPOPORC    'Purchase Order Comments
        .OpenView "PO0630", vwPOPORL    'Purchase Order Lines
        .OpenView "PO0632", vwPOPORR    'Purchase Order Requisitions
        .OpenView "PO0619", vwPOPORG    'Purchase Order Functions
        .OpenView "PO0623", vwPOPORHO   'Purchase Order Header Opt Fields
    End With
    
    PTPORH.Compose Array(vwPOPORC, vwPOPORL, vwPOPORR, vwPOPORG, vwPOPORHO)
    vwPOPORC.Compose Array(PTPORH, vwPOPORL)
    vwPOPORL.Compose Array(PTPORH, vwPOPORC, vwPOPORG, Nothing, Nothing, Nothing)
    vwPOPORR.Compose Array(PTPORH, vwPOPORG)
    vwPOPORG.Compose Array(PTPORH, vwPOPORC, vwPOPORL, vwPOPORR)
    vwPOPORHO.Compose Array(PTPORH)
    PTPORH.Order = 1

    PTPORH.Fields("PONUMBER").Value = strPONewNum
    If PTPORH.Read Then
         PTPORH.Fields("WORKFLOW").Value = mstrNewWorkflow
         PTPORH.Update
    End If
   
    PTPORH.Close
    vwPOPORC.Close
    vwPOPORL.Close
    vwPOPORR.Close
    vwPOPORG.Close
    vwPOPORHO.Close
    
Exit Function
ErrHandler:
    ReportErrors
End Function

Private Function CompleteOldPO()
On Error GoTo ErrHandler

    Dim PTPORH As AccpacCOMAPI.AccpacView
    Dim vwPOPORC As AccpacCOMAPI.AccpacView
    Dim vwPOPORL As AccpacCOMAPI.AccpacView
    Dim vwPOPORR As AccpacCOMAPI.AccpacView
    Dim vwPOPORG As AccpacCOMAPI.AccpacView
    Dim vwPOPORHO As AccpacCOMAPI.AccpacView
    
    With mDBLinkCmpRW
        .OpenView "PO0620", PTPORH
        .OpenView "PO0610", vwPOPORC
        .OpenView "PO0630", vwPOPORL
        .OpenView "PO0632", vwPOPORR
        .OpenView "PO0619", vwPOPORG
        .OpenView "PO0623", vwPOPORHO
    End With
    
    PTPORH.Compose Array(vwPOPORC, vwPOPORL, vwPOPORR, vwPOPORG, vwPOPORHO)
    vwPOPORC.Compose Array(PTPORH, vwPOPORL)
    vwPOPORL.Compose Array(PTPORH, vwPOPORC, vwPOPORG, Nothing, Nothing, Nothing)
    vwPOPORR.Compose Array(PTPORH, vwPOPORG)
    vwPOPORG.Compose Array(PTPORH, vwPOPORC, vwPOPORL, vwPOPORR)
    vwPOPORHO.Compose Array(PTPORH)
    PTPORH.Order = 1

    PTPORH.Fields("PONUMBER").Value = strPOOldNum
    If PTPORH.Read Then
        vwPOPORL.Browse "", True
        vwPOPORL.GoTop
        vwPOPORL.Browse "", True
        
        While vwPOPORL.Fetch
             If vwPOPORL.Fields("OQOUTSTAND").Value <> 0 Then
                vwPOPORL.Fields("OQOUTSTAND").Value = 0
                vwPOPORL.Update
             End If
        
        Wend
    End If
   
    PTPORH.Update
    PTPORH.Post
    
    PTPORH.Close
    vwPOPORC.Close
    vwPOPORL.Close
    vwPOPORR.Close
    vwPOPORG.Close
    vwPOPORHO.Close
    CompleteOldPO = True
    
Exit Function
ErrHandler:
    CompleteOldPO = False
    ReportErrors
End Function


Private Function GetNextPONumber(strSourcePONum As String, strNewPONum As String) As Boolean
    Dim vwPTPORH As AccpacCOMAPI.AccpacView
    Dim PONumExist As Boolean
    Dim intLastCharASCII As String
    
    mDBLinkCmpRW.OpenViewInstance "PO0620", vwPTPORH, True
    
    vwPTPORH.Order = 1
   
    PONumExist = True
    
    If APPEND_ALPHA Then
      intLastCharASCII = Asc(Right(strSourcePONum, 1))
      
      If intLastCharASCII = 90 Then 'it's a Z, (as a future we could make this AA, but 26 copies i sprobably enough)
         MsgBox "Cannot increment verison beyond " & strSourcePONum, vbInformation, FORM_TITLE
         vwPTPORH.Close
         GetNextPONumber = False
         Exit Function
      End If
      
      'if the last char is a letter let us assume it is already a copy
      If intLastCharASCII > 64 And intLastCharASCII < 90 Then
         strPONewNum = strSourcePONum
      Else
         strPONewNum = strSourcePONum & "A"
         intLastCharASCII = Asc("A")
      End If
      
      Do While PONumExist
          vwPTPORH.Fields("PONUMBER").Value = strPONewNum
          If vwPTPORH.Read Then
              PONumExist = True
              intLastCharASCII = intLastCharASCII + 1
             'user may be taking 26th copy of original PO, or someone has manually entered a PO with 'Z'
             If intLastCharASCII = 91 Then
               MsgBox "Cannot increment verison beyond " & strNewPONum, vbInformation, FORM_TITLE
               vwPTPORH.Close
               GetNextPONumber = False
               Exit Function
             Else 'intLastCharASCII > 64 And intLastCharASCII < 91 Then
               strPONewNum = Left(strPONewNum, Len(strNewPONum) - 1) & Chr(intLastCharASCII)
             End If
          Else
              PONumExist = False
          End If
      Loop
      
    Else
      If Mid(strSourcePONum, Len(strSourcePONum) - 3, 1) = SeparatorChar Then
          strPONewNum = strSourcePONum
      Else
          strPONewNum = strSourcePONum & SeparatorChar & "001"
      End If
      'check exit point return correct boolean value, and that PTPORH is closed
      Do While PONumExist
          vwPTPORH.Fields("PONUMBER").Value = strPONewNum
          If vwPTPORH.Read Then
              PONumExist = True
              'increment PO version number will be
              Select Case Right(strPONewNum, 3)
                  Case Is < 9
                      strPONewNum = Left(strPONewNum, Len(strPONewNum) - 1) & CStr(CInt(Right(strPONewNum, 1) + 1))    ' CStr(CInt(Left(strPOOldNum, Len(strPOOldNum) - 1)) + 1)
                  Case Is = 999
                      MsgBox "Cannot increment verison number beyond 999", vbInformation, FORM_TITLE
                      vwPTPORH.Close
                      GetNextPONumber = False
                      Exit Function
                  Case Is >= 99
                      strPONewNum = Left(strPONewNum, Len(strPONewNum) - 2) & CStr(CInt(Right(strPONewNum, 2) + 1))    ' CStr(CInt(Left(strPOOldNum, Len(strPOOldNum) - 3)) + 1)
                  Case Else
                      strPONewNum = Left(strPONewNum, Len(strPONewNum) - 3) & CStr(CInt(Right(strPONewNum, 3) + 1))  ' CStr(CInt(Left(strPONewNum, Len(strPONewNum) - 2)) + 1)
              End Select
          Else
              PONumExist = False
          End If
      Loop
    End If
    GetNextPONumber = True
    vwPTPORH.Close
End Function

Private Function CopyPO(inPOOldNum As String, _
                            outPONewNum As String, _
                            outNumPODocsCopied As Integer) As Boolean

    On Error GoTo errorHandler
    
    Dim POPORHO As AccpacCOMAPI.AccpacView
    Dim vwSourcePO_Header As AccpacView
    Dim vwSourcePO_Details As AccpacCOMAPI.AccpacView
        
    Dim vwPOPORH As AccpacCOMAPI.AccpacView
    Dim vwPOPORL As AccpacCOMAPI.AccpacView
    Dim POCOPYD2 As AccpacCOMAPI.AccpacView
    Dim POCOPYD3 As AccpacCOMAPI.AccpacView
    Dim POCOPYD4 As AccpacCOMAPI.AccpacView
    Dim POCOPYD5 As AccpacCOMAPI.AccpacView
    Dim POCOPYD6 As AccpacCOMAPI.AccpacView
    Dim vwPOCOPR As AccpacCOMAPI.AccpacView
    
    Dim vwPO_ORIG_DOC_H As AccpacCOMAPI.AccpacView
    Dim vwPO_ORIG_DOC_D As AccpacCOMAPI.AccpacView
    Dim vwPO_COPY_DOC_H As AccpacCOMAPI.AccpacView
    Dim vwPO_COPY_DOC_D As AccpacCOMAPI.AccpacView
    Dim FetchSuccessDOC_H As Boolean
    Dim FetchSuccessDOC_D As Boolean
    
    With mDBLinkCmpRW
        .OpenView "PO0620", vwPOPORH
        .OpenView "PO0630", vwPOPORL
        .OpenView "PO0610", POCOPYD2
        .OpenView "PO0632", POCOPYD3
        .OpenView "PO0619", POCOPYD4
        .OpenView "PO0623", POCOPYD5
        .OpenView "PO0633", POCOPYD6
        .OpenView "PO0294", vwPOCOPR
        
        .OpenView "PO0623", POPORHO
        
        .OpenViewInstance "PO0620", vwSourcePO_Header, True
        .OpenViewInstance "PO0630", vwSourcePO_Details, True
    End With
    
    vwPOPORH.Compose Array(POCOPYD2, vwPOPORL, POCOPYD3, POCOPYD4, POCOPYD5)
    vwPOPORL.Compose Array(vwPOPORH, POCOPYD2, POCOPYD4, Nothing, Nothing, POCOPYD6)
    POCOPYD2.Compose Array(vwPOPORH, vwPOPORL)
    POCOPYD3.Compose Array(vwPOPORH, POCOPYD4)
    POCOPYD4.Compose Array(vwPOPORH, POCOPYD2, vwPOPORL, POCOPYD3)
    POCOPYD5.Compose Array(vwPOPORH)
    POCOPYD6.Compose Array(vwPOPORL)
    vwPOCOPR.Compose Array(vwPOPORH, POCOPYD2, vwPOPORL, POCOPYD3, POCOPYD4, POCOPYD5, POCOPYD6)
    
    
    If GetNextPONumber(strPOOldNum, strPONewNum) Then
       
       vwSourcePO_Header.Order = 1
       vwSourcePO_Header.Fields("PONUMBER").Value = strPOOldNum
       
       vwSourcePO_Header.Read
   
       vwPOPORH.Init
       vwPOCOPR.Fields("FRVEND").Value = strVendor
       
       If ALLOW_VENDOR_CHANGE Then
         vwPOCOPR.Fields("TOVEND").Value = dsAPVEN.Fields("VENDORID")
       Else
         vwPOCOPR.Fields("TOVEND").Value = strVendor
       End If
       
       vwPOCOPR.Fields("FRPONUM").Value = strPOOldNum
       vwPOCOPR.Fields("TOPONUM").Value = strPOOldNum
       vwPOCOPR.Fields("TAXGROUP").Value = dsTXGRP.Fields("groupid")  'mstrTaxGroup 'why is this not the same value as dsTXGRP.Fields("groupid") ?
       vwPOCOPR.Fields("HASJOB").Value = blnJobRelated
       vwPOCOPR.Fields("USEPOCOST").Value = True
       vwPOCOPR.Fields("ORDTYPE").Value = 1
       
       vwPOCOPR.Fields("ACTION").Value = "1"                            ' Brings PO to selection list
       vwPOCOPR.Process
       vwPOPORH.Fields("PROCESSCMD").PutWithoutVerification ("1")
       
       vwPOPORH.Fields("VIACODE").Value = vwSourcePO_Header.Fields("VIACODE").Value
       
       'need to insert cost centre now in case user has no cost centres defaulting
       vwPOPORH.Fields("COSTCTR").Value = fecCopyCC.AccpacField.Value
           
       vwPOPORH.Process
   
       vwPOPORH.Fields("PONUMBER").Value = strPONewNum

       If optCopyPOItemDesc Then
         vwSourcePO_Details.Browse "", True
         vwSourcePO_Details.RecordClear
         vwSourcePO_Details.Browse "PORHSEQ = " & vwSourcePO_Header.Fields("PORHSEQ").Value, True

         Dim i As Integer
         i = -1
         While vwSourcePO_Details.Fetch
             vwPOPORL.Fields("PORLREV").Value = i
             vwPOPORL.Read
             vwPOPORL.Fields("ITEMDESC").Value = vwSourcePO_Details.Fields("ITEMDESC").Value ' Copy Detail Description
             If ALLOW_COPY_PARTIALLY_RECEIPTED Then
               vwPOPORL.Fields("OQORDERED").Value = vwSourcePO_Details.Fields("OQOUTSTAND").Value
             End If
             vwPOPORL.Update
             i = i - 1
         Wend
       End If
       
       vwPOPORH.Fields("DESCRIPTIO").Value = vwSourcePO_Header.Fields("DESCRIPTIO").Value
       vwPOPORH.Fields("REFERENCE").Value = vwSourcePO_Header.Fields("REFERENCE").Value
       vwPOPORH.Fields("COMMENT").Value = vwSourcePO_Header.Fields("COMMENT").Value
       vwPOPORH.Fields("DATE").Value = vwSourcePO_Header.Fields("DATE").Value
       vwPOPORH.Fields("FOBPOINT").Value = vwSourcePO_Header.Fields("FOBPOINT").Value
       vwPOPORH.Fields("TERMSCODE").Value = vwSourcePO_Header.Fields("TERMSCODE").Value
       vwPOPORH.Fields("PORTYPE").Value = vwSourcePO_Header.Fields("PORTYPE").Value
       vwPOPORH.Fields("ORDEREDON").Value = vwSourcePO_Header.Fields("ORDEREDON").Value
       vwPOPORH.Fields("EXPARRIVAL").Value = vwSourcePO_Header.Fields("EXPARRIVAL").Value
   
       If blnICActive Then
           vwPOPORH.Fields("BTCODE").Value = vwSourcePO_Header.Fields("BTCODE").Value
           vwPOPORH.Fields("BTDESC").Value = vwSourcePO_Header.Fields("BTDESC").Value
           vwPOPORH.Fields("STCODE").Value = vwSourcePO_Header.Fields("STCODE").Value
           vwPOPORH.Fields("STDESC").Value = vwSourcePO_Header.Fields("STDESC").Value
       End If
       
       
       'Copy Attached Documents
       If Form1.chkCopyAttachments Then
            'Open Document Header and Detail Views
            With mDBLinkCmpRW
                .OpenView "WD0110", vwPO_ORIG_DOC_H
                .OpenView "WD0111", vwPO_ORIG_DOC_D
                .OpenView "WD0110", vwPO_COPY_DOC_H
                .OpenView "WD0111", vwPO_COPY_DOC_D
            End With
            
            'Compose Doc Header & detail
            vwPO_ORIG_DOC_H.Compose Array(vwPO_ORIG_DOC_D)
            vwPO_COPY_DOC_H.Compose Array(vwPO_COPY_DOC_D)
            
            vwPO_ORIG_DOC_D.Compose Array(vwPO_ORIG_DOC_H)
            vwPO_COPY_DOC_D.Compose Array(vwPO_COPY_DOC_H)
        
            vwPO_ORIG_DOC_H.Browse "PORHSEQ =" & vwSourcePO_Header.Fields("PORHSEQ").Value, True
            FetchSuccessDOC_H = vwPO_ORIG_DOC_H.Fetch
            Do While FetchSuccessDOC_H
                vwPO_COPY_DOC_H.RecordGenerate False
                vwPO_COPY_DOC_H.Fields("PORHSEQ").Value = vwPOPORH.Fields("PORHSEQ").Value
                vwPO_COPY_DOC_H.Fields("DOCREV").Value = vwPO_ORIG_DOC_H.Fields("DOCREV").Value
                vwPO_COPY_DOC_H.Fields("DOCPATH").Value = vwPO_ORIG_DOC_H.Fields("DOCPATH").Value
                vwPO_COPY_DOC_H.Fields("DOCDESC").Value = vwPO_ORIG_DOC_H.Fields("DOCDESC").Value
                vwPO_COPY_DOC_H.Fields("DOCDATE").Value = vwPO_ORIG_DOC_H.Fields("DOCDATE").Value
                vwPO_COPY_DOC_H.Fields("ALLOWMOD").Value = vwPO_ORIG_DOC_H.Fields("ALLOWMOD").Value
                vwPO_COPY_DOC_H.Fields("TRACKMOD").Value = vwPO_ORIG_DOC_H.Fields("TRACKMOD").Value
                vwPO_COPY_DOC_H.Fields("MODUSERID").Value = vwPO_ORIG_DOC_H.Fields("MODUSERID").Value
                vwPO_COPY_DOC_H.Fields("DOCSIZE").Value = vwPO_ORIG_DOC_H.Fields("DOCSIZE").Value
                vwPO_COPY_DOC_H.Fields("DOCTYPE").Value = vwPO_ORIG_DOC_H.Fields("DOCTYPE").Value
                vwPO_COPY_DOC_H.Fields("SWEMAIL").Value = vwPO_ORIG_DOC_H.Fields("SWEMAIL").Value
                
                FetchSuccessDOC_D = vwPO_ORIG_DOC_D.Fetch
                Do While FetchSuccessDOC_D
                    vwPO_COPY_DOC_D.RecordGenerate False
                    vwPO_COPY_DOC_D.Fields("PORHSEQ").Value = vwPOPORH.Fields("PORHSEQ").Value
                    vwPO_COPY_DOC_D.Fields("DOCREV").Value = vwPO_ORIG_DOC_D.Fields("DOCREV").Value
                    vwPO_COPY_DOC_D.Fields("DOCPARTSEQ").Value = vwPO_ORIG_DOC_D.Fields("DOCPARTSEQ").Value
                    vwPO_COPY_DOC_D.Fields("DOCDATA1").Value = vwPO_ORIG_DOC_D.Fields("DOCDATA1").Value
                    vwPO_COPY_DOC_D.Fields("DOCDATA2").Value = vwPO_ORIG_DOC_D.Fields("DOCDATA2").Value
                    vwPO_COPY_DOC_D.Fields("DOCDATA3").Value = vwPO_ORIG_DOC_D.Fields("DOCDATA3").Value
                    vwPO_COPY_DOC_D.Fields("DOCDATA4").Value = vwPO_ORIG_DOC_D.Fields("DOCDATA4").Value
                    vwPO_COPY_DOC_D.Fields("DOCDATA5").Value = vwPO_ORIG_DOC_D.Fields("DOCDATA5").Value
                    vwPO_COPY_DOC_D.Fields("DOCDATA6").Value = vwPO_ORIG_DOC_D.Fields("DOCDATA6").Value
                    vwPO_COPY_DOC_D.Fields("DOCDATA7").Value = vwPO_ORIG_DOC_D.Fields("DOCDATA7").Value
                    vwPO_COPY_DOC_D.Fields("DOCDATA8").Value = vwPO_ORIG_DOC_D.Fields("DOCDATA8").Value
                    vwPO_COPY_DOC_D.Fields("DOCDATA9").Value = vwPO_ORIG_DOC_D.Fields("DOCDATA9").Value
                    vwPO_COPY_DOC_D.Fields("DOCDATA10").Value = vwPO_ORIG_DOC_D.Fields("DOCDATA10").Value
                    vwPO_COPY_DOC_D.Fields("DOCDATA11").Value = vwPO_ORIG_DOC_D.Fields("DOCDATA11").Value
                    vwPO_COPY_DOC_D.Fields("DOCDATA12").Value = vwPO_ORIG_DOC_D.Fields("DOCDATA12").Value
                    vwPO_COPY_DOC_D.Fields("DOCDATA13").Value = vwPO_ORIG_DOC_D.Fields("DOCDATA13").Value
                    vwPO_COPY_DOC_D.Fields("DOCDATA14").Value = vwPO_ORIG_DOC_D.Fields("DOCDATA14").Value
                    vwPO_COPY_DOC_D.Fields("DOCDATA15").Value = vwPO_ORIG_DOC_D.Fields("DOCDATA15").Value
                    
                    vwPO_COPY_DOC_D.Insert
                    
                    FetchSuccessDOC_D = vwPO_ORIG_DOC_D.Fetch
                Loop 'Doc Detail Fetch
                
                vwPO_COPY_DOC_H.Insert
                outNumPODocsCopied = outNumPODocsCopied + 1
                FetchSuccessDOC_H = vwPO_ORIG_DOC_H.Fetch
            Loop 'Doc Header Fetch
            
            vwPO_ORIG_DOC_H.Close
            vwPO_ORIG_DOC_D.Close
            vwPO_COPY_DOC_H.Close
            vwPO_COPY_DOC_D.Close
        
       End If 'Doc Copy Selected
       
       ' Copy header OF's
       POPORHO.Browse "PORHSEQ = " & dsPTPORH.Fields("PORHSEQ").Value, True
       POPORHO.GoTop
       POPORHO.Browse "PORHSEQ = " & dsPTPORH.Fields("PORHSEQ").Value, True

       'Note: detail optional fields are copied as part of vwPOCOPR.Process

       While POPORHO.Fetch
           POCOPYD5.Fields("OPTFIELD").Value = POPORHO.Fields("OPTFIELD").Value
           If POCOPYD5.Exists Then POCOPYD5.Read
           POCOPYD5.Fields("VALUE").Value = POPORHO.Fields("VALUE").Value
           If POCOPYD5.Exists Then POCOPYD5.Update Else POCOPYD5.Insert
       Wend
       
       vwPOCOPR.Fields("ACTION").Value = "3"                            ' Creates new PO
       vwPOCOPR.Process
       
       CopyPO = True
       
       outPONewNum = strPONewNum
   End If
   
    vwPOPORH.Close
    vwPOPORL.Close
    POCOPYD2.Close
    POCOPYD3.Close
    POCOPYD4.Close
    POCOPYD5.Close
    POCOPYD6.Close
    vwPOCOPR.Close
    vwSourcePO_Details.Close
    vwSourcePO_Header.Close

    Exit Function
   
errorHandler:
    
    CopyPO = False
    
    vwPOPORH.Close
    vwPOPORL.Close
    POCOPYD2.Close
    POCOPYD3.Close
    POCOPYD4.Close
    POCOPYD5.Close
    POCOPYD6.Close
    vwPOCOPR.Close
    vwSourcePO_Details.Close
    vwSourcePO_Header.Close
    
  Dim lCount As Long
  Dim lIndex As Long

  If Errors Is Nothing Then
       MsgBox Err.Description
  Else
      lCount = Errors.Count

      If lCount = 0 Then
          MsgBox Err.Description
      Else
          For lIndex = 0 To lCount - 1
              MsgBox Errors.Item(lIndex)

          Next
          Errors.Clear
      End If

  End If
    'Resume Next
End Function

Private Sub btnOpen_Click()
On Error GoTo ErrHandler

    Dim strObjKey As String
    Dim strKeyArray(0 To 0) As String
    Dim strValArray(0 To 0) As String
    Dim strAccpacUIRotoID As String

    strAccpacUIRotoID = "PT1010"

    strKeyArray(0) = "PONUMBER"
    strValArray(0) = strPONewNum            ' objOrder.RQNNUMBER
    strObjKey = KVBuildList(strKeyArray, strValArray)

    LaunchUI strAccpacUIRotoID, strObjKey
    
Exit Sub
ErrHandler:
    ReportErrors
End Sub

Private Function LaunchUI(strObjID As String, strObjKey As String) As String
On Error GoTo ErrHandler

    Dim strCodebase As String
    Dim strObjHandle As String
    Dim strClassID As String
    Dim objContainer As AccpacContainerObject
    Dim strReturn As String
    Dim mstrServerName As String
    Dim hWnd As Long

    'On Error GoTo ErrHandler

    hWnd = GetActiveWindow

    mDBLinkCmpRW.Session.CreateObjectHandle strObjID, strObjKey, strObjHandle, strClassID, strCodebase

    Set objContainer = New AccpacContainerObject

    objContainer.Init strClassID, strCodebase, strObjHandle, mDBLinkCmpRW.Session.ServerName, strObjKey

    strReturn = objContainer.Show(hWnd)

    objContainer.Close

    Set objContainer = Nothing

    LaunchUI = strReturn
    Exit Function

ErrHandler:
    ReportErrors
End Function



Private Sub dsAPVEN_OnKeyChanged(ByVal eReason As tagEventReason, ByVal pField As AccpacDataSrc.IAccpacDSField, ByVal pMultipleFields As AccpacDataSrc.IAccpacDSFields)
On Error GoTo ErrHandler
    Select Case eReason
        Case RSN_FIELDCHANGE, RSN_GONEXT, RSN_GOPREV, RSN_GOTOP, RSN_GOBOTTOM
            If dsAPVEN.Exists Then
                dsAPVEN.Read
                dsTXGRP.Fields("GROUPID") = dsAPVEN.Fields("CODETAXGRP")
               ' fecAPVEN_vendname.refresh
            End If
    End Select
            
Exit Sub
ErrHandler:
    ReportErrors
End Sub


Private Sub dsAPVEN_OnKeyChanging(ByVal eReason As tagEventReason, pStatus As tagEventStatus, ByVal pField As AccpacDataSrc.IAccpacDSField, ByVal pMultipleFields As AccpacDataSrc.IAccpacDSFields)
On Error GoTo ErrHandler

    Dim cloneds As AccpacDataSource
    Dim keyok As Boolean
    
    keyok = True
    
    Select Case eReason
        Case RSN_FIELDCHANGE
            Set cloneds = dsAPVEN.Clone
            cloneds.Fields("VENDORID") = pField.UncommittedValue
            If cloneds.Read Then
                With cloneds
                    If .Fields("SWACTV").Value = 0 Then keyok = False
                End With
            Else
                keyok = False
            End If
    End Select
    
    If Not keyok Then
        MsgBox "Invalid input. Vendor " & pField.UncommittedValue & " is not a valid vendor.", vbInformation, FORM_TITLE
        pStatus = STATUS_CANCEL
    End If

Exit Sub
ErrHandler:
    ReportErrors
End Sub

Private Sub dsTXGRP_OnKeyChanged(ByVal eReason As tagEventReason, ByVal pField As AccpacDataSrc.IAccpacDSField, ByVal pMultipleFields As AccpacDataSrc.IAccpacDSFields)
On Error GoTo ErrHandler
    Select Case eReason
        Case RSN_FIELDCHANGE, RSN_GONEXT, RSN_GOPREV, RSN_GOTOP, RSN_GOBOTTOM
            If dsTXGRP.Exists Then
                dsTXGRP.Read
            End If
    End Select
            
Exit Sub
ErrHandler:
    ReportErrors
End Sub


Private Sub dsTXGRP_OnKeyChanging(ByVal eReason As tagEventReason, pStatus As tagEventStatus, ByVal pField As AccpacDataSrc.IAccpacDSField, ByVal pMultipleFields As AccpacDataSrc.IAccpacDSFields)
On Error GoTo ErrHandler

    Dim cloneds As AccpacDataSource
    Dim keyok As Boolean
    Dim strMsg As String
    
    keyok = True
    
    Select Case eReason
        Case RSN_FIELDCHANGE
            Set cloneds = dsTXGRP.Clone
            cloneds.Fields("GROUPID") = pField.UncommittedValue
            cloneds.Fields("TTYPE") = 2
            If cloneds.Read Then
                With cloneds
                    If .Fields("SRCCURN").Value <> dsPTPORH.Fields("CURRENCY") Then
                        strMsg = "Document currency " & dsPTPORH.Fields("CURRENCY") & " differs from tax reporting currency " & .Fields("SRCCURN").Value & " for tax group " & pField.UncommittedValue & "."
                        MsgBox strMsg, vbOKOnly, "Warning"
                        keyok = True
                    End If
                End With
            Else
                keyok = False
            End If
    End Select
    
    If Not keyok Then
        MsgBox "Invalid input. Tax Group " & pField.UncommittedValue & " does not exist.", vbInformation, FORM_TITLE
        pStatus = STATUS_CANCEL
    End If

Exit Sub
ErrHandler:
    ReportErrors
End Sub

Private Sub dsPTPORH_OnKeyChanged(ByVal eReason As tagEventReason, ByVal pField As AccpacDataSrc.IAccpacDSField, ByVal pMultipleFields As AccpacDataSrc.IAccpacDSFields)
On Error GoTo ErrHandler
   Dim blnEnable As Boolean
   
    Select Case eReason
        Case RSN_FIELDCHANGE, RSN_GONEXT, RSN_GOPREV, RSN_GOTOP, RSN_GOBOTTOM
            If dsPTPORH.Exists Then
                dsPTPORH.Read
               ' If ALLOW_VENDOR_CHANGE Then
                  dsAPVEN.Fields("VENDORID") = dsPTPORH.Fields("VDCODE")
                  dsAPVEN.Read
               ' End If
                
                'dsTXGRP.Fields("GROUPID") = dsAPVEN.Fields("CODETAXGRP")
                
                Select Case dsPTPORH.Fields("WORKFLOW")
                'uncomment and edit the following Case entries to match your requirements
                  Case "CAPEX-FC"
                     mstrNewWorkflow = PO_CHG_ORDER_WF_CAPEX_FC
                  Case "CAPEX-HQ"
                     mstrNewWorkflow = PO_CHG_ORDER_WF_CAPEX_HQ
                  Case "OPEX-FC"
                     mstrNewWorkflow = PO_CHG_ORDER_WF_OPEX_FC
                  Case "OPEX-HQ"
                     mstrNewWorkflow = PO_CHG_ORDER_WF_OPEX_HQ
                  Case Else
                     mstrNewWorkflow = ""
                     If Not ALLOW_WORKFLOW_CHANGE Then
                        fecCopyWF.Value = ""
                        fecCopyWFDesc.Value = ""
                        fecPOStatus.AccpacField.Value = " "
                        MsgBox "Workflow " & dsPTPORH.Fields("WORKFLOW") & " in " & dsPTPORH.Fields("PONUMBER") & " has not been mapped for PO Change Orders", vbExclamation, "PO Change Order"
                        cbProcess.Enabled = False
                        Exit Sub
                     Else
                        'need to be able to se this without firing verification
                        mblnSettingBlankWF = True
                        fecCopyWF.Value = ""
                        fecCopyWFDesc.Value = ""
                        fecPOStatus.AccpacField.Value = " "
                     End If
'                  Case Else
'                     mstrNewWorkflow = PO_CHG_ORDER_WF
                End Select
                               
                'set new workflow values
                If mstrNewWorkflow <> "" Then
                  UpdateCopyWF mstrNewWorkflow
                End If
                'make sure fecCopyWF set to read only if not ALLOW_WORKFLOW_CHANGE
                UpdateCopyWF mstrNewWorkflow
                blnEnable = Check_PO(dsPTPORH.Fields("PONUMBER").Value, False)
                cbProcess.Enabled = blnEnable
                If ALLOW_VENDOR_CHANGE Then fecAPVEN_vendorID.ReadOnly = Not (blnEnable)
                If ALLOW_COST_CENTRE_CHANGE Then fecCopyCC.ReadOnly = Not (blnEnable)
                If ALLOW_WORKFLOW_CHANGE Then fecCopyWF.ReadOnly = Not (blnEnable)
                If ALLOW_TAX_GROUP_CHANGE Then fecTXGRP_groupID.ReadOnly = Not (blnEnable)
            End If
    End Select
    
Exit Sub
ErrHandler:
    ReportErrors
End Sub

Private Sub UpdateCopyCC(CostCent As String)
On Error GoTo ErrHandler

    fecCopyCC.AccpacField.Value = CostCent
    If CostCent <> "" Then
        vwPTCOSTro.Fields("COSTCTR").Value = CostCent
        vwPTCOSTro.Read
        fecCopyCCdesc.AccpacField.Value = vwPTCOSTro.Fields("DESC").Value
    Else
        fecCopyCCdesc.AccpacField.Value = ""
    End If
    
Exit Sub
ErrHandler:
    ReportErrors
End Sub

Private Sub UpdateCopyWF(WorkFlow As String)
On Error GoTo ErrHandler

    fecCopyWF.AccpacField.Value = WorkFlow
    vwPTWFro.Fields("WORKFLOW").Value = WorkFlow
    vwPTWFro.Read
    fecCopyWFDesc.AccpacField.Value = vwPTWFro.Fields("DESC").Value
    
Exit Sub
ErrHandler:
    ReportErrors
End Sub

Private Sub dsPTPORH_OnKeyChanging(ByVal eReason As tagEventReason, pStatus As tagEventStatus, ByVal pField As AccpacDataSrc.IAccpacDSField, ByVal pMultipleFields As AccpacDataSrc.IAccpacDSFields)
On Error GoTo ErrHandler

    Dim cloneds As AccpacDataSource
    Dim keyok As Boolean
    
    keyok = True
    
    Select Case eReason
        Case RSN_FIELDCHANGE
            Set cloneds = dsPTPORH.Clone
            cloneds.Fields("PONUMBER") = pField.UncommittedValue
            If cloneds.Read Then
                With cloneds
                
                  If .Fields("PORTYPE") <> 1 Then
                     keyok = False
                  ElseIf (.Fields("STATUS") <> 10 And .Fields("STATUS").Value <> 70 And .Fields("STATUS").Value <> 90) Then
                     keyok = False
                  ElseIf Not ALLOW_COPY_PARTIALLY_RECEIPTED And Not ALLOW_COPY_COMPLETED_PO Then
                     If .Fields("RCPCOUNT") <> 0 Or .Fields("ISCOMPLETE") = True Then
                        keyok = False
                     End If
                  ElseIf Not ALLOW_COPY_PARTIALLY_RECEIPTED And ALLOW_COPY_COMPLETED_PO Then
                     If .Fields("RCPCOUNT") <> 0 And .Fields("ISCOMPLETE") = False Then
                        keyok = False
                     End If
                  ElseIf ALLOW_COPY_PARTIALLY_RECEIPTED And Not ALLOW_COPY_COMPLETED_PO Then
                     If .Fields("ISCOMPLETE") = True Then
                        keyok = False
                     End If
                  End If
                              
'                    If COPY_PARTIALLY_RECEIPTED Then
'                      If .Fields("PORTYPE").Value <> 1 Or _
'                         (.Fields("STATUS").Value <> 10 And .Fields("STATUS").Value <> 70 And _
'                         .Fields("STATUS").Value <> 90) _
'                            Then keyok = False
'                    Else
'                      If .Fields("PORTYPE").Value <> 1 Or _
'                         (.Fields("STATUS").Value <> 10 And .Fields("STATUS").Value <> 70 And _
'                         .Fields("STATUS").Value <> 90) Or .Fields("RCPCOUNT").Value <> 0 _
'                          Then keyok = False
'                     End If
                End With
            Else
                keyok = False
            End If
    End Select
    
    If Not keyok Then
        MsgBox "Invalid input, the PO " & pField.UncommittedValue & " is not a valid document.", vbInformation, FORM_TITLE
        pStatus = STATUS_CANCEL
    End If

Exit Sub
ErrHandler:
    ReportErrors
End Sub


Private Sub fecCopyCC_OnClickButton(ByVal btnType As AccpacFldEdit.tagButtonType, pStatus As AccpacFldEdit.tagButtonEventStatus)
On Error GoTo ErrHandler
    
   Dim vf As New ViewFinder
   Dim vwPTUSER As AccpacCOMAPI.AccpacView

   mDBLinkCmpRW.OpenView "PT0020", vwPTUSER 'User Configurations
   
   vwPTUSER.RecordClear
   vwPTUSER.Fields("USERID") = strUserID
   
   If vwPTUSER.Read Then
      
      If vwPTUSER.Fields("SWALLCC") Then
          
          If btnType = BTN_FINDER Then
              pStatus = BUTTON_STATUS_CANCEL
              With vf
                  .Session = mDBLinkCmpRW.Session
                  .ViewID = "PT0018"
                  .DisplayFieldIDs = Array(1, 2) 'COSTCTR & DESC
                  .InitKeyType = USER_PASSING_INIT_KEY
                  .InitKeyValue = fecCopyCC.AccpacField.Value
                  .Filter = .Filter & "INACTIVE = FALSE"
                  .ReturnFieldIDs = Array(1, 2)
                  
                  If .Finder Then
                      fecCopyCC.AccpacField.Value = .ReturnFieldValues(0)
                      fecCopyCCdesc.AccpacField.Value = .ReturnFieldValues(1)
                      pStatus = BUTTON_STATUS_CANCEL_WITH_TABAWAY
                      
                  End If
              End With
              vwPTUSER.Close
          End If
      
      Else
          
          If btnType = BTN_FINDER Then
              pStatus = BUTTON_STATUS_CANCEL
              With vf
                  .Session = mDBLinkCmpRW.Session
                  .ViewID = "PT0025"
                  .DisplayFieldIDs = Array(2, 3) 'COSTCTR & DESC
                  .InitKeyType = USER_PASSING_INIT_KEY
                  .InitKeyValue = Array(strUserID, fecCopyCC.AccpacField.Value)
                  .Filter = .Filter & "USERID = """ & strUserID & """"
                  .ReturnFieldIDs = Array(2, 3)
          
                  If .Finder Then
                      fecCopyCC.AccpacField.Value = .ReturnFieldValues(0)
                      fecCopyCCdesc.AccpacField.Value = .ReturnFieldValues(1)
                      pStatus = BUTTON_STATUS_CANCEL_WITH_TABAWAY
                  End If
              End With
          End If
          
      End If   'vwPTUSER.Fields("SWALLCC")
      
   End If   'vwPTUSER.Read
   
   Set vf = Nothing
    
Exit Sub
ErrHandler:
    ReportErrors
End Sub



Private Sub UserForm_Activate()
    
    Me.Caption = mDBLinkCmpRW.GetCompany.OrgID & " - " & FORM_TITLE 'Me.Caption
    
    AddMinimiseButton   'Add a Minimize button to Userform
    AppTasklist Me    'Add this userform into the Task bar

    cbClose.SetFocus
    fecPTPORH_ponumber.SetFocus
End Sub

'does the user have access to the change order PO workflow
Private Function POWorkflowIsOK(strWorkflow As String) As Boolean
    Dim vwPTWF As AccpacCOMAPI.AccpacView
    Dim vwPTUWF As AccpacCOMAPI.AccpacView
    
    With mDBLinkCmpRW
        .OpenView "PT0010", vwPTWF
        .OpenView "PT0021", vwPTUWF
    End With
   
    POWorkflowIsOK = False
    
    If Len(strWorkflow) = 0 Then
        MsgBox "Invalid input.  Please enter a valid workflow", vbInformation, FORM_TITLE
        vwPTWF.Close
        vwPTUWF.Close
        Exit Function
    End If
    
    'check if user has access to the PO Change Order WF
    vwPTWF.Fields("WORKFLOW").Value = strWorkflow
    If vwPTWF.Read Then
      'must be type 20
        If vwPTWF.Fields("WRKFLWTYPE").Value <> 20 Then
            MsgBox "Workflow " & strWorkflow & " is not for Purchase Orders", vbInformation, FORM_TITLE
            vwPTWF.Close
            vwPTUWF.Close
            Exit Function
        End If
    
        vwPTUWF.Fields("USERID").Value = strUserID
        vwPTUWF.Fields("WORKFLOW").Value = strWorkflow
        vwPTUWF.Fields("WRKFLWTYPE").Value = vwPTWF.Fields("WRKFLWTYPE").Value
        If Not vwPTUWF.Read Then
            MsgBox "You do not have access to the Workflow that is used for PO Change Orders", vbInformation, FORM_TITLE
            vwPTWF.Close
            vwPTUWF.Close
            Exit Function
        End If
        'check can create trans
        If vwPTUWF.Fields("SWCREATE") = 0 Then
          MsgBox "You do not have access to create transactions with Change Order workflow " & strWorkflow, vbInformation, FORM_TITLE
          vwPTWF.Close
          vwPTUWF.Close
          Exit Function
        End If
    Else
        MsgBox "Change Order Workflow " & strWorkflow & " cannot be found", vbInformation, FORM_TITLE
        vwPTWF.Close
        vwPTUWF.Close
        Exit Function
    End If

    vwPTWF.Close
    vwPTUWF.Close

    POWorkflowIsOK = True
    
End Function

Private Sub UserForm_Initialize()
On Error GoTo ErrHandler

    Dim acf As AccpacCustomField

    With mDBLinkCmpRW
        .OpenViewInstance "PO0620", ckPTPORH, True
        .OpenViewInstance "PT0050", ckPTPORR, True
        .OpenViewInstance "PT0040", ckPTPRH, True
        .OpenViewInstance "PT0025", ckPTUCOST, True
        .OpenViewInstance "PT0020", vwPTUSER, True
    End With
    
    'activate datasource
    With dsPTPORH
        .ViewID = "PO0620"
        .DBLinkCompany = mDBLinkCmpRW
        .AutoCompose = False
        .Active = True
        .Order = 1
        If ALLOW_COPY_PARTIALLY_RECEIPTED And ALLOW_COPY_COMPLETED_PO Then 'anything goes, just not unapproved PO's
           .Browse "PORTYPE = 1 AND PTSOURCE > 0 AND (STATUS = 10 OR STATUS = 70 OR STATUS = 90)", True
        ElseIf Not ALLOW_COPY_PARTIALLY_RECEIPTED And Not ALLOW_COPY_COMPLETED_PO Then
            .Browse "PORTYPE = 1 AND PTSOURCE > 0 AND (STATUS = 10 OR STATUS = 70 OR STATUS = 90) AND (RCPCOUNT = 0 AND ISCOMPLETE = FALSE)", True
        ElseIf Not ALLOW_COPY_PARTIALLY_RECEIPTED And ALLOW_COPY_COMPLETED_PO Then
            .Browse "PORTYPE = 1 AND PTSOURCE > 0 AND (STATUS = 10 OR STATUS = 70 OR STATUS = 90) AND RCPCOUNT = 0", True
        Else   'can copy partially received, but not complete
           .Browse "PORTYPE = 1 AND PTSOURCE > 0 AND (STATUS = 10 OR STATUS = 70 OR STATUS = 90) AND ISCOMPLETE = FALSE", True
        End If
    End With
    
    mDBLinkCmpRW.OpenViewInstance "PT0018", vwPTCOSTro, True
    mDBLinkCmpRW.OpenViewInstance "PT0010", vwPTWFro, True
    
    'connect field edit control
    With fecPTPORH_ponumber
        .DataSource = dsPTPORH
        .AccpacField = dsPTPORH.Fields("PONUMBER")
        .LeftLabel = "Source PO Number"
        .ViewFinder.ViewID = dsPTPORH.ViewID
        .ViewFinder.ReturnFieldIDs = IDX_PONUMBER
        If ALLOW_COPY_PARTIALLY_RECEIPTED And ALLOW_COPY_COMPLETED_PO Then
           .ViewFinder.Filter = "PORTYPE = 1 AND PTSOURCE > 0 AND (STATUS = 10 OR STATUS = 70 OR STATUS = 90)"
        ElseIf Not ALLOW_COPY_PARTIALLY_RECEIPTED And Not ALLOW_COPY_COMPLETED_PO Then
            .ViewFinder.Filter = "PORTYPE = 1 AND PTSOURCE > 0 AND (STATUS = 10 OR STATUS = 70 OR STATUS = 90) AND (RCPCOUNT = 0 AND ISCOMPLETE = FALSE)"
        ElseIf Not ALLOW_COPY_PARTIALLY_RECEIPTED And ALLOW_COPY_COMPLETED_PO Then
            .ViewFinder.Filter = "PORTYPE = 1 AND PTSOURCE > 0 AND (STATUS = 10 OR STATUS = 70 OR STATUS = 90) AND RCPCOUNT = 0)"
        Else   'can copy partially received, but not complete
           .ViewFinder.Filter = "PORTYPE = 1 AND PTSOURCE > 0 AND (STATUS = 10 OR STATUS = 70 OR STATUS = 90) AND ISCOMPLETE = FALSE"
        End If
        .ViewFinder.ViewOrder = 1
        .ViewFinder.DisplayFieldIDs = Array(IDX_PONUMBER, IDX_VDCODE, IDX_VDNAME, IDX_DESCRIPTIO, IDX_REFERENCE, PTPORH.IDX_TAXGROUP)
        .ViewFinder.InitKeyType = FIELD_VALUE_AS_INIT_KEY

    End With
    
    With fecPTPORH_vdcode
        .DataSource = dsPTPORH
        .AccpacField = dsPTPORH.Fields("VDCODE")
        '.FieldDescriptionAsLeftLabel = True
        .LeftLabel = "Source Vendor"
    End With
    
    With fecPTPORH_vdname
        .DataSource = dsPTPORH
        .AccpacField = dsPTPORH.Fields("VDNAME")
    End With
       
   With dsAPVEN
     .ViewID = "AP0015"
     .DBLinkCompany = mDBLinkCmpRW
     .AutoCompose = False
     .Active = True
     .Browse "SWACTV = 1", True
   End With
      
    If ALLOW_VENDOR_CHANGE Then
      With fecAPVEN_vendorID
          .DataSource = dsAPVEN
          .AccpacField = dsAPVEN.Fields("VENDORID")
          '.FieldDescriptionAsLeftLabel = True
          .LeftLabel = "To Vendor"
          .ViewFinder.ViewID = dsAPVEN.ViewID
          .ViewFinder.ReturnFieldIDs = IDX_VENDORID
          .ViewFinder.Filter = "SWACTV = 1"
          .ViewFinder.DisplayFieldIDs = Array(IDX_VENDORID, IDX_VENDNAME, IDX_SWACTV, IDX_IDGRP, IDX_CURNCODE, _
            IDX_SHORTNAME, IDX_SWHOLD, IDX_TEXTSTRE1, IDX_TEXTSTRE2, IDX_TEXTSTRE3, IDX_TEXTSTRE4, IDX_VDCITY, IDX_VDCOUNTRY)
          .ViewFinder.InitKeyType = FIELD_VALUE_AS_INIT_KEY
          .ReadOnly = True
      End With
      
      With fecAPVEN_vendname
          .DataSource = dsAPVEN
          .AccpacField = dsAPVEN.Fields("VENDNAME")
      End With
    Else
      fecAPVEN_vendorID.Visible = False
      fecAPVEN_vendname.Visible = False
    End If
    
    
    
    
    'if ALLOW_TAX_GROUP_CHANGE then make the fec enabled and show the finder, otherwise don't show finder and make it disabled
    With dsTXGRP
      .ViewID = "TX0003"
      .DBLinkCompany = mDBLinkCmpRW
      .AutoCompose = False
      .Active = True
      .Browse "TTYPE = 2", True
    End With
    
    With fecTXGRP_groupID
      .DataSource = dsTXGRP
      .AccpacField = dsTXGRP.Fields("GROUPID")
      .LeftLabel = "Tax Group"
      If ALLOW_TAX_GROUP_CHANGE Then
         .ViewFinder.ViewID = dsTXGRP.ViewID
         .ViewFinder.ReturnFieldIDs = 1
         .ViewFinder.Filter = "TTYPE = 2"
         .ViewFinder.DisplayFieldIDs = Array(1, 3, 4)
         .ViewFinder.InitKeyType = FIELD_VALUE_AS_INIT_KEY
         .ReadOnly = True
      Else
         .ReadOnly = True
         .ViewFinderButton = False
      End If
    End With
    
    With fecTXGRP_desc
      .DataSource = dsTXGRP
      .AccpacField = dsTXGRP.Fields("DESC")
      .ReadOnly = True
    End With
    
    
    
   'set up cost centre FEC's
    Set macfCopyCC = New AccpacCustomField
    If ALLOW_COST_CENTRE_CHANGE Then
      macfCopyCC.Init FLD_CHAR, FLD_EDITABLE + FLD_ENABLED
      macfCopyCC.PutPresentationMask "%-12C"
      macfCopyCC.PutPresentationType FLD_PRESENTS_MASK
      fecCopyCC.ViewFinderButton = True
      fecCopyCC.ReadOnly = True
    Else
      macfCopyCC.Init FLD_CHAR, 0
    End If
    fecCopyCC.AccpacField = macfCopyCC
    fecCopyCC.LeftLabel = "Cost Centre"
    
    Set macfCopyCCDesc = New AccpacCustomField
    macfCopyCCDesc.Init FLD_CHAR, 0
    fecCopyCCdesc.AccpacField = macfCopyCCDesc
    
    
    'set up workflow FEC's
    Set macfCopyWF = New AccpacCustomField
    If ALLOW_WORKFLOW_CHANGE Then
      macfCopyWF.Init FLD_CHAR, FLD_EDITABLE + FLD_ENABLED
      macfCopyWF.PutPresentationMask "%-8C"
      macfCopyWF.PutPresentationType FLD_PRESENTS_MASK
      fecCopyWF.ViewFinderButton = True
      fecCopyWF.ReadOnly = True
    Else
      macfCopyWF.Init FLD_CHAR, 0
    End If
    fecCopyWF.AccpacField = macfCopyWF
    fecCopyWF.LeftLabel = "Work Flow"
    

    
    Set macfCopyWFDesc = New AccpacCustomField
    macfCopyWFDesc.Init FLD_CHAR, 0
    fecCopyWFDesc.AccpacField = macfCopyWFDesc
    
    Set acf = New AccpacCustomField
    acf.Init FLD_CHAR, 0
    fecPOStatus.AccpacField = acf
    
    'set the default workflow
    If PO_CHG_ORDER_WF <> "" Then
      UpdateCopyWF PO_CHG_ORDER_WF 'but not if mapping is involved? do if PO_CHG_ORDER_WF is blank, don't do this?
    End If
    
    'set up tab order so can tab away from PO fec
    If ALLOW_VENDOR_CHANGE Then
      fecAPVEN_vendorID.TabIndex = 1
    Else
      fraItemDesc.TabIndex = 1
    End If
    
    cbProcess.Enabled = False

    btnOpen.Enabled = False
    
    'Attached Documents
    'Only show option if WD is active
    If blnWDActive Then
        chkCopyAttachments.Visible = True
    Else
        chkCopyAttachments.Visible = False
    End If
    
    'Disable unless Original PO has attachments
    chkCopyAttachments.Enabled = False
       
    
Exit Sub
ErrHandler:
    ReportErrors
End Sub

Private Sub ReportErrors()
  Dim lCount As Long
  Dim lIndex As Long

  If Errors Is Nothing Then
       MsgBox Err.Description
  Else
      lCount = Errors.Count

      If lCount = 0 Then
          MsgBox Err.Description
      Else
          For lIndex = 0 To lCount - 1
              MsgBox Errors.Item(lIndex)
          Next
          Errors.Clear
      End If
      Resume Next

  End If
End Sub

'---------------------------------------------------
' ObjectKey Parameter Utility Methods
'---------------------------------------------------

' This function builds a standard ObjectKey string
' from an array of key (parameter name) strings
' (strArrKey) and an array of associated value
' strings (strArrVals).  ALL CALLERS that pass
' parameters (i.e. key/value pairs) to other UI's
' should call this function to package the
' parameters properly.
' NOTE: The array bounds (upper/lower) MUST match.
'       (i.e. We CAN'T have one array being 0-based
'       while the other is 1-based.)
Public Function KVBuildList(strArrKeys() As String, _
                            strArrVals() As String) _
                           As String
On Error Resume Next
    Dim lKeysLBound As Long
    Dim lKeysUBound As Long
    Dim lValsLBound As Long
    Dim lValsUBound As Long
    Dim i As Long

    ' Retrieve the key (parameter) array's bounds.
    lKeysLBound = LBound(strArrKeys)
    lKeysUBound = UBound(strArrKeys)
    
    If Err.Number <> 0 Then
        ' The UI programmer put in an emtpy array of
        ' keys, so print a debug message and force a
        ' breakpoint to help diagnosis.  Return an
        ' empty string, clear errors, and GET OUT of
        ' the function.
        Debug.Print "KVBuildList error: strArrKeys " _
            & "is empty."
        Debug.Assert False  ' press F5 or F8 to continue
        
        KVBuildList = ""
        Err.Clear
        Exit Function
    End If
    
    ' IF WE GOT TO HERE, WE HAVE A NON-EMPTY ARRAY
    ' OF KEYS.
    
    ' Retrieve the value array's bounds.
    lValsLBound = LBound(strArrVals)
    lValsUBound = UBound(strArrVals)
    
    If Err.Number <> 0 Then
        ' The UI programmer put in an empty array of
        ' values, so print a debug message and force
        ' a breakpoint to help diagnosis.  Return an
        ' empty string, clear errors, and GET OUT of
        ' the function.
        Debug.Print "KVBuildList error: strArrVals " _
            & "is empty."
        Debug.Assert False  ' press F5 or F8 to continue
        
        KVBuildList = ""
        Err.Clear
        Exit Function
    End If
    
    ' IF WE GOT TO HERE, WE HAVE A NON-EMPTY ARRAY
    ' OF VALUES.
    
    ' Make sure the array bounds match.
    If (lKeysLBound <> lValsLBound) _
      Or (lKeysUBound <> lValsUBound) _
      Then
        ' The two arrays don't have matching bounds,
        ' so print a debug message and force a
        ' breakpoint to help diagnosis.  Return an
        ' empty string, clear errors, and GET OUT of
        ' the function.
        Debug.Print "KVBuildList error: The array " _
            & "bounds for strArrKeys and strArrVals" _
            & " don't match."
        Debug.Assert False  ' press F5 or F8 to continue
        
        KVBuildList = ""
        Err.Clear
        Exit Function
    End If
    
    ' IF WE GOT TO HERE, THE ARRAY BOUNDS MATCH.
    
    ' Build up the string, one parameter at a time.
    KVBuildList = ""  ' default value
    For i = lKeysLBound To lKeysUBound
        KVBuildList = KVBuildList & _
            CreatePropertyString(strArrKeys(i), _
                                 strArrVals(i))
    Next i
    
    Err.Clear
End Function

' This function retrieves the value (into the
' strValue "ByRef" argument) associated with the key
' (parameter) named strKey from a string
' (strKeyValList) that contains key (parameter name)
' and value pairs.  The list of parameters should
' have been packaged by the other UI's into standard
' ObjectKey format (using the KVBuildList function).
' ALL RECEIVERS that receive standard ObjectKey
' strings from caller UI's should use this function
' for each parameter they want to retrieve.  The
' return value indicates whether or not the key was
' found (as strValue will be "" if the key wasn't
' found or if the value connected to that (valid)
' key happens to be "").
Public Function KVGetValue(ByVal strKeyValList As String, _
                           ByVal strKey As String, _
                           ByRef strValue As String) _
                          As Boolean
On Error Resume Next
    Dim iOffset1 As Integer    ' where the <key> is in the strKeyValList string
    Dim iOffset2 As Integer    ' where the <value> is in the strKeyValList string
    Dim lKeyLen As Long
    
    strValue = ""  ' until set otherwise
    
    ' Make sure the key isn't empty.
    If (strKey = "") Then
        ' The key (to search on) is empty, so print
        ' a debug message and force a breakpoint to
        ' help diagnosis.  Indicate "key not found",
        ' clear errors, and GET OUT of the function.
        Debug.Print "KVBuildList error: strKey is " _
            & "empty."
        Debug.Assert False
        
        KVGetValue = False
        Err.Clear
        Exit Function
    End If
    
    ' IF WE GOT TO HERE, WE'RE SEARCHING ON A NON-
    ' EMPTY KEY.
    
    ' Look for the "<key>=" string in the list.
    strKey = EscapeParam(strKey) & "="
    lKeyLen = Len(strKey)
    iOffset2 = StrComp(Left(strKeyValList, lKeyLen), _
                       strKey, vbBinaryCompare)
    If Err.Number <> 0 Then
        ' One of the strings is Null (error setting
        ' integer iOffset2), so print a debug
        ' message and force a breakpoint to help
        ' diagnosis.  Indicate "key not found",
        ' clear errors, and GET OUT of the function.
        Debug.Print "KVBuildList error: " & _
            "strKeyValList and/or strKey is Null."
        Debug.Assert False
        
        KVGetValue = False
        Err.Clear
        Exit Function
    End If
    
    ' IF WE GOT TO HERE, NONE OF THE ARGUMENTS ARE
    ' NULL.
    
    If iOffset2 = 0 Then
        ' It is the first key. Found it.
        iOffset1 = 1     ' Offset = 1
    Else
        ' It is not the first key. Not found yet.
        strKey = ParamMarker & strKey
        lKeyLen = Len(strKey)
        iOffset1 = InStr(1, strKeyValList, _
                        strKey, vbBinaryCompare)
        If iOffset1 = 0 Then
            ' We didn't find the parameter at all.
            ' Just indicate that the key wasn't
            ' found and GET OUT of the function.
            ' NOTE: This isn't an "error".
            KVGetValue = False
            Exit Function
        End If
    End If
    
    ' IF WE GOT TO HERE, WE FOUND THE KEY.
    
    ' Indicate that we found the key and go to the
    ' start of the value associated with that key.
    KVGetValue = True
    iOffset1 = iOffset1 + lKeyLen

    ' Get the value.
    iOffset2 = InStr(iOffset1, strKeyValList, ParamMarker, vbBinaryCompare)
    If iOffset2 = 0 Then  ' Missing end marked
        strValue = UnescapeParam( _
                       Mid(strKeyValList, iOffset1))
    Else
        strValue = UnescapeParam( _
                    Mid(strKeyValList, iOffset1, _
                        iOffset2 - iOffset1))
    End If
End Function


'---------------------------------------------------
' Private Helpers for ObjectKey Parameter Methods
'---------------------------------------------------

' This function creates a "Name=Value" pair (along
' with the parameter separator) for a parameter,
' which will end up as part of the ObjectKey.
Private Function CreatePropertyString(ByVal strParamName As String, _
                      ByVal strParamValue As String) _
                     As String
On Error Resume Next
    CreatePropertyString = _
        EscapeParam(strParamName) & _
        "=" & _
        EscapeParam(strParamValue) & _
        ParamMarker
    
    Err.Clear
End Function

Private Function EscapeParam(ByVal strUnescaped As String) _
                            As String
On Error Resume Next
    EscapeParam = Replace(strUnescaped, "\", EscMarker, , , vbBinaryCompare)
    EscapeParam = Replace(EscapeParam, "=", EqualMarker, , , vbBinaryCompare)
    EscapeParam = Replace(EscapeParam, ParamMarker, "\0", , , vbBinaryCompare)
    
    Err.Clear
End Function

Private Function UnescapeParam(ByVal strEscaped As String) _
                              As String
On Error Resume Next
    Dim sPos As Integer
    Dim ePos As Integer
    
    UnescapeParam = ""  ' until told otherwise
    
    sPos = 1
    ePos = InStr(1, strEscaped, "\", vbBinaryCompare)
    While ePos > 0
        If StrComp(Mid(strEscaped, ePos, Len(EqualMarker)), EqualMarker, vbBinaryCompare) = 0 Then
            UnescapeParam = UnescapeParam & Mid(strEscaped, sPos, ePos - sPos) & "="
            ePos = ePos + Len(EqualMarker)
            sPos = ePos
        ElseIf StrComp(Mid(strEscaped, ePos, Len("\0")), "\0", vbBinaryCompare) = 0 Then
            UnescapeParam = UnescapeParam & Mid(strEscaped, sPos, ePos - sPos) & ParamMarker
            ePos = ePos + Len("\0")
            sPos = ePos
        ElseIf StrComp(Mid(strEscaped, ePos, Len(EscMarker)), EscMarker, vbBinaryCompare) = 0 Then
            UnescapeParam = UnescapeParam & Mid(strEscaped, sPos, ePos - sPos) & "\"
            ePos = ePos + Len(EscMarker)
            sPos = ePos
        Else
            ePos = ePos + 1  ' invalid escape character!  Ignore to be safe!
        End If
        ePos = InStr(ePos, strEscaped, "\", vbBinaryCompare)
    Wend
    UnescapeParam = UnescapeParam & Mid(strEscaped, sPos)
    
    Err.Clear
End Function

Private Sub AddMinimiseButton()
'//Add a Minimize button to Userform
    Dim hWnd As Long
    hWnd = GetActiveWindow
    Call SetWindowLong(hWnd, GWL_STYLE, _
                       GetWindowLong(hWnd, GWL_STYLE) Or _
                       WS_MINIMIZEBOX)
    Call SetWindowPos(hWnd, 0, 0, 0, 0, 0, _
                      SWP_FRAMECHANGED Or _
                      SWP_NOMOVE Or _
                      SWP_NOSIZE)
End Sub

Private Sub AppTasklist(myForm)
'Add this userform into the Task bar
    Dim WStyle As Long
    Dim Result As Long
    Dim hWnd As Long

    hWnd = FindWindow(vbNullString, myForm.Caption)
    WStyle = GetWindowLong(hWnd, GWL_EXSTYLE)
    WStyle = WStyle Or WS_EX_APPWINDOW
    Result = SetWindowPos(hWnd, HWND_TOP, 0, 0, 0, 0, _
                          SWP_NOMOVE Or _
                          SWP_NOSIZE Or _
                          SWP_NOACTIVATE Or _
                          SWP_HIDEWINDOW)
    Result = SetWindowLong(hWnd, GWL_EXSTYLE, WStyle)
    Result = SetWindowPos(hWnd, HWND_TOP, 0, 0, 0, 0, _
                          SWP_NOMOVE Or _
                          SWP_NOSIZE Or _
                          SWP_NOACTIVATE Or _
                          SWP_SHOWWINDOW)
End Sub



Attribute VB_Name = "MainModule"
'********************************************************************************************
'* This macro handles PO change orders:
'*  - uses the Accpac helper view to copy an existing PO to a new PO
'*  - sets the PO number to be the source POnumber with a version suffix ("-nnn")
'*  - separator character cannot be "/" as this causes Invalid Directory error with PT e-mailing
'*  - terminates the source PO by setting the Qty OS on each line to be zero
'*      - (previous idea was to do a zero quantity receipt - but this means there are open receipts in the system)
'*  - the new PO will go through a POR workflow using the specified POR WF
'*
'* CC:
'* - if (a) PO Source is 0 or 1 (a PO Req) OR
'*      (b) PO Source is 2 and PO has come from a single PR OR
'*      (c) PO Source is 2 and PO has come from multi PR's but all PR's have the same CC
'*   - then we know what CC to use on the new PO - user should not be allowed to change it
'*   - else don't allow POCO for this PO (future enhancement - provide field for user to select a CC that they have access to)
'*
'* Workflow:
'*   - is set in a constant
'*   - users are not able to change the workflow used for the POCO
'*   - rationale: company would want all PO CO's to go through a defined workflow
'*
'* PO that is created:
'*   - is On Hold - this is done by PT's subclass - just like when a POR is entered manually it is put on hold
'*      - the PO can be changed by the user - whihc is what is required
'*   - the POR Requisitioner is that of the user that runs the macro
'*   - does NOT have the optional field values from the source PO
'*
'* PT Version Support: as the Accpac Copy PO helper is only available in ver 5.5, this macro is limited to 5.5 and above
'*
'********************************************************************************************
'
'Futures:
' - possible to have UOM's that were used prior to the UOM Control flag being set - ideally should check this flag and if on verify the UOM on each line of the source PO
'
'Changed:
'  May 2013  - accounted for situation where IC not active
'            - handle new PTUSER setting for all cost centres
'  May 2014  - 6.2.1
'            - copy item description options added
'            - allow copying of partially receipted PO's, determined by macro constant.  Oustanding quantity
'              from source PO becomes quantity ordered on new PO
'            - allow copy to another vendor, determined by macro constant
'            - add check that user can create transactions (PTUWF.SWCREATE)
'  May 2015  - added support for mapping source PO workflow to different change order workflows
'            - removed restiction for ISCOMPLETE = False, since PT now completes a declined PO
'  June 2015 - added support to copy any documents that may be attached to the source PO
'  Dec 2015  - 6.2.4
'            - fixed a problem where optional fields on the header with a set of values to be picked from
'              and where value set = No, were not copied.
'  May 2017  - 6.4.1
'              Added code to allow the option of incrementing by alpha suffix instead of numeric
'              Added code to allow cost centre to be changed.
'  Aug 2017  - 6.4.2
'              Added ability to turn on and off the copying of completed PO's. If ALLOW_COPY_PARTIALLY_RECEIPTED was TRUE, copyPO would
'              only copy the quantity outstanding, which in the case of a completed PO, is zero.
'              Added a finder and ability to enter workflows
'  June 2018 - 6.4.3
'              Added code to allow the tax group to be changed.  Tax group field is not editable once the PO is created.


Option Explicit

Public mDBLinkCmpRW As AccpacCOMAPI.AccpacDBLink
Public strUserID As String
Public blnICActive As Boolean

Private strPTVer As String
Private strPOVer As String
Private strWDVer As String
Private blnPTActive As Boolean
Private blnPOActive As Boolean
Public blnWDActive As Boolean

Public Const FORM_TITLE As String = "PW PO Change Order 6.4.3"

Public Const CopyAttachedDocsDefault As Boolean = True

Public Const SeparatorChar = "-"
Public Const APPEND_ALPHA As Boolean = True

Public Const ALLOW_COPY_PARTIALLY_RECEIPTED As Boolean = True
Public Const ALLOW_COPY_COMPLETED_PO As Boolean = True
Public Const ALLOW_VENDOR_CHANGE As Boolean = False
Public Const ALLOW_COST_CENTRE_CHANGE As Boolean = True
Public Const ALLOW_WORKFLOW_CHANGE As Boolean = True
Public Const ALLOW_TAX_GROUP_CHANGE As Boolean = True

'***************************************************************************************
' Add a new constant for each PO Workflow that will be acting as a change order workflow.
' Update the select case routine in Form1.dsPTPORH_OnKeyChanged to handle the mapping
' from each possible source workflow to the change order workflow
Public Const PO_CHG_ORDER_WF As String = ""   '"POREQ"
Public Const PO_CHG_ORDER_WF_CAPEX_FC As String = "POCPX-FC"
Public Const PO_CHG_ORDER_WF_CAPEX_HQ As String = "POCPX-HQ"
Public Const PO_CHG_ORDER_WF_OPEX_FC As String = "POOPX-FC"
Public Const PO_CHG_ORDER_WF_OPEX_HQ As String = "POOPX-HQ"


Public Sub MainSub()
   
    Dim blnSecOK As Boolean
    Dim strTest As String
    
    On Error GoTo ACCPACErrorHandler
        
    Set mDBLinkCmpRW = OpenDBLink(DBLINK_COMPANY, DBLINK_FLG_READWRITE)
    
    strUserID = mDBLinkCmpRW.Session.UserID
    If strUserID = "ADMIN" Then
        MsgBox "User ADMIN will not be able to create PO Change Orders"
        Exit Sub
    End If
    
    blnPTActive = False
    blnPOActive = False
    blnICActive = False
    blnWDActive = False
    
    AppIsActive ("PT")
    AppIsActive ("PO")
    AppIsActive ("IC")
    AppIsActive ("WD")

    If Not blnPTActive Then
        MsgBox "PW module is not active"
        Exit Sub
    Else
        If strPTVer < "55" Then
            MsgBox "PW version needs to be 5.5 or higher"
            Exit Sub
        End If
    End If
    
    If Not blnPOActive Then
        MsgBox "PO module is not active"
        Exit Sub
        If strPOVer < "55" Then
            MsgBox "PO version needs to be 5.5 or higher"
            Exit Sub
        End If
    End If
    
'    If Not blnWDActive Then
'        MsgBox "WD module is not active"
'        Exit Sub
'        If strWDVer < "62" Then
'            MsgBox "PO version needs to be 6.2 or higher"
'            Exit Sub
'        End If
'    End If
    
    'check user has correct PO security rights
    Check_Security blnSecOK
    If Not blnSecOK Then
        MsgBox "User does not have security access to Create PO's"
        Exit Sub
    End If
    
    If SeparatorChar = "/" Or Len(SeparatorChar) <> 1 Then
        MsgBox "Your Separator Char is invalid, It must be one char and not an '/'."
        Exit Sub
    End If
    
    Form1.Top = 500
    Form1.Left = 500
    Form1.Show

    mDBLinkCmpRW.Close
    Set mDBLinkCmpRW = Nothing
    
Exit Sub

ACCPACErrorHandler:
  Dim lCount As Long
  Dim lIndex As Long

  If Errors Is Nothing Then
       MsgBox Err.Description
       MsgBox "VBA Macros cannot run where Accpac is deployed as a Web Server"
  Else
      lCount = Errors.Count

      If lCount = 0 Then
          MsgBox Err.Description
      Else
          For lIndex = 0 To lCount - 1
              MsgBox Errors.Item(lIndex)

          Next
          Errors.Clear
      End If
      Resume Next

  End If

End Sub

Private Sub AppIsActive(strApp As String)
    
    On Error GoTo ErrHandler
    Debug.Print "AppIsActive"
    Dim apps As AccpacActiveApp

    Set apps = mDBLinkCmpRW.GetActiveApp
    If Not (apps Is Nothing) Then
        With apps
            Dim app As AccpacApplication
            Dim i As Integer
            
            For i = 0 To .Count - 1
                Set app = .Item(i)
                
                If (app.PgmID = strApp) Then
                    Select Case strApp
                        Case "IC"
                           blnICActive = True
                        Case "PT"
                            blnPTActive = True
                            strPTVer = app.PgmVer
                        Case "PO"
                            blnPOActive = True
                            strPOVer = app.PgmVer
                        Case "WD"
                            blnWDActive = True
                            strWDVer = app.PgmVer
                    End Select
                    Exit Sub
                End If
            Next i
        End With ' apps
    End If

Exit Sub

ErrHandler:
    Debug.Assert False

    With Err
        
        .Raise .Number, .Source, .Description, .HelpFile, .HelpContext
    End With ' Err
End Sub

Private Function Check_Security(outSecOK) As Boolean

    On Error GoTo errorHandler

    Check_Security = False
    outSecOK = False
   
    If mDBLinkCmpRW.SecCheck("POPOR") Then
        outSecOK = True
    End If
    Check_Security = True
    
    Exit Function
    
errorHandler:
    
    Check_Security = False
    
  Dim lCount As Long
  Dim lIndex As Long
  
  If Errors Is Nothing Then
       MsgBox Err.Description
  Else
      lCount = Errors.Count

      If lCount = 0 Then
          MsgBox Err.Description
      Else
          For lIndex = 0 To lCount - 1
              MsgBox Errors.Item(lIndex)
          
          Next
          Errors.Clear
      End If

  End If

End Function


Attribute VB_Name = "PTPORH"
'*************************************************************
'** Name:  PTPORH.BAS
'** View:  Purchase Orders
'** Copyright (c) 1992-2010 Sage Software, Inc.  All rights reserved.
'*************************************************************

'View Roto ID
Public Const ROTOID     As String = "PO0620"
Public Const OBJECTNAME As String = "PTPORH"

'View Keys
Public Const KEY1 As Long = 0
Public Const KEY2 As Long = 1
Public Const KEY3 As Long = 2
Public Const KEY4 As Long = 3
Public Const KEY5 As Long = 4

'View Field Indices
Public Const IDX_PORHSEQ    As Long = 1
Public Const IDX_NEXTLSEQ   As Long = 2
Public Const IDX_LINES      As Long = 3
Public Const IDX_LINESCMPL  As Long = 4
Public Const IDX_TAXLINES   As Long = 5
Public Const IDX_RQNS       As Long = 6
Public Const IDX_RQNSCMPL   As Long = 7
Public Const IDX_ISPRINTED  As Long = 8
Public Const IDX_TAXAUTOCAL As Long = 9
Public Const IDX_LABELPRINT As Long = 10
Public Const IDX_LABELCOUNT As Long = 11
Public Const IDX_ISCOMPLETE As Long = 12
Public Const IDX_DTCOMPLETE As Long = 13
Public Const IDX_POSTDATE   As Long = 14
Public Const IDX_DATE       As Long = 15
Public Const IDX_PONUMBER   As Long = 16
Public Const IDX_TEMPLATE   As Long = 17
Public Const IDX_FOBPOINT   As Long = 18
Public Const IDX_VDCODE     As Long = 19
Public Const IDX_VDEXISTS   As Long = 20
Public Const IDX_VDNAME     As Long = 21
Public Const IDX_VDADDRESS1 As Long = 22
Public Const IDX_VDADDRESS2 As Long = 23
Public Const IDX_VDADDRESS3 As Long = 24
Public Const IDX_VDADDRESS4 As Long = 25
Public Const IDX_VDCITY     As Long = 26
Public Const IDX_VDSTATE    As Long = 27
Public Const IDX_VDZIP      As Long = 28
Public Const IDX_VDCOUNTRY  As Long = 29
Public Const IDX_VDPHONE    As Long = 30
Public Const IDX_VDFAX      As Long = 31
Public Const IDX_VDCONTACT  As Long = 32
Public Const IDX_TERMSCODE  As Long = 33
Public Const IDX_HASRQNDATA As Long = 34
Public Const IDX_PORTYPE    As Long = 35
Public Const IDX_ONHOLD     As Long = 36
Public Const IDX_ORDEREDON  As Long = 37
Public Const IDX_EXPARRIVAL As Long = 38
Public Const IDX_VCORIGINAL As Long = 39
Public Const IDX_VCAVAILABL As Long = 40
Public Const IDX_DESCRIPTIO As Long = 41
Public Const IDX_REFERENCE  As Long = 42
Public Const IDX_COMMENT    As Long = 43
Public Const IDX_VIACODE    As Long = 44
Public Const IDX_VIANAME    As Long = 45
Public Const IDX_LASTRECEIP As Long = 46
Public Const IDX_RCPDATE    As Long = 47
Public Const IDX_RCPCOUNT   As Long = 48
Public Const IDX_CURRENCY   As Long = 57
Public Const IDX_RATE       As Long = 58
Public Const IDX_SPREAD     As Long = 59
Public Const IDX_RATETYPE   As Long = 60
Public Const IDX_RATEMATCH  As Long = 61
Public Const IDX_RATEDATE   As Long = 62
Public Const IDX_RATEOPER   As Long = 63
Public Const IDX_RATEOVER   As Long = 64
Public Const IDX_SCURNDECML As Long = 65
Public Const IDX_EXTWEIGHT  As Long = 66
Public Const IDX_EXTENDED   As Long = 67
Public Const IDX_DOCTOTAL   As Long = 68
Public Const IDX_EXTRECEIVE As Long = 69
Public Const IDX_EXTCANCEL  As Long = 70
Public Const IDX_OQORDERED  As Long = 71
Public Const IDX_TAXGROUP   As Long = 72
Public Const IDX_TAXAUTH1   As Long = 73
Public Const IDX_TAXAUTH2   As Long = 74
Public Const IDX_TAXAUTH3   As Long = 75
Public Const IDX_TAXAUTH4   As Long = 76
Public Const IDX_TAXAUTH5   As Long = 77
Public Const IDX_TAXCLASS1  As Long = 78
Public Const IDX_TAXCLASS2  As Long = 79
Public Const IDX_TAXCLASS3  As Long = 80
Public Const IDX_TAXCLASS4  As Long = 81
Public Const IDX_TAXCLASS5  As Long = 82
Public Const IDX_TAXBASE1   As Long = 83
Public Const IDX_TAXBASE2   As Long = 84
Public Const IDX_TAXBASE3   As Long = 85
Public Const IDX_TAXBASE4   As Long = 86
Public Const IDX_TAXBASE5   As Long = 87
Public Const IDX_TXINCLUDE1 As Long = 88
Public Const IDX_TXINCLUDE2 As Long = 89
Public Const IDX_TXINCLUDE3 As Long = 90
Public Const IDX_TXINCLUDE4 As Long = 91
Public Const IDX_TXINCLUDE5 As Long = 92
Public Const IDX_TXEXCLUDE1 As Long = 93
Public Const IDX_TXEXCLUDE2 As Long = 94
Public Const IDX_TXEXCLUDE3 As Long = 95
Public Const IDX_TXEXCLUDE4 As Long = 96
Public Const IDX_TXEXCLUDE5 As Long = 97
Public Const IDX_TAXAMOUNT1 As Long = 98
Public Const IDX_TAXAMOUNT2 As Long = 99
Public Const IDX_TAXAMOUNT3 As Long = 100
Public Const IDX_TAXAMOUNT4 As Long = 101
Public Const IDX_TAXAMOUNT5 As Long = 102
Public Const IDX_TXRECVAMT1 As Long = 103
Public Const IDX_TXRECVAMT2 As Long = 104
Public Const IDX_TXRECVAMT3 As Long = 105
Public Const IDX_TXRECVAMT4 As Long = 106
Public Const IDX_TXRECVAMT5 As Long = 107
Public Const IDX_TXEXPSAMT1 As Long = 108
Public Const IDX_TXEXPSAMT2 As Long = 109
Public Const IDX_TXEXPSAMT3 As Long = 110
Public Const IDX_TXEXPSAMT4 As Long = 111
Public Const IDX_TXEXPSAMT5 As Long = 112
Public Const IDX_TXALLOAMT1 As Long = 113
Public Const IDX_TXALLOAMT2 As Long = 114
Public Const IDX_TXALLOAMT3 As Long = 115
Public Const IDX_TXALLOAMT4 As Long = 116
Public Const IDX_TXALLOAMT5 As Long = 117
Public Const IDX_TXBASEALLO As Long = 118
Public Const IDX_TXINCLUDED As Long = 119
Public Const IDX_TXEXCLUDED As Long = 120
Public Const IDX_TAXAMOUNT  As Long = 121
Public Const IDX_TXRECVAMT  As Long = 122
Public Const IDX_TXEXPSAMT  As Long = 123
Public Const IDX_TXALLOAMT  As Long = 124
Public Const IDX_DOCSOURCE  As Long = 125
Public Const IDX_SRRECEIVED As Long = 136
Public Const IDX_SREXTORDER As Long = 137
Public Const IDX_BTCODE     As Long = 138
Public Const IDX_BTDESC     As Long = 139
Public Const IDX_BTADDRESS1 As Long = 140
Public Const IDX_BTADDRESS2 As Long = 141
Public Const IDX_BTADDRESS3 As Long = 142
Public Const IDX_BTADDRESS4 As Long = 143
Public Const IDX_BTCITY     As Long = 144
Public Const IDX_BTSTATE    As Long = 145
Public Const IDX_BTZIP      As Long = 146
Public Const IDX_BTCOUNTRY  As Long = 147
Public Const IDX_BTPHONE    As Long = 148
Public Const IDX_BTFAX      As Long = 149
Public Const IDX_BTCONTACT  As Long = 150
Public Const IDX_STCODE     As Long = 151
Public Const IDX_STDESC     As Long = 152
Public Const IDX_STADDRESS1 As Long = 153
Public Const IDX_STADDRESS2 As Long = 154
Public Const IDX_STADDRESS3 As Long = 155
Public Const IDX_STADDRESS4 As Long = 156
Public Const IDX_STCITY     As Long = 157
Public Const IDX_STSTATE    As Long = 158
Public Const IDX_STZIP      As Long = 159
Public Const IDX_STCOUNTRY  As Long = 160
Public Const IDX_STPHONE    As Long = 161
Public Const IDX_STFAX      As Long = 162
Public Const IDX_STCONTACT  As Long = 163
Public Const IDX_TAXCLASS1D As Long = 171
Public Const IDX_TAXCLASS2D As Long = 172
Public Const IDX_TAXCLASS3D As Long = 173
Public Const IDX_TAXCLASS4D As Long = 174
Public Const IDX_TAXCLASS5D As Long = 175
Public Const IDX_TAXAUTH1D  As Long = 176
Public Const IDX_TAXAUTH2D  As Long = 177
Public Const IDX_TAXAUTH3D  As Long = 178
Public Const IDX_TAXAUTH4D  As Long = 179
Public Const IDX_TAXAUTH5D  As Long = 180
Public Const IDX_CURRENCYD  As Long = 181
Public Const IDX_RATETYPED  As Long = 182
Public Const IDX_TAXGROUPD  As Long = 183
Public Const IDX_TERMSCODED As Long = 184
Public Const IDX_TCBASEALLO As Long = 185
Public Const IDX_TCINCLUDE1 As Long = 186
Public Const IDX_TCINCLUDE2 As Long = 187
Public Const IDX_TCINCLUDE3 As Long = 188
Public Const IDX_TCINCLUDE4 As Long = 189
Public Const IDX_TCINCLUDE5 As Long = 190
Public Const IDX_TCALLOAMT1 As Long = 191
Public Const IDX_TCALLOAMT2 As Long = 192
Public Const IDX_TCALLOAMT3 As Long = 193
Public Const IDX_TCALLOAMT4 As Long = 194
Public Const IDX_TCALLOAMT5 As Long = 195
Public Const IDX_TCRECVAMT1 As Long = 196
Public Const IDX_TCRECVAMT2 As Long = 197
Public Const IDX_TCRECVAMT3 As Long = 198
Public Const IDX_TCRECVAMT4 As Long = 199
Public Const IDX_TCRECVAMT5 As Long = 200
Public Const IDX_TCEXPSAMT1 As Long = 201
Public Const IDX_TCEXPSAMT2 As Long = 202
Public Const IDX_TCEXPSAMT3 As Long = 203
Public Const IDX_TCEXPSAMT4 As Long = 204
Public Const IDX_TCEXPSAMT5 As Long = 205
Public Const IDX_TCALLOAMT  As Long = 206
Public Const IDX_TCINCLUDED As Long = 207
Public Const IDX_TCEXCLUDED As Long = 208
Public Const IDX_UBALTAXAMT As Long = 209
Public Const IDX_UBALTXALLO As Long = 210
Public Const IDX_SUBTOTAL   As Long = 211
Public Const IDX_PENDINGCAL As Long = 212
Public Const IDX_LOCKED     As Long = 213
Public Const IDX_CANDELETE  As Long = 214
Public Const IDX_ISACTIVE   As Long = 215
Public Const IDX_RATEEXISTS As Long = 216
Public Const IDX_HASDETAILS As Long = 217
Public Const IDX_VDEMAIL    As Long = 218
Public Const IDX_VDPHONEC   As Long = 219
Public Const IDX_VDFAXC     As Long = 220
Public Const IDX_VDEMAILC   As Long = 221
Public Const IDX_BTEMAIL    As Long = 222
Public Const IDX_BTPHONEC   As Long = 223
Public Const IDX_BTFAXC     As Long = 224
Public Const IDX_BTEMAILC   As Long = 225
Public Const IDX_STEMAIL    As Long = 226
Public Const IDX_STPHONEC   As Long = 227
Public Const IDX_STFAXC     As Long = 228
Public Const IDX_STEMAILC   As Long = 229
Public Const IDX_DISCPCT    As Long = 230
Public Const IDX_DISCOUNT   As Long = 231
Public Const IDX_DISCOUNTC  As Long = 232
Public Const IDX_NETXTENDED As Long = 233
Public Const IDX_VALUES     As Long = 234
Public Const IDX_PROCESSCMD As Long = 235
Public Const IDX_RQNNUMBER  As Long = 236
Public Const IDX_RQNHSEQ    As Long = 237
Public Const IDX_SCAMOUNT   As Long = 238
Public Const IDX_FCAMOUNT   As Long = 239
Public Const IDX_JOBLINES   As Long = 240
Public Const IDX_OOVERSEQ   As Long = 241
Public Const IDX_FCISRESET  As Long = 242
Public Const IDX_HASJOB     As Long = 243
Public Const IDX_AGENTTTYPE As Long = 244
Public Const IDX_AGENTHSEQ  As Long = 245
Public Const IDX_AGTRANSNUM As Long = 246
Public Const IDX_AGDOCNUM   As Long = 247
Public Const IDX_AGSRCDOC   As Long = 248
Public Const IDX_AGMULTIDOC As Long = 249
Public Const IDX_AGDATE     As Long = 250
Public Const IDX_AGFISCYEAR As Long = 251
Public Const IDX_AGFISCPER  As Long = 252
Public Const IDX_AGDESC     As Long = 253
Public Const IDX_AGREF      As Long = 254
Public Const IDX_TRCURRENCY As Long = 255
Public Const IDX_RATERC     As Long = 256
Public Const IDX_SPREADRC   As Long = 257
Public Const IDX_RATETYPERC As Long = 258
Public Const IDX_RATEMTCHRC As Long = 259
Public Const IDX_RATEDATERC As Long = 260
Public Const IDX_RATEOPERRC As Long = 261
Public Const IDX_RATERCOVER As Long = 262
Public Const IDX_RCURNDECML As Long = 263
Public Const IDX_TARAMOUNT1 As Long = 264
Public Const IDX_TARAMOUNT2 As Long = 265
Public Const IDX_TARAMOUNT3 As Long = 266
Public Const IDX_TARAMOUNT4 As Long = 267
Public Const IDX_TARAMOUNT5 As Long = 268
Public Const IDX_TRINCLUDE1 As Long = 269
Public Const IDX_TRINCLUDE2 As Long = 270
Public Const IDX_TRINCLUDE3 As Long = 271
Public Const IDX_TRINCLUDE4 As Long = 272
Public Const IDX_TRINCLUDE5 As Long = 273
Public Const IDX_TREXCLUDE1 As Long = 274
Public Const IDX_TREXCLUDE2 As Long = 275
Public Const IDX_TREXCLUDE3 As Long = 276
Public Const IDX_TREXCLUDE4 As Long = 277
Public Const IDX_TREXCLUDE5 As Long = 278
Public Const IDX_TRRECVAMT1 As Long = 279
Public Const IDX_TRRECVAMT2 As Long = 280
Public Const IDX_TRRECVAMT3 As Long = 281
Public Const IDX_TRRECVAMT4 As Long = 282
Public Const IDX_TRRECVAMT5 As Long = 283
Public Const IDX_TREXPSAMT1 As Long = 284
Public Const IDX_TREXPSAMT2 As Long = 285
Public Const IDX_TREXPSAMT3 As Long = 286
Public Const IDX_TREXPSAMT4 As Long = 287
Public Const IDX_TREXPSAMT5 As Long = 288
Public Const IDX_TRALLOAMT1 As Long = 289
Public Const IDX_TRALLOAMT2 As Long = 290
Public Const IDX_TRALLOAMT3 As Long = 291
Public Const IDX_TRALLOAMT4 As Long = 292
Public Const IDX_TRALLOAMT5 As Long = 293
Public Const IDX_RATERCEXST As Long = 294
Public Const IDX_RATERCC    As Long = 295
Public Const IDX_TRCURRDESC As Long = 296
Public Const IDX_RATETYPRCD As Long = 297
Public Const IDX_TARAMOUNT  As Long = 298
Public Const IDX_TRINCLUDED As Long = 299
Public Const IDX_TREXCLUDED As Long = 300
Public Const IDX_TRRECVAMT  As Long = 301
Public Const IDX_TREXPSAMT  As Long = 302
Public Const IDX_TRALLOAMT  As Long = 303
Public Const IDX_TACBASE1   As Long = 304
Public Const IDX_TACBASE2   As Long = 305
Public Const IDX_TACBASE3   As Long = 306
Public Const IDX_TACBASE4   As Long = 307
Public Const IDX_TACBASE5   As Long = 308
Public Const IDX_TACAMOUNT1 As Long = 309
Public Const IDX_TACAMOUNT2 As Long = 310
Public Const IDX_TACAMOUNT3 As Long = 311
Public Const IDX_TACAMOUNT4 As Long = 312
Public Const IDX_TACAMOUNT5 As Long = 313
Public Const IDX_TCEXCLUDE1 As Long = 314
Public Const IDX_TCEXCLUDE2 As Long = 315
Public Const IDX_TCEXCLUDE3 As Long = 316
Public Const IDX_TCEXCLUDE4 As Long = 317
Public Const IDX_TCEXCLUDE5 As Long = 318
Public Const IDX_TALAMOUNT1 As Long = 319
Public Const IDX_TALAMOUNT2 As Long = 320
Public Const IDX_TALAMOUNT3 As Long = 321
Public Const IDX_TALAMOUNT4 As Long = 322
Public Const IDX_TALAMOUNT5 As Long = 323
Public Const IDX_TLINCLUDE1 As Long = 324
Public Const IDX_TLINCLUDE2 As Long = 325
Public Const IDX_TLINCLUDE3 As Long = 326
Public Const IDX_TLINCLUDE4 As Long = 327
Public Const IDX_TLINCLUDE5 As Long = 328
Public Const IDX_TLEXCLUDE1 As Long = 329
Public Const IDX_TLEXCLUDE2 As Long = 330
Public Const IDX_TLEXCLUDE3 As Long = 331
Public Const IDX_TLEXCLUDE4 As Long = 332
Public Const IDX_TLEXCLUDE5 As Long = 333
Public Const IDX_TLALLOAMT1 As Long = 334
Public Const IDX_TLALLOAMT2 As Long = 335
Public Const IDX_TLALLOAMT3 As Long = 336
Public Const IDX_TLALLOAMT4 As Long = 337
Public Const IDX_TLALLOAMT5 As Long = 338
Public Const IDX_TLRECVAMT1 As Long = 339
Public Const IDX_TLRECVAMT2 As Long = 340
Public Const IDX_TLRECVAMT3 As Long = 341
Public Const IDX_TLRECVAMT4 As Long = 342
Public Const IDX_TLRECVAMT5 As Long = 343
Public Const IDX_TLEXPSAMT1 As Long = 344
Public Const IDX_TLEXPSAMT2 As Long = 345
Public Const IDX_TLEXPSAMT3 As Long = 346
Public Const IDX_TLEXPSAMT4 As Long = 347
Public Const IDX_TLEXPSAMT5 As Long = 348
Public Const IDX_VDACCTSET  As Long = 349
Public Const IDX_VDACCTDESC As Long = 350
Public Const IDX_ENTEREDBY  As Long = 351
Public Const IDX_PTSOURCE   As Long = 1347682305
Public Const IDX_REQRID     As Long = 1347682306
Public Const IDX_COSTCTR    As Long = 1347682307
Public Const IDX_WORKFLOW   As Long = 1347682308
Public Const IDX_CNTCAPITEM As Long = 1347682309
Public Const IDX_NXTSTEPNUM As Long = 1347682310
Public Const IDX_NXTACTIONR As Long = 1347682311
Public Const IDX_STATUS     As Long = 1347682312

'View Field Lengths
Public Const LEN_PORHSEQ    As Integer = 10
Public Const LEN_NEXTLSEQ   As Integer = 10
Public Const LEN_LINES      As Integer = 4
Public Const LEN_LINESCMPL  As Integer = 4
Public Const LEN_TAXLINES   As Integer = 4
Public Const LEN_RQNS       As Integer = 4
Public Const LEN_RQNSCMPL   As Integer = 4
Public Const LEN_ISPRINTED  As Integer = 2
Public Const LEN_TAXAUTOCAL As Integer = 2
Public Const LEN_LABELPRINT As Integer = 2
Public Const LEN_LABELCOUNT As Integer = 2
Public Const LEN_ISCOMPLETE As Integer = 2
Public Const LEN_DTCOMPLETE As Integer = 5
Public Const LEN_POSTDATE   As Integer = 5
Public Const LEN_DATE       As Integer = 5
Public Const LEN_PONUMBER   As Integer = 22
Public Const LEN_TEMPLATE   As Integer = 6
Public Const LEN_FOBPOINT   As Integer = 60
Public Const LEN_VDCODE     As Integer = 12
Public Const LEN_VDEXISTS   As Integer = 2
Public Const LEN_VDNAME     As Integer = 60
Public Const LEN_VDADDRESS1 As Integer = 60
Public Const LEN_VDADDRESS2 As Integer = 60
Public Const LEN_VDADDRESS3 As Integer = 60
Public Const LEN_VDADDRESS4 As Integer = 60
Public Const LEN_VDCITY     As Integer = 30
Public Const LEN_VDSTATE    As Integer = 30
Public Const LEN_VDZIP      As Integer = 20
Public Const LEN_VDCOUNTRY  As Integer = 30
Public Const LEN_VDPHONE    As Integer = 30
Public Const LEN_VDFAX      As Integer = 30
Public Const LEN_VDCONTACT  As Integer = 60
Public Const LEN_TERMSCODE  As Integer = 6
Public Const LEN_HASRQNDATA As Integer = 2
Public Const LEN_PORTYPE    As Integer = 2
Public Const LEN_ONHOLD     As Integer = 2
Public Const LEN_ORDEREDON  As Integer = 5
Public Const LEN_EXPARRIVAL As Integer = 5
Public Const LEN_VCORIGINAL As Integer = 10
Public Const LEN_VCAVAILABL As Integer = 10
Public Const LEN_DESCRIPTIO As Integer = 60
Public Const LEN_REFERENCE  As Integer = 60
Public Const LEN_COMMENT    As Integer = 250
Public Const LEN_VIACODE    As Integer = 6
Public Const LEN_VIANAME    As Integer = 60
Public Const LEN_LASTRECEIP As Integer = 22
Public Const LEN_RCPDATE    As Integer = 5
Public Const LEN_RCPCOUNT   As Integer = 2
Public Const LEN_CURRENCY   As Integer = 3
Public Const LEN_RATE       As Integer = 8
Public Const LEN_SPREAD     As Integer = 8
Public Const LEN_RATETYPE   As Integer = 2
Public Const LEN_RATEMATCH  As Integer = 2
Public Const LEN_RATEDATE   As Integer = 5
Public Const LEN_RATEOPER   As Integer = 2
Public Const LEN_RATEOVER   As Integer = 2
Public Const LEN_SCURNDECML As Integer = 2
Public Const LEN_EXTWEIGHT  As Integer = 10
Public Const LEN_EXTENDED   As Integer = 10
Public Const LEN_DOCTOTAL   As Integer = 10
Public Const LEN_EXTRECEIVE As Integer = 10
Public Const LEN_EXTCANCEL  As Integer = 10
Public Const LEN_OQORDERED  As Integer = 10
Public Const LEN_TAXGROUP   As Integer = 12
Public Const LEN_TAXAUTH1   As Integer = 12
Public Const LEN_TAXAUTH2   As Integer = 12
Public Const LEN_TAXAUTH3   As Integer = 12
Public Const LEN_TAXAUTH4   As Integer = 12
Public Const LEN_TAXAUTH5   As Integer = 12
Public Const LEN_TAXCLASS1  As Integer = 2
Public Const LEN_TAXCLASS2  As Integer = 2
Public Const LEN_TAXCLASS3  As Integer = 2
Public Const LEN_TAXCLASS4  As Integer = 2
Public Const LEN_TAXCLASS5  As Integer = 2
Public Const LEN_TAXBASE1   As Integer = 10
Public Const LEN_TAXBASE2   As Integer = 10
Public Const LEN_TAXBASE3   As Integer = 10
Public Const LEN_TAXBASE4   As Integer = 10
Public Const LEN_TAXBASE5   As Integer = 10
Public Const LEN_TXINCLUDE1 As Integer = 10
Public Const LEN_TXINCLUDE2 As Integer = 10
Public Const LEN_TXINCLUDE3 As Integer = 10
Public Const LEN_TXINCLUDE4 As Integer = 10
Public Const LEN_TXINCLUDE5 As Integer = 10
Public Const LEN_TXEXCLUDE1 As Integer = 10
Public Const LEN_TXEXCLUDE2 As Integer = 10
Public Const LEN_TXEXCLUDE3 As Integer = 10
Public Const LEN_TXEXCLUDE4 As Integer = 10
Public Const LEN_TXEXCLUDE5 As Integer = 10
Public Const LEN_TAXAMOUNT1 As Integer = 10
Public Const LEN_TAXAMOUNT2 As Integer = 10
Public Const LEN_TAXAMOUNT3 As Integer = 10
Public Const LEN_TAXAMOUNT4 As Integer = 10
Public Const LEN_TAXAMOUNT5 As Integer = 10
Public Const LEN_TXRECVAMT1 As Integer = 10
Public Const LEN_TXRECVAMT2 As Integer = 10
Public Const LEN_TXRECVAMT3 As Integer = 10
Public Const LEN_TXRECVAMT4 As Integer = 10
Public Const LEN_TXRECVAMT5 As Integer = 10
Public Const LEN_TXEXPSAMT1 As Integer = 10
Public Const LEN_TXEXPSAMT2 As Integer = 10
Public Const LEN_TXEXPSAMT3 As Integer = 10
Public Const LEN_TXEXPSAMT4 As Integer = 10
Public Const LEN_TXEXPSAMT5 As Integer = 10
Public Const LEN_TXALLOAMT1 As Integer = 10
Public Const LEN_TXALLOAMT2 As Integer = 10
Public Const LEN_TXALLOAMT3 As Integer = 10
Public Const LEN_TXALLOAMT4 As Integer = 10
Public Const LEN_TXALLOAMT5 As Integer = 10
Public Const LEN_TXBASEALLO As Integer = 10
Public Const LEN_TXINCLUDED As Integer = 10
Public Const LEN_TXEXCLUDED As Integer = 10
Public Const LEN_TAXAMOUNT  As Integer = 10
Public Const LEN_TXRECVAMT  As Integer = 10
Public Const LEN_TXEXPSAMT  As Integer = 10
Public Const LEN_TXALLOAMT  As Integer = 10
Public Const LEN_DOCSOURCE  As Integer = 2
Public Const LEN_SRRECEIVED As Integer = 10
Public Const LEN_SREXTORDER As Integer = 10
Public Const LEN_BTCODE     As Integer = 6
Public Const LEN_BTDESC     As Integer = 60
Public Const LEN_BTADDRESS1 As Integer = 60
Public Const LEN_BTADDRESS2 As Integer = 60
Public Const LEN_BTADDRESS3 As Integer = 60
Public Const LEN_BTADDRESS4 As Integer = 60
Public Const LEN_BTCITY     As Integer = 30
Public Const LEN_BTSTATE    As Integer = 30
Public Const LEN_BTZIP      As Integer = 20
Public Const LEN_BTCOUNTRY  As Integer = 30
Public Const LEN_BTPHONE    As Integer = 30
Public Const LEN_BTFAX      As Integer = 30
Public Const LEN_BTCONTACT  As Integer = 60
Public Const LEN_STCODE     As Integer = 6
Public Const LEN_STDESC     As Integer = 60
Public Const LEN_STADDRESS1 As Integer = 60
Public Const LEN_STADDRESS2 As Integer = 60
Public Const LEN_STADDRESS3 As Integer = 60
Public Const LEN_STADDRESS4 As Integer = 60
Public Const LEN_STCITY     As Integer = 30
Public Const LEN_STSTATE    As Integer = 30
Public Const LEN_STZIP      As Integer = 20
Public Const LEN_STCOUNTRY  As Integer = 30
Public Const LEN_STPHONE    As Integer = 30
Public Const LEN_STFAX      As Integer = 30
Public Const LEN_STCONTACT  As Integer = 60
Public Const LEN_TAXCLASS1D As Integer = 60
Public Const LEN_TAXCLASS2D As Integer = 60
Public Const LEN_TAXCLASS3D As Integer = 60
Public Const LEN_TAXCLASS4D As Integer = 60
Public Const LEN_TAXCLASS5D As Integer = 60
Public Const LEN_TAXAUTH1D  As Integer = 60
Public Const LEN_TAXAUTH2D  As Integer = 60
Public Const LEN_TAXAUTH3D  As Integer = 60
Public Const LEN_TAXAUTH4D  As Integer = 60
Public Const LEN_TAXAUTH5D  As Integer = 60
Public Const LEN_CURRENCYD  As Integer = 60
Public Const LEN_RATETYPED  As Integer = 60
Public Const LEN_TAXGROUPD  As Integer = 60
Public Const LEN_TERMSCODED As Integer = 60
Public Const LEN_TCBASEALLO As Integer = 10
Public Const LEN_TCINCLUDE1 As Integer = 10
Public Const LEN_TCINCLUDE2 As Integer = 10
Public Const LEN_TCINCLUDE3 As Integer = 10
Public Const LEN_TCINCLUDE4 As Integer = 10
Public Const LEN_TCINCLUDE5 As Integer = 10
Public Const LEN_TCALLOAMT1 As Integer = 10
Public Const LEN_TCALLOAMT2 As Integer = 10
Public Const LEN_TCALLOAMT3 As Integer = 10
Public Const LEN_TCALLOAMT4 As Integer = 10
Public Const LEN_TCALLOAMT5 As Integer = 10
Public Const LEN_TCRECVAMT1 As Integer = 10
Public Const LEN_TCRECVAMT2 As Integer = 10
Public Const LEN_TCRECVAMT3 As Integer = 10
Public Const LEN_TCRECVAMT4 As Integer = 10
Public Const LEN_TCRECVAMT5 As Integer = 10
Public Const LEN_TCEXPSAMT1 As Integer = 10
Public Const LEN_TCEXPSAMT2 As Integer = 10
Public Const LEN_TCEXPSAMT3 As Integer = 10
Public Const LEN_TCEXPSAMT4 As Integer = 10
Public Const LEN_TCEXPSAMT5 As Integer = 10
Public Const LEN_TCALLOAMT  As Integer = 10
Public Const LEN_TCINCLUDED As Integer = 10
Public Const LEN_TCEXCLUDED As Integer = 10
Public Const LEN_UBALTAXAMT As Integer = 10
Public Const LEN_UBALTXALLO As Integer = 10
Public Const LEN_SUBTOTAL   As Integer = 10
Public Const LEN_PENDINGCAL As Integer = 2
Public Const LEN_LOCKED     As Integer = 2
Public Const LEN_CANDELETE  As Integer = 2
Public Const LEN_ISACTIVE   As Integer = 2
Public Const LEN_RATEEXISTS As Integer = 2
Public Const LEN_HASDETAILS As Integer = 2
Public Const LEN_VDEMAIL    As Integer = 50
Public Const LEN_VDPHONEC   As Integer = 30
Public Const LEN_VDFAXC     As Integer = 30
Public Const LEN_VDEMAILC   As Integer = 50
Public Const LEN_BTEMAIL    As Integer = 50
Public Const LEN_BTPHONEC   As Integer = 30
Public Const LEN_BTFAXC     As Integer = 30
Public Const LEN_BTEMAILC   As Integer = 50
Public Const LEN_STEMAIL    As Integer = 50
Public Const LEN_STPHONEC   As Integer = 30
Public Const LEN_STFAXC     As Integer = 30
Public Const LEN_STEMAILC   As Integer = 50
Public Const LEN_DISCPCT    As Integer = 5
Public Const LEN_DISCOUNT   As Integer = 10
Public Const LEN_DISCOUNTC  As Integer = 10
Public Const LEN_NETXTENDED As Integer = 10
Public Const LEN_VALUES     As Integer = 4
Public Const LEN_PROCESSCMD As Integer = 2
Public Const LEN_RQNNUMBER  As Integer = 22
Public Const LEN_RQNHSEQ    As Integer = 10
Public Const LEN_SCAMOUNT   As Integer = 10
Public Const LEN_FCAMOUNT   As Integer = 10
Public Const LEN_JOBLINES   As Integer = 4
Public Const LEN_OOVERSEQ   As Integer = 10
Public Const LEN_FCISRESET  As Integer = 2
Public Const LEN_HASJOB     As Integer = 2
Public Const LEN_AGENTTTYPE As Integer = 2
Public Const LEN_AGENTHSEQ  As Integer = 10
Public Const LEN_AGTRANSNUM As Integer = 10
Public Const LEN_AGDOCNUM   As Integer = 22
Public Const LEN_AGSRCDOC   As Integer = 22
Public Const LEN_AGMULTIDOC As Integer = 2
Public Const LEN_AGDATE     As Integer = 5
Public Const LEN_AGFISCYEAR As Integer = 4
Public Const LEN_AGFISCPER  As Integer = 2
Public Const LEN_AGDESC     As Integer = 60
Public Const LEN_AGREF      As Integer = 60
Public Const LEN_TRCURRENCY As Integer = 3
Public Const LEN_RATERC     As Integer = 8
Public Const LEN_SPREADRC   As Integer = 8
Public Const LEN_RATETYPERC As Integer = 2
Public Const LEN_RATEMTCHRC As Integer = 2
Public Const LEN_RATEDATERC As Integer = 5
Public Const LEN_RATEOPERRC As Integer = 2
Public Const LEN_RATERCOVER As Integer = 2
Public Const LEN_RCURNDECML As Integer = 2
Public Const LEN_TARAMOUNT1 As Integer = 10
Public Const LEN_TARAMOUNT2 As Integer = 10
Public Const LEN_TARAMOUNT3 As Integer = 10
Public Const LEN_TARAMOUNT4 As Integer = 10
Public Const LEN_TARAMOUNT5 As Integer = 10
Public Const LEN_TRINCLUDE1 As Integer = 10
Public Const LEN_TRINCLUDE2 As Integer = 10
Public Const LEN_TRINCLUDE3 As Integer = 10
Public Const LEN_TRINCLUDE4 As Integer = 10
Public Const LEN_TRINCLUDE5 As Integer = 10
Public Const LEN_TREXCLUDE1 As Integer = 10
Public Const LEN_TREXCLUDE2 As Integer = 10
Public Const LEN_TREXCLUDE3 As Integer = 10
Public Const LEN_TREXCLUDE4 As Integer = 10
Public Const LEN_TREXCLUDE5 As Integer = 10
Public Const LEN_TRRECVAMT1 As Integer = 10
Public Const LEN_TRRECVAMT2 As Integer = 10
Public Const LEN_TRRECVAMT3 As Integer = 10
Public Const LEN_TRRECVAMT4 As Integer = 10
Public Const LEN_TRRECVAMT5 As Integer = 10
Public Const LEN_TREXPSAMT1 As Integer = 10
Public Const LEN_TREXPSAMT2 As Integer = 10
Public Const LEN_TREXPSAMT3 As Integer = 10
Public Const LEN_TREXPSAMT4 As Integer = 10
Public Const LEN_TREXPSAMT5 As Integer = 10
Public Const LEN_TRALLOAMT1 As Integer = 10
Public Const LEN_TRALLOAMT2 As Integer = 10
Public Const LEN_TRALLOAMT3 As Integer = 10
Public Const LEN_TRALLOAMT4 As Integer = 10
Public Const LEN_TRALLOAMT5 As Integer = 10
Public Const LEN_RATERCEXST As Integer = 2
Public Const LEN_RATERCC    As Integer = 8
Public Const LEN_TRCURRDESC As Integer = 60
Public Const LEN_RATETYPRCD As Integer = 60
Public Const LEN_TARAMOUNT  As Integer = 10
Public Const LEN_TRINCLUDED As Integer = 10
Public Const LEN_TREXCLUDED As Integer = 10
Public Const LEN_TRRECVAMT  As Integer = 10
Public Const LEN_TREXPSAMT  As Integer = 10
Public Const LEN_TRALLOAMT  As Integer = 10
Public Const LEN_TACBASE1   As Integer = 10
Public Const LEN_TACBASE2   As Integer = 10
Public Const LEN_TACBASE3   As Integer = 10
Public Const LEN_TACBASE4   As Integer = 10
Public Const LEN_TACBASE5   As Integer = 10
Public Const LEN_TACAMOUNT1 As Integer = 10
Public Const LEN_TACAMOUNT2 As Integer = 10
Public Const LEN_TACAMOUNT3 As Integer = 10
Public Const LEN_TACAMOUNT4 As Integer = 10
Public Const LEN_TACAMOUNT5 As Integer = 10
Public Const LEN_TCEXCLUDE1 As Integer = 10
Public Const LEN_TCEXCLUDE2 As Integer = 10
Public Const LEN_TCEXCLUDE3 As Integer = 10
Public Const LEN_TCEXCLUDE4 As Integer = 10
Public Const LEN_TCEXCLUDE5 As Integer = 10
Public Const LEN_TALAMOUNT1 As Integer = 10
Public Const LEN_TALAMOUNT2 As Integer = 10
Public Const LEN_TALAMOUNT3 As Integer = 10
Public Const LEN_TALAMOUNT4 As Integer = 10
Public Const LEN_TALAMOUNT5 As Integer = 10
Public Const LEN_TLINCLUDE1 As Integer = 10
Public Const LEN_TLINCLUDE2 As Integer = 10
Public Const LEN_TLINCLUDE3 As Integer = 10
Public Const LEN_TLINCLUDE4 As Integer = 10
Public Const LEN_TLINCLUDE5 As Integer = 10
Public Const LEN_TLEXCLUDE1 As Integer = 10
Public Const LEN_TLEXCLUDE2 As Integer = 10
Public Const LEN_TLEXCLUDE3 As Integer = 10
Public Const LEN_TLEXCLUDE4 As Integer = 10
Public Const LEN_TLEXCLUDE5 As Integer = 10
Public Const LEN_TLALLOAMT1 As Integer = 10
Public Const LEN_TLALLOAMT2 As Integer = 10
Public Const LEN_TLALLOAMT3 As Integer = 10
Public Const LEN_TLALLOAMT4 As Integer = 10
Public Const LEN_TLALLOAMT5 As Integer = 10
Public Const LEN_TLRECVAMT1 As Integer = 10
Public Const LEN_TLRECVAMT2 As Integer = 10
Public Const LEN_TLRECVAMT3 As Integer = 10
Public Const LEN_TLRECVAMT4 As Integer = 10
Public Const LEN_TLRECVAMT5 As Integer = 10
Public Const LEN_TLEXPSAMT1 As Integer = 10
Public Const LEN_TLEXPSAMT2 As Integer = 10
Public Const LEN_TLEXPSAMT3 As Integer = 10
Public Const LEN_TLEXPSAMT4 As Integer = 10
Public Const LEN_TLEXPSAMT5 As Integer = 10
Public Const LEN_VDACCTSET  As Integer = 6
Public Const LEN_VDACCTDESC As Integer = 60
Public Const LEN_ENTEREDBY  As Integer = 8
Public Const LEN_PTSOURCE   As Integer = 2
Public Const LEN_REQRID     As Integer = 8
Public Const LEN_COSTCTR    As Integer = 12
Public Const LEN_WORKFLOW   As Integer = 8
Public Const LEN_CNTCAPITEM As Integer = 4
Public Const LEN_NXTSTEPNUM As Integer = 2
Public Const LEN_NXTACTIONR As Integer = 8
Public Const LEN_STATUS     As Integer = 2


'*************************************************************
'Add any additional subroutines and constants here.


'*************************************************************


INQUEST-PP=macro
