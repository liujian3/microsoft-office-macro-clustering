Attribute VB_Name = "Hide_Show_Sheets"
Attribute VB_Base = "0{1312BB3A-5B06-4804-B278-4771E5BAB926}{201604D5-5DAE-4CAE-A8D6-521C48E591D1}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
    FillForm_Hide_Show_Sheets
End Sub

Private Sub Butt_End_Click()
    Unload Hide_Show_Sheets
End Sub

Private Sub Butt_Hide_Click()
With Hide_Show_Sheets.List_Visible
For i = 0 To .ListCount - 1
    If .Selected(i) Then
        ActiveWorkbook.Worksheets(.List(i)).Visible = False
    End If
Next i
End With
FillForm_Hide_Show_Sheets
End Sub

Private Sub Butt_Show_Click()
With Hide_Show_Sheets.List_Hide
For i = 0 To .ListCount - 1
    If .Selected(i) Then
        ActiveWorkbook.Worksheets(.List(i)).Visible = True
    End If
Next i
End With
FillForm_Hide_Show_Sheets
End Sub

Private Sub FillForm_Hide_Show_Sheets()
With ActiveWorkbook
    List_Visible.Clear
    List_Hide.Clear
    For i = 1 To .Worksheets.Count
        If .Worksheets(i).Visible Then
            List_Visible.AddItem .Worksheets(i).Name
        Else
            List_Hide.AddItem .Worksheets(i).Name
        End If
    Next i
End With
End Sub

Attribute VB_Name = "List1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List100"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List101"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List102"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List17"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List46"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List86"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List87"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List88"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List89"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List90"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List91"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List92"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List93"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List94"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List95"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List96"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List97"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List98"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List99"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "PrintersCode"
Option Explicit
Public OrigPrinter, NewPrinter
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' modListPrinters
' By Chip Pearson, chip@cpearson.com  www.cpearson.com
' Created 22-Sept-2012
' This provides a function named GetPrinterFullNames that
' returns a String array, each element of which is the name
' of a printer installed on the machine.
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Private Const HKEY_CURRENT_USER As Long = &H80000001
Private Const HKCU = HKEY_CURRENT_USER
Private Const KEY_QUERY_VALUE = &H1&
Private Const ERROR_NO_MORE_ITEMS = 259&
Private Const ERROR_MORE_DATA = 234

Private Declare Function RegOpenKeyEx Lib "advapi32" _
    Alias "RegOpenKeyExA" ( _
    ByVal HKey As Long, _
    ByVal lpSubKey As String, _
    ByVal ulOptions As Long, _
    ByVal samDesired As Long, _
    phkResult As Long) As Long

Private Declare Function RegEnumValue Lib "advapi32.dll" _
    Alias "RegEnumValueA" ( _
    ByVal HKey As Long, _
    ByVal dwIndex As Long, _
    ByVal lpValueName As String, _
    lpcbValueName As Long, _
    ByVal lpReserved As Long, _
    lpType As Long, _
    lpData As Byte, _
    lpcbData As Long) As Long

Private Declare Function RegCloseKey Lib "advapi32.dll" ( _
    ByVal HKey As Long) As Long

Public Function GetPrinterFullNames() As String()
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' GetPrinterFullNames
' By Chip Pearson, chip@cpearson.com, www.cpearson.com
' Returns an array of printer names, where each printer name
' is the device name followed by the port name. The value can
' be used to assign a printer to the ActivePrinter property of
' the Application object. Note that setting the ActivePrinter
' changes the default printer for Excel but does not change
' the Windows default printer.
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Dim Printers() As String ' array of names to be returned
Dim PNdx As Long    ' index into Printers()
Dim HKey As Long    ' registry key handle
Dim Res As Long     ' result of API calls
Dim Ndx As Long     ' index for RegEnumValue
Dim ValueName As String ' name of each value in the printer key
Dim ValueNameLen As Long    ' length of ValueName
Dim DataType As Long        ' registry value data type
Dim ValueValue() As Byte    ' byte array of registry value value
Dim ValueValueS As String   ' ValueValue converted to String
Dim CommaPos As Long        ' position of comma character in ValueValue
Dim ColonPos As Long        ' position of colon character in ValueValue
Dim M As Long               ' string index

' registry key in HCKU listing printers
Const PRINTER_KEY = "Software\Microsoft\Windows NT\CurrentVersion\Devices"

PNdx = 0
Ndx = 0
' assume printer name is less than 256 characters
ValueName = String$(256, Chr(0))
ValueNameLen = 255
' assume the port name is less than 1000 characters
ReDim ValueValue(0 To 999)
' assume there are less than 1000 printers installed
ReDim Printers(1 To 1000)

' open the key whose values enumerate installed printers
Res = RegOpenKeyEx(HKCU, PRINTER_KEY, 0&, _
    KEY_QUERY_VALUE, HKey)
' start enumeration loop of printers
Res = RegEnumValue(HKey, Ndx, ValueName, _
    ValueNameLen, 0&, DataType, ValueValue(0), 1000)
' loop until all values have been enumerated
Do Until Res = ERROR_NO_MORE_ITEMS
    M = InStr(1, ValueName, Chr(0))
    If M > 1 Then
        ' clean up the ValueName
        ValueName = Left(ValueName, M - 1)
    End If
    ' find position of a comma and colon in the port name
    CommaPos = InStr(1, ValueValue, ",")
    ColonPos = InStr(1, ValueValue, ":")
    ' ValueValue byte array to ValueValueS string
    On Error Resume Next
    ValueValueS = Mid(ValueValue, CommaPos + 1, ColonPos - CommaPos)
    On Error GoTo 0
    ' next slot in Printers
    PNdx = PNdx + 1
    Printers(PNdx) = ValueName & " on " & ValueValueS
    ' reset some variables
    ValueName = String(255, Chr(0))
    ValueNameLen = 255
    ReDim ValueValue(0 To 999)
    ValueValueS = vbNullString
    ' tell RegEnumValue to get the next registry value
    Ndx = Ndx + 1
    ' get the next printer
    Res = RegEnumValue(HKey, Ndx, ValueName, ValueNameLen, _
        0&, DataType, ValueValue(0), 1000)
    ' test for error
    If (Res <> 0) And (Res <> ERROR_MORE_DATA) Then
        Exit Do
    End If
Loop
' shrink Printers down to used size
ReDim Preserve Printers(1 To PNdx)
Res = RegCloseKey(HKey)
' Return the result array
GetPrinterFullNames = Printers
End Function


Public Function GetNewPrinter() As String
    SelPrinter.Show
    GetNewPrinter = NewPrinter
End Function

Public Function GetOldPrinter() As String
    SelPrinter.Show
    GetNewPrinter = OrigPrinter
End Function

Public Function SelectNewPrinter() As String
'zm|fffd|n|fffd| defaultn|fffd| tisk|fffd|rnu a vr|fffd|t|fffd| aktu|fffd|ln|fffd| defaultn|fffd| tisk|fffd|rnu
    SelectNewPrinter = Application.ActivePrinter
    Application.ActivePrinter = Replace(GetNewPrinter, " on Ne", " na Ne")
End Function

Attribute VB_Name = "SelPrinter"
Attribute VB_Base = "0{A3FC0F76-07E4-4D58-A08C-A762276A9CB8}{990A1B74-E692-4297-BB5E-9D75C88D70DB}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Dim IsNew
Private Sub Butt_Cancel_Click()
    NewPrinter = OrigPrinter
    'ThisWorkbook.Sheets("Top").Range("SelPrinter") = OrigPrinter
    Unload SelPrinter
End Sub

Private Sub Butt_OK_Click()
    'ThisWorkbook.Sheets("Top").Range("SelPrinter") = NewPrinter
    Unload SelPrinter
End Sub

Private Sub CBoxPrinter_Change()
    NewPrinter = CBoxPrinter.Value
End Sub

Private Sub UserForm_Initialize()
    FillForm_SelPrinter
End Sub


Private Sub FillForm_SelPrinter()
Dim Printers() As String
Dim N As Long
Dim S As String

'OrigPrinter = ThisWorkbook.Sheets("Top").Range("SelPrinter")
OrigPrinter = Application.ActivePrinter
CBoxPrinter.Clear
Printers = GetPrinterFullNames()
For N = LBound(Printers) To UBound(Printers)
    CBoxPrinter.AddItem Printers(N)
    If Replace(OrigPrinter, " na Ne", " on Ne") = Printers(N) Then CBoxPrinter.ListIndex = N - 1
Next N

End Sub
Attribute VB_Name = "SongsCode"

Sub test()
pom = ActiveWorkbook.Name
pom = ActiveWorkbook.FileFormat
pom = ActiveWorkbook.Path
End Sub

Sub NovyMesic()
'
'
Dim HitMesic, HitRok, RowStart, RowHit, RowHitAll, RowHitMax, ColHit, i, NovCount, RowDat, RowDatEnd As Integer
Dim sHitMesic, sHit As String
Dim NovHit() As Integer
Dim CalcStatus


ColHit = 34 'sloupec AH

ReDim Preserve NovHit(0)
NovHit(0) = 1
'NovHit(1) = 10
'NovHit(2) = 19
'NovHit(3) = 28
'NovHit(4) = 37
NovCount = 0

'nastaven|fffd| p|fffd|epo|fffd||fffd|t|fffd|v|fffd|n|fffd| na manual a ulo|fffd|en|fffd| stavu jako bylo p|fffd|i spu|fffd|t|fffd|n|fffd| programu
CalcStatus = Application.Calculation
Application.Calculation = xlManual

If MsgBox("Je vypln|fffd|n|fffd| hodnocen|fffd|?", vbQuestion + vbYesNo, "???") = vbNo Then Exit Sub

With ActiveWorkbook.Worksheets(Sheets.Count)
'na|fffd||fffd|st po|fffd|et |fffd||fffd|dk|fffd|, novinky atd. z posledn|fffd| hitpar|fffd|dy
    RowHitMax = .UsedRange.Rows.Count   '.Range("B1").CurrentRegion.Rows.Count
    RowHit = RowHitMax
    'kdy|fffd| je prvn|fffd| |fffd||fffd|dka pr|fffd|mie, tak ji vynechat z hodnocen|fffd|
    If UCase(Left(.Range("B2").Value, 1)) = "P" Then RowStart = 3 Else RowStart = 2
    For i = RowStart To RowHitMax
        If UCase(.Range("B" & i).Value) = "V" Then
            If RowHit = RowHitMax Then RowHit = i - 1
            RowHitAll = i
        ElseIf UCase(Left(.Range("B" & i).Value, 1)) = "N" Or UCase(Left(.Range("B" & i).Value, 1)) = "P" Then
            NovCount = NovCount + 1
            ReDim Preserve NovHit(NovCount)
            NovHit(NovCount) = i
        End If
    Next
'zad|fffd|n|fffd| vzorc|fffd| AVG
    .Range("D" & RowStart & ":D" & RowHit).FormulaR1C1 = "=IF(ISERROR(AVERAGE(RC[1]:RC" & ColHit & ")),5,AVERAGE(RC[1]:RC" & ColHit & "))"
    .Range("D" & RowHitAll + 1).FormulaR1C1 = "=SUM(R2C:R" & RowHit & "C)"
    .Range("D" & RowStart & ":D" & RowHitAll + 1).Calculate
    If .Range("D" & RowHitAll + 1) < RowHitAll Then
        p = MsgBox("N|fffd|kde je chyba", vbExclamation + vbOKOnly, "Chyba?")
        .Columns("C:E").EntireColumn.Hidden = False
        Exit Sub
    End If
'rok a m|fffd|s|fffd|c ze jm|fffd|na listu
    HitMesic = Mid(.Name, 11, 2)
    HitRok = Right(.Name, 4)
'kopie do listu Data
    .Range("B" & RowStart & ":D" & RowHitAll).Copy
End With

With Worksheets("Data")
    RowDat = .Range("B1").CurrentRegion.Rows.Count + 1
    RowDatEnd = RowDat + RowHitAll - 3
    .Range("A" & RowDat).PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
    .Range("D" & RowDat & ":D" & RowDatEnd).Value = HitRok & "-" & Format(HitMesic, "00")
    .Range("E" & RowDat & ":E" & RowDatEnd).FormulaR1C1 = _
        "=IF(SUMIF(C[-3],RC[-3],C[-4])/COUNTIF(C[-3],RC[-3])<1,1000,SUMIF(C[-3],RC[-3],C[-4])/COUNTIF(C[-3],RC[-3]))/COUNTIF(C[-3],RC[-3])"
    .Range("F" & RowDat & ":F" & RowDatEnd).FormulaR1C1 = "=COUNTIF(C[-4],RC[-4])"
    .Range("G" & RowDat & ":G" & RowDatEnd).FormulaR1C1 = "=SUMIF(C[-5],RC[-5],C[-4])/COUNTIF(C[-5],RC[-5])"
    .Range("H" & RowDat & ":H" & RowDatEnd).FormulaR1C1 = "=RC[-3]/RC[-2]"
    .Range("I" & RowDat & ":I" & RowDatEnd).FormulaR1C1 = _
        "=IF(OR(VALUE(SUBSTITUTE(RC[-5],""-"",""""))<VALUE(SUBSTITUTE(Datum_Od,""-"","""")),VALUE(SUBSTITUTE(RC[-5],""-"",""""))>VALUE(SUBSTITUTE(Datum_Do,""-"",""""))),""Ne"",""Ano"")"
    .Range("A" & RowDat & ":I" & RowDat + RowHitAll - 3).Calculate
    For j = RowHitAll + 1 To 0 Step -1
        If UCase(.Range("A" & RowDat + j).Value) = "N" _
            Or UCase(.Range("A" & RowDat + j).Value) = "V" _
            Or UCase(.Range("A" & RowDat + j).Value) = "P" _
        Then .Rows(RowDat + j).Delete Shift:=xlUp
    Next j
    'pom = .Range("Datum_Vyber").Rows.Count
    ActiveWorkbook.Names("Datum_Vyber").RefersToR1C1 = "=Data!R2C13:R" & .Range("Datum_Vyber").Rows.Count + 2 & "C13"
    .Range("Datum_Vyber").Resize(1, 1).Offset(.Range("Datum_Vyber").Rows.Count - 1).Value = .Range("D" & RowDat).Value
    Worksheets("Top").Range("Datum_Do").Value = .Range("D" & RowDat).Value
End With
Worksheets("Top").PivotTables("KT_Top").PivotCache.Refresh

'vytvo|fffd|en|fffd| nov|fffd|ho listu
With ActiveWorkbook
    .Worksheets(.Worksheets.Count).Copy After:=.Worksheets(.Worksheets.Count)
    'p|fffd|ejmenov|fffd|n|fffd| p|fffd|vodn|fffd|ho listu
    .Worksheets(.Worksheets.Count - 1).Name = Format(HitMesic, "00") & "-" & HitRok
End With

With ActiveWorkbook.Worksheets(ActiveWorkbook.Worksheets.Count)
'nov|fffd| jm|fffd|no listu
    HitMesic = HitMesic + 1
    If HitMesic = 13 Then
        HitMesic = 1
        HitRok = HitRok + 1
    End If
    .Name = "Hitpar|fffd|da " & Format(HitMesic, "00") & "-" & HitRok
    ActiveWorkbook.Sheets("Top").Range("Hitparada").Value = "Hitpar|fffd|da " & Format(HitMesic, "00") & "-" & HitRok
'zkop|fffd|rov|fffd|n|fffd| p|fffd|vodn|fffd|ho po|fffd|ad|fffd| do prvn|fffd|ho sloupce
    .Range("B2:B" & RowHitAll).Copy Destination:=.Range("A2")
'Smaz|fffd|n|fffd| vy|fffd|azen|fffd|ch p|fffd|sn|fffd|
    If RowHit < RowHitMax Then
        .Rows(RowHit + 1 & ":" & RowHitMax).Delete Shift:=xlUp
    Else
        .Rows(RowHit + 1 & ":" & RowHitMax + 1).Delete Shift:=xlUp
    End If
'nahrazen|fffd| N za |fffd||fffd|sla aby se mohlo pou|fffd||fffd|t ve t|fffd||fffd|d|fffd|n|fffd|
    For i = RowStart To NovCount
        .Range("B" & NovHit(i)).FormulaR1C1 = "=R[-1]C+0.5"
    Next
    .Range("A" & RowStart & ":E" & RowHitAll).Calculate
'zru|fffd|en|fffd| vzorc|fffd| ve sloupci B
    .Range("B" & RowStart & ":B" & RowHit).Copy
    .Range("B" & RowStart & ":B" & RowHit).PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
't|fffd||fffd|d|fffd|n|fffd|
    '.Range("A1:Z" & RowHit - 4).Select
    If Val(Application.Version) < 12 Then
        .Range("A1").Resize(RowHit, ColHit).Offset(RowStart - 1).Sort _
            Key1:=.Range("D" & RowStart & ":D" & RowHit), Order1:=xlAscending, _
            Key2:=.Range("B" & RowStart & ":B" & RowHit), Order2:=xlAscending, _
            SortOn:=xlSortOnValues, DataOption:=xlSortNormal, _
            Header:=xlNo, _
            MatchCase:=False, _
            Orientation:=xlTopToBottom, _
            SortMethod:=xlPinYin
    Else
        .Sort.SortFields.Clear
        .Sort.SortFields.Add Key:=Range("D" & RowStart & ":D" & RowHit), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
        .Sort.SortFields.Add Key:=Range("B" & RowStart & ":B" & RowHit), SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
        .Sort.SetRange .Range("A1").Resize(RowHit, ColHit).Offset(RowStart - 1)
        With .Sort
            .Header = xlNo 'xlYes
            .MatchCase = False
            .Orientation = xlTopToBottom
            .SortMethod = xlPinYin
            .Apply
        End With
    End If

'O|fffd||fffd|slov|fffd|n|fffd| nov|fffd|ho po|fffd|ad|fffd| ve sloupci B
    .Range("B" & RowStart).FormulaR1C1 = "1"
    .Range("B" & RowStart + 1).FormulaR1C1 = "=R[-1]C+1"
    .Range("B" & RowStart + 1).Copy Destination:=.Range("B4:B" & RowHit)
    .Range("B" & RowStart & ":B" & RowHitAll).Calculate
    .Range("B" & RowStart & ":B" & RowHit).Copy
    .Range("B" & RowStart & ":B" & RowHit).PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
'popis prvn|fffd| |fffd||fffd|dky + nastaven|fffd| form|fffd|t|fffd|
    .Range("A1").FormulaR1C1 = "Minul|fffd| po|fffd|ad|fffd|"
    .Range("B1").FormulaR1C1 = "Nov|fffd| po|fffd|ad|fffd|"
    .Range("C1").FormulaR1C1 = "N|fffd|zev"
    .Range("D1").FormulaR1C1 = "Pr|fffd|m|fffd|r"
    .Range("E1").FormulaR1C1 = "Zn|fffd|mka"
    .Range("E1").Copy Destination:=.Range("F1").Resize(, ColHit - 6)
    With .Range("A1").Resize(, ColHit)
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
        .WrapText = True
        With .Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            '.ColorIndex = 0
            .Weight = xlThin
        End With
        With .Borders(xlEdgeTop)
            .LineStyle = xlContinuous
            '.ColorIndex = 0
            .Weight = xlThin
        End With
        With .Borders(xlEdgeBottom)
            .LineStyle = xlDouble
            '.ColorIndex = 0
            .Weight = xlThick
        End With
        With .Borders(xlEdgeRight)
            .LineStyle = xlContinuous
            '.ColorIndex = 0
            .Weight = xlThin
        End With
        With .Borders(xlInsideVertical)
            .LineStyle = xlContinuous
            '.ColorIndex = 0
            .Weight = xlThin
        End With
        '.Borders(xlInsideHorizontal).LineStyle = xlNone
        With .Interior
            .Pattern = xlSolid
            .Color = 14540253
        End With
    End With
'skryt|fffd| sloupce sou|fffd|t|fffd| a smaz|fffd|n|fffd| p|fffd|edchoz|fffd|ch zn|fffd|mek
    .Columns("D:D").EntireColumn.Hidden = True
    .Range("E2").Resize(RowHit - 1, ColHit - 4).Select
    .Range("E2").Resize(RowHit - 1, ColHit - 4).ClearContents
'form|fffd|t tabulky cel|fffd|
    .Range("A2").Resize(RowHit - 1, ColHit).Select
    On Error Resume Next
    With .Range("A2").Resize(RowHit - 1, ColHit)
    .Select
        With .Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            '.ColorIndex = 0
            .Weight = xlThin
        End With
        With .Borders(xlEdgeTop)
            .LineStyle = xlContinuous
            '.ColorIndex = 0
            .Weight = xlThin
        End With
        With .Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            '.ColorIndex = 0
            '.Weight = xlThin
        End With
        With .Borders(xlEdgeRight)
            .LineStyle = xlContinuous
            '.ColorIndex = 0
            '.Weight = xlThin
        End With
        With .Borders(xlInsideVertical)
            .LineStyle = xlContinuous
            '.ColorIndex = 0
            '.Weight = xlThin
        End With
        With .Borders(xlInsideHorizontal)
            .LineStyle = xlContinuous
            '.ColorIndex = 0
            '.Weight = xlThin
        End With
        .Interior.Pattern = xlNone
    End With
'p|fffd|id|fffd|n|fffd| |fffd||fffd|dek s novinkami + form|fffd|t
    For i = 1 To NovCount
        .Rows(NovHit(i) & ":" & NovHit(i)).Insert Shift:=xlDown ', CopyOrigin:=xlFormatFromLeftOrAbove
        .Range("B" & NovHit(i)).Value = "N"
        'form|fffd|t novinek
        With .Range("A1").Resize(, ColHit).Offset(NovHit(i) - 1, 0).Interior
            .Pattern = xlSolid
            .Color = 15395562
        End With
    Next
'Ozna|fffd|en|fffd| vy|fffd|azen|fffd|ch p|fffd|sn|fffd| + form|fffd|t
    .Range("B" & RowHit + 1 & ":" & "B" & RowHit + NovCount).Value = "V"
    .Range("A1").Resize(RowHitAll - RowHit, ColHit).Offset(RowHit, 0).Select
    With .Range("A1").Resize(NovCount, ColHit).Offset(RowHit, 0).Interior
        .Pattern = xlSolid
        .Color = 14540253
    End With
'nastaven|fffd| oblasti tisku
    .PageSetup.PrintArea = "$A$1:$J$" & RowHitAll
    .Range("A1").Select
    
End With

'smaz|fffd|n|fffd| tla|fffd||fffd|tek
With ActiveWorkbook.Worksheets(ActiveWorkbook.Worksheets.Count - 1)
    For i = .Shapes.Count To 1 Step -1
        .Shapes(i).Delete
    Next i
End With
'nastaven|fffd| p|fffd|epo|fffd||fffd|t|fffd|v|fffd|n|fffd| jako bylo p|fffd|i spu|fffd|t|fffd|n|fffd| programu
Application.Calculation = CalcStatus
'ulo|fffd|en|fffd|
On Error Resume Next
ActiveWorkbook.SaveAs Filename:=ActiveWorkbook.Path & "\Hitpar|fffd|da_" & HitRok & "_" & Format(HitMesic, "00") & ".xlsm", FileFormat:=xlOpenXMLWorkbookMacroEnabled

End Sub

Sub SetTag()
Dim i, rMax, S
Dim shTag
Dim PDFPath, sCol, sExt, sSongsList, srSL
Dim obj_fso As Object


On Error Resume Next
' zak|fffd|e dotazy excelu na u|fffd|ivatele
Application.DisplayAlerts = False
Application.EnableEvents = False
Application.ScreenUpdating = False
Application.Interactive = False
On Error GoTo 0

PDFPath = ActiveWorkbook.Path & ActiveWorkbook.Sheets("Top").Range("PDFPath")
PDFPath = InputBox("Zadej adres|fffd||fffd| s texty v PDF", "Adres|fffd||fffd| PDF", PDFPath)
If PDFPath = "" Then Exit Sub
ActiveWorkbook.Sheets("Top").Range("PDFPath").Value = Mid(PDFPath, InStrRev(PDFPath, "\"))
ActiveWorkbook.Sheets("Data").Range("SongsList").ClearContents

Set obj_fso = CreateObject("Scripting.FileSystemObject")

Set shTag = ActiveSheet
sCol = "C"
If UCase(Left(shTag.Name, 3)) = "TOP" Then sCol = "A"
S = 0
With shTag
    rMax = .UsedRange.Rows.Count
    For i = 2 To rMax
        If obj_fso.fileExists(PDFPath & "\" & .Range(sCol & i).Value & ".pdf") Then
            sExt = ".PDF"
            '.Range(sCol & i).Copy
            'Sheets("Top").Range("PDFPath").PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            .Hyperlinks.Add _
                Anchor:=.Range(sCol & i), _
                Address:=PDFPath & "\" & .Range(sCol & i).Value & sExt, _
                TextToDisplay:=.Range(sCol & i).Value
            'Sheets("Top").Range("PDFPath").Copy
            '.Range(sCol & i).PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            Sheets("Data").Range("SongsList").Resize(1, 1).Offset(S).Value = PDFPath & "\" & .Range(sCol & i).Value & sExt
            S = S + 1
        ElseIf obj_fso.fileExists(PDFPath & "\" & .Range(sCol & i).Value & ".doc") Then
            sExt = ".DOC"
            '.Range(sCol & i).Copy
            'Sheets("Top").Range("PDFPath").PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            .Hyperlinks.Add _
                Anchor:=.Range(sCol & i), _
                Address:=PDFPath & "\" & .Range(sCol & i).Value & sExt, _
                TextToDisplay:=.Range(sCol & i).Value
            'Sheets("Top").Range("PDFPath").Copy
            '.Range(sCol & i).PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            Sheets("Data").Range("SongsList").Resize(1, 1).Offset(S).Value = PDFPath & "\" & .Range(sCol & i).Value & sExt
            S = S + 1
        ElseIf obj_fso.fileExists(PDFPath & "\" & .Range(sCol & i).Value & ".docx") Then
            sExt = ".DOCX"
            '.Range(sCol & i).Copy
            'Sheets("Top").Range("PDFPath").PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            .Hyperlinks.Add _
                Anchor:=.Range(sCol & i), _
                Address:=PDFPath & "\" & .Range(sCol & i).Value & sExt, _
                TextToDisplay:=.Range(sCol & i).Value
            'Sheets("Top").Range("PDFPath").Copy
            '.Range(sCol & i).PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
            Sheets("Data").Range("SongsList").Resize(1, 1).Offset(S).Value = PDFPath & "\" & .Range(sCol & i).Value & sExt
            S = S + 1
        End If
    Next i
    .Range(sCol & "2:" & sCol & rMax).Offset(, 1).Copy
    .Range(sCol & "2:" & sCol & rMax).PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
    srSL = Sheets("Data").Range("SongsList").Resize(S, 1).Address(ReferenceStyle:=xlR1C1)
    ActiveWorkbook.Names("SongsList").Delete
    ActiveWorkbook.Names.Add Name:="SongsList", RefersToR1C1:="=Data!" & srSL
End With
Sheets("Top").Range("PDFPath").Offset(, -1).Copy
Sheets("Top").Range("PDFPath").PasteSpecial Paste:=xlPasteFormats, Operation:=xlNone, SkipBlanks:=False, Transpose:=False

' povol|fffd| dotazy excelu na u|fffd|ivatele
On Error Resume Next
Application.DisplayAlerts = True
Application.EnableEvents = True
Application.ScreenUpdating = True
Application.Interactive = True
On Error GoTo 0

Set shTag = Nothing
Set obj_fso = Nothing

End Sub

Sub KT_Aktualizace()
'
With Worksheets("Top")
    .PivotTables("KT_Top").PivotFields("N|fffd|zev").AutoSort xlAscending, "Pr|fffd|m|fffd|r z Po|fffd|ad|fffd|", _
        .PivotTables("KT_Top").PivotColumnAxis.PivotLines(1), 1
    .PivotTables("KT_Top").PivotCache.Refresh
End With
End Sub

Sub Hide_Show_Sheets_OpenForm()
    Hide_Show_Sheets.Show vbModeless
End Sub

Sub SelPrinter_OpenForm()
    SelPrinter.Show vbModeless
End Sub


Sub DoplnitData()
'


Dim RowHit, RowDat As Long
Dim YearHit, MonthHit As String

For i = 4 To Worksheets.Count - 1
With Worksheets(i)
    RowHit = .Range("B1").CurrentRegion.Rows.Count
    .Range("B2:D" & RowHit).Copy
    RowHitAll = .Range("B1").CurrentRegion.Rows.Count
    RowHit = RowHitAll
    For j = 2 To RowHitAll
        If UCase(.Range("B" & j).Value) = "V" Then
            RowHit = j - 1
            Exit For
        End If
    Next
'rok a m|fffd|s|fffd|c ze jm|fffd|na listu
    HitMesic = Mid(.Name, 11, 2)
    HitRok = Right(.Name, 4)
'kopie do listu Data
    .Range("B2:D" & RowHitAll).Copy
End With
With Worksheets("Data")
    RowDat = .Range("B1").CurrentRegion.Rows.Count + 1
    .Range("A" & RowDat).PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
    .Range("D" & RowDat).Value = HitRok & "-" & Format(HitMesic, "00")
    .Range("E" & RowDat).FormulaR1C1 = _
        "=IF(SUMIF(C[-3],RC[-3],C[-4])/COUNTIF(C[-3],RC[-3])<1,1000,SUMIF(C[-3],RC[-3],C[-4])/COUNTIF(C[-3],RC[-3]))/COUNTIF(C[-3],RC[-3])"
    .Range("F" & RowDat).FormulaR1C1 = _
        "=IF(OR(VALUE(SUBSTITUTE(RC[-2],""-"",""""))<VALUE(SUBSTITUTE(Datum_Od,""-"","""")),VALUE(SUBSTITUTE(RC[-2],""-"",""""))>VALUE(SUBSTITUTE(Datum_Do,""-"",""""))),""Ne"",""Ano"")"
    .Range("D" & RowDat & ":F" & RowDat).Copy Destination:=.Range("D" & RowDat & ":D" & RowDat + RowHitAll - 2)
    For j = RowHitAll To 0 Step -1
        If UCase(.Range("A" & RowDat + j).Value) = "N" _
            Or UCase(.Range("A" & RowDat + j).Value) = "V" _
            Or UCase(.Range("A" & RowDat + j).Value) = "P" _
            Then .Rows(RowDat + j).Delete Shift:=xlUp
    Next j
End With
Next i
End Sub


Sub PrintSongsToPDF()
Dim i
Dim Song
Dim PDFPath, sCol, sExt, rS, selPRN
Dim obj_fso As Object
Dim objShell, objFolder, colFiles, objFile, objfso, strFolder

sCol = "C"
sExt = ".PDF"
Set objfso = CreateObject("Scripting.FileSystemObject")
With ThisWorkbook
    On Error Resume Next
    ' zak|fffd|e dotazy excelu na u|fffd|ivatele
    Application.DisplayAlerts = False
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Interactive = False
    On Error GoTo 0
       
    ' zm|fffd|nit defaultn|fffd| tisk|fffd|rnu na zvolenou nap|fffd| PDF Creator
    OldPrinter = SelectNewPrinter
    
    ' cesta k soubor|fffd|m PDF
    PDFPath = .Path & .Sheets("Top").Range("PDFPath")
    ' po|fffd|et |fffd||fffd|dek se jm|fffd|ny pisni|fffd|ek/soubor|fffd|
    rS = .Sheets("Data").Range("SongsList").Rows.Count
    ' Tisk soubor|fffd| do zvolen|fffd| tisk|fffd|rny (nap|fffd| PDF Creator) od posledn|fffd|ho k prvn|fffd|mu
    For i = rS To 1 Step -1
        ' jm|fffd|no p|fffd|sni|fffd|ky/souboru
        Song = .Sheets("Data").Range("SongsList").Resize(1, 1).Offset(i - 1).Value
        If objfso.fileExists(Song) Then
            strFolder = objfso.GetParentFolderName(Song)
            ' Open the Shell Folders object
            Set objShell = CreateObject("Shell.Application")
            
            ' Create an object for the specified file's parent folder
            Set objFolder = objShell.Namespace(strFolder)
            
            ' Create a collection for the folder's contents
            Set colFiles = objFolder.Items
            
            ' Loop through the collection to find the file specified
            If colFiles.Count > 0 Then
                For Each objFile In colFiles
                    If LCase(objFile.Path) = LCase(Song) Then
                        ' Print the file with its associated print command
                        objFile.InvokeVerbEx ("Print")
                        'waitTime = TimeSerial(Hour(Now()), Minute(Now()), Second(Now()) + 10)
                        Application.Wait TimeSerial(Hour(Now()), Minute(Now()), Second(Now()) + 3)
                    End If
                Next
            End If
        
        End If
    Next i
    
    'zm|fffd|nit zp|fffd|t Default Printer na p|fffd|vodn|fffd|
    Application.ActivePrinter = OldPrinter
    
    On Error GoTo 0
End With

' povol|fffd| dotazy excelu na u|fffd|ivatele
On Error Resume Next
Application.DisplayAlerts = True
Application.EnableEvents = True
Application.ScreenUpdating = True
Application.Interactive = True
On Error GoTo 0
Set obj_fso = Nothing

End Sub

Sub PrintSongsToPDF_old()
Dim i
Dim Song
Dim PDFPath, sCol, sExt, rS, selPRN
Dim obj_fso As Object

sCol = "C"
sExt = ".PDF"
Set obj_fso = CreateObject("Scripting.FileSystemObject")
With ThisWorkbook
    On Error Resume Next
    ' zak|fffd|e dotazy excelu na u|fffd|ivatele
    Application.DisplayAlerts = False
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    'Application.Interactive = False
    For i = 1 To 51
        .Sheets("p" & i).Delete
    Next i
    On Error GoTo 0
    PDFPath = .Path & .Sheets("Top").Range("PDFPath")
    rS = .Sheets("Data").Range("SongsList").Rows.Count
    .Sheets("pVzor").Visible = True
    For i = rS To 1 Step -1
        Song = .Sheets("Data").Range("SongsList").Resize(1, 1).Offset(i - 1).Value
        If obj_fso.fileExists(Song) Then
            .Sheets("pVzor").Copy After:=.Sheets(.Sheets.Count)
            .Sheets(.Sheets.Count).Name = "p" & i
            .Sheets("p" & i).OLEObjects.Add(Filename:=Song, Link:=True, DisplayAsIcon:=False).Select
        End If
    Next i
    .Sheets("pVzor").Visible = False
    'ozna|fffd|it vybran|fffd| listy
    For i = rS To 1 Step -1
        .Sheets("p" & i).Select (False)
    Next i
    'vybrat tisk|fffd|rnu
    'Call SelPrinter_OpenForm
    '.Sheets("Top").Activate
    '.Sheets("Top").Range("SelPrinter").Select
    selPRN = """" & .Sheets("Top").Range("SelPrinter").Value & """"

    'Application.ActivePrinter = selPRN
    'ExecuteExcel4Macro "PRINT(1,,,1,,,,,,,,2,""PDFCreator na Ne00:"",,TRUE,,FALSE)"
    pom = "PRINT(1,,,1,,,,,,,,2," & selPRN & ",,TRUE,,FALSE)"
    ExecuteExcel4Macro "PRINT(1,,,1,,,,,,,,2," & selPRN & ",,TRUE,,FALSE)"
    On Error Resume Next
    For i = 1 To 51
        .Sheets("p" & i).Delete
    Next i
    On Error GoTo 0
End With
' povol|fffd| dotazy excelu na u|fffd|ivatele
Application.DisplayAlerts = True
Application.EnableEvents = True
Application.ScreenUpdating = True
'Application.Interactive = True
Set obj_fso = Nothing
End Sub


Sub PrintSongsToPDF_old2()
Dim i
Dim Song
Dim PDFPath, sCol, sExt, rS
Dim obj_fso As Object

sCol = "C"
sExt = ".PDF"
Set obj_fso = CreateObject("Scripting.FileSystemObject")
With ThisWorkbook
    On Error Resume Next
    ' zak|fffd|e dotazy excelu na u|fffd|ivatele
    Application.DisplayAlerts = False
    Application.EnableEvents = False
    Application.ScreenUpdating = False
    Application.Interactive = False
    For i = 1 To 51
        .Sheets("p" & i).Delete
    Next i
    On Error GoTo 0
    PDFPath = .Path & .Sheets("Top").Range("PDFPath")
    rS = .Sheets("Data").Range("SongsList").Rows.Count
    For i = rS To 1 Step -1
        Song = .Sheets("Data").Range("SongsList").Resize(1, 1).Offset(i - 1).Value
        If obj_fso.fileExists(Song) Then
            .Sheets.Add After:=.Sheets(.Sheets.Count)
            .Sheets(.Sheets.Count).Name = "p" & i
            With .Sheets("p" & i)
                '.Columns("K:K").ColumnWidth = 3.57
                .OLEObjects.Add(Filename:=Song, Link:=True, DisplayAsIcon:=False).Select
                'Selection.ShapeRange.ScaleWidth 1.17, msoFalse, msoScaleFromTopLeft
                'Selection.ShapeRange.ScaleHeight 1.17, msoFalse, msoScaleFromTopLeft
                With .PageSetup
                    .LeftHeader = ""
                    .CenterHeader = ""
                    .RightHeader = ""
                    .LeftFooter = ""
                    .CenterFooter = ""
                    .RightFooter = ""
                    .LeftMargin = Application.InchesToPoints(0)
                    .RightMargin = Application.InchesToPoints(0)
                    .TopMargin = Application.InchesToPoints(0)
                    .BottomMargin = Application.InchesToPoints(0)
                    .HeaderMargin = Application.InchesToPoints(0)
                    .FooterMargin = Application.InchesToPoints(0)
                    .PrintHeadings = False
                    .PrintGridlines = False
                    .PrintComments = xlPrintNoComments
                    .PrintQuality = 600
                    .CenterHorizontally = True
                    .CenterVertically = False
                    .Orientation = xlPortrait
                    .Draft = False
                    .PaperSize = xlPaperA5
                    .FirstPageNumber = xlAutomatic
                    .Order = xlDownThenOver
                    .BlackAndWhite = False
                    .Zoom = False
                    .FitToPagesWide = 1
                    .FitToPagesTall = 1
                    .PrintErrors = xlPrintErrorsDisplayed
                    .OddAndEvenPagesHeaderFooter = False
                    .DifferentFirstPageHeaderFooter = False
                    .ScaleWithDocHeaderFooter = True
                    .AlignMarginsHeaderFooter = True
                    .EvenPage.LeftHeader.Text = ""
                    .EvenPage.CenterHeader.Text = ""
                    .EvenPage.RightHeader.Text = ""
                    .EvenPage.LeftFooter.Text = ""
                    .EvenPage.CenterFooter.Text = ""
                    .EvenPage.RightFooter.Text = ""
                    .FirstPage.LeftHeader.Text = ""
                    .FirstPage.CenterHeader.Text = ""
                    .FirstPage.RightHeader.Text = ""
                    .FirstPage.LeftFooter.Text = ""
                    .FirstPage.CenterFooter.Text = ""
                    .FirstPage.RightFooter.Text = ""
                End With
            End With
        End If
    Next i
    'ozna|fffd|it vybran|fffd| listy
    For i = rS To 1 Step -1
        .Sheets("p" & i).Select (False)
    Next i
    ExecuteExcel4Macro "PRINT(1,,,1,,,,,,,,2,,,TRUE,,FALSE)"
End With
' povol|fffd| dotazy excelu na u|fffd|ivatele
Application.DisplayAlerts = True
Application.EnableEvents = True
Application.ScreenUpdating = True
'Application.Interactive = True
Set obj_fso = Nothing
End Sub


Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{88E922D6-7D11-4D19-998A-5595408A6B56}{59495101-5270-4B55-B6CC-623EE87BA26D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub UserForm_Initialize()
    Label1.Left = 18
    Label1.Top = 12
    Label1.Height = 12
    Label1.Width = 190
    Label1.Caption = "Select picture placement " _
        & "relative to the caption."
    
    'Add list entries to combo box. The value of each
    'entry matches the corresponding ListIndex value
    'in the combo box.
    ComboBox1.AddItem "Left Top"        'ListIndex = 0
    ComboBox1.AddItem "Left Center"     'ListIndex = 1
    ComboBox1.AddItem "Left Bottom"     'ListIndex = 2
    ComboBox1.AddItem "Right Top"       'ListIndex = 3
    ComboBox1.AddItem "Right Center"    'ListIndex = 4
    ComboBox1.AddItem "Right Bottom"    'ListIndex = 5
    ComboBox1.AddItem "Above Left"      'ListIndex = 6
    ComboBox1.AddItem "Above Center"    'ListIndex = 7
    ComboBox1.AddItem "Above Right"    'ListIndex = 8
    ComboBox1.AddItem "Below Left"      'ListIndex = 9
    ComboBox1.AddItem "Below Center"    'ListIndex = 10
    ComboBox1.AddItem "Below Right"    'ListIndex = 11
    ComboBox1.AddItem "Centered"        'ListIndex = 12
    'Use drop-down list
    ComboBox1.Style = fmStyleDropDownList
    'Combo box values are ListIndex values
    ComboBox1.BoundColumn = 0
    'Set combo box to first entry
    ComboBox1.ListIndex = 0


    ComboBox1.Left = 18
    ComboBox1.Top = 36
    ComboBox1.Width = 90
    ComboBox1.ListWidth = 90
    
    'Initialize CommandButton1
    CommandButton1.Left = 230
    CommandButton1.Top = 36
    CommandButton1.Height = 120
    CommandButton1.Width = 120
    
    'Note: Be sure to refer to a bitmap file that is
    'present on your system, and to include the path
    'in the filename.
    'CommandButton1.Picture = _
         LoadPicture("c:\windows\argyle.bmp")
    'CommandButton1.PicturePosition = ComboBox1.Value
End Sub

Private Sub ComboBox1_Click()
    Select Case ComboBox1.Value
    Case 0  'Left Top
        CommandButton1.Caption = "Left Top"
        CommandButton1.PicturePosition = _
            fmPicturePositionLeftTop
    
    Case 1  'Left Center
        CommandButton1.Caption = "Left Center"
        CommandButton1.PicturePosition = _
            fmPicturePositionLeftCenter
            
    Case 2  'Left Bottom
        CommandButton1.Caption = "Left Bottom"
        CommandButton1.PicturePosition = _
            fmPicturePositionLeftBottom
        
    Case 3  'Right Top
        CommandButton1.Caption = "Right Top"
        CommandButton1.PicturePosition = _
            fmPicturePositionRightTop
    
    Case 4  'Right Center
        CommandButton1.Caption = "Right Center"
        CommandButton1.PicturePosition = _
            fmPicturePositionRightCenter
    
    Case 5  'Right Bottom
        CommandButton1.Caption = "Right Bottom"
        CommandButton1.PicturePosition = _
            fmPicturePositionRightBottom
    
    Case 6  'Above Left
        CommandButton1.Caption = "Above Left"
        CommandButton1.PicturePosition = _
            fmPicturePositionAboveLeft
    
    Case 7  'Above Center
        CommandButton1.Caption = "Above Center"
        CommandButton1.PicturePosition = _
            fmPicturePositionAboveCenter
        
    Case 8  'Above Right
        CommandButton1.Caption = "Above Right"
        CommandButton1.PicturePosition = _
            fmPicturePositionAboveRight
    
    Case 9  'Below Left
        CommandButton1.Caption = "Below Left"
        CommandButton1.PicturePosition = _
            fmPicturePositionBelowLeft
    
    Case 10 'Below Center
        CommandButton1.Caption = "Below Center"
        CommandButton1.PicturePosition = _
            fmPicturePositionBelowCenter
    
    Case 11 'Below Right
        CommandButton1.Caption = "Below Right"
        CommandButton1.PicturePosition = _
            fmPicturePositionBelowRight
    
    Case 12 'Centered
        CommandButton1.Caption = "Centered"
        CommandButton1.PicturePosition = _
            fmPicturePositionCenter
    
    End Select
    
End Sub






INQUEST-PP=macro
