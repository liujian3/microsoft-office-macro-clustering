Attribute VB_Name = "CastA"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


Dim sKod As String
Dim sColSadz As String

'Dim sem As Integer

'OK
Public Sub btnKontrola_Click()
Dim aMsg As String
  ' ActiveSheet.Shapes(Application.Caller).Name = "btnKontrolaN"
  aMsg = ""
  
  sem = 1
  If Kontrola(aMsg) Then
    'btnGeneruj.Visible = True
    Shapes("btnGenerujN").Visible = True
    'btnTlac.Visible = True
    Shapes("btnTlacN").Visible = True
    'btnKontrola.Visible = False
    Shapes("btnKontrolaN").Visible = False
  End If
  sem = 0
  
End Sub




Public Sub btnGeneruj_Click()
  'ActiveSheet.Shapes(Application.Caller).Name = "btnGenerujN"
  UlozVystup
End Sub


Public Sub btnTlac_Click()
  'ActiveSheet.Shapes(Application.Caller).Name = "btnTlacN"
  If MsgBox("Naozaj chcete generova|fffd| verziu pre tla|fffd|?", vbYesNoCancel, "Ot|fffd|zka") = vbYes Then
    GetOutputFile
  End If
End Sub

'OK
Private Sub Worksheet_Activate()
  'sem = 0
  FilePath = "C:\"
  
'  If Range("Datum").Value = "" Then
'    Range("Datum").Value = Now
'  End If
'
'  KoniecPlatnosti = DateSerial(2012, 6, 1)
'  KontrolaPlatnosti
    
End Sub


'OK
Private Sub Worksheet_Change(ByVal Target As Range)
Dim r As Long
Dim c As Long

  If sem = 1 Then
      Exit Sub
  End If
  
  'btnGeneruj.Visible = False
  Shapes("btnGenerujN").Visible = False
  'btnTlac.Visible = False
  Shapes("btnTlacN").Visible = False
  'btnKontrola.Visible = True
  Shapes("btnKontrolaN").Visible = True
  
  
  
  For r = 1 To Target.Rows.Count
    For c = 1 To Target.Columns.Count
  
      'sukl
      If Target.Columns(c).Column = Range("SUKL").Column And Target.Rows(r).Row = Range("SUKL").Row Then
        sem = 1
        Protect Passw, False, False, False
        
        Range("SUKL").Value = Trim(UCase(Range("SUKL").Value))
       
        If Range("SUKL").Value <> "" Then
          If testKody(Range("SUKL").Value) Then
            sKod = Range("SUKL").Value
          Else
            MsgBox "|fffd||fffd|KL k|fffd|d pre zdravotn|fffd|cku pom|fffd|cku je zle zadan|fffd|!" & vbCrLf & _
                   "Spr|fffd|vny form|fffd|t k|fffd|du je ""X00000"", kde X reprezentuje p|fffd|smeno a 00000 reprezentuje 5-miestny alfanumerick|fffd| k|fffd|d (p|fffd|smen|fffd| A-Z alebo |fffd||fffd|slice 0-9)." & vbCrLf & _
                   "Viac |fffd||fffd|KL k|fffd|dov odde|fffd|te |fffd|iarkou!", vbExclamation, "Chyba"
            Range("SUKL").Value = sKod
            Range("SUKL").Select
            'Cells(Target.Rows(f).Row, Target.Columns(ff).Column).Select
          End If
        End If


        Protect Passw, True, True, True
        sem = 0
      End If
      
      
      'Colny sadzobnik (znak_kn)
      If Target.Columns(c).Column = Range("Znak_KN").Column And Target.Rows(r).Row = Range("Znak_KN").Row Then
        sem = 1
        
        Protect Passw, False, False, False

        If Trim(Range("Znak_KN").Value) <> "" Then
          If testColSadz(Range("Znak_KN").Value) Then
            sColSadz = Range("Znak_KN").Value
          Else
            MsgBox "Pozor, form|fffd|t |fffd||fffd|seln|fffd|ho k|fffd|du Spolo|fffd|n|fffd|ho coln|fffd|ho sadzobn|fffd|ka je zl|fffd|!" & vbCrLf & _
                   "Spr|fffd|vny form|fffd|t je ""0000 00 00"", kde 0 reprezentuje |fffd||fffd|slicu.", vbExclamation, "Chyba"
            Range("Znak_KN").Value = sColSadz
          End If
        End If
        
        Protect Passw, True, True, True
        sem = 0
      End If
    
      
      'podskupina
      If Target.Columns(c).Column = Range("Podskupina").Column And Target.Rows(r).Row = Range("Podskupina").Row Then
    
          If Range("Podskupina").Value <> "" Then
              sem = 1
              Protect Passw, False, False, False
              
              Range("Podskupina").Value = UCase(Range("Podskupina").Value)
              
              Protect Passw, True, True, True
              sem = 0
          End If
      End If
      
      'Drzitel
      If (Target.Rows(r).Row = Range("Vyrobca").Row And Target.Columns(c).Column = Range("Vyrobca").Column) Then
        If Cells(Target.Rows(r).Row, Target.Columns(c).Column) <> "" Then
          Protect Passw, False, False, False
          sem = 1
          Cells(Target.Rows(r).Row, Target.Columns(c).Column) = UCase(Mid$(Cells(Target.Rows(r).Row, Target.Columns(c).Column), 1, 8))
          sem = 0
          Protect Passw, True, True, True
        End If
      End If
      
      
      'krajina
      If (Target.Rows(r).Row = Range("Krajina").Row And Target.Columns(c).Column = Range("Krajina").Column) Then
        If Cells(Target.Rows(r).Row, Target.Columns(c).Column) <> "" Then
          Protect Passw, False, False, False
          sem = 1
          Cells(Target.Rows(r).Row, Target.Columns(c).Column) = UCase(Mid$(Cells(Target.Rows(r).Row, Target.Columns(c).Column), 1, 2))
          sem = 0
          Protect Passw, True, True, True
        End If
      End If
      
      
      'MCV
      If Target.Columns(c).Column = Range("MCV").Column And Target.Rows(r).Row = Range("MCV").Row Then
        sem = 1
        Protect Passw, False, False, False
        
        If Range("MCV").Value <> "" Then
          If IsNumeric(Range("MCV").Value) Then
            Range("MCV").Value = Application.WorksheetFunction.Round(Range("MCV").Value, 2)
          Else
            Range("MCV").Value = ""
          End If
        End If
    
        Protect Passw, True, True, True
        sem = 0
      End If
      
'      'UZP
'      If Target.Columns(c).Column = Range("UZP").Column And Target.Rows(r).Row = Range("UZP").Row Then
'        sem = 1
'        Protect Passw, False, False, False
'
'        If Range("UZP").Value <> "" Then
'          If IsNumeric(Range("UZP").Value) Then
'            Range("UZP").Value = Application.WorksheetFunction.Round(Range("UZP").Value, 2)
'          Else
'            Range("UZP").Value = ""
'          End If
'        End If
'
'        Protect Passw, True, True, True
'        sem = 0
'      End If
      
      
    
    Next c
  Next r

End Sub

'OK
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
  If sem = 1 Then
    Exit Sub
  End If
  
  If Target.Column = Range("SUKL").Column And Target.Row = Range("SUKL").Row Then
    sKod = Range("SUKL").Value
  End If
  
  If Target.Column = Range("Znak_KN").Column And Target.Row = Range("Znak_KN").Row Then
    sColSadz = Range("Znak_KN").Value
  End If
  
End Sub

Attribute VB_Name = "CastB"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Control = "CommandButton1, 6, 2, MSForms, CommandButton"
Option Explicit
'Dim sem As Integer

Public Sub btnFormatB_Click()
  ' ActiveSheet.Shapes(Application.Caller).Name = "btnFormatBN"
  
  sem = 1
  FormatTableB
  sem = 0
  MsgBox "Form|fffd|tovanie nastaven|fffd|.", vbOKOnly + vbInformation, "Inform|fffd|cia"
  
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
  If sem = 1 Then
    Exit Sub
  End If
  
  'CastA.btnGeneruj.Visible = False
  CastA.Shapes("btnGenerujN").Visible = False
  'CastA.btnTlac.Visible = False
  CastA.Shapes("btnTlacN").Visible = False
  'CastA.btnKontrola.Visible = True
  CastA.Shapes("btnKontrolaN").Visible = True

End Sub

Attribute VB_Name = "CastC"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

'Dim sem As Integer


Public Sub btnFormatC_Click()
   ' ActiveSheet.Shapes(Application.Caller).Name = "btnFormatCN"
 
  sem = 1
  FormatTableC
  sem = 0
  MsgBox "Form|fffd|tovanie nastaven|fffd|.", vbOKOnly + vbInformation, "Inform|fffd|cia"

End Sub

Public Sub chAbsencia_Click()
Dim aMsg As String
  ''ActiveSheet.Shapes(Application.Caller).Name = "chAbsenciaN"
  'If ThisWorkbook.ActiveSheet.chAbsencia.Value = False Then
  If Range("Absencia_Value").Value = False Then
    If Not RefCenyExist(aMsg) Then
      MsgBox aMsg, vbExclamation, "Upozornenie"
      'CastA.btnGeneruj.Visible = False
      CastA.Shapes("btnGenerujN").Visible = False
      'CastA.btnTlac.Visible = False
      CastA.Shapes("btnTlacN").Visible = False
      'CastA.btnKontrola.Visible = True
      CastA.Shapes("btnKontrolaN").Visible = True
    End If
  End If
  

End Sub

Private Sub Worksheet_Activate()
  'sem = 0

End Sub


Private Sub Worksheet_Change(ByVal Target As Range)
Dim aHodn As Double
Dim akurz As Double
Dim r As Long
Dim c As Long



  If sem = 1 Then
    Exit Sub
  End If
  
  'CastA.btnGeneruj.Visible = False
  CastA.Shapes("btnGenerujN").Visible = False
  'CastA.btnTlac.Visible = False
  CastA.Shapes("btnTlacN").Visible = False
  'CastA.btnKontrola.Visible = True
  CastA.Shapes("btnKontrolaN").Visible = True

  sem = 1
  Protect Passw, False, False, False
  Range(Cells(Target.Rows(1).Row, Target.Columns(1).Column), Cells(Target.Rows(Target.Rows.Count).Row, Target.Columns(Target.Columns.Count).Column)).Locked = False
  Protect Passw, True, True, True
  sem = 0


  For r = 1 To Target.Rows.Count
    For c = 1 To Target.Columns.Count
        
        'ak sa meni cena v EU
        If Not (Intersect(Target, Range("EU_ALL")) Is Nothing) Or _
           Not (Intersect(Target, Range("EU_EUR_ALL")) Is Nothing) Then
          sem = 1
          Protect Passw, False, False, False
          If Cells(Target.Rows(r).Row, Target.Columns(c).Column) <> "" Then
            If IsNumeric(Cells(Target.Rows(r).Row, Target.Columns(c).Column)) Then
              If Cells(Target.Rows(r).Row, Target.Columns(c).Column) > 0 Then
                Cells(Target.Rows(r).Row, Target.Columns(c).Column) = Application.WorksheetFunction.Round(Cells(Target.Rows(r).Row, Target.Columns(c).Column), 2)
              Else
                MsgBox "Pozor, zapisujte |fffd||fffd|seln|fffd| hodnoty v|fffd||fffd|ie ako 0!", vbExclamation, "Chyba"
              End If
            Else
              MsgBox "Pozor, zapisujte |fffd||fffd|seln|fffd| hodnoty!", vbExclamation, "Chyba"
            End If
          End If
          
          Protect Passw, True, True, True
          sem = 0
        End If
        
        
        'aby sa nedoplnil vzorec do chlievikov, kde to nema byt
        If Not (Intersect(Target, Range("EU_ALL")) Is Nothing) Then
          If Cells(Target.Rows(r).Row, Target.Columns(c).Column - 1).Value <> "EUR" Then
            Protect Passw, False, False, False
            sem = 1
            Cells(Target.Rows(r).Row, Target.Columns(c).Column + 1).Formula = ""
            sem = 0
            Protect Passw, True, True, True
          End If
        End If
        
    Next c
  Next r

  sem = 1
  If Target.Rows.Count > 1 Or Target.Columns.Count > 1 Then
    FormatTableC
    Target.Select
  End If
  sem = 0
  
End Sub

Attribute VB_Name = "Data"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Pomoc"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Private Sub Workbook_Open()
  FilePathDefault = ""
  
  CastA.Activate
  If CastA.Range("Datum").Value = "" Then
    CastA.Range("Datum").Value = Date
  End If

'  KoniecPlatnosti = DateSerial(2015, 7, 1)
'  KontrolaPlatnosti
  KontrolaPlatnosti
End Sub
Attribute VB_Name = "modBack"
Option Explicit

Public Const pocEU = 27

Public Const Passw = "_C0sM0s*"

Public sem As Integer

'Public KoniecPlatnosti As Date
Public Function KoniecPlatnosti() As Date
  KoniecPlatnosti = DateSerial(2019, 7, 1)
End Function



'OK
Public Function testKod(s As String) As Boolean
Dim chr As String
Dim i As Integer
'Dim L As Integer
  
  testKod = False
  
  If s <> "" Then
    If Len(s) = 6 Then
      s = UCase(s)
      chr = Mid$(s, 1, 1)
      If chr >= "A" And chr <= "Z" Then
     
        For i = 2 To Len(s)
          chr = Mid(s, i, 1)
          If Not ((chr >= "A" And chr <= "Z") Or (chr >= "0" And chr <= "9")) Then
            Exit Function
          End If
        Next i
      Else
        Exit Function
      End If
    Else
      Exit Function
    End If
  End If
  
  testKod = True
  

End Function

'OK
Public Function testColSadz(s As String) As Boolean
Dim L As Integer
Dim i As Integer

  testColSadz = False
  
  If s <> "" Then
    L = Len(s)
    If L <= 8 Then
      For i = 1 To L
        If (Mid$(s, i, 1) >= "0" And Mid$(s, i, 1) <= "9") Then
        Else
          Exit Function
        End If
      Next i
    End If
  End If
  
  testColSadz = True

End Function

'OK
Public Sub ErrMsg(err As ErrObject, strFrmSub As String)
  MsgBox "Chyba:" & vbTab & err.Number & vbNewLine & vbTab & "Popis:" & err.Description & vbNewLine & vbTab & strFrmSub, vbCritical Or vbOKOnly, "Chyba"
  err.Clear
End Sub


' vracia datum vo formate yyyy-mm-dd
' dd - vstupny datum
Public Function GetSDate(dd As Date) As String
  GetSDate = DatePart("yyyy", dd) & "-" & Format(DatePart("m", dd), "00") & "-" & Format(DatePart("d", dd), "00")
End Function

'OK
Public Function Povinne_test() As Boolean
Dim i As Integer
Dim b As Boolean

'On Error GoTo err
    
  Povinne_test = False
  b = True
  
  'cast A
  
  With ThisWorkbook.ActiveSheet
    
    If Trim(.Range("DRZ_Nazov")) = "" Then
      b = False
    End If
  
    If Trim(.Range("DRZ_Stat")) = "" Then
      b = False
    End If
    
'    If Trim(.Range("DRZ_ICO")) = "" Then
'      b = False
'    End If
  
    If Trim(.Range("ZAS_Nazov")) = "" Then
      b = False
    End If
  
    If Trim(.Range("ZAS_Stat")) = "" Then
      b = False
    End If
    
    If Trim(.Range("ZAS_ICO")) = "" Then
      b = False
    End If
  
    If Trim(.Range("Kontakt_Meno")) = "" Then
      b = False
    End If
  
    If Trim(.Range("Kontakt_Tel")) = "" Then
      If Trim(.Range("Kontakt_Mobil")) = "" Then
        b = False
      Else
      End If
    End If
    
    If Trim(.Range("REG_Nazov")) = "" Then
      b = False
    End If
  
    If Trim(.Range("REG_Stat")) = "" Then
      b = False
    End If
    
    
    
    
    
    
    If Trim(.Range("SUKL").Value) = "" Then
      b = False
    End If
    
    If Trim(.Range("Znak_KN").Value) = "" Then
      b = False
    End If
  
    If Application.WorksheetFunction.IsNA(.Range("Skupina_Kod").Value) Then
      b = False
    End If
    
    If Application.WorksheetFunction.IsNA(.Range("Nadskupina_Kod").Value) Then
      b = False
    End If
  
    If Trim(.Range("Podskupina").Value) = "" Then
      b = False
    End If
    
    If Trim(.Range("Nazov").Value) = "" Then
      b = False
    End If
    
    If Trim(.Range("MCV").Value) = "" Then
      b = False
    End If
  
    If Application.WorksheetFunction.IsNA(.Range("Sadzba_DPH").Value) Then
      b = False
    End If
  
  
'    If Trim(.Range("UZP").Value) = "" Then
'      b = False
'    End If
    
  
  End With
  
  
  Povinne_test = b

'  Exit Function
  
'err:
'  Povinne_test = False
'  ErrMsg err, "Povinne_test"
End Function

Private Function TestTable(ByRef aMsg As String) As Boolean
Dim i As Integer
Dim t As Integer
Dim b As Integer


  TestTable = False


  'test udajov




  TestTable = True
End Function


'OK
Public Function Kontrola(ByRef aMsg As String) As Boolean

  Kontrola = False

  aMsg = ""
  
  FormatHead
  
  FormatTableA
  FormatTableB
  FormatTableC
  

  If Povinne_test Then
    If Spravnost_test(aMsg) Then
      If TestTable(aMsg) Then
        MsgBox "Kontrola |fffd|dajov prebehla |fffd|spe|fffd|ne.", vbOKOnly + vbInformation, "Inform|fffd|cia"
        Kontrola = True
      Else
        'msg v ramci testu
        MsgBox aMsg, vbExclamation, "Upozornenie"
      End If
    Else
'      'msg v ramci testu
      MsgBox aMsg, vbExclamation, "Upozornenie"
    End If

  Else
    MsgBox "Treba vyplni|fffd| v|fffd|etky |fffd|ervenou ozna|fffd|en|fffd| pol|fffd||fffd|ka!", vbExclamation, "Upozornenie"
  End If

End Function

'OK
Private Sub FormatHead()
  With ThisWorkbook.ActiveSheet
    .Protect Passw, False, False, False
    
    .Range("DRZ_Format").Select
    Selection.Copy
    ActiveWindow.SmallScroll Down:=-18
    .Range("DRZ").Select
    Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Application.CutCopyMode = False
    
    
    .Range("ZAS_Format").Select
    Selection.Copy
    ActiveWindow.SmallScroll Down:=-18
    .Range("ZAS").Select
    Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Application.CutCopyMode = False
    
  
    .Range("Kontakt_Format").Select
    Selection.Copy
    ActiveWindow.SmallScroll Down:=-18
    .Range("Kontakt").Select
    Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Application.CutCopyMode = False
    
    
    .Range("REG_Format").Select
    Selection.Copy
    ActiveWindow.SmallScroll Down:=-18
    .Range("REG").Select
    Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Application.CutCopyMode = False
    
    
    .Protect Passw, True, True, True
  End With
End Sub

'OK
Private Sub FormatTableA()
  With ThisWorkbook.ActiveSheet
    .Protect Passw, False, False, False
    
    .Range("Tabulka_Format").Select
    Selection.Copy
    ActiveWindow.SmallScroll Down:=-18
    .Range("Tabulka_Formatted_Area").Select
    Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Application.CutCopyMode = False
  
    .Range("SUKL").Select
    
    .Protect Passw, True, True, True
  End With
End Sub

'OK
Public Sub FormatTableB()
Dim i As Long


  i = ThisWorkbook.ActiveSheet.Index
  ThisWorkbook.Sheets(CastB.Index).Activate
  
  With ThisWorkbook.ActiveSheet
  
    .Protect Passw, False, False, False
    .Range("CastB_Tabulka_Format").Select
    
    Selection.Copy
    ActiveWindow.SmallScroll Down:=-18
    .Range("CastB_Tabulka").Select
    Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Application.CutCopyMode = False
  
  
    .Range("Ucel_Urcenia").Select
    
    .Protect Passw, True, True, True
  End With
  
  ThisWorkbook.Sheets(i).Activate


End Sub

'OK
Public Sub FormatTableC()
Dim i As Long


  i = ThisWorkbook.ActiveSheet.Index
  ThisWorkbook.Sheets(CastC.Index).Activate
  
  With ThisWorkbook.ActiveSheet
    .Protect Passw, False, False, False
    .Range("EU_ALL_Format").Select
    
    Selection.Copy
    ActiveWindow.SmallScroll Down:=-18
    .Range("EU_ALL").Select
    Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Application.CutCopyMode = False
  
  
    .Protect Passw, False, False, False
    .Range("EU_EUR_ALL_Format").Select
    
    Selection.Copy
    ActiveWindow.SmallScroll Down:=-18
    .Range("EU_EUR_ALL").Select
    Selection.PasteSpecial Paste:=xlFormats, Operation:=xlNone, SkipBlanks:= _
        False, Transpose:=False
    Application.CutCopyMode = False
  
    
    
    .Range("EU_ALL").Cells(1).Select
    
    .Protect Passw, True, True, True
  
  End With
  
  ThisWorkbook.Sheets(i).Activate
  

End Sub



'OK
Public Function Spravnost_test(ByRef aMsg As String) As Boolean


  Spravnost_test = False
  
  
'--------------------
'CAST A
'--------------------

  'datum ziadosti
  If Range("Datum").Value = "" Then
    Spravnost_test = False
    aMsg = "Pozor, d|fffd|tum |fffd|iadosti nie je vyplnen|fffd|!"
    Range("Datum").Select
    Exit Function
  End If
  If CDate(Range("Datum").Value) > CDate(KoniecPlatnosti) - 1 Then
    Spravnost_test = False
    aMsg = "Pozor, formul|fffd|r je platn|fffd| do " & Format(CDate(KoniecPlatnosti) - 1, "dd.mm.yyyy") & ", pros|fffd|m, zad|fffd|vajte d|fffd|tum nie v|fffd||fffd||fffd| ako d|fffd|tum platnosti formul|fffd|ra!"
    Range("Datum").Select
    Exit Function
  End If
  

  If Not testKody(CastA.Range("SUKL")) Then
    aMsg = "|fffd||fffd|KL k|fffd|d pre zdravotn|fffd|cku pom|fffd|cku je zle zadan|fffd|!" & vbCrLf & _
             "Spr|fffd|vny form|fffd|t k|fffd|du je ""X00000"", kde X reprezentuje p|fffd|smeno a 00000 reprezentuje 5-miestny alfanumerick|fffd| k|fffd|d (p|fffd|smen|fffd| A-Z alebo |fffd||fffd|slice 0-9)." & vbCrLf & _
             "Viac |fffd||fffd|KL k|fffd|dov odde|fffd|te |fffd|iarkou!"
    CastA.Range("SUKL").Select
    Exit Function
  End If
  
  
  If Not testColSadz(CastA.Range("Znak_KN")) Then
    aMsg = "Pozor form|fffd|t |fffd||fffd|seln|fffd|ho znaku kombinovanej nomenklat|fffd|ry coln|fffd|ho sadzobn|fffd|ka je zl|fffd|!" & vbCrLf & "Spr|fffd|vny form|fffd|t je ""0000 00 00"", kde 0 reprezentuje |fffd||fffd|slicu."
    CastA.Range("Znak_KN").Select
    Exit Function
  End If
  
  If CastA.Range("MCV").Value <> "" Then
    If Not IsNumeric(CastA.Range("MCV").Value) Then
      aMsg = "Pozor, n|fffd|vrh |fffd|radne ur|fffd|enej ceny ZP m|fffd||fffd|e by|fffd| len |fffd||fffd|slo!"
      CastA.Range("MCV").Select
      Exit Function
    End If
  End If

'  If CastA.Range("UZP").Value <> "" Then
'    If Not IsNumeric(CastA.Range("UZP").Value) Then
'      aMsg = "Pozor, maxim|fffd|lna v|fffd||fffd|ka |fffd|hrady zdr. pois|fffd|ovne m|fffd||fffd|e by|fffd| len |fffd||fffd|slo!"
'      CastA.Range("UZP").Select
'      Exit Function
'    End If
'  End If
      
  If Not IsNumeric(CastA.Range("Sadzba_DPH_kod").Value) Then
    aMsg = "Pozor, sadzbu DPH m|fffd||fffd|ete vybra|fffd| len zo zoznamu!"
    CastA.Range("Sadzba_DPH").Select
    Exit Function
  End If
  
      
      
      
'--------------------
'CAST C
'--------------------
      
  
  Dim cell As Range
  For Each cell In CastC.Range("EU_ALL").Cells
    If cell.Value <> "" Then
      If Not IsNumeric(cell.Value) Then
        aMsg = "Pozor, cena v |fffd|t|fffd|te E|fffd| m|fffd||fffd|e by|fffd| len |fffd||fffd|slo!"
        ThisWorkbook.Sheets(CastC.Index).Activate
        cell.Select
        Exit Function
      End If
    End If
  Next
  
  For Each cell In CastC.Range("EU_EUR_ALL").Cells
    If Not cell.Locked Then
      If cell.Value <> "" Then
        If Not IsNumeric(cell.Value) Then
          aMsg = "Pozor, prep|fffd|et ceny na EUR m|fffd||fffd|e by|fffd| len |fffd||fffd|slo!"
          ThisWorkbook.Sheets(CastC.Index).Activate
          cell.Select
          Exit Function
        End If
      End If
    End If
  Next
  
'  If CastC.chAbsencia.Value = False Then
  If CastC.Range("Absencia_Value").Value = False Then
    If Not RefCenyExist(aMsg) Then
      ThisWorkbook.Sheets(CastC.Index).Activate
      CastC.Range("EU_ALL").Cells(1).Select
      Exit Function
    End If
  End If
  
  Spravnost_test = True
End Function

'OK
Public Sub GetOutputFile()
'  FormatTableA
'  FormatTableB
'  FormatTableC
  
  XLRangeToDoc
  
  CastA.Range("SUKL").Select
End Sub

'OK
Sub XLRangeToDoc()
     'copy range to table in word doc
     '
    Dim objWordApp As Object
    Dim objWordDoc As Object
    Dim rngData As Range
     
     
    Dim aTyp As Integer
     
     
'    CastA.PageSetup.Zoom = 100
'    CastB.PageSetup.Zoom = 100
'    CastB2.PageSetup.Zoom = 100
'    CastC.PageSetup.Zoom = 100
     
     ' create instance of word and open doc
    Set objWordApp = CreateObject("Word.application")
    objWordApp.Visible = True
    'Set objWordDoc = objWordApp.Documents.Open("C:\_work\Dali_formulare\_Zdravotn|fffd|cke pom|fffd|cky\test.doc")
    Set objWordDoc = objWordApp.Documents.Add(DocumentType:=0)
    
    
    
    
  With objWordApp.Selection.PageSetup
    .LineNumbering.Active = False
    .Orientation = 0
    .TopMargin = objWordApp.InchesToPoints(0.38)
    .BottomMargin = objWordApp.InchesToPoints(0.38)
    .LeftMargin = objWordApp.InchesToPoints(0.5)
    .RightMargin = objWordApp.InchesToPoints(0.44)
    .Gutter = objWordApp.InchesToPoints(0)
    .HeaderDistance = objWordApp.InchesToPoints(0.35)
    .FooterDistance = objWordApp.InchesToPoints(0.3)
    .PageWidth = objWordApp.InchesToPoints(8.27)
    .PageHeight = objWordApp.InchesToPoints(11.69)
'    .FirstPageTray = wdPrinterDefaultBin
'    .OtherPagesTray = wdPrinterDefaultBin
'    .SectionStart = wdSectionNewPage
    .OddAndEvenPagesHeaderFooter = False
    .DifferentFirstPageHeaderFooter = False
'    .VerticalAlignment = wdAlignVerticalTop
    .SuppressEndnotes = False
    .MirrorMargins = False
    .TwoPagesOnOne = False
'    .GutterPos = wdGutterPosLeft
  End With
    
    
    
'  'hlavicka + cislovanie stran
  With objWordApp

    If .ActiveWindow.View.SplitSpecial <> 0 Then 'wdPaneNone Then
      .ActiveWindow.Panes(2).Close
    End If
'    If .ActiveWindow.ActivePane.View.Type = wdNormalView Or .ActiveWindow. _
'      ActivePane.View.Type = wdOutlineView Then
'      .ActiveWindow.ActivePane.View.Type = wdPrintView
'    End If
    If .ActiveWindow.ActivePane.View.Type = 1 Or _
       .ActiveWindow.ActivePane.View.Type = 2 Then
      .ActiveWindow.ActivePane.View.Type = 3
    End If
    .ActiveWindow.ActivePane.View.SeekView = 9 'wdSeekCurrentPageHeader
'    .Selection.TypeText Text:=CisloPrilohy
'    .Selection.HomeKey Unit:=wdLine, Extend:=wdExtend
    .Selection.HomeKey Unit:=5, Extend:=1
    .Selection.Font.Name = "Arial"
    .Selection.Font.Size = 10
    .Selection.ParagraphFormat.Alignment = 2 'wdAlignParagraphRight
'    If .ActiveWindow.ActivePane.View.Type = wdNormalView Or .ActiveWindow. _
'      ActivePane.View.Type = wdOutlineView Then
'      If .ActiveWindow.Panes.Count = 2 Then
'        .ActiveWindow.Panes(2).Close
'      End If
'      .ActiveWindow.View.SplitSpecial = wdPaneCurrentPageHeader
'    Else
'      .ActiveWindow.View.SeekView = wdSeekCurrentPageHeader
'    End If
    If .ActiveWindow.ActivePane.View.Type = 1 Or _
       .ActiveWindow.ActivePane.View.Type = 2 Then
      If .ActiveWindow.Panes.Count = 2 Then
        .ActiveWindow.Panes(2).Close
      End If
      .ActiveWindow.View.SplitSpecial = 16 'wdPaneCurrentPageHeader
    Else
      .ActiveWindow.View.SeekView = 9 'wdSeekCurrentPageHeader
    End If
'    .Selection.PageSetup.TopMargin = .InchesToPoints(0.38)
    If .Selection.HeaderFooter.IsHeader = True Then
      .ActiveWindow.ActivePane.View.SeekView = 10 'wdSeekCurrentPageFooter
    Else
      .ActiveWindow.ActivePane.View.SeekView = 9 'wdSeekCurrentPageHeader
    End If
    .Selection.Fields.Add Range:=.Selection.Range, Type:=33 'wdFieldPage
'    .Selection.HomeKey Unit:=wdLine, Extend:=wdExtend
    .Selection.HomeKey Unit:=5, Extend:=1
    .Selection.Font.Name = "Arial"
    .Selection.Font.Size = 8
    .Selection.ParagraphFormat.Alignment = 1 'wdAlignParagraphCenter
'    If .ActiveWindow.ActivePane.View.Type = wdNormalView Or .ActiveWindow. _
'      ActivePane.View.Type = wdOutlineView Then
'      If .ActiveWindow.Panes.Count = 2 Then
'        .ActiveWindow.Panes(2).Close
'      End If
'      .ActiveWindow.View.SplitSpecial = wdPaneCurrentPageHeader
'    Else
'      .ActiveWindow.View.SeekView = wdSeekCurrentPageHeader
'    End If
    If .ActiveWindow.ActivePane.View.Type = 1 Or _
       .ActiveWindow.ActivePane.View.Type = 2 Then
      If .ActiveWindow.Panes.Count = 2 Then
        .ActiveWindow.Panes(2).Close
      End If
      .ActiveWindow.View.SplitSpecial = 16 'wdPaneCurrentPageHeader
    Else
      .ActiveWindow.View.SeekView = 9 'wdSeekCurrentPageHeader
    End If
    .ActiveWindow.ActivePane.View.SeekView = 0 'wdSeekMainDocument

  End With
    


'-------------------------
'Cast A - firma
'-------------------------
    
     ' goto bookmark
    With objWordApp.ActiveDocument.Bookmarks
      .Add Range:=objWordApp.Selection.Range, Name:="CastA"
      .DefaultSorting = 0 'wdSortByName
      .ShowHidden = False
    End With
    objWordDoc.Bookmarks("CastA").Range.Select
     
     ' Copy xl range
    Set rngData = CastA.Range("Print_Ziadatel")
    rngData.Copy
     
     ' Paste the range
     '    objWordApp.Selection.PasteSpecial  Link:=False, DataType:=wdPasteRTF, _
    Placement:=wdInLine, DisplayAsIcon:=False
    
    
    objWordApp.Selection.PasteSpecial Link:=False, DataType:=1, _
    Placement:=0, DisplayAsIcon:=False
     
   
    
    
    'objWordDoc.Bookmarks("CastA").Range.Tables(1).Rows.Alignment = 1
    
    
    
    objWordApp.Selection.TypeParagraph
    
    
'-------------------------
'Cast A
'-------------------------
    
   
    'objWordApp.Selection.HomeKey Unit:=wdLine, Extend:=wdExtend
    objWordApp.Selection.HomeKey Unit:=5, Extend:=1
    objWordApp.Selection.Font.Name = "Arial"
    objWordApp.Selection.Font.Size = 12
    objWordApp.Selection.Font.Bold = True '9999998 'wdToggle
    objWordApp.Selection.TypeText Text:=CastA.Range("Nadpis_CastA").Value
    objWordApp.Selection.TypeParagraph
    
    'objWordApp.Selection.TypeParagraph
    
    
     ' goto bookmark
    With objWordApp.ActiveDocument.Bookmarks
      .Add Range:=objWordApp.Selection.Range, Name:="CastA"
      .DefaultSorting = 0 'wdSortByName
      .ShowHidden = False
    End With
    objWordDoc.Bookmarks("CastA").Range.Select
     
     ' Copy xl range
    Set rngData = CastA.Range("Print_CastA")
    rngData.Copy
     
     ' Paste the range
     '    objWordApp.Selection.PasteSpecial  Link:=False, DataType:=wdPasteRTF, _
    Placement:=wdInLine, DisplayAsIcon:=False
    
    
    objWordApp.Selection.PasteSpecial Link:=False, DataType:=1, _
    Placement:=0, DisplayAsIcon:=False
     
   
    
    
    'objWordDoc.Bookmarks("CastA").Range.Tables(1).Rows.Alignment = 1
    
    
    
    'objWordApp.Selection.TypeParagraph
    
'-------------------------
'CastB
'-------------------------
        objWordApp.Selection.InsertBreak Type:=7 'wdPageBreak
    
        'objWordApp.Selection.HomeKey Unit:=wdLine, Extend:=wdExtend
        objWordApp.Selection.HomeKey Unit:=5, Extend:=1
        objWordApp.Selection.Font.Name = "Arial"
        objWordApp.Selection.Font.Size = 12
        objWordApp.Selection.Font.Bold = True '9999998 'wdToggle
        objWordApp.Selection.TypeText Text:=CastB.Range("Nadpis_CastB").Value
        objWordApp.Selection.TypeParagraph
        
        
        
        objWordApp.Selection.TypeParagraph
        
         ' goto bookmark
        With objWordApp.ActiveDocument.Bookmarks
          .Add Range:=objWordApp.Selection.Range, Name:="CastB"
          .DefaultSorting = 0 'wdSortByName
          .ShowHidden = False
        End With
        objWordDoc.Bookmarks("CastB").Range.Select
        
     
         ' Copy xl range
        Set rngData = CastB.Range("Print_CastB")
        rngData.Copy
    
     
        objWordApp.Selection.PasteSpecial Link:=False, DataType:=1, _
        Placement:=0, DisplayAsIcon:=False
        
        
        'objWordDoc.Bookmarks("CastB").Range.Tables(1).Rows.Alignment = 1
        
     
        'objWordApp.Selection.TypeParagraph
         
         

 
 
 
'-------------------------
'CastC
'-------------------------
    objWordApp.Selection.InsertBreak Type:=7 'wdPageBreak
    
    'objWordApp.Selection.HomeKey Unit:=wdLine, Extend:=wdExtend
    objWordApp.Selection.HomeKey Unit:=5, Extend:=1
    objWordApp.Selection.Font.Name = "Arial"
    objWordApp.Selection.Font.Size = 12
    objWordApp.Selection.Font.Bold = True '9999998 'wdToggle
    objWordApp.Selection.TypeText Text:=CastC.Range("Nadpis_CastC").Value
    objWordApp.Selection.TypeParagraph
    
    
    objWordApp.Selection.TypeParagraph
    
     ' goto bookmark
    With objWordApp.ActiveDocument.Bookmarks
      .Add Range:=objWordApp.Selection.Range, Name:="CastC"
      .DefaultSorting = 0 'wdSortByName
      .ShowHidden = False
    End With
    objWordDoc.Bookmarks("CastC").Range.Select
    
    
    
     ' Copy xl range
    Dim o As Object
    Set o = CastC.Shapes("chAbsenciaN") 'CastC.chAbsencia
    o.Copy
 
    objWordApp.Selection.PasteSpecial Link:=False, DataType:=8, _
    Placement:=0, DisplayAsIcon:=False
    
    
    ' Copy xl range
    Set rngData = CastC.Range("Absencia_Text")
    rngData.Copy
 
    objWordApp.Selection.PasteSpecial Link:=False, DataType:=1, _
    Placement:=0, DisplayAsIcon:=False
 
 
     ' Copy xl range
    Set rngData = CastC.Range("Print_CastC")
    rngData.Copy
 
    objWordApp.Selection.PasteSpecial Link:=False, DataType:=1, _
    Placement:=0, DisplayAsIcon:=False
    
    
    'objWordDoc.Bookmarks("CastC").Range.Tables(1).Rows.Alignment = 1
    
 
    'objWordApp.Selection.TypeParagraph
 
 
 
 
'-------------------------
'Podpis
'-------------------------
    
    objWordApp.Selection.TypeParagraph

    
     ' goto bookmark
    With objWordApp.ActiveDocument.Bookmarks
      .Add Range:=objWordApp.Selection.Range, Name:="Podpis"
      .DefaultSorting = 0 'wdSortByName
      .ShowHidden = False
    End With
    objWordDoc.Bookmarks("Podpis").Range.Select
    
 
     ' Copy xl range
    Set rngData = Pomoc.Range("Print_Podpis")
    rngData.Copy

 
    objWordApp.Selection.PasteSpecial Link:=False, DataType:=1, _
    Placement:=0, DisplayAsIcon:=False
    
    
    'objWordDoc.Bookmarks("Podpis").Range.Tables(1).Rows.Alignment = 1
    
 
    'objWordApp.Selection.TypeParagraph
 
 
 
     
'    objWordDoc.Save
'    objWordDoc.Close
'    objWordApp.Quit
'
    Set objWordDoc = Nothing
    Set objWordApp = Nothing
    
    Set rngData = Nothing
    
End Sub


Public Function RefCenyExist(ByRef aMsg As String) As Boolean
Dim b As Boolean
Dim cell As Range

    b = False
    For Each cell In CastC.Range("EU_ALL").Cells
      If cell.Value <> "" Then
        b = True
        Exit For
      End If
    Next
    
    If Not b Then
      aMsg = "Pozor, tabu|fffd|ka referen|fffd|n|fffd|ch cien je pr|fffd|zdna!"
    End If
    
    RefCenyExist = b
    
End Function


Public Function testKody(kody As String) As Boolean
Dim i As Integer
Dim list() As String

  testKody = False
  
  list = Split(kody, ",")
  
  For i = 0 To UBound(list)
    If Not testKod(Trim(list(i))) Then
      Exit Function
    End If
  
  Next i
  
  testKody = True

End Function

Public Function KontrolaPlatnosti()
  If Now >= KoniecPlatnosti() Then

    CastA.Protect Passw, False, False, False

    CastA.Rows(Range("Platnost").Row).Hidden = False
    'CastA.btnKontrola.Visible = False
    CastA.Shapes("btnKontrolaN").Visible = False
    'CastA.btnTlac.Visible = False
    CastA.Shapes("btnTlacN").Visible = False
    'CastA.btnGeneruj.Visible = False
    CastA.Shapes("btnGenerujN").Visible = False


    'zablokovat cele
    'CastA.Activate
    CastA.Cells.Select
    Selection.Locked = True
    CastA.Range("Datum").Select
    CastA.Protect Passw, True, True, True


    CastB.Protect Passw, False, False, False
    'CastB.Activate
    CastB.Cells.Select
    Selection.Locked = True
    CastB.Range("Ucel_Urcenia").Select
    CastB.Protect Passw, True, True, True
    
    
    CastC.Protect Passw, False, False, False
    'CastC.Activate
    CastC.Cells.Select
    Selection.Locked = True
    CastC.Range("EU_All").Cells(1).Select
    CastC.Protect Passw, True, True, True
    
    'CastA.Activate
    
  Else
    CastA.Protect Passw, False, False, False
    CastA.Rows(Range("Platnost").Row).Hidden = True
    CastA.Range("Datum").Select
    CastA.Protect Passw, True, True, True
  End If

End Function

Public Function GetString(s As String) As String
  s = Trim(s)
  s = Replace(s, "&", "&amp;")
  s = Replace(s, """", "&quot;")
  s = Replace(s, "'", "&apos;")
  s = Replace(s, "<", "&lt;")
  s = Replace(s, ">", "&gt;")
  
  GetString = s
End Function


Public Function GetNumberString(s As Variant, digits As Integer) As String
  If IsEmpty(s) Or s = "" Then
    GetNumberString = ""
  Else
    If IsNumeric(s) Then
      GetNumberString = Trim(Str(Round(s, digits)))
    Else
      GetNumberString = ""
    End If
  End If
End Function

Attribute VB_Name = "modUloz"
Option Explicit

Public gcesta As String
Public gSUKL As String
Public gText As String

'Public CodeString(5) As Byte
Public FilePath As String
Public FilePathDefault As String


Private Sub GetCesta()
  If Mid$(gcesta, Len(gcesta), 1) <> "\" Then
    gcesta = gcesta & "\"
  End If
End Sub

Function GetFolder(strPath As String) As String
Dim fldr As FileDialog
Dim sItem As String
Set fldr = Application.FileDialog(msoFileDialogFolderPicker)
With fldr
    .Title = "Select a Folder"
    .AllowMultiSelect = False
    .InitialFileName = strPath
    If .Show <> -1 Then GoTo NextCode
    sItem = .SelectedItems(1)
End With
NextCode:
GetFolder = sItem
Set fldr = Nothing
End Function

Public Sub UlozVystup()
Dim sf As String
Dim s As String
Dim aFileName As String
Dim i As Integer
  On Error GoTo err
  
  gcesta = GetFolder(CurDir)
  If Right(gcesta, 1) <> "\" Then gcesta = gcesta & "\"
  
  If gcesta <> "\" Then
    'zakodovat string ( GetXMLString)!!!
    gText = CodeText(GetXMLString)
    'gText = GetXMLString
    
    s = gcesta & Range("Typ_Ziadosti_Kod").Value & ".dfm" '".xml"
    Open s For Output As #1
    Print #1, gText
    Close #1
    MsgBox "V|fffd|stup z formul|fffd|ra bol |fffd|spe|fffd|ne ulo|fffd|en|fffd| na adresu: " & s, vbInformation, "Inform|fffd|cia"
    FilePathDefault = gcesta
  End If
  
  Exit Sub
err:
  MsgBox "Nepodarilo sa ulo|fffd|i|fffd| v|fffd|stup z formul|fffd|ra!", vbCritical, "Chyba"

End Sub


Private Function CodeText(aText As String) As String
Dim s As String
Dim mText As String
Dim i As Long
Dim j As Integer

  CodeText = ""
  s = ""
  mText = ""
  
  
  For i = 1 To Len(aText)
    s = Mid$(aText, i, 1)
'    mText = mText & Chr(Asc(s) Xor CodeString(i Mod 5))
    mText = mText & chr(Asc(s) Xor 135)
'    Debug.Print s & "  " & Chr(Asc(s) Xor CodeString(i Mod 5))
  Next i
'  mText = mText & Chr(0 Xor CodeString(i Mod 5))
  mText = mText & chr(0 Xor 135)
  
  Randomize
  j = Round(Rnd(256))
  For i = 1 To j
    mText = mText & chr(Round(Rnd(256)))
  Next i
  
  CodeText = mText
End Function

Private Function GetXMLString() As String
Dim s As String
Dim i As Integer
Dim j As Integer
Dim d As String

  s = ""
  s = s & "<?xml version=""1.0"" encoding=""windows-1250""?>" & vbCrLf
  s = s & "<form>" & vbCrLf
  s = s & "  <formularVerzia>" & Range("Verzia").Value & "</formularVerzia><!-- verzia formulara kvoli importu do Dali --><!--string-->" & vbCrLf
  s = s & "  <drzitel>" & vbCrLf
  s = s & "    <meno>" & GetString(Range("DRZ_Nazov").Value) & "</meno><!--string-->" & vbCrLf
  s = s & "    <ulica>" & GetString(Range("DRZ_Ulica").Value) & "</ulica><!--string-->" & vbCrLf
  s = s & "    <mesto>" & GetString(Range("DRZ_Mesto").Value) & "</mesto><!--string-->" & vbCrLf
  s = s & "    <psc>" & GetString(Range("DRZ_PSC").Value) & "</psc><!--string-->" & vbCrLf
  s = s & "    <stat>" & GetString(Range("DRZ_Stat").Value) & "</stat><!--string-->" & vbCrLf
  s = s & "    <ico>" & GetString(Range("DRZ_ICO").Value) & "</ico><!--string-->" & vbCrLf
  s = s & "  </drzitel>" & vbCrLf
  s = s & "  <zastupca>" & vbCrLf
  s = s & "    <meno>" & GetString(Range("ZAS_Nazov").Value) & "</meno><!--string-->" & vbCrLf
  s = s & "    <ulica>" & GetString(Range("ZAS_Ulica").Value) & "</ulica><!--string-->" & vbCrLf
  s = s & "    <mesto>" & GetString(Range("ZAS_Mesto").Value) & "</mesto><!--string-->" & vbCrLf
  s = s & "    <psc>" & GetString(Range("ZAS_PSC").Value) & "</psc><!--string-->" & vbCrLf
  s = s & "    <stat>" & GetString(Range("ZAS_Stat").Value) & "</stat><!--string-->" & vbCrLf
  s = s & "    <ico>" & GetString(Range("ZAS_ICO").Value) & "</ico><!--string-->" & vbCrLf
  s = s & "  </zastupca>" & vbCrLf
  s = s & "  <osoba>" & vbCrLf
  s = s & "    <meno>" & GetString(Range("Kontakt_Meno").Value) & "</meno><!--string-->" & vbCrLf
  s = s & "    <pevnaLinka>" & GetString(Range("Kontakt_Tel").Value) & "</pevnaLinka><!--string-->" & vbCrLf
  s = s & "    <mobil>" & GetString(Range("Kontakt_Mobil").Value) & "</mobil><!--string-->" & vbCrLf
  s = s & "    <mail>" & GetString(Range("Kontakt_Mail").Value) & "</mail><!--string-->" & vbCrLf
  s = s & "  </osoba>" & vbCrLf
  s = s & "  <organizacia>" & vbCrLf
  s = s & "    <meno>" & GetString(Range("REG_Nazov").Value) & "</meno><!--string-->" & vbCrLf
  s = s & "    <ulica>" & GetString(Range("REG_Ulica").Value) & "</ulica><!--string-->" & vbCrLf
  s = s & "    <mesto>" & GetString(Range("REG_Mesto").Value) & "</mesto><!--string-->" & vbCrLf
  s = s & "    <psc>" & GetString(Range("REG_PSC").Value) & "</psc><!--string-->" & vbCrLf
  s = s & "    <stat>" & GetString(Range("REG_Stat").Value) & "</stat><!--string-->" & vbCrLf
  s = s & "  </organizacia>" & vbCrLf
  
  s = s & "  <datumPodania>" & GetSDate(Range("Datum").Value) & "</datumPodania><!-- YYYY-MM-DD --><!--date-->" & vbCrLf
  s = s & "  <typPodania>" & Range("Typ_Ziadosti_Kod").Value & "</typPodania><!--A1N, A1E, A1P--><!--string-->" & vbCrLf
  's = s & "  <absencia>" & CastC.chAbsencia.Value & "</absencia><!--true, false-->" & vbCrLf
  s = s & "  <absencia>" & Range("Absencia_Value").Value & "</absencia><!--true, false-->" & vbCrLf
  
  s = s & "  <szm>" & vbCrLf
  s = s & "    <skratkaNadskupiny>" & GetString(Range("Nadskupina_Kod").Value) & "</skratkaNadskupiny><!--string-->" & vbCrLf
  s = s & "    <skratkaSkupiny>" & GetString(Range("Skupina_Kod").Value) & "</skratkaSkupiny><!--string-->" & vbCrLf
  s = s & "    <skratkaPodskupiny>" & GetString(Range("Podskupina").Value) & "</skratkaPodskupiny><!--string-->" & vbCrLf
  s = s & "    <sukl>" & GetString(Range("SUKL").Value) & "</sukl><!--string-->" & vbCrLf
  s = s & "    <znakKn>" & GetNumberString(Range("Znak_KN").Value, 0) & "</znakKn><!--cislo-->" & vbCrLf
  s = s & "    <nazov>" & GetString(Range("Nazov").Value) & "</nazov><!--string-->" & vbCrLf
  s = s & "    <doplnujuceOznacenie>" & GetString(Range("Doplnok").Value) & "</doplnujuceOznacenie><!--string-->" & vbCrLf
  s = s & "    <mernaJednotka>" & GetString(Range("Merna_Jednotka").Value) & "</mernaJednotka><!--string-->" & vbCrLf
  s = s & "    <drzitel>" & GetString(Range("Vyrobca").Value) & "</drzitel><!--string-->" & vbCrLf
  s = s & "    <stat>" & GetString(Range("Krajina").Value) & "</stat><!--string-->" & vbCrLf
  s = s & "    <mcv>" & GetNumberString(Range("MCV").Value, 2) & "</mcv><!--cislo-->" & vbCrLf
  s = s & "    <sadzbaDph>" & GetNumberString(Range("Sadzba_DPH_Kod").Value, 0) & "</sadzbaDph><!--cislo-->" & vbCrLf
  s = s & "    <kc>" & GetNumberString(Range("KC").Value, 2) & "</kc><!--cislo-->" & vbCrLf
  s = s & "    <maxSumaUzp24>" & GetNumberString(Range("Navrh_max_sumy_uzp24").Value, 2) & "</maxSumaUzp24><!--cislo-->" & vbCrLf
  
  s = s & "    <ucelUrcenia>" & GetString(Range("Ucel_Urcenia").Value) & "</ucelUrcenia><!--string-->" & vbCrLf
  s = s & "    <charakteristika>" & GetString(Range("Charakteristika").Value) & "</charakteristika><!--string-->" & vbCrLf
  s = s & "    <navod>" & GetString(Range("Navod").Value) & "</navod><!--string-->" & vbCrLf
  s = s & "    <technickeParametre>" & GetString(Range("Technicke_Parametre").Value) & "</technickeParametre><!--string-->" & vbCrLf
  
  s = s & "    <ceny>" & vbCrLf
  For j = 1 To pocEU
    s = s & "      <stat>" & vbCrLf
    s = s & "        <skratka>" & Range("EU_Staty").Cells(j).Value & "</skratka><!-- skratky podla NBS, cieslnik v Dali --><!--string-->" & vbCrLf
    s = s & "        <home>" & GetNumberString(Range("EU_All").Cells(j).Value, 2) & "</home><!-- suma v domacej mene --><!--cislo-->" & vbCrLf
    s = s & "        <eur>" & GetNumberString(Range("EU_EUR_All").Cells(j).Value, 2) & "</eur><!-- prepocet na |fffd| --><!--cislo-->" & vbCrLf
    s = s & "      </stat>" & vbCrLf
  Next j
  s = s & "    </ceny>" & vbCrLf
  
  s = s & "  </szm>" & vbCrLf
  
  s = s & "</form>" & vbCrLf
  
  GetXMLString = s


End Function









INQUEST-PP=macro
