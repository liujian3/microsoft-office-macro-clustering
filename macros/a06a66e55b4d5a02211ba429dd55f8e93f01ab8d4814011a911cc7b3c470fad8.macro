Attribute VB_Name = "NewMacros"
Sub AutoNew()
   ' First page is not to be used for text
   ' Macro written 15 october by Eva Engstr|fffd|m and |fffd|sa Nordling Larsson
   Selection.GoTo what:=wdGoToPage, which:=wdGoToNext, Count:=1
   Selection.GoTo what:=wdGoToLine, which:=wdGoToNext, Count:=5
   
End Sub

Sub AutoOpen()
   ' First page is not to be used for text
   ' Macro written 15 october by Eva Engstr|fffd|m and |fffd|sa Nordling Larsson
   Selection.GoTo what:=wdGoToPage, which:=wdGoToNext, Count:=1
   Selection.GoTo what:=wdGoToLine, which:=wdGoToNext, Count:=5
End Sub


Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Option Explicit
'reserve memory for an application variable
Private WithEvents wdApp As Word.Application
Attribute wdApp.VB_VarHelpID = -1

Private Sub Document_BuildingBlockInsert(ByVal Range As Range, ByVal Name As String, ByVal Category As String, ByVal BlockType As String, ByVal Template As String)

End Sub

Private Sub Document_Close()

End Sub

Private Sub Document_New()
    'assign Word to the application variable
    If wdApp Is Nothing Then
        Set wdApp = ThisDocument.Application
    End If
End Sub



Private Sub Document_Open()
'assign Word to the application variable
Application.DisplayAlerts = wdAlertsNone
Application.ScreenUpdating = False
If wdApp Is Nothing Then
    Set wdApp = ThisDocument.Application
    ThisDocument.Fields.Update
End If
UpdateAll
End Sub



Private Sub wdApp_WindowSelectionChange(ByVal Sel As Selection)
    'quit if active doc isn't attached to this template
    'get out of the header/footer if we're in it
    
    Select Case Sel.StoryType
    Case wdEvenPagesFooterStory, wdEvenPagesHeaderStory, _
               wdFirstPageFooterStory, wdFirstPageHeaderStory, _
               wdPrimaryFooterStory, wdPrimaryHeaderStory
        ActiveWindow.ActivePane.View.SeekView = wdSeekMainDocument
       
        Exit Sub
    Case Else
    End Select

End Sub

Sub UpdateAll()
    Dim oStory As Range
    For Each oStory In ActiveDocument.StoryRanges
        'Debug.Print oStory.StoryType
        
        
        oStory.Fields.Update
        If ((oStory.StoryType <> wdMainTextStory) And (oStory.StoryType <> wdTextFrameStory)) Then
            While Not (oStory.NextStoryRange Is Nothing)
                Set oStory = oStory.NextStoryRange
                oStory.Fields.Update
            Wend
        End If
    Next oStory
    Set oStory = Nothing
End Sub





INQUEST-PP=macro
