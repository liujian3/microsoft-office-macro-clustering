Attribute VB_Name = "Feuil1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'English version of my Excel application : Gestionnaire de fichiers Pdf
'Link : http://www.excel-pratique.com
'COHENNY Tristan

'////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'<< ? >> Coding with French version of Excel, incompatibility risks with Other International versions << ? >>
'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



'---------------------------------------------------------------------------------------------------------
 'Concerne l'impression pdf
 Private Declare PtrSafe Function FindWindow Lib "user32" Alias "FindWindowA" _
    (ByVal lpClassName As String, ByVal lpWindowName As String) As Long
Private Declare PtrSafe Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" _
    (ByVal hWnd As Long, ByVal lpOperation As String, ByVal lpFile As String _
    , ByVal lpParameters As String, ByVal lpDirectory As String, ByVal nShowCmd As Long) As Long
'---------------------------------------------------------------------------------------------------------
Dim CELL_CIBLE As String




Private Sub Worksheet_Activate() 'Faire tourner le smiley
'---------------------------------------------------------------------------------------------------------
On Error Resume Next 'gestion process d'erreur
'---------------------------------------------------------------------------------------------------------
'1. Correction zoom
Application.ScreenUpdating = False
With ThisWorkbook.Worksheets(1)
      .Visible = xlSheetVisible
      .Activate
      .Range("A6").Select
End With
ThisWorkbook.Worksheets(1).Range("A1:T6").Activate  'd|fffd|finit la zone de zoom pour variables zoom
ActiveWindow.Zoom = True 'zoom sur selection
Application.ScreenUpdating = True
ActiveSheet.Range("A6").Select
'---------------------------------------------------------------------------------------------------------
'2. Faire tourner
Application.Speech.Speak ">Manager!", True
Dim DEGREE_ROTATION As Double 'D|fffd|claration variable DEGREE_ROTATION comme valeur double.
DEGREE_ROTATION = 0 'D|fffd|finition du degr|fffd| de rotation de d|fffd|part du smiley dans la boite |fffd| 0 degr|fffd|s
Do While IsEmpty(ThisWorkbook.Worksheets(1).Range("XFC1")) 'Boucle sans fin DO WHILE ... > LOOP, Rotation infinie du smiley, Tant que cellule XFC1 vide (mais |fffd|a c'est un secret)
   DoEvents 'Raffraichissement application pour voir tourner le smiley
   If DEGREE_ROTATION >= 350 Then   'Process de sortie de boucle de rotation quand tour complet r|fffd|alis|fffd|
      ActiveSheet.Shapes.Range(Array("Image 18")).ThreeD.RotationX = 0 'retour degr|fffd|s de rotation |fffd| 0
      Exit Do 'Sortie de boucle Do while
   End If
   ActiveSheet.Shapes.Range(Array("Image 18")).ThreeD.RotationX = DEGREE_ROTATION   'Rotation du smiley |fffd| la valeur DEGREE_ROTATION
   DEGREE_ROTATION = DEGREE_ROTATION + 4   'Ajout +10 degr|fffd|s |fffd| DEGREE_ROTATION pour la prochaine rotation
Loop
End Sub



Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
'<<!>> L'ordre des proc|fffd|dures est importante, risque de m|fffd|li m|fffd|lo et bug
'---------------------------------------------------------------------------------------------------------
On Error Resume Next
'---------------------------------------------------------------------------------------------------------
'>> I. D|fffd|sactivation entr|fffd|e par double click dans TABLEUR PROTECTION
If Not Intersect(Target, ActiveSheet.Range("PROTECTION")) Is Nothing Then 'Emp|fffd|cher entr|fffd|e apr|fffd|s double clic
   Cancel = True
End If
'---------------------------------------------------------------------------------------------------------
'>> II. RENOMMER FICHIER
If Not Intersect(Target, ActiveSheet.Range("RENOMMER")) Is Nothing Then 'Action renommer 1 fichier
   With Target.Font 'simulation micro changement
      .ColorIndex = xlAutomatic
      .TintAndShade = 0
   End With
      CELL_CIBLE = Target.Address 'd|fffd|finition adresse cellule cliqu|fffd|
      RENOM_FICHIER 'Macro renom
   With Target.Font 'simulation micro changement
        .ThemeColor = xlThemeColorLight2
        .TintAndShade = 0
    End With
End If
'---------------------------------------------------------------------------------------------------------
'>> III. DEPLACER FICHIER
If Not Intersect(Target, ActiveSheet.Range("DEPLACER")) Is Nothing Then 'Action DEPLACER 1 fichier
   With Target.Font 'simulation micro changement
      .ColorIndex = xlAutomatic
      .TintAndShade = 0
   End With
      CELL_CIBLE = Target.Address 'd|fffd|finition adresse cellule cliqu|fffd|
      TRANSFERT_FICHIER_PDF 'Macro deplacer
   With Target.Font 'simulation micro changement
        .ThemeColor = xlThemeColorLight2
        .TintAndShade = 0
    End With
End If
'---------------------------------------------------------------------------------------------------------
'>> IV. MAIL FICHIER
If Not Intersect(Target, ActiveSheet.Range("MAILER")) Is Nothing Then 'Action MAILER 1 fichier
   With Target.Font 'simulation micro changement
      .ColorIndex = xlAutomatic
      .TintAndShade = 0
   End With
      CELL_CIBLE = Target.Address 'd|fffd|finition adresse cellule cliqu|fffd|
      MAILING_OUTLOOK 'Macro MAIL
   With Target.Font 'simulation micro changement
        .ThemeColor = xlThemeColorLight2
        .TintAndShade = 0
    End With
End If
'---------------------------------------------------------------------------------------------------------
'>> V. IMPRIMER FICHIER
If Not Intersect(Target, ActiveSheet.Range("IMPRIMER")) Is Nothing Then 'Action IMPRIMER 1 fichier
   With Target.Font 'simulation micro changement
      .ColorIndex = xlAutomatic
      .TintAndShade = 0
   End With
      CELL_CIBLE = Target.Address 'd|fffd|finition adresse cellule cliqu|fffd|
      IMPRIMER_FICHIER 'Macro IMPRIMER
   With Target.Font 'simulation micro changement
        .ThemeColor = xlThemeColorLight2
        .TintAndShade = 0
    End With
End If
'---------------------------------------------------------------------------------------------------------
'>> VI. SUPPRIMER FICHIER
If Not Intersect(Target, ActiveSheet.Range("SUPPRIMER")) Is Nothing Then 'Action SUPPRIMER 1 fichier
   With Target.Font 'simulation micro changement
      .ColorIndex = xlAutomatic
      .TintAndShade = 0
   End With
      CELL_CIBLE = Target.Address 'd|fffd|finition adresse cellule cliqu|fffd|
      SUPPRIMER_FICHIER 'Macro SUPPRIMER
   With Target.Font 'simulation micro changement
        .Color = -16777024
        .TintAndShade = 0
    End With
End If

'---------------------------------------------------------------------------------------------------------
End Sub


Private Sub Worksheet_Change(ByVal Target As Range)
'<<!>> L'ordre des proc|fffd|dures est importante, risque de m|fffd|li m|fffd|lo et bug
On Error Resume Next
'I. Interdiction de suppression Ent|fffd|te Tableur PROTECTION
'>> I.  Interdiction de saisie par annulation de modification
    If Not Intersect(Target, ActiveSheet.Range("PROTECTION")) Is Nothing Then
      Application.EnableEvents = False      'D|fffd|sactivation de la fonction de gestion d'|fffd|v|fffd|nement |fffd|viter micro freezing
      Application.Undo
      Application.EnableEvents = True      'R|fffd|activation de la fonction de gestion d'|fffd|v|fffd|nement
    End If
End Sub



Sub RENOM_FICHIER() 'Renommer fichier pdf
'I. D|fffd|claration variable
Dim numligne As Double
Dim source, destin, Fichier As String
'---------------------------------------------------------------------------------------------------------
On Error Resume Next 'gestion process d'erreur
Application.ScreenUpdating = False
'---------------------------------------------------------------------------------------------------------
'II. D|fffd|finition variable proc|fffd|dure
numligne = ThisWorkbook.ActiveSheet.Range(CELL_CIBLE).Row 'D|fffd|finit le r|fffd|pertoire contenant fichier
source = ThisWorkbook.ActiveSheet.Range("G" & numligne).Text & Application.PathSeparator 'def chemin source du fichier
destin = ThisWorkbook.ActiveSheet.Range("G" & numligne).Text & Application.PathSeparator 'def chemin de destination
Fichier = Dir(source & Application.PathSeparator & "*.pdf")
newnom = ThisWorkbook.ActiveSheet.Range("D" & numligne).Text & ".pdf" 'd|fffd|finition nouveau nom
'---------------------------------------------------------------------------------------------------------
'II.Ctrle Controle si nom de renom existant
If ThisWorkbook.ActiveSheet.Range("A" & numligne).Text = "" Then Exit Sub
If IsEmpty(ThisWorkbook.ActiveSheet.Range("B" & numligne).Value) = False And IsEmpty(ThisWorkbook.ActiveSheet.Range("D" & numligne).Value) = True Or ThisWorkbook.ActiveSheet.Range("D" & numligne) = " " Then
   Application.ScreenUpdating = True 'r|fffd|activation affichage
   ThisWorkbook.ActiveSheet.Range("D" & numligne).Interior.ColorIndex = 3 'colorer cellule pb en rouge
   MsgBox "New Filename is no valid" _
   & Chr(10) & "New Filename = " & ThisWorkbook.ActiveSheet.Range("D" & numligne).Text _
   & Chr(10) & "The new name is empty or is a space bar character, characters no valid, rename abandon", vbCritical, "ERROR RENAME"
   ThisWorkbook.ActiveSheet.Range("D" & numligne).Interior.ColorIndex = 2 'retour couleur cellule en blanc
   Exit Sub
End If
'---------------------------------------------------------------------------------------------------------
'III. Renommer fichier
zz = Dir(ThisWorkbook.ActiveSheet.Range("G" & numligne).Text & ThisWorkbook.ActiveSheet.Range("B" & numligne).Text)
If IsEmpty(ThisWorkbook.ActiveSheet.Range("B" & numligne).Value) = False And IsError(ThisWorkbook.ActiveSheet.Range("G" & numligne)) = False And ThisWorkbook.ActiveSheet.Range("A" & numligne) <> "" And Dir(ThisWorkbook.ActiveSheet.Range("G" & numligne).Text, vbDirectory) <> "" Then 'contr|fffd|le si formule nom donne une erreur, alors passe |fffd| ligne suivante
      If Dir(destin & newnom) <> "" Then 'Contr|fffd|le si fichier existe d|fffd|j|fffd|, donc doublon, mesure de modification
            Dim nbdoublon As Integer
            nbdoublon = 2
                        Do While Dir(destin & newnom) <> ""
                           newnom = ThisWorkbook.ActiveSheet.Range("D" & numligne).Text & " (" & nbdoublon & ")" & ".pdf"
                           nbdoublon = nbdoublon + 1
                        Loop
      End If
      Name source & Fichier As source & newnom '& ".pdf"
         '--------------------------------------------------------------------------------------------------------------------------
         'IV. M|fffd|J Lien hypertexte et valeur cellule en cours
         If Fichier <> "." And Fichier <> ".." Then
         'M|fffd|thode Hyperlinks
         'Address             Obligatoire    Cha|fffd|ne        Adresse du lien hypertexte.
         'ScreenTip          Facultatif       Variante      Info-bulle |fffd| afficher lorsque le pointeur de la souris se trouve sur le lien hypertexte.
         'TextToDisplay    Facultatif        Variante      Texte |fffd| afficher pour le lien hypertexte.
            ThisWorkbook.ActiveSheet.Hyperlinks.Add Anchor:=ThisWorkbook.ActiveSheet.Range("B" & numligne), _
            Address:=source & newnom, _
            ScreenTip:="(?) Click to open the file", _
            TextToDisplay:=newnom
            ThisWorkbook.ActiveSheet.Range("B" & numligne).Font.Name = "Calibri"
            ThisWorkbook.ActiveSheet.Range("B" & numligne).Font.Size = 8
         End If
         '--------------------------------------------------------------------------------------------------------------------------
End If
'--------------------------------------------------------------------------------------------------------------------------
'V. Process animation fin
Application.ScreenUpdating = True 'r|fffd|activation affichage
Application.Speech.Speak ">finished!", True 'Vocal asynchrone
ANIM_WAITFORM 'animation
'--------------------------------------------------------------------------------------------------------------------------
End Sub


Sub TRANSFERT_FICHIER_PDF() 'MACRO DE TRANSFERT DES FICHIERS
'I. D|fffd|claration variables proc|fffd|dure
Dim repertoirescans, repertoiresimmat As String, newnom As String
Dim numligne As Integer, objOFS As Variant
'---------------------------------------------------------------------------------------------------------
On Error Resume Next 'gestion process d'erreur
Application.ScreenUpdating = False
'---------------------------------------------------------------------------------------------------------
'II. Controle chemin d'acc|fffd|s, SI Chemin n'existe pas alors message |fffd| USER et FIN proc|fffd|dure
numligne = ThisWorkbook.ActiveSheet.Range(CELL_CIBLE).Row 'D|fffd|finit le r|fffd|pertoire contenant fichier
If ThisWorkbook.ActiveSheet.Range("B" & numligne).Text = "" Then Exit Sub 'si nom fichier = rien sort
   If Dir(ThisWorkbook.ActiveSheet.Range("H" & numligne).Value, vbDirectory) = "" Then 'si fichier non dans le r|fffd|pertoire exploreur process de sortie
      Application.ScreenUpdating = True
      ThisWorkbook.ActiveSheet.Range("B" & numligne).Interior.ColorIndex = 3 'color cellule |fffd| pb en rouge
      MsgBox "The folder path not exist :" & Chr(10) & ThisWorkbook.ActiveSheet.Range("H" & numligne).Text & Chr(10) & Chr(10) & "Move stop", vbCritical, "ERROR PATH FOLDER"
      ThisWorkbook.ActiveSheet.Range("B" & numligne).Interior.ColorIndex = 2 'retour couleur cellule
      Exit Sub 'FIN SUB
   End If
'---------------------------------------------------------------------------------------------------------------------
'III. D|fffd|finition variable proc|fffd|dure
scan = Dir(ThisWorkbook.ActiveSheet.Range("G" & numligne).Text & Application.PathSeparator & "*.PDF", vbDirectory)
newnom = ThisWorkbook.ActiveSheet.Range("B" & numligne).Value 'd|fffd|finition nom
'---------------------------------------------------------------------------------------------------------------------
'IV. TRANSFERT FICHIER
Application.EnableEvents = False
   scan = Dir(ThisWorkbook.ActiveSheet.Range("G" & numligne).Text & Application.PathSeparator & ThisWorkbook.ActiveSheet.Range("B" & numligne).Text)   'def nom fichier |fffd| traiter en cours
   'IV.1 si chemin existe traiter
   If Not Dir(ThisWorkbook.ActiveSheet.Range("H" & numligne).Text & Application.PathSeparator, vbDirectory) = "" And Not ThisWorkbook.ActiveSheet.Range("A" & numligne).Text = "" And ThisWorkbook.ActiveSheet.Range("A" & numligne).Text <> "" Then
   source = ThisWorkbook.ActiveSheet.Range("G" & numligne).Text & Application.PathSeparator & ThisWorkbook.ActiveSheet.Range("B" & numligne).Text   'def chemin source du fichier avec le nom du fichier en cours
   destin = ThisWorkbook.ActiveSheet.Range("H" & numligne).Text & Application.PathSeparator & ThisWorkbook.ActiveSheet.Range("B" & numligne).Text   'def chemin de destination avec le nom du fichier en cours
   Set objOFS = CreateObject("Scripting.FileSystemObject")   'cr|fffd|ation d'un objet script de gestion de systeme fichier
       If (objOFS.FileExists(source)) Then        'si fichier source existe alors bouge le fichier du chemin source |fffd| son chemin de destination, comprenant le nom du fichier
           objOFS.moveFile source, destin
            ThisWorkbook.ActiveSheet.Hyperlinks.Add Anchor:=ThisWorkbook.ActiveSheet.Range("B" & numligne), _
            Address:=destin, _
            ScreenTip:="(?) Click to open the file", _
            TextToDisplay:=newnom
            '++++++++++++++++++++++++++++++++++++++++++++++
            ThisWorkbook.ActiveSheet.Range("B" & numligne).Font.Name = "Calibri"
            ThisWorkbook.ActiveSheet.Range("B" & numligne).Font.Size = 8
            ThisWorkbook.ActiveSheet.Range("G" & numligne).Value = ThisWorkbook.ActiveSheet.Range("H" & numligne).Text
            '++++++++++++++++++++++++++++++++++++++++++++++
            Application.Speech.Speak ">finished!", True
            Application.ScreenUpdating = True
            ANIM_WAITFORM
            '++++++++++++++++++++++++++++++++++++++++++++++
            MsgBox "Move Pdf file is completed, Updated Manager Ok", vbInformation, "Information : Move file"
            '---------------------------------------------------------------------------------------------------------
       Else
            '---------------------------------------------------------------------------------------------------------
            Application.Speech.Speak ">error!", True
            Application.ScreenUpdating = True
            ThisWorkbook.ActiveSheet.Range("B" & numligne).Interior.ColorIndex = 3
            ANIM_WAITFORM
            MsgBox "No valid informations :" _
            & Chr(10) & "Filename : " & ThisWorkbook.ActiveSheet.Range("B" & numligne).Text _
            & Chr(10) & "File path : " & ThisWorkbook.ActiveSheet.Range("G" & numligne).Text _
            & Chr(10) & "Move path : " & ThisWorkbook.ActiveSheet.Range("H" & numligne).Text _
            & Chr(10) & Chr(10) & "Stop move", vbCritical, "ERROR PATH FOLDER"
            ThisWorkbook.ActiveSheet.Range("B" & numligne).Interior.ColorIndex = 2
            '---------------------------------------------------------------------------------------------------------
       End If
       Set objOFS = Nothing 'raz de l'objet
   Else 'si rien
   '---------------------------------------------------------------------------------------------------------
   Application.Speech.Speak ">error!", True
   Application.ScreenUpdating = True
   ThisWorkbook.ActiveSheet.Range("B" & numligne).Interior.ColorIndex = 3
   ANIM_WAITFORM
   MsgBox "No valid Informations :" _
   & Chr(10) & "Filename : " & ThisWorkbook.ActiveSheet.Range("B" & numligne).Text _
   & Chr(10) & "Path folder : " & ThisWorkbook.ActiveSheet.Range("G" & numligne).Text _
   & Chr(10) & "Move path : " & ThisWorkbook.ActiveSheet.Range("H" & numligne).Text _
   & Chr(10) & Chr(10) & "Stop move", vbCritical, "ERROR PATH FOLDER"
   ThisWorkbook.ActiveSheet.Range("B" & numligne).Interior.ColorIndex = 2
   '---------------------------------------------------------------------------------------------------------
   End If
'---------------------------------------------------------------------------------------------------------
scan = Dir()
Application.EnableEvents = True
Application.ScreenUpdating = True
'---------------------------------------------------------------------------------------------------------
End Sub


Sub MAILING_OUTLOOK() 'MAILER Fichier
'I. D|fffd|claration des variables
Dim MonOutlook, MonMessage As Object 'objet nouveau message
Dim DESTINATAIRES_MAIL, SUJET_MAIL, FICHIER_MAIL, STRBODYMAIL As String
Dim numligne As Double 'num|fffd|ro de ligne
'---------------------------------------------------------------------------------------------------------
'II. D|fffd|finition variable proc|fffd|dure
numligne = ThisWorkbook.ActiveSheet.Range(CELL_CIBLE).Row 'D|fffd|finit le r|fffd|pertoire contenant fichier
If ThisWorkbook.ActiveSheet.Range("B" & numligne).Text = "" Then Exit Sub
If ThisWorkbook.ActiveSheet.Range("K" & numligne).Text = "" And ThisWorkbook.ActiveSheet.Range("B" & numligne).Text <> "" Then
      Application.ScreenUpdating = True
      ThisWorkbook.ActiveSheet.Range("K" & numligne).Interior.ColorIndex = 3 'color cellule |fffd| pb en rouge
      MsgBox "Mail adress no exist :" & Chr(10) & ThisWorkbook.ActiveSheet.Range("K" & numligne).Text & Chr(10) & Chr(10) & "Stop mailer", vbCritical, "ERROR MAILER"
      ThisWorkbook.ActiveSheet.Range("K" & numligne).Interior.ColorIndex = 2 'retour couleur cellule
      Exit Sub 'FIN SUB
End If
'---------------------------------------------------------------------------------------------------------
On Error Resume Next 'gestion process d'erreur
Application.ScreenUpdating = False
Application.EnableEvents = False
'---------------------------------------------------------------------------------------------------------
'III. Envoi du mail si fichier et adresse remplie
If ThisWorkbook.ActiveSheet.Range("K" & numligne) <> "" And ThisWorkbook.ActiveSheet.Range("B" & numligne) <> "" Then 'contr|fffd|le si formule nom donne une erreur, alors passe |fffd| ligne suivante
   'III.a. DEF VARIABLE  :
   Set MonOutlook = CreateObject("Outlook.Application") 'On cr|fffd|e une instance d'Outlook
   Set MonMessage = MonOutlook.CreateItem(0) 'Et on cr|fffd|e un |fffd|l|fffd|ment Outlook, qui sera un message E-Mail
   DESTINATAIRES_MAIL = ThisWorkbook.ActiveSheet.Range("K" & numligne).Value 'destinaires en copie mail
   SUJET_MAIL = "Your .Pdf file : " & ThisWorkbook.ActiveSheet.Range("B" & numligne).Value 'sujet du mail
   FICHIER_MAIL = ThisWorkbook.ActiveSheet.Range("G" & numligne).Value & Application.PathSeparator & ThisWorkbook.ActiveSheet.Range("B" & numligne).Value  'PJ fichier amende
   '--------------------------------------------------------------------------------------------------------------------------
   'III.b. Cr|fffd|ation du mail
   '--------------------------------------------------------------------------------------------------------------------------
   MonMessage.To = DESTINATAIRES_MAIL   'III.b indication du destinataires directs
   MonMessage.Subject = SUJET_MAIL   'III.b Sujet du mail
   MonMessage.Attachments.Add FICHIER_MAIL   'III.b Pi|fffd|ce jointe
   MonMessage.send   'III.c Affichage du mail pr|fffd|par|fffd|
   '--------------------------------------------------------------------------------------------------------------------------
   Set MonOutlook = Nothing ' On ferme !
   '--------------------------------------------------------------------------------------------------------------------------
   Application.Speech.Speak ">finished!", True
   Application.ScreenUpdating = True
   ANIM_WAITFORM
   MsgBox "The email sent at : " & ThisWorkbook.ActiveSheet.Range("K" & numligne).Text, vbInformation, "CONFIRMATION MAIL"
   '--------------------------------------------------------------------------------------------------------------------------
Else
   '--------------------------------------------------------------------------------------------------------------------------
   Application.Speech.Speak ">Error!", True
   ThisWorkbook.ActiveSheet.Range("K" & numligne).Interior.ColorIndex = 3
   Application.ScreenUpdating = True
   ANIM_WAITFORM
   MsgBox "Informations mailer no valid :" _
   & Chr(10) & "Filename : " & ThisWorkbook.ActiveSheet.Range("B" & numligne).Text _
   & Chr(10) & "Mail Adress : " & ThisWorkbook.ActiveSheet.Range("K" & numligne).Text _
   & Chr(10) & "Have-you Outlook ? If Yes, have-you activated the VBA reference in 'Tools' : Microsoft Outlook xx.x ?" _
   & Chr(10) & Chr(10) & "Mailer stop", vbCritical, "ERROR MAILER"
   ThisWorkbook.ActiveSheet.Range("K" & numligne).Interior.ColorIndex = 2
   '--------------------------------------------------------------------------------------------------------------------------
End If
If Err Then
   Application.Speech.Speak ">Error!", True
   ThisWorkbook.ActiveSheet.Range("K" & numligne).Interior.ColorIndex = 3
   Application.ScreenUpdating = True
   ANIM_WAITFORM
   MsgBox "Informations mailer no valid :" _
   & Chr(10) & "Filename : " & ThisWorkbook.ActiveSheet.Range("B" & numligne).Text _
   & Chr(10) & "Mail Adress : " & ThisWorkbook.ActiveSheet.Range("K" & numligne).Text _
   & Chr(10) & "Have-you Outlook ? If Yes, have-you activated the VBA reference in 'Tools' : Microsoft Outlook xx.x ?" _
   & Chr(10) & Chr(10) & "Mailer stop", vbCritical, "ERROR MAILER"
   ThisWorkbook.ActiveSheet.Range("K" & numligne).Interior.ColorIndex = 2
End If
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub


'________________________________________________________________________
Sub IMPRIMER_FICHIER()
Dim NOM_FICHIER As String
Dim x As Long
Dim numligne As Double 'num|fffd|ro de ligne
'---------------------------------------------------------------------------------------------------------
'II. D|fffd|finition variable proc|fffd|dure
numligne = ThisWorkbook.ActiveSheet.Range(CELL_CIBLE).Row 'D|fffd|finit le r|fffd|pertoire contenant fichier
If ThisWorkbook.ActiveSheet.Range("B" & numligne).Text = "" And ThisWorkbook.ActiveSheet.Range("G" & numligne).Value = "" Then Exit Sub
'---------------------------------------------------------------------------------------------------------
'On Error Resume Next 'gestion process d'erreur
'---------------------------------------------------------------------------------------------------------
If ThisWorkbook.ActiveSheet.Range("B" & numligne).Text <> "" And ThisWorkbook.ActiveSheet.Range("G" & numligne).Text <> "" Then 'contr|fffd|le si formule nom donne une erreur, alors passe |fffd| ligne suivante
x = FindWindow("xlmain", Application.Caption)
NOM_FICHIER = ThisWorkbook.ActiveSheet.Range("G" & numligne).Value & ThisWorkbook.ActiveSheet.Range("B" & numligne).Value
'---------------------------------------------------------------------------------------------------------
    ShellExecute x, "print", NOM_FICHIER, "", "", 1
    Application.Speech.Speak ">finished!", True
   ANIM_WAITFORM
'---------------------------------------------------------------------------------------------------------
Else
   '---------------------------------------------------------------------------------------------------------
   Application.Speech.Speak ">Errorr!", True
   ThisWorkbook.ActiveSheet.Range("B" & numligne).Interior.ColorIndex = 3
   Application.ScreenUpdating = True
   ANIM_WAITFORM
   MsgBox "Informations to print no valid :" _
   & Chr(10) & "Filename : " & ThisWorkbook.ActiveSheet.Range("B" & numligne).Text _
   & Chr(10) & "File path : " & ThisWorkbook.ActiveSheet.Range("G" & numligne).Text _
   & Chr(10) & Chr(10) & "Print stop", vbCritical, "ERROR PRINT"
   ThisWorkbook.ActiveSheet.Range("B" & numligne).Interior.ColorIndex = 2
   '---------------------------------------------------------------------------------------------------------
End If
End Sub


Sub SUPPRIMER_FICHIER()
Dim numligne As Double 'num|fffd|ro de ligne
'---------------------------------------------------------------------------------------------------------
'II. D|fffd|finition variable proc|fffd|dure
numligne = ThisWorkbook.ActiveSheet.Range(CELL_CIBLE).Row 'D|fffd|finit le r|fffd|pertoire contenant fichier
NOM_FICHIER = ThisWorkbook.ActiveSheet.Range("G" & numligne).Value & Application.PathSeparator & ThisWorkbook.ActiveSheet.Range("B" & numligne).Value
'---------------------------------------------------------------------------------------------------------
On Error Resume Next 'gestion process d'erreur
If ThisWorkbook.ActiveSheet.Range("B" & numligne).Value = "" And ThisWorkbook.ActiveSheet.Range("G" & numligne).Value = "" Then Exit Sub 'sort de la sub si rien |fffd| traiter
'---------------------------------------------------------------------------------------------------------
ThisWorkbook.ActiveSheet.Range("B" & numligne).Interior.Color = 192
         If ThisWorkbook.ActiveSheet.Range("B" & numligne).Value <> "" And ThisWorkbook.ActiveSheet.Range("G" & numligne).Value <> "" Then 'contr|fffd|le si formule nom donne une erreur, alors passe |fffd| ligne suivante
            'I. Message de demande de confirmation |fffd| User
            Select Case MsgBox("Are-your sure, want to delete this file ?", vbOKCancel + vbQuestion + vbDefaultButton1, "CONFIRMATION")
                Case vbOK
                  '---------------------------------------------------------------------------------------------------------
                  Kill NOM_FICHIER
                  ThisWorkbook.ActiveSheet.Range("B" & numligne).Value = ""
                  ThisWorkbook.ActiveSheet.Range("C" & numligne).Value = ""
                  ThisWorkbook.ActiveSheet.Range("D" & numligne).Value = ""
                  ThisWorkbook.ActiveSheet.Range("G" & numligne).Value = ""
                  ThisWorkbook.ActiveSheet.Range("H" & numligne).Value = ""
                  ThisWorkbook.ActiveSheet.Range("K" & numligne).Value = ""
                  ThisWorkbook.ActiveSheet.Range("R" & numligne).Value = ""
                  ThisWorkbook.ActiveSheet.Range("S" & numligne).Value = ""
                  ThisWorkbook.ActiveSheet.Range("T" & numligne).Value = ""
                  Application.Speech.Speak ">finished!", True
                  Application.ScreenUpdating = True
                  ANIM_WAITFORM
                  MsgBox "Ok file deleted", vbInformation, "CONFIRMATION DELETED"
                  '---------------------------------------------------------------------------------------------------------
                Case vbCancel
            End Select
         Else
            '---------------------------------------------------------------------------------------------------------
            Application.Speech.Speak ">Error!", True
            ThisWorkbook.ActiveSheet.Range("B" & numligne).Interior.ColorIndex = 3
            Application.ScreenUpdating = True
            ANIM_WAITFORM
            MsgBox "Informations to delete no valid :" _
            & Chr(10) & "Filename : " & ThisWorkbook.ActiveSheet.Range("B" & numligne).Text _
            & Chr(10) & "File Path : " & ThisWorkbook.ActiveSheet.Range("G" & numligne).Text _
            & Chr(10) & Chr(10) & "Delete sop", vbCritical, "ERROR"
            ThisWorkbook.ActiveSheet.Range("B" & numligne).Interior.ColorIndex = 2
            '---------------------------------------------------------------------------------------------------------
         End If
         '---------------------------------------------------------------------------------------------------------
   ThisWorkbook.ActiveSheet.Range("B" & numligne).Interior.Pattern = xlNone
   Set GestionFichier = Nothing
End Sub


Sub APPEL_LISTE_FICHIERS_PDF() 'Appel de la liste des fichiers excel |fffd| partir du chemin dossier indiqu|fffd| par l'user
'I. D|fffd|claration variables proc|fffd|dure
Dim Chemin As String, Fichier As String, numligne As Integer, compteurfichier As Integer
'---------------------------------------------------------------------------------------------------------
On Error Resume Next 'gestion process d'erreur
'---------------------------------------------------------------------------------------------------------
'II. Choix Sauvegarde fichier en .csv
With Application.FileDialog(msoFileDialogFolderPicker)
     .Filters.Clear
     .ButtonName = "Select folder containt the Pdf files" 'Titre du bouton
     .Title = "Box : Selection Pdf folder" '      'Titre de la boite de dialogue
     .InitialFileName = ActiveWorkbook.Path 'd|fffd|finition 1er dossier d'ouverture sur chemin fichier
     .Show      'Ouverture du gestionnaire de choix de dossier
     If .SelectedItems.Count > 0 Then      'Si choix existe
       Chemin = .SelectedItems(1) & Application.PathSeparator    'La variable de choix dossier prend la valeur du choix dans la boite de dialogue
     Else
        Chemin = "" 'si pas de choix rien et sort de la sub
        Application.EnableEvents = True
        Application.ScreenUpdating = True
       Exit Sub
      End If
End With
'---------------------------------------------------------------------------------------------------------------------
'II. Controle chemin d'acc|fffd|s, SI Chemin n'existe pas alors message |fffd| USER et FIN proc|fffd|dure
'If Dir(Chemin, vbDirectory) = "" Then 'En d|fffd|but de proc|fffd|dure, afin d'|fffd|viter le bug de r|fffd|initialisation de la variable fichier, qui n'appel qu'un fichier
   'MsgBox "Le chemin d'acc|fffd|s du dossier des fichiers entr|fffd| n'existe pas" & Chr(10) & Range("A5").Text & Chr(10) & Chr(10) & "Abandon de l'appel fichier(s)", vbCritical, "ERREUR CHEMIN DOSSIER"
   'End 'FIN SUB
'End If
'---------------------------------------------------------------------------------------------------------------------
'III. D|fffd|finition variable proc|fffd|dure
Fichier = Dir(Chemin & "*.pdf", vbDirectory) 'III.b. Boucle sur tous les fichiers xlsm du r|fffd|pertoire indiqu|fffd| pr|fffd|c|fffd|demment, xlsm avec macro, afin de lancer en auto les macros
numligne = ThisWorkbook.ActiveSheet.Range("B1048576").End(xlUp).Row + 1 'D|fffd|finit le r|fffd|pertoire contenant le dernier fichier
compteurfichier = 0 'III.d. D|fffd|finit le nombre de fichiers appel|fffd|s
'---------------------------------------------------------------------------------------------------------------------
Application.ScreenUpdating = False
Application.EnableEvents = False
   'V. Boucle DO While Loop pour appel des fichiers dans le tableur du dossier de planification
    Do While Fichier <> ""
   'V.a. Remonte le nom du fichier, formate la cellule pour cr|fffd|ation de lien hypertexte 'variable CHEMIN = chemin d'acc|fffd|s // variable FICHIER = nom fichier
         If Fichier <> "." And Fichier <> ".." Then
         Set objFSO = CreateObject("Scripting.FileSystemObject") 'D|fffd|claration d'un objet en VBScript pour lire les propri|fffd|t|fffd|s du Pdf
         Set objectfile = objFSO.GetFile(Chemin & Fichier) 'D|fffd|finition de l'objet script
         ThisWorkbook.ActiveSheet.Hyperlinks.Add Anchor:=ThisWorkbook.ActiveSheet.Range("B" & numligne), _
         Address:=Chemin & Fichier, _
         ScreenTip:="Click to open the file", _
         TextToDisplay:=Fichier
   'V.a. Format du Nom fichier
            ThisWorkbook.ActiveSheet.Range("B" & numligne).Font.Name = "Calibri" 'Nom du fichier
            ThisWorkbook.ActiveSheet.Range("B" & numligne).Font.Size = 8 'Nom du fichier
            ThisWorkbook.ActiveSheet.Range("G" & numligne).Value = Chemin 'Chemin du fichier
            ThisWorkbook.ActiveSheet.Range("C" & numligne).Value = GetPageNum(Chemin & Application.PathSeparator & Fichier) 'Nombre de page
            ThisWorkbook.ActiveSheet.Range("R" & numligne).Value = objectfile.DateCreated 'date de cr|fffd|ation
            ThisWorkbook.ActiveSheet.Range("S" & numligne).Value = objectfile.DateLastModified 'date de derni|fffd|re modification
            ThisWorkbook.ActiveSheet.Range("T" & numligne).Value = objectfile.Size / 1048576 'taille en octets convertit en Mo
   'V.d. Ajoute +1 au num|fffd|ro de ligne en cours pour aller |fffd| la ligne suivante
        numligne = numligne + 1
   'V.e. Ajoute +1 au compteur fichier pour augmenter la variable du nombre de fichier appel|fffd|
       compteurfichier = compteurfichier + 1
         End If
   'V.c. RAZ de la variable fichier, pour passer au suivant dans le r|fffd|pertoire
        Fichier = Dir()
    Loop
'---------------------------------------------------------------------------------------------------------------------
    'R|fffd|activation de la fonction de gestion d'|fffd|v|fffd|nement de la feuille et du classeur
     Application.ScreenUpdating = True
     Application.EnableEvents = True
'---------------------------------------------------------------------------------------------------------------------
'VI. Message d'information que le listage fichier a |fffd|t|fffd| effectu|fffd|e
If compteurfichier = 0 Then
   'VI.a. Si compteur fichier appel|fffd| = 0 alors message user, qu'aucun fichier .xlsm n'a |fffd|t|fffd| trouv|fffd|
   Application.Speech.Speak ">error!", True
   ANIM_WAITFORM
   MsgBox "PDF Files import is completed" & Chr(10) & compteurfichier & " Files Numbers" & Chr(10) & "File not found", vbExclamation, "INFORMATION"
Else
   'VI.a. Si compteur fichier appel|fffd| => 1 alors message user, que fichier .xlsm a |fffd|t|fffd| trouv|fffd|
   Application.Speech.Speak ">finished!", True
   ANIM_WAITFORM
   MsgBox "Pdf files import is completed" & Chr(10) & compteurfichier & " Files imported", vbInformation, "INFORMATION"
End If
End Sub
'---------+++++++++++++++++++++++++++++++++++++++++++++-------------------------------
Function GetPageNum(PDF_File As String)
Dim FileNum As Long
Dim strRetVal As String
Dim RegExp As Object
'---------------------------------------------------------------------------------------------------------
On Error Resume Next 'gestion process d'erreur
'---------------------------------------------------------------------------------------------------------
Set RegExp = CreateObject("VBscript.RegExp")
RegExp.Global = True
RegExp.Pattern = "/Type\s*/Page[^s]"
FileNum = FreeFile
Open PDF_File For Binary As #FileNum
strRetVal = Space(LOF(FileNum))
Get #FileNum, , strRetVal
Close #FileNum
GetPageNum = RegExp.Execute(strRetVal).Count
End Function


Sub COLOR_BOUTON() 'Colorer bouton si clic
'---------------------------------------------------------------------------------------------------------
On Error Resume Next 'gestion process d'erreur
'---------------------------------------------------------------------------------------------------------
If ActiveSheet.Shapes.Range(Array("Image 18")).Fill.ForeColor.RGB = RGB(192, 0, 0) Then
Application.Speech.Speak ">activate>animations!", True
ActiveSheet.Shapes.Range(Array("Image 18")).Fill.ForeColor.ObjectThemeColor = msoThemeColorAccent1 'bleu
Else
Application.Speech.Speak ">deactivate>animations!", True
ActiveSheet.Shapes.Range(Array("Image 18")).Fill.ForeColor.RGB = RGB(192, 0, 0) 'rouge
End If
End Sub


Sub REINITIALISER_LISTE_GEST() 'RAZ liste
Dim debnumligne, finnumligne As Double 'num|fffd|ro de ligne
'---------------------------------------------------------------------------------------------------------
On Error Resume Next 'gestion process d'erreur
Application.ScreenUpdating = False
Application.EnableEvents = False
'---------------------------------------------------------------------------------------------------------
'II. D|fffd|finition variable proc|fffd|dure
debnumligne = ThisWorkbook.ActiveSheet.Range("BARRE_TITRE_GESTIONNAIRE").Row + 1
finnumligne = ThisWorkbook.ActiveSheet.Range("B1048576").End(xlUp).Row
If finnumligne <= debnumligne Then
finnumligne = debnumligne + 1
End If
            Select Case MsgBox("Are-You sure want to reset the manager list ?", vbOKCancel + vbQuestion + vbDefaultButton1, "CONFIRMATION REQUEST")
                Case vbOK
                        'III. RAZ
                        ThisWorkbook.ActiveSheet.Range("B" & debnumligne, "B" & finnumligne).Value = "" 'nom fichier
                        ThisWorkbook.ActiveSheet.Range("C" & debnumligne, "C" & finnumligne).Value = "" 'nb pages
                        ThisWorkbook.ActiveSheet.Range("D" & debnumligne, "D" & finnumligne).Value = "" 'nouveau nom
                        ThisWorkbook.ActiveSheet.Range("F" & debnumligne, "F" & finnumligne).Value = "" 'indic
                        ThisWorkbook.ActiveSheet.Range("G" & debnumligne, "G" & finnumligne).Value = "" 'chemin fichier
                        ThisWorkbook.ActiveSheet.Range("H" & debnumligne, "H" & finnumligne).Value = "" 'chemin d|fffd|placement
                        ThisWorkbook.ActiveSheet.Range("J" & debnumligne, "J" & finnumligne).Value = "" 'indic
                        ThisWorkbook.ActiveSheet.Range("K" & debnumligne, "K" & finnumligne).Value = "" 'mail
                        ThisWorkbook.ActiveSheet.Range("M" & debnumligne, "M" & finnumligne).Value = "" 'indic
                        ThisWorkbook.ActiveSheet.Range("O" & debnumligne, "O" & finnumligne).Value = "" 'indic
                        ThisWorkbook.ActiveSheet.Range("Q" & debnumligne, "Q" & finnumligne).Value = "" 'indic
                        ThisWorkbook.ActiveSheet.Range("R" & debnumligne, "R" & finnumligne).Value = "" 'date de cr|fffd|ation
                        ThisWorkbook.ActiveSheet.Range("S" & debnumligne, "S" & finnumligne).Value = "" 'date de derni|fffd|re modification
                        ThisWorkbook.ActiveSheet.Range("T" & debnumligne, "T" & finnumligne).Value = "" 'taille en octets convertit en Mo
                        Application.ScreenUpdating = True
                        Application.Speech.Speak ">finished!", True
                        ANIM_WAITFORM
                Case vbCancel 'choix non
            End Select
'---------------------------------------------------------------------------------------------------------
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub


Sub BOUCLE_RENOM_FICHIERS() 'Renommage fichier pdf
'II. D|fffd|claration variable
Dim numligne, erreurs, debnumligne, finnumligne As Double
Dim source, destin, Fichier As String
'---------------------------------------------------------------------------------------------------------
Select Case MsgBox("Are-you sure want to rename all pdf file of the manager list ?", vbOKCancel + vbQuestion + vbDefaultButton1, "CONFIRMATION REQUEST")
          Case vbOK 'ok poursuit macro
          Case vbCancel 'si annuler
                  Exit Sub 'sort de macro
End Select
'---------------------------------------------------------------------------------------------------------
On Error Resume Next 'gestion process d'erreur
Application.ScreenUpdating = False
Application.EnableEvents = False
'---------------------------------------------------------------------------------------------------------
'III. D|fffd|finition variable proc|fffd|dure
numligne = ThisWorkbook.ActiveSheet.Range("BARRE_TITRE_GESTIONNAIRE").Row + 1 'III.a. D|fffd|finit le r|fffd|pertoire contenant les fichiers
source = ThisWorkbook.ActiveSheet.Range("G" & numligne).Text & Application.PathSeparator  'def chemin source du fichier avec le nom du fichier en cours
destin = ThisWorkbook.ActiveSheet.Range("G" & numligne).Text & Application.PathSeparator  'def chemin de destination avec le nom du fichier en cours
Fichier = Dir(source & Application.PathSeparator & "*.pdf")
erreurs = 0
debnumligne = ThisWorkbook.ActiveSheet.Range("BARRE_TITRE_GESTIONNAIRE").Row + 1
finnumligne = ThisWorkbook.ActiveSheet.Range("B1048576").End(xlUp).Row
If finnumligne <= debnumligne Then
finnumligne = debnumligne + 1
End If
ThisWorkbook.ActiveSheet.Range("F" & debnumligne, "F" & finnumligne).Value = "" 'effacer indicateurs pr|fffd|c|fffd|dent
On Error GoTo 0
'IV boucle tant que nom fichier dans cellule C en cours ne renvoi pas du vide
Do While ThisWorkbook.ActiveSheet.Range("B" & numligne).Value <> ""  'And ThisWorkbook.ActiveSheet.Range("D" & numligne).Value <> ""
On Error GoTo error:
      'IV.a. Modif du nom fichier |fffd| celui indiqu|fffd| dans la colonne nom fichier amende F
      destin = ThisWorkbook.ActiveSheet.Range("G" & numligne).Text & Application.PathSeparator & ThisWorkbook.ActiveSheet.Range("D" & numligne).Text & Application.PathSeparator
      source = ThisWorkbook.ActiveSheet.Range("G" & numligne).Text & Application.PathSeparator  'def chemin source du fichier avec le nom du fichier en cours
      Fichier = Dir(source & Application.PathSeparator & ThisWorkbook.ActiveSheet.Range("B" & numligne).Text, vbNormal)
      newnom = ThisWorkbook.ActiveSheet.Range("D" & numligne).Text & ".pdf"
      If IsError(ThisWorkbook.ActiveSheet.Range("D" & numligne)) = False And ThisWorkbook.ActiveSheet.Range("D" & numligne).Value <> "" Then 'contr|fffd|le si formule nom donne une erreur, alors passe |fffd| ligne suivante
                  If Dir(destin & newnom) <> "" Then 'Contr|fffd|le si fichier existe d|fffd|j|fffd|, donc doublon, mesure de modification
                        Dim nbdoublon As Integer
                        nbdoublon = 2
                        Do While Dir(destin & newnom) <> ""
                              newnom = ThisWorkbook.ActiveSheet.Range("D" & numligne).Text & " (" & nbdoublon & ")" & ".pdf"
                              nbdoublon = nbdoublon + 1
                        Loop
                  End If
      Name source & Fichier As source & newnom '& ".pdf"
      '--------------------------------------------------------------------------------------------------------------------------
      'IV.b. M|fffd|J Lien hypertexte et valeur cellule en cours - Remonte le nom du fichier, formate la cellule pour cr|fffd|ation de lien hypertexte 'variable CHEMIN = chemin d'acc|fffd|s // variable FICHIER = nom fichier
      If Fichier <> "." And Fichier <> ".." Then
      'M|fffd|thode Hyperlinks
      'Address             Obligatoire    Cha|fffd|ne        Adresse du lien hypertexte.
      'ScreenTip          Facultatif       Variante      Info-bulle |fffd| afficher lorsque le pointeur de la souris se trouve sur le lien hypertexte.
      'TextToDisplay    Facultatif        Variante      Texte |fffd| afficher pour le lien hypertexte.
            ThisWorkbook.ActiveSheet.Hyperlinks.Add Anchor:=ThisWorkbook.ActiveSheet.Range("B" & numligne), _
            Address:=source & newnom, _
            ScreenTip:="Click to open the file", _
            TextToDisplay:=newnom
            ThisWorkbook.ActiveSheet.Range("B" & numligne).Font.Name = "Calibri"
            ThisWorkbook.ActiveSheet.Range("B" & numligne).Font.Size = 8
            ThisWorkbook.ActiveSheet.Range("F" & numligne).Value = 1 'indicateur r|fffd|ussite
         End If
         '--------------------------------------------------------------------------------------------------------------------------
      End If
'--------------------------------------------------------------------------------------------------------------------------
If ThisWorkbook.ActiveSheet.Range("D" & numligne).Value = "" Or ThisWorkbook.ActiveSheet.Range("D" & numligne).Value = " " Then 'si nouveau nom vide
   ThisWorkbook.ActiveSheet.Range("F" & numligne).Value = 0
   erreurs = erreurs + 1
End If
error:
If Err Then
   ThisWorkbook.ActiveSheet.Range("F" & numligne).Value = 0
   erreurs = erreurs + 1
   Resume error_continu:
End If
'--------------------------------------------------------------------------------------------------------------------------
error_continu:
numligne = numligne + 1
Loop
'--------------------------------------------------------------------------------------------------------------------------
Application.ScreenUpdating = True
Application.EnableEvents = True
'--------------------------------------------------------------------------------------------------------------------------
'V. Process animation fin
Application.ScreenUpdating = True 'r|fffd|activation affichage
Application.Speech.Speak ">finished!", True 'Vocal asynchrone
ANIM_WAITFORM 'animation
MsgBox "Rename Pdf files are completed" & Chr(10) & "Error numbers : " & erreurs & Chr(10) & Chr(10) & "If error, to check valid characters name, forbid : /*!&<>_\=", vbInformation, "END RENAME"
'--------------------------------------------------------------------------------------------------------------------------
End Sub


Sub BOUCLE_DEPLACER_FICHIERS() 'MACRO DE TRANSFERT DES FICHIERS SCAN DANS DOSSIERS AMENDE
'I. D|fffd|claration variables proc|fffd|dure
Dim repertoirescans, repertoiresimmat As String, newnom As String
Dim numligne As Integer, objOFS As Variant
Dim erreurs As Double
'---------------------------------------------------------------------------------------------------------
Select Case MsgBox("Are-you sure want to move all pdf files in the manager list ?", vbOKCancel + vbQuestion + vbDefaultButton1, "CONFIRMATION REQUEST")
          Case vbOK 'ok poursuit macro
          Case vbCancel 'si annuler
                  Exit Sub 'sort de macro
End Select
'---------------------------------------------------------------------------------------------------------
On Error Resume Next 'gestion process d'erreur
Application.ScreenUpdating = False
Application.EnableEvents = False
'---------------------------------------------------------------------------------------------------------
'II. Controle chemin d'acc|fffd|s, SI Chemin n'existe pas alors message |fffd| USER et FIN proc|fffd|dure
numligne = ThisWorkbook.ActiveSheet.Range("BARRE_TITRE_GESTIONNAIRE").Row + 1 'III.a. D|fffd|finit le r|fffd|pertoire contenant les fichiers
   If Dir(ThisWorkbook.ActiveSheet.Range("H" & numligne).Value, vbDirectory) = "" Then
      Application.ScreenUpdating = True
      ThisWorkbook.ActiveSheet.Range("H" & numligne).Interior.ColorIndex = 3
      ThisWorkbook.ActiveSheet.Range("B" & numligne).Interior.ColorIndex = 3
      MsgBox "The first folder path no exist :" & Chr(10) & ThisWorkbook.ActiveSheet.Range("H" & numligne).Text & Chr(10) & Chr(10) & "Move stop", vbCritical, "ERROR PATH FOLDER"
      ThisWorkbook.ActiveSheet.Range("H" & numligne).Interior.ColorIndex = 2
      ThisWorkbook.ActiveSheet.Range("B" & numligne).Interior.ColorIndex = 2
      Application.EnableEvents = True
      Exit Sub 'FIN SUB
   End If
'---------------------------------------------------------------------------------------------------------------------
'III. D|fffd|finition variable proc|fffd|dure
scan = Dir(ThisWorkbook.ActiveSheet.Range("G" & numligne).Text & Application.PathSeparator & "*.PDF", vbDirectory)
newnom = ThisWorkbook.ActiveSheet.Range("B" & numligne).Value 'd|fffd|finition nom
erreurs = 0
debnumligne = ThisWorkbook.ActiveSheet.Range("BARRE_TITRE_GESTIONNAIRE").Row + 1
finnumligne = ThisWorkbook.ActiveSheet.Range("B1048576").End(xlUp).Row
If finnumligne <= debnumligne Then
finnumligne = debnumligne + 1
End If
ThisWorkbook.ActiveSheet.Range("J" & debnumligne, "J" & finnumligne).Value = "" 'effacer indicateurs pr|fffd|c|fffd|dent
On Error GoTo 0
'---------------------------------------------------------------------------------------------------------------------
'4 boucle tant que nom fichier dans cellule C en cours ne renvoi pas du vide
Do While ThisWorkbook.ActiveSheet.Range("B" & numligne).Value <> "" Or ThisWorkbook.ActiveSheet.Range("H" & numligne).Value <> ""
On Error GoTo error:
scan = Dir(ThisWorkbook.ActiveSheet.Range("G" & numligne).Text & Application.PathSeparator & ThisWorkbook.ActiveSheet.Range("B" & numligne).Text)   'def nom fichier |fffd| traiter en cours
   'IV.1 si chemin existe traiter
   If Not Dir(ThisWorkbook.ActiveSheet.Range("H" & numligne).Text & Application.PathSeparator, vbDirectory) = "" And Not ThisWorkbook.ActiveSheet.Range("A" & numligne).Text = "" And ThisWorkbook.ActiveSheet.Range("A" & numligne).Text <> "" Then
   source = ThisWorkbook.ActiveSheet.Range("G" & numligne).Text & Application.PathSeparator & ThisWorkbook.ActiveSheet.Range("B" & numligne).Text   'def chemin source du fichier avec le nom du fichier en cours
   destin = ThisWorkbook.ActiveSheet.Range("H" & numligne).Text & Application.PathSeparator & ThisWorkbook.ActiveSheet.Range("B" & numligne).Text   'def chemin de destination avec le nom du fichier en cours
   newnom = ThisWorkbook.ActiveSheet.Range("B" & numligne).Value 'd|fffd|finition nom
   Set objOFS = CreateObject("Scripting.FileSystemObject")   'cr|fffd|ation d'un objet script de gestion de systeme fichier
       If (objOFS.FileExists(source)) Then        'si fichier source existe alors bouge le fichier du chemin source |fffd| son chemin de destination, comprenant le nom du fichier
           objOFS.moveFile source, destin
            ThisWorkbook.ActiveSheet.Hyperlinks.Add Anchor:=ThisWorkbook.ActiveSheet.Range("B" & numligne), _
            Address:=destin, _
            ScreenTip:="Click to open the file", _
            TextToDisplay:=newnom
            ThisWorkbook.ActiveSheet.Range("B" & numligne).Font.Name = "Calibri"
            ThisWorkbook.ActiveSheet.Range("B" & numligne).Font.Size = 8
            ThisWorkbook.ActiveSheet.Range("G" & numligne).Value = ThisWorkbook.ActiveSheet.Range("H" & numligne).Text
            ThisWorkbook.ActiveSheet.Range("J" & numligne).Value = 1 'indicateur r|fffd|ussite
       Else
            ThisWorkbook.ActiveSheet.Range("J" & numligne).Value = 0 'indicateur r|fffd|ussite
            erreurs = erreurs + 1
       End If
       'raz de l'objet
       Set objOFS = Nothing
   Else 'si rien
            ThisWorkbook.ActiveSheet.Range("J" & numligne).Value = 0 'indicateur r|fffd|ussite
            erreurs = erreurs + 1
   End If
error:
If Err Then
   ThisWorkbook.ActiveSheet.Range("J" & numligne).Value = 0
   erreurs = erreurs + 1
   Resume error_continu:
End If
'--------------------------------------------------------------------------------------------------------------------------
error_continu:
   numligne = numligne + 1
   'raz fichier scan et passage au suivant
   scan = Dir(ThisWorkbook.ActiveSheet.Range("G" & numligne).Text & Application.PathSeparator & Range("B" & numligne).Text)
Loop
'--------------------------------------------------------------------------------------------------------------------------
Application.EnableEvents = True
Application.ScreenUpdating = True
Application.Speech.Speak ">finished!", True
ANIM_WAITFORM
MsgBox "Move files are completed" & Chr(10) & "Errors Numbers : " & erreurs & Chr(10) & Chr(10) & "If error, to check valid characters name, forbid : /*!&<>_\=", vbInformation, "MOVE END"
'--------------------------------------------------------------------------------------------------------------------------
End Sub


Sub BOUCLE_MAILING_FICHIERS() 'PREPARATION DES MAILS POUR LE MAILING
'I. D|fffd|claration des variables
Dim MonOutlook, MonMessage As Object 'objet nouveau message
Dim DESTINATAIRES_MAIL, SUJET_MAIL, FICHIER_MAIL, STRBODYMAIL As String
Dim numligne, erreurs As Double 'num|fffd|ro de ligne
'---------------------------------------------------------------------------------------------------------
Select Case MsgBox("Are-you sure want to mailer all Pdf files in the manager list ?", vbOKCancel + vbQuestion + vbDefaultButton1, "CONFIRMATION REQUEST")
          Case vbOK 'ok poursuit macro
          Case vbCancel 'si annuler
                  Exit Sub 'sort de macro
End Select
'---------------------------------------------------------------------------------------------------------
'II. D|fffd|finition variable proc|fffd|dure
numligne = ThisWorkbook.ActiveSheet.Range("BARRE_TITRE_GESTIONNAIRE").Row + 1 'III.a. D|fffd|finit le r|fffd|pertoire contenant les fichiers
If ThisWorkbook.ActiveSheet.Range("K" & numligne).Value = "" Then
      Application.ScreenUpdating = True
      ThisWorkbook.ActiveSheet.Range("K" & numligne).Interior.ColorIndex = 3 'color cellule |fffd| pb en rouge
      MsgBox "The first mail adress no exist :" & Chr(10) & ThisWorkbook.ActiveSheet.Range("K" & numligne).Text & Chr(10) & Chr(10) & "Mailer stop", vbCritical, "ERROR MAIL"
      ThisWorkbook.ActiveSheet.Range("K" & numligne).Interior.ColorIndex = 2 'color cellule |fffd| pb
      Exit Sub
End If
erreurs = 0
'---------------------------------------------------------------------------------------------------------
On Error Resume Next 'gestion process d'erreur
Application.ScreenUpdating = False
Application.EnableEvents = False
debnumligne = ThisWorkbook.ActiveSheet.Range("BARRE_TITRE_GESTIONNAIRE").Row + 1
finnumligne = ThisWorkbook.ActiveSheet.Range("B1048576").End(xlUp).Row
If finnumligne <= debnumligne Then
finnumligne = debnumligne + 1
End If
ThisWorkbook.ActiveSheet.Range("M" & debnumligne, "M" & finnumligne).Value = "" 'effacer indicateurs pr|fffd|c|fffd|dent
'---------------------------------------------------------------------------------------------------------
'III. Boucle tant que ligne en cours de colonne C amende est non vide
Do While ThisWorkbook.ActiveSheet.Range("A" & numligne).Value <> "" Or ThisWorkbook.ActiveSheet.Range("K" & numligne).Value <> ""
   'E. Gestion d'erreur par passage ligne de code suivante
   On Error GoTo errormail:
'III. Envoi du mail si fichier et adresse remplie
If ThisWorkbook.ActiveSheet.Range("K" & numligne) <> "" And ThisWorkbook.ActiveSheet.Range("A" & numligne) <> "" Then 'contr|fffd|le si formule nom donne une erreur, alors passe |fffd| ligne suivante
   'III.a. DEF VARIABLE  :
   Set MonOutlook = CreateObject("Outlook.Application") 'On cr|fffd|e une instance d'Outlook
   Set MonMessage = MonOutlook.CreateItem(0) 'Et on cr|fffd|e un |fffd|l|fffd|ment Outlook, qui sera un message E-Mail
   DESTINATAIRES_MAIL = ThisWorkbook.ActiveSheet.Range("K" & numligne).Value 'destinaires en copie mail
   SUJET_MAIL = "Your .Pdf file : " & ThisWorkbook.ActiveSheet.Range("B" & numligne).Value 'sujet du mail
   FICHIER_MAIL = ThisWorkbook.ActiveSheet.Range("G" & numligne).Value & Application.PathSeparator & ThisWorkbook.ActiveSheet.Range("B" & numligne).Value  'PJ fichier
   '--------------------------------------------------------------------------------------------------------------------------
   'III.b. Cr|fffd|ation du mail
   '--------------------------------------------------------------------------------------------------------------------------
   MonMessage.To = DESTINATAIRES_MAIL   'III.b indication du destinataires directs
   MonMessage.Subject = SUJET_MAIL   'III.b Sujet du mail
   MonMessage.Attachments.Add FICHIER_MAIL   'III.b Pi|fffd|ce jointe
   MonMessage.send   'III.c Affichage du mail pr|fffd|par|fffd|
   ThisWorkbook.ActiveSheet.Range("M" & numligne).Value = 1
   '--------------------------------------------------------------------------------------------------------------------------
   Set MonOutlook = Nothing ' On ferme !
Else
   ThisWorkbook.ActiveSheet.Range("M" & numligne).Value = 0
   erreurs = erreurs + 1
End If
'--------------------------------------------------------------------------------------------------------------------------
errormail:
      If Err Then
         ThisWorkbook.ActiveSheet.Range("M" & numligne).Value = 0 'O pour signe non valide en police webding2
         erreurs = erreurs + 1
         Resume LigneSuivante: 'Pour |fffd|viter bug |fffd| la 2e erreur, quand erreur passe |fffd| l'|fffd|tiquette et force le passage |fffd| la ligne suivante
      End If
LigneSuivante:
'--------------------------------------------------------------------------------------------------------------------------
   'III.e Format objet outlook
   Set MonOutlook = Nothing ' On ferme !
   'III.f Mail suivant
   numligne = numligne + 1
Loop
'--------------------------------------------------------------------------------------------------------------------------
Application.ScreenUpdating = True
Application.EnableEvents = True
Application.Speech.Speak ">finished!", True
ANIM_WAITFORM
MsgBox "Mailer files are completed" & Chr(10) & "Errors numbers : " & erreurs & Chr(10) & Chr(10) & "If error, to check valid characters name, forbid : /*!&<>_\=", vbInformation, "MAILER END"
'--------------------------------------------------------------------------------------------------------------------------
End Sub


Sub BOUCLE_IMPRIMER_FICHIERS()
Dim NOM_FICHIER As String
Dim x As Long
Dim numligne, erreurs As Double 'num|fffd|ro de ligne
'---------------------------------------------------------------------------------------------------------
Select Case MsgBox("Are-you sure want to print all Pdf files in the manager list ?", vbOKCancel + vbQuestion + vbDefaultButton1, "CONFIRMATION REQUEST")
          Case vbOK 'ok poursuit macro
          Case vbCancel 'si annuler
                  Exit Sub 'sort de macro
End Select
'---------------------------------------------------------------------------------------------------------
'II. D|fffd|finition variable proc|fffd|dure
numligne = ThisWorkbook.ActiveSheet.Range("BARRE_TITRE_GESTIONNAIRE").Row + 1 'III.a. D|fffd|finit le r|fffd|pertoire contenant les fichiers
If ThisWorkbook.ActiveSheet.Range("B" & numligne).Value = "" Then
      ThisWorkbook.ActiveSheet.Range("B" & numligne).Interior.ColorIndex = 3
      MsgBox "The first file path is empty :" & Chr(10) & ThisWorkbook.ActiveSheet.Range("B" & numligne).Text & Chr(10) & Chr(10) & "Print stop", vbCritical, "ERROR PRINT"
      ThisWorkbook.ActiveSheet.Range("B" & numligne).Interior.ColorIndex = 2
      Exit Sub
End If
erreurs = 0
'---------------------------------------------------------------------------------------------------------
On Error Resume Next 'gestion process d'erreur
Application.ScreenUpdating = False
Application.EnableEvents = False
debnumligne = ThisWorkbook.ActiveSheet.Range("BARRE_TITRE_GESTIONNAIRE").Row + 1
finnumligne = ThisWorkbook.ActiveSheet.Range("B1048576").End(xlUp).Row
If finnumligne <= debnumligne Then
finnumligne = debnumligne + 1
End If
ThisWorkbook.ActiveSheet.Range("O" & debnumligne, "O" & finnumligne).Value = "" 'effacer indicateurs pr|fffd|c|fffd|dent
On Error GoTo 0
'---------------------------------------------------------------------------------------------------------
Do While ThisWorkbook.ActiveSheet.Range("B" & numligne).Value <> "" And ThisWorkbook.ActiveSheet.Range("G" & numligne).Value <> ""
On Error GoTo error:
If ThisWorkbook.ActiveSheet.Range("B" & numligne) <> "" And ThisWorkbook.ActiveSheet.Range("G" & numligne) <> "" Then 'contr|fffd|le si formule nom donne une erreur, alors passe |fffd| ligne suivante
x = FindWindow("XLMAIN", Application.Caption)
NOM_FICHIER = ThisWorkbook.ActiveSheet.Range("G" & numligne).Value & Application.PathSeparator & ThisWorkbook.ActiveSheet.Range("B" & numligne).Value
'---------------------------------------------------------------------------------------------------------
    ShellExecute x, "print", NOM_FICHIER, "", "", 1
    ThisWorkbook.ActiveSheet.Range("M" & numligne).Value = 1
'---------------------------------------------------------------------------------------------------------
Else
ThisWorkbook.ActiveSheet.Range("M" & numligne).Value = 0
End If
'--------------------------------------------------------------------------------------------------------------------------
error:
      If Err Then
         ThisWorkbook.ActiveSheet.Range("O" & numligne).Value = 0 'O pour signe non valide en police webding2
         erreurs = erreurs + 1
         Resume LigneSuivante: 'Pour |fffd|viter bug |fffd| la 2e erreur, quand erreur passe |fffd| l'|fffd|tiquette et force le passage |fffd| la ligne suivante
      End If
LigneSuivante:
'--------------------------------------------------------------------------------------------------------------------------
numligne = numligne + 1
Loop
'--------------------------------------------------------------------------------------------------------------------------
Application.Speech.Speak ">finished!", True
Application.ScreenUpdating = True
ANIM_WAITFORM
Application.EnableEvents = True
MsgBox "Print files are completed" & Chr(10) & "Errors numbers : " & erreurs & Chr(10) & Chr(10) & "If error, to check valid characters name, forbid : /*!&<>_\=", vbInformation, "PRINT END"
'--------------------------------------------------------------------------------------------------------------------------
End Sub


Sub BOUCLE_SUPPRIMER_FICHIERS()
Dim numligne, erreurs, debnumligne, finnumligne As Double 'num|fffd|ro de ligne
'---------------------------------------------------------------------------------------------------------
Select Case MsgBox("Are-you sure want to delete all files in the manager list ?", vbOKCancel + vbCritical + vbDefaultButton1, "CONFIRMATION REQUEST")
          Case vbOK 'ok poursuit macro
          Case vbCancel 'si annuler
                  MsgBox "Ok undo delete all files", vbInformation, "CONFIRMATION"
                  Exit Sub 'sort de macro
End Select
'---------------------------------------------------------------------------------------------------------
'II. D|fffd|finition variable proc|fffd|dure
numligne = ThisWorkbook.ActiveSheet.Range("BARRE_TITRE_GESTIONNAIRE").Row + 1 'III.a. D|fffd|finit le r|fffd|pertoire contenant les fichiers
If ThisWorkbook.ActiveSheet.Range("B" & numligne).Value = "" Or ThisWorkbook.ActiveSheet.Range("G" & numligne).Value = "" Then
      ThisWorkbook.ActiveSheet.Range("B" & numligne).Interior.ColorIndex = 3
      MsgBox "The first file path is empty :" & Chr(10) & ThisWorkbook.ActiveSheet.Range("B" & numligne).Text & Chr(10) & Chr(10) & "Delete stop", vbCritical, "ERROR DELETE"
      ThisWorkbook.ActiveSheet.Range("B" & numligne).Interior.ColorIndex = 2
      Exit Sub
End If
'---------------------------------------------------------------------------------------------------------
On Error Resume Next 'gestion process d'erreur
Application.ScreenUpdating = False
Application.EnableEvents = False
debnumligne = ThisWorkbook.ActiveSheet.Range("BARRE_TITRE_GESTIONNAIRE").Row + 1
finnumligne = ThisWorkbook.ActiveSheet.Range("B1048576").End(xlUp).Row
If finnumligne <= debnumligne Then
finnumligne = debnumligne + 1
End If
ThisWorkbook.ActiveSheet.Range("Q" & debnumligne, "Q" & finnumligne).Value = "" 'effacer indicateurs pr|fffd|c|fffd|dent
NOM_FICHIER = ThisWorkbook.ActiveSheet.Range("G" & numligne).Value & Application.PathSeparator & ThisWorkbook.ActiveSheet.Range("B" & numligne).Value
erreurs = 0
On Error GoTo 0
'---------------------------------------------------------------------------------------------------------
      Do While ThisWorkbook.ActiveSheet.Range("B" & numligne).Value <> "" 'And ThisWorkbook.ActiveSheet.Range("G" & numligne).Value <> ""
               On Error GoTo error:
               If ThisWorkbook.ActiveSheet.Range("B" & numligne) <> "" And ThisWorkbook.ActiveSheet.Range("G" & numligne) <> "" Then 'contr|fffd|le si formule nom donne une erreur, alors passe |fffd| ligne suivante
                  NOM_FICHIER = ThisWorkbook.ActiveSheet.Range("G" & numligne).Value & Application.PathSeparator & ThisWorkbook.ActiveSheet.Range("B" & numligne).Value
                  'I. Message de demande de confirmation |fffd| User
                        Kill NOM_FICHIER
                        ThisWorkbook.ActiveSheet.Range("B" & numligne).Value = ""
                        ThisWorkbook.ActiveSheet.Range("C" & numligne).Value = ""
                        ThisWorkbook.ActiveSheet.Range("D" & numligne).Value = ""
                        ThisWorkbook.ActiveSheet.Range("G" & numligne).Value = ""
                        ThisWorkbook.ActiveSheet.Range("H" & numligne).Value = ""
                        ThisWorkbook.ActiveSheet.Range("K" & numligne).Value = ""
                        ThisWorkbook.ActiveSheet.Range("R" & numligne).Value = ""
                        ThisWorkbook.ActiveSheet.Range("S" & numligne).Value = ""
                        ThisWorkbook.ActiveSheet.Range("T" & numligne).Value = ""
                        ThisWorkbook.ActiveSheet.Range("Q" & numligne).Value = 1
               Else
                        ThisWorkbook.ActiveSheet.Range("Q" & numligne).Value = 0
                        erreurs = erreurs + 1
               End If
      '--------------------------------------------------------------------------------------------------------------------------
error:
            If Err Then
               ThisWorkbook.ActiveSheet.Range("Q" & numligne).Value = 0 'O pour signe non valide en police webding2
               erreurs = erreurs + 1
               Resume LigneSuivante: 'Pour |fffd|viter bug |fffd| la 2e erreur, quand erreur passe |fffd| l'|fffd|tiquette et force le passage |fffd| la ligne suivante
            End If
LigneSuivante:
      '--------------------------------------------------------------------------------------------------------------------------
         NOM_FICHIER = ""
         numligne = numligne + 1
      Loop
'---------------------------------------------------------------------------------------------------------
Application.ScreenUpdating = True
Application.EnableEvents = True
Application.Speech.Speak ">finished!", True
ANIM_WAITFORM
MsgBox "Delete files are completed" & Chr(10) & "Errors numbers : " & erreurs & Chr(10) & Chr(10) & "If error, to check valid characters name, forbid : /*!&<>_\=", vbInformation, "DELETE END"
'---------------------------------------------------------------------------------------------------------
End Sub


Sub BOUCLE_OUVRIR_FICHIERS()
Dim numligne, erreurs, debnumligne, finnumligne As Double 'num|fffd|ro de ligne
'---------------------------------------------------------------------------------------------------------
Select Case MsgBox("Are-you sure want to open alls Pdf files in the manager list ?", vbOKCancel + vbInformation + vbDefaultButton1, "CONFIRMATION REQUEST")
          Case vbOK 'ok poursuit macro
          Case vbCancel 'si annuler
                  MsgBox "Ok cancel open all files", vbInformation, "CONFIRMATION REQUEST"
                  Exit Sub 'sort de macro
End Select
'---------------------------------------------------------------------------------------------------------
'II. D|fffd|finition variable proc|fffd|dure
numligne = ThisWorkbook.ActiveSheet.Range("BARRE_TITRE_GESTIONNAIRE").Row + 1 'III.a. D|fffd|finit le r|fffd|pertoire contenant les fichiers
If ThisWorkbook.ActiveSheet.Range("B" & numligne).Value = "" Then
      MsgBox "The first file path is empty :" & Chr(10) & ThisWorkbook.ActiveSheet.Range("B" & numligne).Text & Chr(10) & Chr(10) & "Open stop", vbCritical, "ERROR OPEN"
      Exit Sub
End If
'---------------------------------------------------------------------------------------------------------
On Error Resume Next 'gestion process d'erreur
Application.ScreenUpdating = False
Application.EnableEvents = False
debnumligne = ThisWorkbook.ActiveSheet.Range("BARRE_TITRE_GESTIONNAIRE").Row + 1
finnumligne = ThisWorkbook.ActiveSheet.Range("B1048576").End(xlUp).Row
If finnumligne <= debnumligne Then
finnumligne = debnumligne + 1
End If
erreurs = 0
On Error GoTo 0
'---------------------------------------------------------------------------------------------------------
      Do While ThisWorkbook.ActiveSheet.Range("B" & numligne) <> "" And ThisWorkbook.ActiveSheet.Range("G" & numligne) <> ""
               On Error GoTo error:
               If ThisWorkbook.ActiveSheet.Range("B" & numligne) <> "" And ThisWorkbook.ActiveSheet.Range("G" & numligne) <> "" Then 'contr|fffd|le si formule nom donne une erreur, alors passe |fffd| ligne suivante
                  ThisWorkbook.ActiveSheet.Range("B" & numligne).Hyperlinks(1).Follow NewWindow:=False, AddHistory:=True
               Else
                        erreurs = erreurs + 1
               End If
      '--------------------------------------------------------------------------------------------------------------------------
error:
            If Err Then
               erreurs = erreurs + 1
               Resume LigneSuivante: 'Pour |fffd|viter bug |fffd| la 2e erreur, quand erreur passe |fffd| l'|fffd|tiquette et force le passage |fffd| la ligne suivante
            End If
LigneSuivante:
      '--------------------------------------------------------------------------------------------------------------------------
         numligne = numligne + 1
      Loop
'---------------------------------------------------------------------------------------------------------
Application.ScreenUpdating = True
Application.EnableEvents = True
MsgBox "Open files are completed" & Chr(10) & "Errors numbers : " & erreurs & Chr(10) & Chr(10) & "If error, to check valid characters name, forbid : /*!&<>_\=", vbInformation, "OPEN END"
End Sub


Sub ANIM_WAITFORM()
'Animation pour le graphique fl|fffd|che waitform
'---------------------------------------------------------------------------------------------------------
Dim DEGREE_ROTATION, TOUR, SCROLL_LIGNE, SCROLL_COLONNE, HAUT_WAITFORM, HAUT_WAITFORMTEXT, HAUT_GROUPWAITFORM, LARG_WAITFORM, LARG_WAITFORMTEXT, LARG_GROUPWAITFORM As Double 'D|fffd|claration variable DEGREE_ROTATION et de la variable tour en cours comme valeur double.
Dim EMPLACEMENT_WAITFORMTEXT_LEFT, EMPLACEMENT_WAITFORMTEXT_TOP, EMPLACEMENT_WAITFORM_LEFT, EMPLACEMENT_WAITFORM_TOP, EMPLACEMENT_GROUPWAITFORM_LEFT, EMPLACEMENT_GROUPWAITFORM_TOP As Double
Dim ROTATION_AFAIRE As Double
'---------------------------------------------------------------------------------------------------------
DEGREE_ROTATION = 0 'D|fffd|finition du degr|fffd| de rotation de d|fffd|part du smiley dans la boite |fffd| 0 degr|fffd|s
If (ActiveWindow.Zoom / 100) >= 1 Then ROTATION_AFAIRE = 20 * (ActiveWindow.Zoom / 100) 'fixation de la vitesse de rotation suivant zoom
If (ActiveWindow.Zoom / 100) < 1 Then ROTATION_AFAIRE = 20 '* (ActiveWindow.Zoom / 100) 'fixation de la vitesse de rotation suivant zoom
TOUR = 0 'D|fffd|finition du nombre du tour au d|fffd|part |fffd| 0
SCROLL_LIGNE = ActiveWindow.ScrollRow + 2   'Rep|fffd|rage de l'empacement de la plage ligne visible et rep|fffd|re la 2e ligne pour fixer l'image
SCROLL_COLONNE = 7 'ActiveWindow.ScrollColumn    'Rep|fffd|rage de l'empacement de la plage colonne visible pour fixer l'image
HAUT_GROUPWAITFORM = ActiveSheet.Shapes.Range(Array("groupewaitform")).Height 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
LARG_GROUPWAITFORM = ActiveSheet.Shapes.Range(Array("groupewaitform")).Width 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
'M|fffd|mo la fl|fffd|che en tournant tape dans l'objet texte ce qui fait bouger l'ensemble de la forme, mais ne bug pas |fffd| zoom 100%
'HAUT_WAITFORM = ActiveSheet.Shapes.Range(Array("waitform")).Height 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
'HAUT_WAITFORMTEXT = ActiveSheet.Shapes.Range(Array("waitformtext")).Height 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
'LARG_WAITFORM = ActiveSheet.Shapes.Range(Array("waitform")).Width 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
'LARG_WAITFORMTEXT = ActiveSheet.Shapes.Range(Array("waitformtext")).Width 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
'---------------------------------------------------------------------------------------------------------
On Error Resume Next 'gestion d'erreur et sortie de l'animation
If ActiveSheet.Shapes.Range(Array("Image 18")).Fill.ForeColor.RGB = RGB(192, 0, 0) Then Exit Sub 'sortie de l'animation si image pdf rouge
'---------------------------------------------------------------------------------------------------------
ActiveSheet.Shapes.Range(Array("groupewaitform")).Visible = True 'Rendre visible le groupe de la waitform
ActiveSheet.Shapes.Range(Array("groupewaitform")).Left = Cells(SCROLL_LIGNE, SCROLL_COLONNE).Left 'placer la form au mileu du tableu o|fffd| se trouve l'user
ActiveSheet.Shapes.Range(Array("groupewaitform")).Top = Cells(SCROLL_LIGNE, SCROLL_COLONNE).Top  'placer la form au mileu du tableu o|fffd| se trouve l'user
EMPLACEMENT_GROUPWAITFORM_LEFT = ActiveSheet.Shapes.Range(Array("groupewaitform")).Left 'r|fffd|cup|fffd|ration de l'emplacement de waitform pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
EMPLACEMENT_GROUPWAITFORM_TOP = ActiveSheet.Shapes.Range(Array("groupewaitform")).Top 'r|fffd|cup|fffd|ration de l'emplacement de waitform pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
'EMPLACEMENT_WAITFORMTEXT_LEFT = ActiveSheet.Shapes.Range(Array("waitformtext")).Left 'r|fffd|cup|fffd|ration de l'emplacement de waitformtext pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
'EMPLACEMENT_WAITFORMTEXT_TOP = ActiveSheet.Shapes.Range(Array("waitformtext")).Top 'r|fffd|cup|fffd|ration de l'emplacement de waitformtext pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
'EMPLACEMENT_WAITFORM_LEFT = ActiveSheet.Shapes.Range(Array("waitform")).Left 'r|fffd|cup|fffd|ration de l'emplacement de waitform pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
'EMPLACEMENT_WAITFORM_TOP = ActiveSheet.Shapes.Range(Array("waitform")).Top 'r|fffd|cup|fffd|ration de l'emplacement de waitform pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
Do While IsEmpty(ThisWorkbook.Worksheets(1).Range("XFC1")) 'Boucle sans fin DO WHILE ... > LOOP, Rotation infinie du smiley, Tant que cellule XFC1 vide (mais |fffd|a c'est un secret)
   DoEvents 'Raffraichissement application pour voir tourner le smiley
   If DEGREE_ROTATION >= (360 - ROTATION_AFAIRE) Then 'Process de sortie de boucle de rotation quand tour complet r|fffd|alis|fffd|
      TOUR = TOUR + 1 'La waitform |fffd| fait 1 tour, ajout de +1 |fffd| la variable
      DEGREE_ROTATION = 0 'retour |fffd| 0 de la variable DEGREE_ROTATION pour refaire un tour
      ActiveSheet.Shapes.Range(Array("groupewaitform")).Rotation = DEGREE_ROTATION 'retour degr|fffd|s de rotation |fffd| 0
      ActiveSheet.Shapes.Range(Array("groupewaitform")).Left = EMPLACEMENT_GROUPWAITFORM_LEFT 'r|fffd|cup|fffd|ration de l'emplacement de waitformtext pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
      ActiveSheet.Shapes.Range(Array("groupewaitform")).Top = EMPLACEMENT_GROUPWAITFORM_TOP 'r|fffd|cup|fffd|ration de l'emplacement de waitformtext pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
      ActiveSheet.Shapes.Range(Array("groupewaitform")).Height = HAUT_GROUPWAITFORM 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
      ActiveSheet.Shapes.Range(Array("groupewaitform")).Width = LARG_GROUPWAITFORM 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
      '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      'ActiveSheet.Shapes.Range(Array("waitformtext")).Left = EMPLACEMENT_WAITFORMTEXT_LEFT 'r|fffd|cup|fffd|ration de l'emplacement de waitformtext pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
      'ActiveSheet.Shapes.Range(Array("waitformtext")).Top = EMPLACEMENT_WAITFORMTEXT_TOP 'r|fffd|cup|fffd|ration de l'emplacement de waitformtext pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
      'ActiveSheet.Shapes.Range(Array("waitform")).Left = EMPLACEMENT_WAITFORM_LEFT 'r|fffd|cup|fffd|ration de l'emplacement de waitformtext pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
      'ActiveSheet.Shapes.Range(Array("waitform")).Top = EMPLACEMENT_WAITFORM_TOP 'r|fffd|cup|fffd|ration de l'emplacement de waitformtext pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
      'ActiveSheet.Shapes.Range(Array("waitform")).Height = HAUT_WAITFORM 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
      'ActiveSheet.Shapes.Range(Array("waitformtext")).Height = HAUT_WAITFORMTEXT 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
      'ActiveSheet.Shapes.Range(Array("waitform")).Width = LARG_WAITFORM 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
      'ActiveSheet.Shapes.Range(Array("waitformtext")).Width = LARG_WAITFORMTEXT 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
      '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
         If TOUR > 1 Then Exit Do       'Sortie de boucle Do while si 2 tours r|fffd|alis|fffd|s
   End If
   ActiveSheet.Shapes.Range(Array("groupewaitform")).Rotation = DEGREE_ROTATION   'Rotation du smiley |fffd| la valeur DEGREE_ROTATION
   DEGREE_ROTATION = DEGREE_ROTATION + ROTATION_AFAIRE   'Ajout +10 degr|fffd|s |fffd| DEGREE_ROTATION pour la prochaine rotation
   ActiveSheet.Shapes.Range(Array("groupewaitform")).Left = EMPLACEMENT_GROUPWAITFORM_LEFT 'r|fffd|cup|fffd|ration de l'emplacement de waitformtext pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
   ActiveSheet.Shapes.Range(Array("groupewaitform")).Top = EMPLACEMENT_GROUPWAITFORM_TOP 'r|fffd|cup|fffd|ration de l'emplacement de waitformtext pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
   ActiveSheet.Shapes.Range(Array("groupewaitform")).Width = LARG_GROUPWAITFORM 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
   '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   'ActiveSheet.Shapes.Range(Array("waitformtext")).Left = EMPLACEMENT_WAITFORMTEXT_LEFT 'r|fffd|cup|fffd|ration de l'emplacement de waitformtext pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
   'ActiveSheet.Shapes.Range(Array("waitformtext")).Top = EMPLACEMENT_WAITFORMTEXT_TOP 'r|fffd|cup|fffd|ration de l'emplacement de waitformtext pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
   'ActiveSheet.Shapes.Range(Array("waitform")).Left = EMPLACEMENT_WAITFORM_LEFT 'r|fffd|cup|fffd|ration de l'emplacement de waitformtext pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
   'ActiveSheet.Shapes.Range(Array("waitform")).Top = EMPLACEMENT_WAITFORM_TOP 'r|fffd|cup|fffd|ration de l'emplacement de waitformtext pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
   'ActiveSheet.Shapes.Range(Array("waitform")).Height = HAUT_WAITFORM 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
   'ActiveSheet.Shapes.Range(Array("waitform")).Width = LARG_WAITFORM 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
   'ActiveSheet.Shapes.Range(Array("waitformtext")).Height = HAUT_WAITFORMTEXT 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
   'ActiveSheet.Shapes.Range(Array("waitformtext")).Width = LARG_WAITFORMTEXT 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
   'ActiveSheet.Shapes.Range(Array("groupewaitform")).Height = HAUT_GROUPWAITFORM 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
   '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Loop
'---------------------------------------------------------------------------------------------------------
'ActiveSheet.Shapes.Range(Array("waitformtext")).Left = EMPLACEMENT_WAITFORMTEXT_LEFT 'r|fffd|cup|fffd|ration de l'emplacement de waitformtext pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
'ActiveSheet.Shapes.Range(Array("waitformtext")).Top = EMPLACEMENT_WAITFORMTEXT_TOP 'r|fffd|cup|fffd|ration de l'emplacement de waitformtext pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
'ActiveSheet.Shapes.Range(Array("waitform")).Left = EMPLACEMENT_WAITFORM_LEFT 'r|fffd|cup|fffd|ration de l'emplacement de waitformtext pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
'ActiveSheet.Shapes.Range(Array("waitform")).Top = EMPLACEMENT_WAITFORM_TOP 'r|fffd|cup|fffd|ration de l'emplacement de waitformtext pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
ActiveSheet.Shapes.Range(Array("groupewaitform")).Left = EMPLACEMENT_GROUPWAITFORM_LEFT 'r|fffd|cup|fffd|ration de l'emplacement de waitformtext pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
ActiveSheet.Shapes.Range(Array("groupewaitform")).Top = EMPLACEMENT_GROUPWAITFORM_TOP 'r|fffd|cup|fffd|ration de l'emplacement de waitformtext pour |fffd|viter de le voir se balader dans la feuille |fffd| chaque fois que la fl|fffd|che tourne
'ActiveSheet.Shapes.Range(Array("waitform")).Height = HAUT_WAITFORM 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
'ActiveSheet.Shapes.Range(Array("waitformtext")).Height = HAUT_WAITFORMTEXT 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
ActiveSheet.Shapes.Range(Array("groupewaitform")).Height = HAUT_GROUPWAITFORM 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
'ActiveSheet.Shapes.Range(Array("waitform")).Width = LARG_WAITFORM 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
'ActiveSheet.Shapes.Range(Array("waitformtext")).Width = LARG_WAITFORMTEXT 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
ActiveSheet.Shapes.Range(Array("groupewaitform")).Width = LARG_GROUPWAITFORM 'm|fffd|mo taille image, pour contrer bug changement taille al|fffd|atoire
ActiveSheet.Shapes.Range(Array("groupewaitform")).Visible = False 'Rendre invisible le groupe de la waitform
'---------------------------------------------------------------------------------------------------------
End Sub



Sub PAUSE_PROTECTION_TAB2()
'Macro de gestion de la pause de la fonction de protection du tableau
If ActiveSheet.Shapes.Range(Array("STOPPROTECT")).Fill.ForeColor.RGB = RGB(255, 0, 0) Then 'si icone en rouge alors passe en vert
    ActiveSheet.Shapes.Range(Array("STOPPROTECT")).Fill.ForeColor.RGB = RGB(0, 176, 80) 'vert
    Application.EnableEvents = True 'activation |fffd|v|fffd|nement excel
Else
    ActiveSheet.Shapes.Range(Array("STOPPROTECT")).Fill.ForeColor.RGB = RGB(255, 0, 0) 'rouge
    Application.ScreenUpdating = True 'raffraichissement affichage
    
    MsgBox "Disabling Excel event handling and line action button protection to allow you to delete your rows from Excel." _
    & Chr(10) & "* <!> Remember to reactivate this function once your lines are deleted *" _
    & Chr(10) & "* Reactivation by default at the opening and at the end of the mass actions", vbExclamation, "DEACTIVATION PROTECTION"
    Application.EnableEvents = False 'd|fffd|sactivation |fffd|v|fffd|nement excel
End If

End Sub




Attribute VB_Name = "Feuil2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'English version of my Excel application : Gestionnaire de fichiers Pdf
'Link : http://www.excel-pratique.com
'COHENNY Tristan

'////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'<< ? >> Coding with French version of Excel, incompatibility risks with Other International versions << ? >>
'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\



Private Sub Worksheet_Activate() 'Faire tourner le smiley
'---------------------------------------------------------------------------------------------------------
On Error Resume Next 'gestion process d'erreur
'---------------------------------------------------------------------------------------------------------
'1. Correction zoom
Application.ScreenUpdating = False
With ThisWorkbook.Worksheets(2)
      .Visible = xlSheetVisible
      .Activate
      .Range("A6").Select
End With
ThisWorkbook.Worksheets(2).Range("A1:F6").Activate  'd|fffd|finit la zone de zoom pour variables zoom
ActiveWindow.Zoom = True 'zoom sur selection
Application.ScreenUpdating = True
ActiveSheet.Range("A6").Select
'---------------------------------------------------------------------------------------------------------
'2. Event graphique
Application.Speech.Speak ">SETTINGS!", True
Dim DEGREE_ROTATION As Double 'D|fffd|claration variable DEGREE_ROTATION comme valeur double.
DEGREE_ROTATION = 0 'D|fffd|finition du degr|fffd| de rotation de d|fffd|part du smiley dans la boite |fffd| 0 degr|fffd|s
Do While IsEmpty(ThisWorkbook.Worksheets(1).Range("XFC1")) 'Boucle sans fin DO WHILE ... > LOOP, Rotation infinie du smiley, Tant que cellule XFC1 vide (mais |fffd|a c'est un secret)
   DoEvents 'Raffraichissement application pour voir tourner le smiley
   If DEGREE_ROTATION >= 350 Then   'Process de sortie de boucle de rotation quand tour complet r|fffd|alis|fffd|
      ActiveSheet.Shapes.Range(Array("Ellipse 2")).ThreeD.RotationX = 0 'retour degr|fffd|s de rotation |fffd| 0
      Exit Do 'Sortie de boucle Do while
   End If
   ActiveSheet.Shapes.Range(Array("Ellipse 2")).ThreeD.RotationX = DEGREE_ROTATION   'Rotation du smiley |fffd| la valeur DEGREE_ROTATION
   DEGREE_ROTATION = DEGREE_ROTATION + 5   'Ajout +10 degr|fffd|s |fffd| DEGREE_ROTATION pour la prochaine rotation
Loop
End Sub


Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
'<<!>> L'ordre des proc|fffd|dures est importante, risque de m|fffd|li m|fffd|lo et bug
On Error Resume Next
'>> I. D|fffd|sactivation entr|fffd|e par double click dans TABLEUR PARAMETRES
    If Not Intersect(Target, ActiveSheet.Range("PARAMETRES")) Is Nothing Then
        Cancel = True
    End If
End Sub


Private Sub Worksheet_Change(ByVal Target As Range)
'<<!>> L'ordre des proc|fffd|dures est importante, risque de m|fffd|li m|fffd|lo et bug
On Error Resume Next
'I. Interdiction de suppression Ent|fffd|te Tableur PARAMETRES
'>> I.  Interdiction de saisie par annulation de modification
    If Not Intersect(Target, ActiveSheet.Range("PARAMETRES")) Is Nothing Then
      Application.EnableEvents = False      'D|fffd|sactivation de la fonction de gestion d'|fffd|v|fffd|nement |fffd|viter micro freezing
      Application.Undo
      Application.EnableEvents = True      'R|fffd|activation de la fonction de gestion d'|fffd|v|fffd|nement
    End If
End Sub


Sub LISTE_DOSSIERS()
'I. D|fffd|claration variables
Dim DOSSIER As String, numligne As Double
'---------------------------------------------------------------------------------------------------------
On Error Resume Next 'gestion process d'erreur
Application.EnableEvents = False
Application.ScreenUpdating = False
'---------------------------------------------------------------------------------------------------------
Select Case MsgBox("To reset and to import new path list" & Chr(10) & "> Push 'YES'" & Chr(10) & "Otherwise, only to add paths in list" & Chr(10) & "> Push 'NO'" & Chr(10) & Chr(10) & "(?) You may 'Cancel' and stopping this sub, in the next window", vbYesNo + vbInformation + vbDefaultButton1, "CONFIRMATION LIST UPDATING")
          Case vbYes 'ok poursuit macro
                  'II. Choix Sauvegarde fichier en .csv
                  With Application.FileDialog(msoFileDialogFolderPicker)
                       .ButtonName = "Start to import paths folder hierarchy in this folder" 'Titre du bouton
                       .Title = "Importation Box folder hierarchy" '      'Titre de la boite de dialogue
                       .InitialFileName = ActiveWorkbook.Path 'd|fffd|finition 1er dossier d'ouverture sur chemin fichier
                       .Show      'Ouverture du gestionnaire de choix de dossier
                       If .SelectedItems.Count > 0 Then      'Si choix existe
                         DOSSIER = .SelectedItems(1)   'La variable de choix dossier prend la valeur du choix dans la boite de dialogue
                       Else
                          DOSSIER = "" 'si pas de choix rien et sort de la sub
                          Application.EnableEvents = True
                          Application.ScreenUpdating = True
                         Exit Sub
                        End If
                  End With
                  '---------------------------------------------------------------------------------------------------------
                  ThisWorkbook.ActiveSheet.Range("A4:A50000").ClearContents 'Suppression ancienne liste
                  ThisWorkbook.ActiveSheet.Range("DEBUT_CHEMIN_DOSSIERS").Value = DOSSIER 'import chemin d'origine
                  DOSSIER = DOSSIER & Application.PathSeparator 'correction chemin dossier avec slash s|fffd|parator
                  NOMDOSSIER = Dir(DOSSIER, vbDirectory) 'D|fffd|finition variable |fffd| chemin dossier
                  '---------------------------------------------------------------------------------------------------------
                  'III. Boucle import chemins
                  i = ThisWorkbook.ActiveSheet.Range("DEBUT_CHEMIN_DOSSIERS").Row + 1 'D|fffd|finition marcheur
                  Do While NOMDOSSIER <> "" 'tant que titre diff|fffd|rent de rien
                     If NOMDOSSIER <> "." And NOMDOSSIER <> ".." Then 'correction bug
                        If (GetAttr(DOSSIER & NOMDOSSIER) And vbDirectory) = vbDirectory Then
                           Cells(i, 1) = DOSSIER & NOMDOSSIER 'import chemin
                           i = i + 1
                        End If
                     End If
                     NOMDOSSIER = Dir
                  Loop
          
          Case vbNo 'si annuler
                  'II. Choix Sauvegarde fichier en .csv
                  With Application.FileDialog(msoFileDialogFolderPicker)
                       .ButtonName = "Start to import paths folder hierarchy in this folder" 'Titre du bouton
                       .Title = "Importation Box folder hierarchy" '      'Titre de la boite de dialogue
                       .InitialFileName = ActiveWorkbook.Path 'd|fffd|finition 1er dossier d'ouverture sur chemin fichier
                       .Show      'Ouverture du gestionnaire de choix de dossier
                       If .SelectedItems.Count > 0 Then      'Si choix existe
                         DOSSIER = .SelectedItems(1)   'La variable de choix dossier prend la valeur du choix dans la boite de dialogue
                       Else
                          DOSSIER = "" 'si pas de choix rien et sort de la sub
                          Application.EnableEvents = True
                          Application.ScreenUpdating = True
                         Exit Sub
                        End If
                  End With
                  '---------------------------------------------------------------------------------------------------------
                  numligne = ThisWorkbook.ActiveSheet.Range("A1048576").End(xlUp).Row + 1
                  ThisWorkbook.ActiveSheet.Range("A" & numligne).Value = DOSSIER 'import chemin d'origine
                  DOSSIER = DOSSIER & Application.PathSeparator 'correction chemin dossier avec slash s|fffd|parator
                  NOMDOSSIER = Dir(DOSSIER, vbDirectory) 'D|fffd|finition variable |fffd| chemin dossier
                  '---------------------------------------------------------------------------------------------------------
                  'III. Boucle import chemins
                  i = numligne + 1 'D|fffd|finition marcheur
                  Do While NOMDOSSIER <> "" 'tant que titre diff|fffd|rent de rien
                     If NOMDOSSIER <> "." And NOMDOSSIER <> ".." Then 'correction bug
                        If (GetAttr(DOSSIER & NOMDOSSIER) And vbDirectory) = vbDirectory Then
                           Cells(i, 1) = DOSSIER & NOMDOSSIER 'import chemin
                           i = i + 1
                        End If
                     End If
                     NOMDOSSIER = Dir
                  Loop
End Select
Application.Speech.Speak ">finished!", True 'message vox asynchrone
Application.EnableEvents = True
Application.ScreenUpdating = True
End Sub


Sub IMPORT_ADRESSEMAIL_OUTLOOK() 'Code d'origine de Etienne TRIBOLLET : http://www.rechercheunbondeveloppeur.com/2014/03/importer-contacts-outlook-dans-excel-avec-vba.php,
'I. D|fffd|claration des Objets et variables
Dim oOutlook As Object
Dim namespaceOutlook As Object
Dim DossierContacts As Object
Dim collectionContacts  As Object
Dim itemContact  As Object
Dim iNumLigne As Long 'Variable marcheur
'--------------------------------------------------------------------------------------------
'E. Gestion d'erreurs
On Error GoTo Err_Execution
'--------------------------------------------------------------------------------------------
Select Case MsgBox("You are sure to import Outlook contacts ? " & Chr(10) & "> Push : 'YES' to confirm the importation" & Chr(10) & "> Push 'NO' to stop" & Chr(10) & Chr(10) & "(?) Have-you Outlook ? If Yes, have-you activated the VBA reference in 'Tools' : Microsoft Outlook xx.x ?", vbYesNo + vbInformation + vbDefaultButton1, "CONFIRMATION IMPORTATION OUTLOOK CONTACTS")
          Case vbYes 'ok poursuit macro
          'Passe au point 2
          Case vbNo 'sort de la macro
            Exit Sub
End Select
'________________________________________________________________________________________________________
'II. Cr|fffd|ation des instances des objets Outlook
Set oOutlook = CreateObject("Outlook.Application")
Set namespaceOutlook = oOutlook.GetNamespace("MAPI")
Set DossierContacts = namespaceOutlook.GetDefaultFolder(10)
Set collectionContacts = DossierContacts.Items
'+++++++++++++++++++++++++++++++++++++++++
Application.ScreenUpdating = False
Application.EnableEvents = False
'_______________________________________________________________________________________________________
'III. Boucle sur tous les contacts
iNumLigne = ThisWorkbook.ActiveSheet.Range("C1048576").End(xlUp).Row + 1 'Recherche 1er ligne vide |fffd| partir de la fin de la colonne C, pour d|fffd|finition de la ligne o|fffd| importer
    For Each itemContact In collectionContacts
        ActiveSheet.Range("C" & iNumLigne).Value = itemContact.Email1Address 'adresse mail
        ActiveSheet.Range("D" & iNumLigne).Value = itemContact.LastName & " / " & itemContact.CompanyName 'nom contact / nom entreprise
        iNumLigne = iNumLigne + 1 'Marcheur ligne suivante
    Next
'III.fin. RaZ des objets de la m|fffd|moire
Set oOutlook = Nothing
Set namespaceOutlook = Nothing
Set DossierContacts = Nothing
Set collectionContacts = Nothing
Set itemContact = Nothing
'_______________________________________________________________________________________________________
'E. Process gestion d'erreur
Err_Execution:
If Err Then 'Si erreur
Application.Speech.Speak ">error!", True 'message vox asynchrone
   MsgBox "Error during the Outlook contacts importation :" _
   & Chr(10) & "Error type : " & Err.Description _
   & Chr(10) & Chr(10) & _
   "Have-you Outlook ? If Yes, have-you activated the VBA reference in 'Tools' : Microsoft Outlook xx.x ?" _
   & Chr(10) & "Cancel Outlook contacts importation", vbCritical, "ERROR IMPORTATION : OUTLOOK CONTACTS"
   Application.ScreenUpdating = True
   Application.EnableEvents = True
   Exit Sub
End If
Application.Speech.Speak ">finished!", True 'message vox asynchrone
Application.ScreenUpdating = True
Application.EnableEvents = True
End Sub


Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
'English version of my Excel application : Gestionnaire de fichiers Pdf
'Link : http://www.excel-pratique.com
'COHENNY Tristan

'////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
'<< ? >> Coding with French version of Excel, incompatibility risks with Other International versions << ? >>
'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\


'A Proc|fffd|dure d'|fffd|v|fffd|nement macro en lancement |fffd| l'ouverture du classeur si modification affichage de l'application
Private Sub Workbook_Open()
'---------------------------------------------------------------------------------------------------------
On Error Resume Next 'gestion process d'erreur
Application.ScreenUpdating = False
'---------------------------------------------------------------------------------------------------------
Application.Speech.Speak "MANAGER>OPENED!", True 'message vox asynchrone
ThisWorkbook.Worksheets(1).Select 'Selection la feuille o|fffd| se trouve le tableau pour |fffd|viter un bug '<< Sp|fffd|cifier la feuille <<
ThisWorkbook.Worksheets(1).Range("A1:T6").Activate  'd|fffd|finit la zone de zoom pour variables zoom...dansapplication '<< Sp|fffd|cifier zone de zoom <<
ActiveWindow.Zoom = True 'zoom sur selection
'++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'OPTION ouverture / A activer si vous ne voulez pas qu'|fffd| l'ouverture la plage soit selectionn|fffd| '<< OPTION <<
ThisWorkbook.ActiveSheet.Range("A7").Select 'A l'ouverture du classeur, le curseur cellule se trouve sur la cellule A1 de la feuille active et |fffd|vite que l'ensemble du tableau ne soit selectionn|fffd|
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Application.ScreenUpdating = True
End Sub




INQUEST-PP=macro
