Attribute VB_Name = "ArchivingCalc"
Attribute VB_Base = "0{EF26BAF8-FBC7-4324-9A0C-FAC43A3C1CEB}{DDA5485B-1761-47F1-9948-1E53589DA5FC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub btn_Calc_Click() 'Ausrechnen
Dim bprice, inflation, profit, total As Single
Dim years, i As Integer

years = Me.txt_InpDuration
i = 1
inflation = 0
bprice = (Me.txt_Boxes * 0.95 * 12)
profit = bprice * Me.txt_InpProfit

Listbox1.Clear
Listbox1.ColumnWidths = "4,7cm;1cm"
Listbox1.TextAlign = fmTextAlignLeft

While i <= years
    
    bprice = bprice + inflation
    

    With Listbox1 'Item an Overview Liste anh|fffd|ngen
        .AddItem
        .List(.ListCount - 1, 0) = "Archiving Cost in year " & i & ": "
        .List(.ListCount - 1, 1) = Format(bprice + profit, "#,##0.00 |fffd|")
        '.List(.ListCount - 1, 2) = ListBox1.List(ListBox1.ListIndex, 1)
    End With
    
    inflation = bprice * Me.txt_InpInflation
    profit = bprice * Me.txt_InpProfit
    total = total + bprice + profit
    i = i + 1
Wend

' Fixkosten hinzurechnen (z.B. Abholung, Kartons, Handling)

    With Listbox1 'Item an Overview Liste anh|fffd|ngen
        .AddItem
        .List(.ListCount - 1, 0) = "---------------------------"
        .AddItem
        .List(.ListCount - 1, 0) = "Cost for " & Me.txt_Boxes & " Archiving Boxes: "
        .List(.ListCount - 1, 1) = Format(Me.txt_Boxcost, "#,##0.00 |fffd|")
        .AddItem
        .List(.ListCount - 1, 0) = "Inbound Handing for  " & Me.txt_Boxes & " Boxes:"
        .List(.ListCount - 1, 1) = Format(Me.txt_Handling, "#,##0.00 |fffd|")
        .AddItem
        .List(.ListCount - 1, 0) = "Transport of  " & Me.txt_Boxes & " Boxes to Archive:"
        .List(.ListCount - 1, 1) = Format(Me.txt_Transport, "#,##0.00 |fffd|")
    End With

total = total + Me.txt_Boxcost + Me.txt_Handling + Me.txt_Transport

'Ergebnis in Resultat Textfeld eintragen
Me.txt_result = Format(total, "#,##0.00 |fffd|")

End Sub

Private Sub btn_copy_Click()
    
    Dim objDataObject As DataObject
    
    If txt_result <> "" Then
        Set objDataObject = New DataObject
            objDataObject.SetText txt_result.Text
            objDataObject.PutInClipboard
        Set objDataObject = Nothing
        MsgBox "Result successfully copied to clipboard!", vbOKOnly, "Message"
    Else
        MsgBox "Result fiels is Empty! Please Calculate first and than press Copy.", vbOKOnly, "Empty Field!"
    End If
    
End Sub

Private Sub chk_ABoxes_Click()

    If Me.chk_ABoxes = True Then
        Me.txt_Boxcost = Format((Me.txt_Boxes * 10), "#,##0.00 |fffd|")
    Else
        Me.txt_Boxcost = Format(0, "#,##0.00 |fffd|")
    End If

End Sub


Private Sub txt_InpFiles_Change()
    
    If Me.txt_InpFiles <> "" Then
        'Anzahl der ben|fffd|tigten Archivboxen Ausrechnen
        Me.txt_Boxes = Application.RoundUp(Me.txt_InpFiles / 6, 0)
    
        'Wenn Archivboxen von IM ben|fffd|tigt werden Kosten ausrechnen
        If Me.chk_ABoxes = True Then
            Me.txt_Boxcost = Format((Me.txt_Boxes * 2), "#,##0.00 |fffd|")
        Else
            Me.txt_Boxcost = Format(0, "#,##0.00 |fffd|")
        End If
        
        'Kosten f|fffd|r Transport ausrechnen
        If Me.txt_Boxes > 0 And Me.txt_Boxes <= 20 Then
            Me.txt_Transport = Format(175, "#,##0.00 |fffd|")
        ElseIf Me.txt_Boxes > 20 Then
            Me.txt_Transport = Format(275, "#,##0.00 |fffd|")
        Else
            Me.txt_Transport = Format(0, "#,##0.00 |fffd|")
        End If
        
        'Kosten f|fffd|r In-bound Handling ausrechnen
        Me.txt_Handling = Format((Me.txt_Boxes * 4.9), "#,##0.00 |fffd|")
        
    Else
        Me.txt_InpFiles = 0
    End If
End Sub

Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
' Blattschutz ist aktiviert. Dadurch k|fffd|nnen die Gruppierten zeilen nicht mehr eingeblendet werden.
' Der folgende Code erm|fffd|glich diese wieder, in dem er Gliederunge und Autofilter erlaubt.


' Datum, Zeit und Benutzer der letzten |fffd|nderung beim Speichern loggen
' und in Zelle (Zeile 1, Spalte W) eintragen.

Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)

    Worksheets("Cost Estimate").Range("W1") = "Last Change: " & Chr(10) & Now() & Chr(10) & "by " & Application.UserName

End Sub

Attribute VB_Name = "Modul1"
Option Explicit
Dim varCAN As Integer
Attribute VB_Name = "SafetyLab"
Attribute VB_Base = "0{0EA24DC9-FC98-4DA9-AD09-22C570CAA8AD}{967F9020-EADC-4B1D-80C9-095A084D9CA6}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub btn_Fee_Click()
            
    Dim objDataObject As DataObject
    
    If txt_Para <> "" Then
        Set objDataObject = New DataObject
            objDataObject.SetText txt_result.Text
            objDataObject.PutInClipboard
        Set objDataObject = Nothing
    Else
        MsgBox "Parameter List Empty. Please select Items and try again!", vbOKOnly, "Hint!"
    End If
    
    
End Sub

Private Sub btn_RMall_Click()

Dim i As Integer

    'Listbox 2 (Selected Parameter) leeren
    ListBox2.Clear
    
    'Parameter Textfeld leeren
    txt_Para = ""
    
    ' Listbox1 neu einlesen und Summe auf 0,00 |fffd| setzen
    Listbox1.List = Worksheets("SafetyLab").Range("A2:C219").Value
    txt_result.Text = Format(0, "#,##0.00 |fffd|")
    
End Sub

Private Sub btn_StdLab_Click()

Dim cal, res As Double
Dim a, i, count As Integer
Dim sl()

'Array mit Parametern f|fffd|r Standard Safety Lab f|fffd|llen
sl = Array("GRBB (Profil)", "KREA", "AP", "BIGE", "PT", "OT", "GT", "ALB / ALBU (turbi, neu)", "GE", "HSR", "HST", "NA", "K", "CL", _
"MGA", "BZ", "LDH", "", "", "CHOL", "TRI", "GFR", "TSE1, TSE2", "Mikr. Harn")

'schleife starten um alle parameter aus Listbox 1 zu Listbox 2 hinzuzuf|fffd|gen
For a = 0 To 23
    
    'Debug.Print a & ". " & sl(a)
    
  With Listbox1 'Item aus Listbox1 heraussuchen
    For count = 0 To .ListCount - 2
          
        res = txt_result 'aktuelle Summe aus textfeld auslesen
          
    If Listbox1.Column(0, count) = sl(a) Then '|fffd|berpr|fffd|fen ob Suchbegriff mit aktuellem item aus LB1 |fffd|bereinstimmt
                  
        With ListBox2 'Item an Listbox2 anh|fffd|ngen
            .AddItem Listbox1.Column(0, count)
            .List(.ListCount - 1, 1) = Listbox1.Column(2, count)
            .List(.ListCount - 1, 1) = Format(.List(.ListCount - 1, 1), "#,##0.00 |fffd|")
            .List(.ListCount - 1, 2) = Listbox1.Column(1, count)
        End With

            'Wert von angeh|fffd|ngtem Item zur Gesamtsumme hinzuf|fffd|gen
            cal = Listbox1.Column(2, count)
            res = res + cal
            txt_result = res
            txt_result.Text = Format(txt_result, "#,##0.00 |fffd|")

            Listbox1.RemoveItem count 'Parameter aus Hauptliste entfernen, damit nicht doppelt ausw|fffd|hlbar
     End If
     
' #### Ende Einf|fffd|ge Funktion ####
    Next count
  End With
Next a


'Parameterliste in txt_Para einf|fffd|gen
            txt_Para = ""
            ListBox2.ListIndex = 0

            If ListBox2 = Null Then
                txt_Para = ListBox2.List(ListBox2.ListIndex, 2)
            Else
                With ListBox2
                    For i = 0 To .ListCount - 1
                            If txt_Para = "" Then
                                txt_Para = ListBox2.List(ListBox2.ListIndex + i, 2)
                            Else
                                txt_Para = txt_Para & ", " & ListBox2.List(ListBox2.ListIndex + i, 2)
                            End If
                    Next i
                End With
            End If


End Sub

Private Sub BtnAdd_Click()
Dim cal, res As Double
Dim i As Integer

    res = txt_result 'aktuelle Summe aus textfeld auslesen
    
    If Listbox1 <> "" Then
    
    With ListBox2 'Item an Listbox2 anh|fffd|ngen
        .AddItem Listbox1.List(Listbox1.ListIndex, 0)
        .List(.ListCount - 1, 1) = Listbox1.List(Listbox1.ListIndex, 2)
        .List(.ListCount - 1, 1) = Format(.List(.ListCount - 1, 1), "#,##0.00 |fffd|")
        .List(.ListCount - 1, 2) = Listbox1.List(Listbox1.ListIndex, 1)
    End With
        
        'Wert von angeh|fffd|ngtem Item zur Gesamtsumme hinzuf|fffd|gen
        cal = Listbox1.List(Listbox1.ListIndex, 2)
        res = res + cal
        txt_result = res
        txt_result.Text = Format(txt_result, "#,##0.00 |fffd|")

        Listbox1.RemoveItem Listbox1.ListIndex 'Parameter aus Hauptliste entfernen, damit nicht doppelt ausw|fffd|hlbar
    Else
       MsgBox "No items selected. Please select Item to add!", vbOKOnly, "Hint!"
       Exit Sub
    End If
  
    'Parameterliste in txt_Para einf|fffd|gen
        txt_Para = ""
        ListBox2.ListIndex = 0
        
        If ListBox2 = Null Then
           txt_Para = ListBox2.List(ListBox2.ListIndex, 2)
        Else
            With ListBox2
                For i = 0 To .ListCount - 1
                        If txt_Para = "" Then
                            txt_Para = ListBox2.List(ListBox2.ListIndex + i, 2)
                        Else
                            txt_Para = txt_Para & ", " & ListBox2.List(ListBox2.ListIndex + i, 2)
                        End If
                Next i
            End With
        End If
    
End Sub


Private Sub BtnRem_Click()
Dim cal, res As Double
    Dim i, j As Long
    Dim Temp As Variant

res = txt_result 'aktuelle Summe aus textfeld auslesen

    If ListBox2 <> "" Then
                
        'Wert von gel|fffd|schtem Item von Gesamtsumme abziehen
        cal = ListBox2.List(ListBox2.ListIndex, 1)
        res = res - cal
        txt_result = res
        txt_result.Text = Format(txt_result, "#,##0.00 |fffd|")
        
        With Listbox1 'Item in Listbox1 an alphabetische Pos einf|fffd|gen
        
        For i = 0 To .ListCount - 2 'Stelle (alphabetisch) raussuchen und Item wieder in Auswahlliste einf|fffd|gen
                If ListBox2.List(ListBox2.ListIndex, 0) > .List(i) And ListBox2.List(ListBox2.ListIndex, 0) < .List(i + 1) Then
                    .AddItem ListBox2.List(ListBox2.ListIndex, 0), i + 1
                    .List(i + 1, 1) = ListBox2.List(ListBox2.ListIndex, 2)
                    .List(i + 1, 2) = ListBox2.List(ListBox2.ListIndex, 1)
                End If
           Next i
        End With
        
        ListBox2.RemoveItem (ListBox2.ListIndex) 'Item gew|fffd|hlt Liste l|fffd|schen
        
    Else
        MsgBox "No items selected. Please select Item to remove!", vbOKOnly, "Hint!"
    End If
    
     'Parameterliste in txt_Para einf|fffd|gen
        txt_Para = ""
        ListBox2.ListIndex = -1
        
        If ListBox2 = Null Then
           txt_Para = ListBox2.List(ListBox2.ListIndex, 2)
        Else
            With ListBox2
                For i = 0 To .ListCount - 1
                        If txt_Para = "" Then
                            txt_Para = ListBox2.List(ListBox2.ListIndex + 1 + i, 2)
                        Else
                            txt_Para = txt_Para & ", " & ListBox2.List(ListBox2.ListIndex + 1 + i, 2)
                        End If
                Next i
            End With
        End If
    
    
End Sub


Private Sub CommandButton1_Click()
    
    Dim objDataObject As DataObject
    
    If txt_Para <> "" Then
        Set objDataObject = New DataObject
            objDataObject.SetText txt_Para.Text
            objDataObject.PutInClipboard
        Set objDataObject = Nothing
    Else
        MsgBox "Parameter List Empty. Please select Items and try again!", vbOKOnly, "Hint!"
    End If
    
End Sub

Private Sub UserForm_Activate()
    Listbox1.List = Worksheets("SafetyLab").Range("A2:C219").Value
    'ListBox1.Column(2) = Format("#,##0.00 |fffd|")
    txt_result.Text = Format(txt_result, "#,##0.00 |fffd|")
End Sub
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "UserForm1"
Attribute VB_Base = "0{BAED2C78-1944-451E-9854-8414400306B6}{5574CFA5-0021-4A09-9647-37E819783977}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

Private Sub cmdCancel_Click()
    Unload UserForm1
End Sub

Private Sub CmdOK_Click()

    Dim zeile As Integer
    Dim chapter As String
    
    zeile = Tabelle1.Cells(1, 8)
    chapter = Tabelle1.Cells(1, 28)
    
    If Me.OptionButton2 = True Then
        Tabelle1.Cells(zeile, 2) = "A" & txtANR.Value
    Else
        Tabelle1.Cells(zeile, 2) = 5
    End If
    
    If txtTask.Value = "" Then
        MsgBox "Please enter a Task Desctiption!", vbExclamation, "Attention!"
        Exit Sub
    End If
    
    If chapter = "PT" Then
        Tabelle1.Cells(zeile, 3) = txtTask.Value
        Tabelle1.Cells(zeile, 4) = ComboBox1.Value
        Tabelle1.Cells(zeile, 5) = txtRate.Value
        Tabelle1.Cells(zeile, 6) = txtNRU.Value
    Else
        Tabelle1.Cells(zeile, 1) = txtRES.Value
        Tabelle1.Cells(zeile, 3) = txtTask.Value
        Tabelle1.Cells(zeile, 4) = ComboBox1.Value
        Tabelle1.Cells(zeile, 9) = txtNRU.Value
        Tabelle1.Cells(zeile, 22) = txtHU.Value
        Tabelle1.Cells(zeile, 23) = txtRate.Value
        Tabelle1.Cells(zeile, 25) = txtEK.Value
        Tabelle1.Cells(zeile, 26) = txtFL.Value
    End If
    
    Unload UserForm1

End Sub

Private Sub OptionButton1_Click()

        Me.txtANR.Visible = False
        Me.Label2.Visible = False
        
End Sub

Private Sub OptionButton2_Click()
        
        Me.txtANR.Visible = True
        Me.Label2.Visible = True

End Sub

Private Sub txtANR_Change()

Dim ANR As Integer

ANR = Me.txtANR.Value
Debug.Print ANR

    If ANR < 1 Or ANR > 6 Then
        MsgBox "Please enter a valid amendment number between 1 and 6.", vbOKOnly, "Invalid Amendment Number"
        Me.txtANR.Value = 1
    End If


End Sub


Private Sub UserForm_Initialize()
    With Me.ComboBox1
        .AddItem "day"
        .AddItem "device"
        .AddItem "country"
        .AddItem "cycle"
        .AddItem "hour"
        .AddItem "line"
        .AddItem "meeting"
        .AddItem "night"
        .AddItem "sample"
        .AddItem "shipm."
        .AddItem "site"
        .AddItem "subject"
        .AddItem "subm."
        .AddItem "unit"
        .AddItem "visit"
        .ListIndex = 4 'Vorbelegung "Schmitz" bei Formularstart
End With
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    If CloseMode = vbFormControlMenu Then
        MsgBox "Cancellation not possible. Please enter required data!" & Chr(10) & "New line item can be deleted afterwards by using the 'delete line' button."
        Cancel = True
    End If
End Sub
Attribute VB_Name = "UserForm2"
Attribute VB_Base = "0{076DCCEA-AC02-4503-8B22-4B98B25B9EEC}{2E9397F2-7269-4F2F-8BE7-0E047A4EE26D}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Private Sub NextBtn_Click()

Dim titlepos As Integer

'|fffd|berpr|fffd|fen ob alles notwendige eingegeben wurde
If txtTitle.Value = "" Then
    MsgBox "Please enter a Section Title", vbExclamation, "Attention!"
    Exit Sub
ElseIf txtShort.Value = "" Then
    MsgBox "Please enter a Section Abbreviation (e.g. SP = Study Preparation)", vbExclamation, "Attention!"
    Exit Sub
End If

titlepos = Tabelle1.Cells(1, 27)
    Tabelle1.Cells(titlepos, 3) = txtTitle.Value
    Tabelle1.Cells(titlepos, 1) = txtShort.Value
    If txtLItem.Value = 0 Then
        Tabelle1.Cells(1, 27) = 1
    ElseIf txtLItem.Value = "" Then
        Tabelle1.Cells(1, 27) = 1
    Else
        Tabelle1.Cells(1, 27) = txtLItem.Value
    End If
    
    Unload UserForm2

End Sub


Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    If CloseMode = vbFormControlMenu Then
        MsgBox "Cancellation not possible. Please enter required data!" & Chr(10) & "New section can be deleted afterwards by using the 'delete line' button."
        Cancel = True
    End If
End Sub


INQUEST-PP=macro
