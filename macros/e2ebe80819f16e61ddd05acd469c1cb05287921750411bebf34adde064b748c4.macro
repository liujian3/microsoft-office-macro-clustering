Attribute VB_Name = "EventClassModule"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Public WithEvents App As Word.Application
Attribute App.VB_VarHelpID = -1



Private Sub App_DocumentBeforePrint(ByVal Doc As Document, Cancel As Boolean)
  Dim strMessage As String
  
  
  strMessage = "Barcode not yet updated.  Save Doc & update barcode now?"
  
    'if the saved state is false, warn user and ask if they prefer to cancel
    If ActiveDocument.Saved = False Then
      If MsgBox(strMessage, vbYesNo) = vbYes Then
        ActiveDocument.Save
      Else
        Cancel = True   'don't save and don't print
      End If
    
    End If
    

End Sub

Private Sub App_DocumentBeforeSave(ByVal Doc As Document, SaveAsUI As Boolean, Cancel As Boolean)


    Dim intResponse As Integer

    intResponse = MsgBox("Do you really want to " _
        & "save the document AND update the Barcode?", _
        vbYesNo)

    If intResponse = vbNo Then Cancel = True
    
    'write the barcode then save
    Call WriteBarcode

End Sub

Attribute VB_Name = "Module1"
Dim strBarcode As String
Dim X As New EventClassModule

Sub Register_Event_Handler()
Set X.App = Word.Application
End Sub



Public Function getpages() As String

  'return the number of pages as a string with a length of three characters.
  Dim numPagecount As Integer, strPageCount As String
  
  numPagecount = ActiveDocument.ComputeStatistics(wdStatisticPages)
  
  getpages = Val(numPagecount)
  
  ' make sure its 3chrs
  Do While Len(getpages) < 3
    getpages = "0" & getpages
  Loop
  
  'getpages = strPageCount
  
End Function


Public Sub GenerateBarcode()
    Dim strPageCount As String
    
   
   'Verify that all fields have been filled in...if not, message & cancel
   If CheckFields = False Then
     MsgBox "One or more of the User fields has no value" & vbCrLf & vbCrLf & _
       "Cancelling....."
     Exit Sub
   End If
   
   
   'get number of pages for barcode
   strPageCount = getpages

    strBarcode = "!*HRSCAN-" & ActiveDocument.EmpRef.Text & "-" & UCase(ActiveDocument.PostNum.Text) & _
    Format(ActiveDocument.SDate.Text, "yyyymmdd") & "-" & UCase(ActiveDocument.HRRef.Text) & "-" & strPageCount & "-0*!"



End Sub

Public Function CheckFields() As Boolean
  'check that all fields have been populated
  If ActiveDocument.EmpRef.Text = "" Or ActiveDocument.PostNum.Text = "" Or _
  ActiveDocument.SDate.Text = "" Then
    CheckFields = False
  Else
    CheckFields = True
  End If
  
End Function

Public Sub WriteBarcode()
   'firstly, generate the barcode
   Call GenerateBarcode


  'go to footer, clear barcode then re-add bookmark
    
    'make sure document is in print view then select footer
    With ActiveDocument.ActiveWindow.View
      .Type = wdPrintView
      .SeekView = wdSeekPrimaryFooter
    End With

    'tab right so that correct cell is selected
    Selection.MoveRight Unit:=wdCell
    Selection.MoveRight Unit:=wdWord, Count:=1, Extend:=wdExtend
    Selection.Delete Unit:=wdCharacter, Count:=1
    
    'Write the barcode into the cell (code 39 font, 18point works fine)
    Selection.TypeText (strBarcode)
    
    'Copy the barcode into the human readable textbox
     ActiveDocument.Barcode1.Text = strBarcode
    
    Rem to take the focus away from the footer
    With ActiveDocument.ActiveWindow.View
      .Type = wdPrintView
      .SeekView = wdSeekMainDocument
    End With
End Sub


Attribute VB_Name = "ThisDocument"
Attribute VB_Base = "1Normal.ThisDocument"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = True
Attribute VB_Customizable = True
Attribute VB_Control = "Barcode1, 4, 11, MSForms, TextBox"
Attribute VB_Control = "SDate, 3, 12, MSForms, TextBox"
Attribute VB_Control = "PostNum, 2, 13, MSForms, TextBox"
Attribute VB_Control = "HRRef, 1, 14, MSForms, TextBox"
Attribute VB_Control = "EmpRef, 0, 15, MSForms, TextBox"

Private Sub Document_Open()
  'Register the event handler so that the 'beforeDocumentSave' event is initialised
  Call Register_Event_Handler
End Sub













INQUEST-PP=macro
