Attribute VB_Name = "List1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Const regionalni = "Regional"
Const artpas = "A-Pass"
Const wine = "Weinetikett"

Private Sub btn3_Click()
    ' addchild
End Sub

Private Sub btn4_Click()
    ' delchild
End Sub

Private Sub btn1_Click()
    addlineME
    '  If (Left(Range(Cells(Selection.Row, 2), Cells(Selection.Row + 1, 2)).Name.Name, Len(Range(Cells(Selection.Row, 2), Cells(Selection.Row + 1, 2)).Name.Name) - 3)) = "UMRENB_" Then addlineME "UMRENB_", "MESUBB_"
    '  If (Left(Range(Cells(Selection.Row, 2), Cells(Selection.Row + 1, 2)).Name.Name, Len(Range(Cells(Selection.Row, 2), Cells(Selection.Row + 1, 2)).Name.Name) - 3)) = "UMREN_" Then addlineME "UMREN_", "MESUB_"
End Sub

Private Sub btn2_Click()
    dellineME
End Sub

Private Sub btn5_Click()
    childform
End Sub

Private Sub btn6_Click()
    addlineDISP
End Sub

Private Sub btn7_Click()
    dellineDISP
End Sub
Private Sub addChildButton_Click()
    addChildNumber
End Sub

Private Sub deleteChildButton_Click()
    deleteChildNumber
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

    Dim title                           As Variant
    Dim lbl_vybrfil                     As Variant
    Dim btn_odebrat                     As Variant
    Dim btn_import                      As Variant
    Dim btn_matka                       As Variant
    Dim btn_pridat                      As Variant
    Dim btn_ulozit                      As Variant
    Dim lbl_fil                         As Variant
    Dim x                               As Integer
    Dim wstawValue                      As String
    
    On Error GoTo 10
    
    If Not g_bool_isInitialized Then
        Call Init
    End If
    
     ' show addditional MD sheet for case if range contain MD or MD+RO values
    On Error Resume Next
    If UCase(Range("LAND")) = "RO" Then
        aaa = UCase(Range("Extindere_Articol_MD")) ' check is range exist (only for RO)
        If Err = 0 Then
            If Target.Address = Range("Extindere_Articol_MD").Address Then
                If UCase(Range("Extindere_Articol_MD")) = "X" Then
                    Application.ScreenUpdating = False
                    ActiveWorkbook.Unprotect Password:=heslo
                    ActiveSheet.Unprotect Password:=heslo
                    Sheets("A-pass MD").Unprotect Password:=heslo
                    Sheets("A-pass MD").Visible = True
                    Sheets("A-pass MD").Activate ' new sheet
                    Sheets("A-pass MD").Range("WSTAW_MD").Value = Range("WSTAW").Value ' copy wstaw number from a-pass sheet
                                        
                    ActiveWorkbook.Protect Password:=heslo
                    ActiveSheet.Protect Password:=heslo
                    Sheets("A-pass").Protect Password:=heslo
                    Application.ScreenUpdating = True
                Else
                    Application.ScreenUpdating = False
                    ActiveWorkbook.Unprotect Password:=heslo
                    ActiveSheet.Unprotect Password:=heslo
                    Sheets("A-pass MD").Unprotect Password:=heslo
                    Sheets("A-pass MD").Visible = False
                                    
                    ActiveWorkbook.Protect Password:=heslo
                    ActiveSheet.Protect Password:=heslo
                    Sheets("A-pass").Protect Password:=heslo
                    Application.ScreenUpdating = True
                End If
            End If
        End If
        Err = 0
    End If
    On Error GoTo 10

    If Target.Address = "$M$2" Then
        Select Case Target.Value
            Case "DE"
                lang = 1
            Case "CZ"
                lang = 2
            Case "SK"
                lang = 3
            Case "HR"
                lang = 4
            Case "PL"
                lang = 5
            Case "RO"
                lang = 6
            Case "BG"
                lang = 7
            Case "EN"
                lang = 8
            Case "???"
                lang = 99
        End Select
        If lang <> 99 Then
            On Error GoTo 0
            Set g_obj_language_1 = g_coll_languages.Item(Target.Value)
            languagesel 1
             'AP2-218
            Worksheets(wine).Range("reg_wein_body").Value = Worksheets(wine).Range(Mid(Worksheets(wine).Range("reg_wein_body").Validation.Formula1, 2)).Cells(2, 1).Value
        End If
    End If

    If Target.Address = "$M$3" Then
        Select Case Target
            Case "DE"
                lang = 1
            Case "CZ"
                lang = 2
            Case "SK"
                lang = 3
            Case "HR"
                lang = 4
            Case "PL"
                lang = 5
            Case "RO"
                lang = 6
            Case "BG"
                lang = 7
            Case "EN"
                lang = 8
            Case "???"
                lang = 99
        End Select
        If lang <> 99 Then
            On Error GoTo 0
            Set g_obj_language_2 = g_coll_languages.Item(Target.Value)
            languagesel 2
        End If
    End If

    If Target.Address = "$S$2" Then
        Select Case Target
            Case "KI"
                lang = 10
            Case "CZ"
                lang = 2
            Case "SK"
                lang = 3
            Case "HR"
                lang = 4
            Case "PL"
                lang = 5
            Case "RO"
                lang = 6
            Case "BG"
                lang = 7
            Case "MD"
                lang = 9
            Case "AU"
                lang = 11
        End Select
        On Error GoTo 0
        Set g_obj_country = g_coll_countries.Item(Target.Value)
        Call zmenazeme
        If lang = 11 Then
            Range("SPRACH_002") = "EN" ' AU changes
            Call HideDeposite
        Else
            Call ShowDeposite
        End If
        ' AP2-187 change IPRKZ_wein value for BG
        Range("IPRKZ_wein").Value = Range(Mid(Range("IPRKZ_wein").Validation.Formula1, 2)).Cells(2, 1).Value
    End If

    If Target.Address = "$C$34" Or Target.Address = "$Z$34" Then
        Call Load_Sales_UM
    End If

    If (Left(Target.Name.Name, 5) = "SSTUF" Or Left(Target.Name.Name, 10) = "ZZEK_SSTUF") And UCase(Target.Value) = "R" Then
        'If Len(Target.Name.Name) = 5 Then formregion.btn_matka.Visible = False Else formregion.btn_matka.Visible = True
        formregion.Caption = hlaska(17)
        formregion.lbl_vybrfil.Caption = hlaska(18)
        formregion.btn_odebrat.Caption = hlaska(19)
        formregion.btn_import.Caption = hlaska(20)
        formregion.btn_ulozit.Caption = hlaska(23)
        'formregion.btn_matka.Caption = hlaska(21)
        formregion.btn_pridat.Caption = hlaska(22)
        formregion.lbl_fil.Caption = hlaska(24)
        On Error GoTo 0
        regform (Target.Name.Name)
    End If
    
    If Target.Name.Name = "ZE_HERKL" And InStr(Target.Value, "- EU") <> 0 Then
    'And InStr(Target.Value, "- EU") <> 0
        MsgBox ("You cannot select EU in this field. Please select another country.")
        Target.Value = ""
    End If
    
    ' change formula for MD PB00 field \ Ap2-184
    If Target.Name.Name = "ZZEK_MSI_md" Then
        Application.ScreenUpdating = False
        Application.EnableEvents = False
        ActiveSheet.Unprotect Password:=heslo
        If InStr(Target.Value, "%") <> 0 Then
            Range("KSCHL_002").Value = "YMPR_"
            Range("KONWA_002").Value = Range("KONWA_001").Value
            Range("PB00_rez").Formula = "=PB00_WHR - kalk_val_1_002"
        Else
            Range("PB00_rez").Formula = "=PB00_WHR"
            If Range("KSCHL_002").Value = "YMPR_" Then
                Range("KSCHL_002").Value = ""
                Range("KONWA_002").Value = ""
            End If
        End If
        Application.ScreenUpdating = True
        Application.EnableEvents = True
        ActiveSheet.Protect Password:=heslo
    End If
    
    Application.EnableEvents = True
    If Target.Name.Name = "WSTAW" Then
        Dim markerRange As Range
        Dim firstCoCell As Range
        Dim wstawRange As String
        
        wstawValue = CStr(Target.Value)
        Select Case Range("LAND").Value
            Case "CZ"
                wstawRange = "WSTAW_CZ"
            Case "SK"
                wstawRange = "WSTAW_SK"
            Case "HR"
                wstawRange = "WSTAW_HR"
            Case "PL"
                wstawRange = "WSTAW_PL"
            Case "RO"
                wstawRange = "WSTAW_RO"
            Case "BG"
                wstawRange = "WSTAW_BG"
            Case "KI"
                wstawRange = "WSTAW_HR"
            Case "MD"
                wstawRange = "WSTAW_MD"
            Case "AU"
                wstawRange = "WSTAW_PL"
        End Select
        
        With Worksheets(wstawRange).Range("A:A")
            a = CDbl(wstawValue)
            Set markerRange = .Find(What:=a, LookAt:=xlPart)
            If Not markerRange Is Nothing Then
                Set firstCoCell = markerRange.Offset(0, 1)
                Range("RMMZU_MEINH").Value = firstCoCell.Value
                Exit Sub
            End If
        End With
    End If
    
        
10 End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

    If Target.Address = Range("btnplaceplus_001").MergeArea.Address Then
        Application.EnableEvents = False
        addplace
        Application.EnableEvents = True
    End If
    
    On Error GoTo konec
    If InStr(1, Target.Address, ":") <> 0 Then
        If Left(Range(Left(Target.Address, InStr(1, Target.Address, ":") - 1)).Name.Name, Len(Range(Left(Target.Address, InStr(1, Target.Address, ":") - 1)).Name.Name) - 4) = "MEINH_display" Then
            Dim ary(20) As Variant
            Dim arr2
            
            Application.EnableEvents = False
            ary(0) = Range("MEINHB_001")
            maxcis = pocetr("MEINH_001")
            For i = 1 To maxcis
                ary(i) = Range("MEINH_" & Format(i, "000"))
            Next i
    
            arr2 = RemoveDupes2(ary)
            ActiveSheet.Unprotect Password:=heslo
    
            With ActiveSheet.Range(Left(Range(Left(Target.Address, InStr(1, Target.Address, ":") - 1)).Name.Name, Len(Range(Left(Target.Address, InStr(1, Target.Address, ":") - 1)).Name.Name))).Validation
                .Delete
                .Add Type:=xlValidateList, Formula1:=Join(arr2, ",")
                .IgnoreBlank = False
                .InCellDropdown = True
                .InputTitle = ""
                .ErrorTitle = ""
                .InputMessage = ""
                .ErrorMessage = ""
                .ShowInput = True
                .ShowError = True
            End With
            ActiveSheet.Protect Password:=heslo
            Range(Left(Range(Left(Target.Address, InStr(1, Target.Address, ":") - 1)).Name.Name, Len(Range(Left(Target.Address, InStr(1, Target.Address, ":") - 1)).Name.Name))).Select
            Application.EnableEvents = True
        End If
    End If
    
    On Error GoTo konec
    
    If Left(Range(Left(Target.Address, InStr(1, Target.Address, ":") - 1)).Name.Name, Len(Range(Left(Target.Address, InStr(1, Target.Address, ":") - 1)).Name.Name) - 4) = "btnplaceminus" And Right(Range(Left(Target.Address, InStr(1, Target.Address, ":") - 1)).Name.Name, 3) <> "001" Then
        Application.EnableEvents = False
        delplace
        Application.EnableEvents = True
konec:
    End If
    On Error GoTo 0
End Sub


Function RemoveDupes2(InputArray) As Variant

Dim OutputArray As Variant
Dim CurrentValue As Variant
Dim a As Variant

On Error Resume Next
OutputArray = Array("")
For Each CurrentValue In InputArray
    Flag = 0
    If IsEmpty(CurrentValue) Then GoTo skip
    For Each a In OutputArray
        If a = CurrentValue Then
            Flag = 1
            Exit For
        End If
    Next a

    If Flag = 0 Then
        ReDim Preserve OutputArray(UBound(OutputArray, 1) + 1)
        OutputArray(UBound(OutputArray, 1) - 1) = CurrentValue
    End If

skip:
Next
RemoveDupes2 = OutputArray

End Function
Attribute VB_Name = "List10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "List9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Module1"
Const texty = "Textfeld"
Const rolety = "Settings"
Const lokalni = "lokal"
Const artpas = "A-Pass"
Const wine = "Weinetikett"
Const regionalni = "Regional"
Const backshop = "Langtext"
Const kosmetika = "Dangerous goods"
Const nf = "NF"
Const polenw = "Fields"
Const zeme = "L|fffd|nder"
Const hlasky = "Messages"
Const logo = "Logo"
Const apassMD = "A-pass MD"


Const novaverzeCZ = "\\de.int.kaufland\global\ki\ek\vertraege-handbuecher\aktuell\Formulare u. Vorlagen\Artikelpass_Lieferantenstammblatt\A-Pass KMO update"
Const versionpathCZ = "\\de.int.kaufland\global\ki\ek\vertraege-handbuecher\aktuell\Formulare u. Vorlagen\Artikelpass_Lieferantenstammblatt\version.txt"
Const novaverzeKI = "\\de.int.kaufland\global\ki\ek\vertraege-handbuecher\aktuell\Formulare u. Vorlagen\Artikelpass_Lieferantenstammblatt\A-Pass KMO update"
Const versionpathKI = "\\de.int.kaufland\global\ki\ek\vertraege-handbuecher\aktuell\Formulare u. Vorlagen\Artikelpass_Lieferantenstammblatt\version.txt"
Const novaverzeSK = "\\de.int.kaufland\global\ki\ek\vertraege-handbuecher\aktuell\Formulare u. Vorlagen\Artikelpass_Lieferantenstammblatt\A-Pass KMO update"
Const versionpathSK = "\\de.int.kaufland\global\ki\ek\vertraege-handbuecher\aktuell\Formulare u. Vorlagen\Artikelpass_Lieferantenstammblatt\version.txt"
Const novaverzeHR = "\\de.int.kaufland\global\ki\ek\vertraege-handbuecher\aktuell\Formulare u. Vorlagen\Artikelpass_Lieferantenstammblatt\A-Pass KMO update"
Const versionpathHR = "\\de.int.kaufland\global\ki\ek\vertraege-handbuecher\aktuell\Formulare u. Vorlagen\Artikelpass_Lieferantenstammblatt\version.txt"
Const novaverzePL = "\\de.int.kaufland\global\ki\ek\vertraege-handbuecher\aktuell\Formulare u. Vorlagen\Artikelpass_Lieferantenstammblatt\A-Pass KMO update"
Const versionpathPL = "\\de.int.kaufland\global\ki\ek\vertraege-handbuecher\aktuell\Formulare u. Vorlagen\Artikelpass_Lieferantenstammblatt\version.txt"
Const novaverzeRO = "\\de.int.kaufland\global\ki\ek\vertraege-handbuecher\aktuell\Formulare u. Vorlagen\Artikelpass_Lieferantenstammblatt\A-Pass KMO update"
Const versionpathRO = "\\de.int.kaufland\global\ki\ek\vertraege-handbuecher\aktuell\Formulare u. Vorlagen\Artikelpass_Lieferantenstammblatt\version.txt"
Const novaverzeBG = "\\de.int.kaufland\global\ki\ek\vertraege-handbuecher\aktuell\Formulare u. Vorlagen\Artikelpass_Lieferantenstammblatt\A-Pass KMO update"
Const versionpathBG = "\\de.int.kaufland\global\ki\ek\vertraege-handbuecher\aktuell\Formulare u. Vorlagen\Artikelpass_Lieferantenstammblatt\version.txt"
Const novaverzeMD = "\\de.int.kaufland\global\ki\ek\vertraege-handbuecher\aktuell\Formulare u. Vorlagen\Artikelpass_Lieferantenstammblatt\A-Pass KMO update"
Const versionpathMD = "\\de.int.kaufland\global\ki\ek\vertraege-handbuecher\aktuell\Formulare u. Vorlagen\Artikelpass_Lieferantenstammblatt\version.txt"
Const novaverzeAU = "\\de.int.kaufland\global\ki\ek\vertraege-handbuecher\aktuell\Formulare u. Vorlagen\Artikelpass_Lieferantenstammblatt\A-Pass KMO update"
Const versionpathAU = "\\de.int.kaufland\global\ki\ek\vertraege-handbuecher\aktuell\Formulare u. Vorlagen\Artikelpass_Lieferantenstammblatt\version.txt"
Const mnozc = "t_\_prodsite_L1,t_\_prodsite_L2,t_\_COUNTRY_L1,t_\_COUNTRY_L2,t_\_CITY1_L1,t_\_CITY1_L2,tab_COUNTRY_,tab_CITY1_," & _
      "t_\_POST_CODE1_L1,t_\_POST_CODE1_L2,t_\_NAME1_L1,t_\_NAME1_L2,tab_POST_CODE1_,tab_NAME1_,t_\_STREET_L1,t_\_STREET_L2," & _
      "tab_STREET_,t_\_HOUSE_NUM1_L1,t_\_HOUSE_NUM1_L2,tab_HOUSE_NUM1_,btnplaceplus_,btnplaceminus_,t_\_add_del_L1,t_\_add_del_L2"
      
Dim jechyba As Boolean

Sub languagesel(numb As Byte)

    'Macro mhav1304 3.12.2013
    Dim y                               As Long
    Dim pocetdeti                       As Integer
    Dim pocetd                          As String
    Dim cykl                            As Integer
    Dim pocetmist                       As Integer

    Application.ScreenUpdating = False
    ActiveWorkbook.Unprotect Password:=heslo
    ActiveSheet.Unprotect Password:=heslo
    Sheets(wine).Unprotect Password:=heslo
    Sheets(backshop).Unprotect Password:=heslo
    Sheets(nf).Unprotect Password:=heslo
    Sheets(kosmetika).Unprotect Password:=heslo
    Sheets(logo).Unprotect Password:=heslo
    Sheets(apassMD).Unprotect Password:=heslo
    y = 2
    pocetdeti = pocetr("komponent_display_001")
    pocetChild = pocetr("ChMATNR_001")
    pocetmist = pocetr("tab_CITY1_001")
    On Error Resume Next

    Do
        If Left(Sheets(texty).Cells(y, 3), 1) = "t" Then
            If Mid(Sheets(texty).Cells(y, 3), 3, 2) = "?\" Then
                For cykl = 1 To pocetChild
                    If numb = 1 Then Range(Left(Sheets(texty).Cells(y, 3), 4) & Format(cykl, "000") & Right(Sheets(texty).Cells(y, 3), Len(Sheets(texty).Cells(y, 3)) - 4)) = Sheets(texty).Cells(y, lang + 3)
                    If numb = 2 Then Range(Left(Sheets(texty).Cells(y, 3), 4) & Format(cykl, "000") & Mid(Sheets(texty).Cells(y, 3), 5, Len(Sheets(texty).Cells(y, 3)) - 6) & "L2") = Sheets(texty).Cells(y, lang + 3)
                Next cykl
            ElseIf Mid(Sheets(texty).Cells(y, 3), 3, 1) = "?" Then
                For cykl = 1 To pocetdeti
                    If numb = 1 Then Range(Left(Sheets(texty).Cells(y, 3), 3) & Format(cykl, "000") & Right(Sheets(texty).Cells(y, 3), Len(Sheets(texty).Cells(y, 3)) - 3)) = Sheets(texty).Cells(y, lang + 3)
                    If numb = 2 Then Range(Left(Sheets(texty).Cells(y, 3), 3) & Format(cykl, "000") & Mid(Sheets(texty).Cells(y, 3), 4, Len(Sheets(texty).Cells(y, 3)) - 5) & "L2") = Sheets(texty).Cells(y, lang + 3)
                Next cykl
            ElseIf Mid(Sheets(texty).Cells(y, 3), 3, 1) = "\" Then
                For cykl = 1 To pocetmist
                    If numb = 1 Then Range(Left(Sheets(texty).Cells(y, 3), 3) & Format(cykl, "000") & Right(Sheets(texty).Cells(y, 3), Len(Sheets(texty).Cells(y, 3)) - 3)) = Sheets(texty).Cells(y, lang + 3)
                    If numb = 2 Then Range(Left(Sheets(texty).Cells(y, 3), 3) & Format(cykl, "000") & Mid(Sheets(texty).Cells(y, 3), 4, Len(Sheets(texty).Cells(y, 3)) - 5) & "L2") = Sheets(texty).Cells(y, lang + 3)
                Next cykl
            Else
                If numb = 1 Then Range(Sheets(texty).Cells(y, 3)) = Sheets(texty).Cells(y, lang + 3)
                If numb = 2 Then Range(Left(Sheets(texty).Cells(y, 3), Len(Sheets(texty).Cells(y, 3)) - 2) & "L2") = Sheets(texty).Cells(y, lang + 3)
            End If
        End If
        y = y + 1
    Loop While Sheets(texty).Cells(y, 3) <> ""
    
    If numb = 1 Then srolety "SPRACHE"
    
    On Error GoTo 0

    ActiveSheet.Protect Password:=heslo
    Sheets(wine).Protect Password:=heslo
    Sheets(backshop).Protect Password:=heslo
    Sheets(nf).Protect Password:=heslo
    Sheets(logo).Protect Password:=heslo
    Sheets(kosmetika).Protect Password:=heslo
    Sheets(apassMD).Protect Password:=heslo
    ActiveWorkbook.Protect Password:=heslo
    Application.ScreenUpdating = True
    On Error GoTo 0
    
End Sub

Sub zmenazeme()

    Application.ScreenUpdating = False

    Dim maxcis                          As Integer
    Dim cykl1                           As Integer

    ActiveWorkbook.Unprotect Password:=heslo
    ActiveSheet.Unprotect Password:=heslo
    Sheets(wine).Unprotect Password:=heslo
    Sheets(backshop).Unprotect Password:=heslo
    Sheets(nf).Unprotect Password:=heslo
    Sheets(logo).Unprotect Password:=heslo
    Sheets(kosmetika).Unprotect Password:=heslo

    ' --------------- copy "L|fffd|nderspezifische Daten" -------------------------------------

    Call kopylokal("lokal1_begin", "lokal1_end", False)
    Call kopylokal("lokal2_begin", "lokal2_end", True)
    ' ------------------------------------------------------------------------------------

    Range("LAND").Select

    Call srolety("LAND")
    Call landof

    Sheets(artpas).Select
    Call deleteenabled
    Call enablestandardfields(3, "Artpas")

    Select Case Range("LAND")
        Case "CZ"
            Call enablestandardfields(9, "CZ")
        Case "BG"
            Call enablestandardfields(10, "BG")
        Case "PL"
            Call enablestandardfields(11, "PL")
        Case "RO"
            Call enablestandardfields(12, "RO")
        Case "SK"
            Call enablestandardfields(13, "SK")
        Case "HR"
            Call enablestandardfields(14, "HR")
        Case "MD"
            Call enablestandardfields(17, "MD")
    Case "AU"
            Call enablestandardfields(18, "AU")
    End Select

    ActiveWorkbook.Unprotect Password:=heslo
    ActiveSheet.Unprotect Password:=heslo

    maxcis = pocetr("MEINHB_001")
    For cykl1 = 1 To maxcis
        ActiveSheet.Protection.AllowEditRanges.Add title:="MerneB" & Format(cykl1, "000"), Range:=Range("UMRENB_" & Format(cykl1, "000") & _
                                                                                                        ":UMREZB_" & Format(cykl1, "000") & ",KZBMEB_" & Format(cykl1, "000") & ":MESUBB_" & Format(cykl1, "000"))
    Next cykl1

    maxcis = pocetr("MEINH_001")
    For cykl1 = 1 To maxcis
        ActiveSheet.Protection.AllowEditRanges.Add title:="Merne" & Format(cykl1, "000"), Range:=Range("UMREN_" & Format(cykl1, "000") & _
                                                                                                       ":UMREZ_" & Format(cykl1, "000") & ",KZBME_" & Format(cykl1, "000") & ":EAN11_tab_" & Format(cykl1, "000") & ",BRGEW_" & Format(cykl1, "000") & _
                                                                                                       ",GEWEI_" & Format(cykl1, "000") & ":MESUB_" & Format(cykl1, "000"))
    Next cykl1

    maxcis = pocetr("komponent_display_001")
    For cykl1 = 1 To maxcis
        ActiveSheet.Protection.AllowEditRanges.Add title:="Display" & Format(cykl1, "000"), Range:=Range("komponent_display_" & Format(cykl1, "000") & "," & _
                                                                                                         ("stck_display_" & Format(cykl1, "000")))
    Next cykl1

    Range("landlief_zoll").Value = ""
    Range("eulief_zoll").Value = ""
    Range("nonzoll").Value = ""

    Call pocetznaku

    

   
    If g_obj_country.Code <> "KI" Then
    
     ' ------------- defines Validation Rule for VPN-Selection for selected country ---------------------------------------------------
        If g_obj_country.Code = "PL" Then
            Set obj_range = ActiveWorkbook.Sheets("Auswahl " & g_obj_country.Code).Range("REA_VPN_SELECTION_TEXT_PL")
        Else
            Set obj_range = ActiveWorkbook.Sheets("Auswahl " & g_obj_country.Code).Range("REA_VPN_SELECTION_" & g_obj_country.Code)
        End If
        
        ActiveWorkbook.Names(RANGE_REA_VPN_SELECTION).RefersTo = obj_range
   

    ' -------------------defines Validation Rule for VME-Selection for selected country ----------------------------------------------
        Set obj_range = ActiveWorkbook.Sheets(SHEET_VME).Range("VME_SELECTION_" & g_obj_country.Code)
        ActiveWorkbook.Names(RANGE_REA_VME_SELECTION).RefersTo = obj_range
    
     End If
    
    Call Load_Sales_UM

    Call Load_REA_ME_KG
    
    ' set text format for PKWiU_pl range in PL country
    If g_obj_country.Code = "PL" Then
        Range("PKWiU_pl").NumberFormat = "@"
    End If
    
    ' set only for RO value in MAKTX_other_language by default
    If g_obj_country.Code = "RO" Or g_obj_country.Code = "MD" Then
        Range("MAKTX_other_language").Value = "BG"
    Else
        Range("MAKTX_other_language").Value = ""
    End If
    
    ' change selection in label language devends of country
        Range("de").Value = ""
        Range("cz").Value = ""
        Range("sk").Value = ""
        Range("hr").Value = ""
        Range("pl").Value = ""
        Range("ro").Value = ""
        Range("bg").Value = ""
        Range("au").Value = ""
        
        Select Case g_obj_country.Code
            Case "KI"
                Range("de").Value = "x"
            Case "CZ"
                Range("cz").Value = "x"
            Case "SK"
                Range("sk").Value = "x"
            Case "HR"
                Range("hr").Value = "x"
            Case "PL"
                Range("pl").Value = "x"
            Case "RO"
                Range("ro").Value = "x"
            Case "BG"
                Range("bg").Value = "x"
            Case "MD"
                Range("ro").Value = "x"
        Case "AU"
                Range("au").Value = "x"
        End Select
        
        'set in range "IPRKZ_wein" value "Y" for AU
        If Range("LAND") = "AU" Then
            Range("IPRKZ_wein").Value = "Y"
        Else
            Range("IPRKZ_wein").Value = "J"
        End If
        
        'Sheets("MainMenu").Visible = True
        If g_obj_country.Code = "HR" Then
            For ind = 1 To 12
                Range("KPEIN_val_1_" & Format(ind, "000")).Interior.ColorIndex = 0
            Next ind
        Else
            For ind = 1 To 12
                Range("KPEIN_val_1_" & Format(ind, "000")).Interior.ColorIndex = 1
            Next ind
        End If
        
    'change date format for PL
        If lang = 5 Then
            Range("anf_listdatum").NumberFormat = "yyyy-mm-dd"
            Range("LDVZL").NumberFormat = "yyyy-mm-dd"
            Range("LDVFL").NumberFormat = "yyyy-mm-dd"
            Range("LDBZL").NumberFormat = "yyyy-mm-dd"
            Range("LDBFL").NumberFormat = "yyyy-mm-dd"
        Else
            Range("anf_listdatum").NumberFormat = "dd.mm.yyyy"
            Range("LDVZL").NumberFormat = "dd.mm.yyyy"
            Range("LDVFL").NumberFormat = "dd.mm.yyyy"
            Range("LDBZL").NumberFormat = "dd.mm.yyyy"
            Range("LDBFL").NumberFormat = "dd.mm.yyyy"
        End If
        
    ' change logo for countrie
    On Error Resume Next
    Select Case lang
        Case 10 '"KI"
            Sheets("logo").Shapes("MMU_DE").Visible = True
            Sheets("logo").Shapes("MMU_CZ").Visible = False
            Sheets("logo").Shapes("MMU_SK").Visible = False
            Sheets("logo").Shapes("MMU_HR").Visible = False
            Sheets("logo").Shapes("MMU_PL").Visible = False
            Sheets("logo").Shapes("MMU_RO").Visible = False
            Sheets("logo").Shapes("MMU_BG").Visible = False
            Sheets("logo").Shapes("fastArticle_CZ").Visible = True
            Sheets("logo").Shapes("fastArticle_HR").Visible = False
            Sheets("logo").Shapes("fastArticle_SK").Visible = False
            Sheets("logo").Shapes("fastArticle_PL").Visible = False
            Sheets("logo").Shapes("fastArticle_RO").Visible = False
            Sheets("logo").Shapes("fastArticle_BG").Visible = False
            Sheets("logo").Shapes("posty_image_bg").Visible = False
        Case 2 '"CZ"
            Sheets("logo").Shapes("MMU_DE").Visible = False
            Sheets("logo").Shapes("MMU_CZ").Visible = True
            Sheets("logo").Shapes("MMU_SK").Visible = False
            Sheets("logo").Shapes("MMU_HR").Visible = False
            Sheets("logo").Shapes("MMU_PL").Visible = False
            Sheets("logo").Shapes("MMU_RO").Visible = False
            Sheets("logo").Shapes("MMU_BG").Visible = False
            Sheets("logo").Shapes("fastArticle_CZ").Visible = True
            Sheets("logo").Shapes("fastArticle_HR").Visible = False
            Sheets("logo").Shapes("fastArticle_SK").Visible = False
            Sheets("logo").Shapes("fastArticle_PL").Visible = False
            Sheets("logo").Shapes("fastArticle_RO").Visible = False
            Sheets("logo").Shapes("fastArticle_BG").Visible = False
        Case 3 '"SK"
            Sheets("logo").Shapes("MMU_DE").Visible = False
            Sheets("logo").Shapes("MMU_CZ").Visible = False
            Sheets("logo").Shapes("MMU_SK").Visible = True
            Sheets("logo").Shapes("MMU_HR").Visible = False
            Sheets("logo").Shapes("MMU_PL").Visible = False
            Sheets("logo").Shapes("MMU_RO").Visible = False
            Sheets("logo").Shapes("MMU_BG").Visible = False
            Sheets("logo").Shapes("fastArticle_CZ").Visible = False
            Sheets("logo").Shapes("fastArticle_HR").Visible = False
            Sheets("logo").Shapes("fastArticle_SK").Visible = True
            Sheets("logo").Shapes("fastArticle_PL").Visible = False
            Sheets("logo").Shapes("fastArticle_RO").Visible = False
            Sheets("logo").Shapes("fastArticle_BG").Visible = False
        Case 4 '"HR"
            Sheets("logo").Shapes("MMU_DE").Visible = False
            Sheets("logo").Shapes("MMU_CZ").Visible = False
            Sheets("logo").Shapes("MMU_SK").Visible = False
            Sheets("logo").Shapes("MMU_HR").Visible = True
            Sheets("logo").Shapes("MMU_PL").Visible = False
            Sheets("logo").Shapes("MMU_RO").Visible = False
            Sheets("logo").Shapes("MMU_BG").Visible = False
            Sheets("logo").Shapes("fastArticle_CZ").Visible = False
            Sheets("logo").Shapes("fastArticle_HR").Visible = True
            Sheets("logo").Shapes("fastArticle_SK").Visible = False
            Sheets("logo").Shapes("fastArticle_PL").Visible = False
            Sheets("logo").Shapes("fastArticle_RO").Visible = False
            Sheets("logo").Shapes("fastArticle_BG").Visible = False
        Case 5 '"PL"
            Sheets("logo").Shapes("MMU_DE").Visible = False
            Sheets("logo").Shapes("MMU_CZ").Visible = False
            Sheets("logo").Shapes("MMU_SK").Visible = False
            Sheets("logo").Shapes("MMU_HR").Visible = False
            Sheets("logo").Shapes("MMU_PL").Visible = True
            Sheets("logo").Shapes("MMU_RO").Visible = False
            Sheets("logo").Shapes("MMU_BG").Visible = False
            Sheets("logo").Shapes("fastArticle_CZ").Visible = False
            Sheets("logo").Shapes("fastArticle_HR").Visible = False
            Sheets("logo").Shapes("fastArticle_SK").Visible = False
            Sheets("logo").Shapes("fastArticle_PL").Visible = True
            Sheets("logo").Shapes("fastArticle_RO").Visible = False
            Sheets("logo").Shapes("fastArticle_BG").Visible = False
        Case 6 '"RO"
            Sheets("logo").Shapes("MMU_DE").Visible = False
            Sheets("logo").Shapes("MMU_CZ").Visible = False
            Sheets("logo").Shapes("MMU_SK").Visible = False
            Sheets("logo").Shapes("MMU_HR").Visible = False
            Sheets("logo").Shapes("MMU_PL").Visible = False
            Sheets("logo").Shapes("MMU_RO").Visible = True
            Sheets("logo").Shapes("MMU_BG").Visible = False
            Sheets("logo").Shapes("fastArticle_CZ").Visible = False
            Sheets("logo").Shapes("fastArticle_HR").Visible = False
            Sheets("logo").Shapes("fastArticle_SK").Visible = False
            Sheets("logo").Shapes("fastArticle_PL").Visible = False
            Sheets("logo").Shapes("fastArticle_RO").Visible = True
            Sheets("logo").Shapes("fastArticle_BG").Visible = False
        Case 7 '"BG"
            Sheets("logo").Shapes("MMU_DE").Visible = False
            Sheets("logo").Shapes("MMU_CZ").Visible = False
            Sheets("logo").Shapes("MMU_SK").Visible = False
            Sheets("logo").Shapes("MMU_HR").Visible = False
            Sheets("logo").Shapes("MMU_PL").Visible = False
            Sheets("logo").Shapes("MMU_RO").Visible = False
            Sheets("logo").Shapes("MMU_BG").Visible = True
            Sheets("logo").Shapes("posty_image_bg").Visible = False
            Sheets("logo").Shapes("fastArticle_CZ").Visible = False
            Sheets("logo").Shapes("fastArticle_HR").Visible = False
            Sheets("logo").Shapes("fastArticle_SK").Visible = False
            Sheets("logo").Shapes("fastArticle_PL").Visible = False
            Sheets("logo").Shapes("fastArticle_RO").Visible = False
            Sheets("logo").Shapes("fastArticle_BG").Visible = True
        Case 9 '"MD"
            Sheets("logo").Shapes("MMU_DE").Visible = False
            Sheets("logo").Shapes("MMU_CZ").Visible = False
            Sheets("logo").Shapes("MMU_SK").Visible = False
            Sheets("logo").Shapes("MMU_HR").Visible = False
            Sheets("logo").Shapes("MMU_PL").Visible = False
            Sheets("logo").Shapes("MMU_RO").Visible = True
            Sheets("logo").Shapes("fastArticle_CZ").Visible = False
            Sheets("logo").Shapes("fastArticle_HR").Visible = False
            Sheets("logo").Shapes("fastArticle_SK").Visible = False
            Sheets("logo").Shapes("fastArticle_PL").Visible = False
            Sheets("logo").Shapes("fastArticle_RO").Visible = True
            Sheets("logo").Shapes("fastArticle_BG").Visible = False
            Sheets("logo").Shapes("MMU_BG").Visible = False
    Case 11 '"AU"
            Sheets("logo").Shapes("MMU_DE").Visible = False
            Sheets("logo").Shapes("MMU_CZ").Visible = False
            Sheets("logo").Shapes("MMU_SK").Visible = False
            Sheets("logo").Shapes("MMU_HR").Visible = False
            Sheets("logo").Shapes("MMU_PL").Visible = True
            Sheets("logo").Shapes("MMU_RO").Visible = False
            Sheets("logo").Shapes("posty_image_bg").Visible = False
            Sheets("logo").Shapes("fastArticle_CZ").Visible = False
            Sheets("logo").Shapes("fastArticle_HR").Visible = False
            Sheets("logo").Shapes("fastArticle_SK").Visible = False
            Sheets("logo").Shapes("fastArticle_PL").Visible = True
            Sheets("logo").Shapes("fastArticle_RO").Visible = False
            Sheets("logo").Shapes("fastArticle_BG").Visible = False
    End Select
    On Error GoTo 0
    
    ' change VAT colors for SK
    Call ChangeVATColors
    
    ' change Article MD field color
    Call ChangeArticleMDFieldColor

    'Range("A216:A65536").EntireRow.Hidden = True
    ActiveSheet.Protect Password:=heslo
    Sheets(wine).Protect Password:=heslo
    Sheets(backshop).Protect Password:=heslo
    Sheets(nf).Protect Password:=heslo
    Sheets(logo).Protect Password:=heslo
    Sheets(kosmetika).Protect Password:=heslo
    ActiveWorkbook.Protect Password:=heslo

    Application.ScreenUpdating = True

End Sub
Sub ChangeVATColors()

    Application.ScreenUpdating = False
       
    If lang = 3 Then
        Range("TAXKM").Interior.ColorIndex = 2
        Range("landlief_zoll").Interior.ColorIndex = 15
        Range("eulief_zoll").Interior.ColorIndex = 15
        Range("nonzoll").Interior.ColorIndex = 15
    Else
        Range("TAXKM").Interior.ColorIndex = 15
        Range("landlief_zoll").Interior.ColorIndex = 2
        Range("eulief_zoll").Interior.ColorIndex = 2
        Range("nonzoll").Interior.ColorIndex = 2
    End If
    Application.ScreenUpdating = True

End Sub
Sub ChangeArticleMDFieldColor()

    Application.ScreenUpdating = False
       
    If lang = 6 Then
        Range("t_Extindere_Articol_MD").Interior.ColorIndex = 3
    Else
        Range("t_Extindere_Articol_MD").Interior.ColorIndex = 1
    End If
    Application.ScreenUpdating = True

End Sub


Sub kopylokal(zacatek As String, konec As String, druhy As Boolean)         '-------- copies country areas from sheet "Lokal" to "A-pass"

  Dim ya As Long
  Dim yb As Long
  Dim apasy As Long
  Dim cykl As Byte
  Dim cykl1 As Byte
  Dim jmeno As String
  
  If Range(konec).Row - Range(zacatek).Row <> 1 Then
    Range(Cells(Range(zacatek).Row + 1, 1), Cells(Range(konec).Row - 1, 1)).EntireRow.Delete
  End If
  ya = 0
  
  Do
    ya = ya + 1
    If Sheets(lokalni).Cells(ya, 1) = "E_N_D" Then Exit Sub
  Loop While Sheets(lokalni).Cells(ya, 2) <> Range("LAND").Value
  ya = ya + 1
  yb = ya
  Do
    yb = yb + 1
  Loop While Sheets(lokalni).Cells(yb, 2) <> "E_N_D"
  
  If druhy = True Then
    ya = yb + 2
    yb = ya
    Do
      yb = yb + 1
    Loop While Sheets(lokalni).Cells(yb, 2) <> "E_N_D"
  End If
  
  yb = yb - 1
  'Range(konec).Select
  
  'marked
  On Error Resume Next
  Range(konec).Select
  If Err <> 0 Then
    With Sheets("A-pass")
        .Select
        .Range(konec).Select
    End With
  End If
  On Error GoTo 0
  
  For cykl = ya To yb
    ActiveCell.EntireRow.Insert
    ActiveCell.RowHeight = Sheets(lokalni).Cells(cykl, 1).RowHeight
  Next cykl
  
  Sheets(lokalni).Visible = True
  Sheets(lokalni).Select
  Sheets(lokalni).Range(Cells(ya, 1), Cells(yb, 60)).Copy
  Sheets(artpas).Select
  Range(zacatek).Select
  ActiveCell.Offset(1, 0).Select
  ActiveSheet.Paste
  Application.CutCopyMode = False
  Sheets(lokalni).Select
  
  On Error Resume Next
  
  apasy = Sheets(artpas).Range(zacatek).Row + 1
  
  For cykl = ya To yb
    For cykl1 = 1 To 60
      Err.Clear
      jmeno = Range(Cells(cykl, cykl1), Cells(cykl, cykl1)).Name.Name
      If Err = 0 Then
        Sheets(artpas).Select
        Sheets(artpas).Range(Sheets(artpas).Cells(apasy, cykl1 + 1), Sheets(artpas).Cells(apasy, cykl1 + 1)).Name = Left(jmeno, Len(jmeno) - 3)
        Sheets(lokalni).Select
      End If
    Next cykl1
    apasy = apasy + 1
  Next cykl
  
  On Error GoTo 0
  
  Sheets(lokalni).Visible = False
  Sheets(artpas).Select
  
End Sub

Sub srolety(jazyk As String)

    Dim yr                              As Long
    Dim zacatek                         As Long
    Dim bunka                           As String
    Dim chyba                           As Byte
    Dim cisroletky                      As Byte
    Dim hotovo                          As Boolean
    Dim listst                          As String
    Dim pocetradkusr                    As Integer
    Dim listrol                         As Variant
    Dim cykl                            As Byte
    Dim hodnoty(1 To 50)                As String
    Dim preklhodn                       As Boolean
    
    preklhodn = False
    
    listrol = Array(wine, backshop, logo, kosmetika)
    pocetradkusr = pocetr("MEINS_000")
    pocetradkusr = pocetradkusr + pocetr("MEINSB_000")
    yr = pocetradkusr * 2
    pocetradkusr = pocetr("komponent_display_001") * 3
    yr = yr + pocetradkusr
    pocetradkusr = pocetr("ChMATNR_001") * 3
    yr = yr + pocetradkusr
    pocetradkusr = pocetr("tab_COUNTRY_001") * 4
    yr = yr + pocetradkusr + 290
    On Error Resume Next
    
    Do
        If UCase(Sheets(artpas).Cells(yr, 1)) = jazyk Then
            preklhodn = False
            If (Sheets(artpas).Cells(yr, 3) <> "lim") And (Sheets(artpas).Cells(yr, 3) <> "MEAS") Then
                bunka = Sheets(artpas).Cells(yr, 2).Value
                yr = yr + 1
                zacatek = yr
                'if ucase(left(sheets(artpas).cells(yr+1,3),1))="T" then hbunky=right
                Do While UCase(Sheets(artpas).Cells(yr, lang * 2 + 2)) <> "E_N_D"
                    If UCase(Left(Sheets(artpas).Cells(yr, 3), 1)) = "T" Then
                        hodnoty(Val(Mid(Sheets(artpas).Cells(yr, 3), 2, 3))) = Sheets(artpas).Cells(yr, lang * 2 + 2)
                        preklhodn = True
                    End If
                    yr = yr + 1
                Loop
                If zacatek <> yr Then
                    chyba = 0
                    cisroletky = 1
                    hotovo = False
                    If Right(bunka, 1) <> "_" Then
                        With Range(bunka).Validation
                            .Delete
                            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                                 xlBetween, Formula1:="=" & Range(Sheets(artpas).Cells(zacatek, lang * 2 + 2), Sheets(artpas).Cells(yr - 1, lang * 2 + 2)).Address
                            .IgnoreBlank = False
                            .InCellDropdown = True
                            .InputTitle = ""
                            .ErrorTitle = ""
                            .InputMessage = ""
                            .ErrorMessage = ""
                            .ShowInput = True
                            .ShowError = True
                        End With
                        If preklhodn Then Range(bunka).Value = hodnoty(Val(Right(Range(bunka).Value, 3)))
                    Else
                        Do
                            Err.Clear
                            With Range(bunka & Format(cisroletky, "000")).Validation
                                .Delete
                                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                                     xlBetween, Formula1:="=" & Range(Sheets(artpas).Cells(zacatek, lang * 2 + 2), Sheets(artpas).Cells(yr - 1, lang * 2 + 2)).Address
                                .IgnoreBlank = False
                                .InCellDropdown = True
                                .InputTitle = ""
                                .ErrorTitle = ""
                                .InputMessage = ""
                                .ErrorMessage = ""
                                .ShowInput = True
                                .ShowError = True
                            End With
                            If preklhodn Then Range(bunka & Format(cisroletky, "000")).Value = hodnoty(Val(Right(Range(bunka & Format(cisroletky, "000")).Value, 3)))
                            cisroletky = cisroletky + 1
                            If Err <> 0 Then chyba = chyba + 1 Else chyba = 0
                            If chyba = 5 Then hotovo = True
                        Loop While hotovo <> True
                    End If
                Else
                    If Right(bunka, 1) <> "_" Then
                        With Range(bunka).Validation
                            .Delete
                            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                                 xlBetween, Formula1:="=$AG$300"
                            .IgnoreBlank = False
                            .InCellDropdown = True
                            .InputTitle = ""
                            .ErrorTitle = ""
                            .InputMessage = ""
                            .ErrorMessage = ""
                            .ShowInput = True
                            .ShowError = True
                        End With
                    Else
                        With Range(bunka & Format(cisroletky, "000")).Validation
                            .Delete
                            .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                                 xlBetween, Formula1:="=$AG$300"
                            .IgnoreBlank = False
                            .InCellDropdown = True
                            .InputTitle = ""
                            .ErrorTitle = ""
                            .InputMessage = ""
                            .ErrorMessage = ""
                            .ShowInput = True
                            .ShowError = True
                        End With
                    End If
                End If
            ElseIf (Sheets(artpas).Cells(yr, 3) = "lim") Or (Sheets(artpas).Cells(yr, 3) = "MEAS") Then
                bunka = Sheets(artpas).Cells(yr, 2).Value
                yr = yr + 1
                Range(bunka) = (Sheets(artpas).Cells(yr, lang * 2 + 2))
            End If
        End If
        yr = yr + 1
    Loop While Sheets(artpas).Cells(yr, 1).Value <> "E_N_D"
    
    '  --  ostatni listy roletky
    For cykl = LBound(listrol) To UBound(listrol)
        yr = 300
        Do
            If UCase(Sheets(listrol(cykl)).Cells(yr, 1)) = jazyk Then
                If UCase(Sheets(listrol(cykl)).Cells(yr, 3)) <> "LIM" Then
                    bunka = Sheets(listrol(cykl)).Cells(yr, 2).Value
                    yr = yr + 1
                    zacatek = yr
                    Do While UCase(Sheets(listrol(cykl)).Cells(yr, lang * 2 + 2)) <> "E_N_D"
                        yr = yr + 1
                    Loop
                    If zacatek <> yr Then
                        chyba = 0
                        cisroletky = 1
                        hotovo = False
                        listst = listrol(cykl)    'Mid(Range(bunka).Address(External:=True), InStr(1, Range(bunka).Address(External:=True), "]") + 1, InStr(1, Range(bunka).Address(External:=True), "!") - (InStr(1, Range(bunka).Address(External:=True), "]") + 2))
                        If Right(bunka, 1) <> "_" Then
                            If Right(bunka, 3) = "_wi" Then
                                Range(bunka).Value = Range(Sheets(listst).Cells(zacatek, lang * 2 + 2), Sheets(listst).Cells(yr - 1, lang * 2 + 2)).Value
                            Else
                                With Range(bunka).Validation
                                    .Delete
                                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                                         xlBetween, Formula1:="=" & Range(Sheets(listst).Cells(zacatek, lang * 2 + 2), Sheets(listst).Cells(yr - 1, lang * 2 + 2)).Address
                                    .IgnoreBlank = False
                                    .InCellDropdown = True
                                    .InputTitle = ""
                                    .ErrorTitle = ""
                                    .InputMessage = ""
                                    .ErrorMessage = ""
                                    .ShowInput = True
                                    .ShowError = True
                                End With
                            End If
                        Else
                            Do
                                Err.Clear
                                With Range(bunka & Format(cisroletky, "000")).Validation
                                    .Delete
                                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                                         xlBetween, Formula1:="=" & Range(Sheets(listst).Cells(zacatek, lang * 2 + 2), Sheets(listst).Cells(yr - 1, lang * 2 + 2)).Address
                                    .IgnoreBlank = False
                                    .InCellDropdown = True
                                    .InputTitle = ""
                                    .ErrorTitle = ""
                                    .InputMessage = ""
                                    .ErrorMessage = ""
                                    .ShowInput = True
                                    .ShowError = True
                                End With
                                cisroletky = cisroletky + 1
                                If Err <> 0 Then chyba = chyba + 1 Else chyba = 0
                                If chyba = 5 Then hotovo = True
                            Loop While hotovo <> True
                        End If
                    Else
                        If Right(bunka, 1) <> "_" Then
                            With Range(bunka).Validation
                                .Delete
                                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                                     xlBetween, Formula1:="=$AG$300"
                                .IgnoreBlank = False
                                .InCellDropdown = True
                                .InputTitle = ""
                                .ErrorTitle = ""
                                .InputMessage = ""
                                .ErrorMessage = ""
                                .ShowInput = True
                                .ShowError = True
                            End With
                        Else
                            With Range(bunka & Format(cisroletky, "000")).Validation
                                .Delete
                                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                                     xlBetween, Formula1:="=$AG$300"
                                .IgnoreBlank = False
                                .InCellDropdown = True
                                .InputTitle = ""
                                .ErrorTitle = ""
                                .InputMessage = ""
                                .ErrorMessage = ""
                                .ShowInput = True
                                .ShowError = True
                            End With
                        End If
                    End If
                Else
                    bunka = Sheets(listrol(cykl)).Cells(yr, 2).Value
                    yr = yr + 1
                    Range(bunka) = (Sheets(listrol(cykl)).Cells(yr, lang * 2 + 2))
                End If
            End If
            yr = yr + 1
        Loop While Sheets(listrol(cykl)).Cells(yr, 1).Value <> "E_N_D"
    Next cykl
    On Error GoTo 0
    
End Sub

Sub addlineME()

    Dim cykl                            As Byte
    Dim cykl1                           As Integer
    Dim maxcis                          As Integer
    Dim prvnir                          As Integer
    Dim poslednir                       As Integer
    Dim minozn                          As Integer
    Dim maxozn                          As Integer
    Dim jmenoz                          As String
    Dim jmenok                          As String
    Dim pole                            As Variant
    
    'Application.EnableEvents = False
    ActiveWorkbook.Unprotect Password:=heslo
    ActiveSheet.Unprotect Password:=heslo
    
    pole = Array("UMREN", "MEINH", "UMREZ", "MEINS", "KZBME", "KZBSTME", "KZAUSME", "KZVRKME", "EAN11_tab", "EANTP_tab", "BRGEW", "NTGEW", "GEWEI", "LAENG", "BREIT", "HOEHE", "MESUB")
    
    On Error Resume Next
    Err.Clear
    
    prvnir = Selection.Rows(1).Row
    poslednir = Selection.Rows.count + prvnir - 1
    jmenoz = Range("B" & prvnir & ":B" & prvnir).Name.Name
    jmenok = Range("B" & poslednir - 1 & ":B" & poslednir - 1).Name.Name
    
    If Left(jmenoz, 5) = "UMREN" Then
        maxcis = pocetr("HOEHE_000")
        Range("UMRENB_001:MESUB_" & Format(maxcis, "000")).Select
        Selection.Copy
        Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        Application.CutCopyMode = False
        
        If Left(jmenoz, Len(jmenoz) - 4) = Left(jmenok, Len(jmenok) - 4) Then
            If Err <> 0 Then
                'Application.EnableEvents = True
                End
            End If
            
            Application.ScreenUpdating = False
            
            maxcis = pocetr(jmenoz)
            
            On Error GoTo 0
            
            Range("B" & prvnir & ":B" & poslednir).EntireRow.Select
            Selection.Copy
            Selection.Insert shift:=xlDown
            Application.CutCopyMode = False
            minozn = Right(jmenoz, 3)
            maxozn = Right(jmenok, 3)
            For cykl1 = maxcis To minozn Step -1
                For cykl = LBound(pole) To UBound(pole)
                    If Left(Right(jmenoz, 5), 1) <> "B" Then
                        ActiveWorkbook.Names(pole(cykl) & "_" & Format(cykl1, "000")).Name = pole(cykl) & "_" & Format(cykl1 + maxozn - minozn + 1, "000")
                    Else
                        ActiveWorkbook.Names(pole(cykl) & "B_" & Format(cykl1, "000")).Name = pole(cykl) & "B_" & Format(cykl1 + maxozn - minozn + 1, "000")
                    End If
                Next cykl
            Next cykl1
            Range("B" & prvnir).Select
            For cykl1 = minozn To maxozn
                For cykl = LBound(pole) To UBound(pole)
                    If Left(Right(jmenoz, 5), 1) <> "B" Then
                        ActiveCell.Name = pole(cykl) & "_" & Format(cykl1, "000")
                        If pole(cykl) = "EAN11_tab" Then Range("EAN11_tab_" & Format(cykl1, "000")).Formula = Null
                        '            If pole(cykl) = "KZBME" Then Range("KZBME_" & Format(cykl1, "000")).Formula = ""
                        '            If pole(cykl) = "KZBSTME" Then Range("KZBSTME_" & Format(cykl1, "000")).Formula = ""
                        '            If pole(cykl) = "KZAUSME" Then Range("KZAUSME_" & Format(cykl1, "000")).Formula = ""
                        '            If pole(cykl) = "KZVRKME" Then Range("KZVRKME_" & Format(cykl1, "000")).Formula = ""
                    Else
                        ActiveCell.Name = pole(cykl) & "B_" & Format(cykl1, "000")
                        If pole(cykl) = "EAN11_tab" Then Range("EAN11_tabB_" & Format(cykl1, "000")).Formula = Null
                        '            If pole(cykl) = "KZBME" Then Range("KZBMEB_" & Format(cykl1, "000")).Formula = ""
                        '            If pole(cykl) = "KZBSTME" Then Range("KZBSTMEB_" & Format(cykl1, "000")).Formula = ""
                        '            If pole(cykl) = "KZAUSME" Then Range("KZAUSMEB_" & Format(cykl1, "000")).Formula = ""
                        '            If pole(cykl) = "KZVRKME" Then Range("KZVRKMEB_" & Format(cykl1, "000")).Formula = ""
                    End If
                    ActiveCell.Offset(0, 1).Select
                Next cykl
                ActiveCell.Offset(2, 0).Select
                Range("B" & ActiveCell.Row).Select
            Next cykl1
            basicmj
            
            '------- povolene bunky --------
            On Error Resume Next
            cykl1 = 1
            Do While Err = 0
                If Left(Right(jmenoz, 5), 1) <> "B" Then
                    ActiveSheet.Protection.AllowEditRanges("Merne" & Format(cykl1, "000")).Delete
                Else
                    ActiveSheet.Protection.AllowEditRanges("MerneB" & Format(cykl1, "000")).Delete
                End If
                cykl1 = cykl1 + 1
            Loop
            On Error GoTo 0
            maxcis = pocetr(jmenoz)
            For cykl1 = 1 To maxcis
                If Left(Right(jmenoz, 5), 1) <> "B" Then
                    ActiveSheet.Protection.AllowEditRanges.Add title:="Merne" & Format(cykl1, "000"), Range:=Range("UMREN_" & Format(cykl1, "000") & ":UMREZ_" & Format(cykl1, "000") & ",KZBME_" & Format(cykl1, "000") & ":EAN11_tab_" & Format(cykl1, "000") & ", BRGEW_" & Format(cykl1, "000") & ",LAENG_" & Format(cykl1, "000") & ":HOEHE_" & Format(cykl1, "000"))
                    Range("UMREN_" & Format(cykl1, "000") & ":UMREZ_" & Format(cykl1, "000") & ",KZBME_" & Format(cykl1, "000") & ":EAN11_tab_" & Format(cykl1, "000") & ", BRGEW_" & Format(cykl1, "000") & ",LAENG_" & Format(cykl1, "000") & ":HOEHE_" & Format(cykl1, "000")).Select
                    Selection.Locked = False
                Else
                    ActiveSheet.Protection.AllowEditRanges.Add title:="MerneB" & Format(cykl1, "000"), Range:=Range("UMRENB_" & Format(cykl1, "000") & ":UMREZB_" & Format(cykl1, "000") & ",KZBMEB_" & Format(cykl1, "000") & ":NTGEWB_" & Format(cykl1, "000") & ",LAENGB_" & Format(cykl1, "000") & ":HOEHEB_" & Format(cykl1, "000"))
                    Range("UMRENB_" & Format(cykl1, "000") & ":UMREZB_" & Format(cykl1, "000") & ",KZBMEB_" & Format(cykl1, "000") & ":NTGEWB_" & Format(cykl1, "000") & ",LAENGB_" & Format(cykl1, "000") & ":HOEHEB_" & Format(cykl1, "000")).Select
                    Selection.Locked = False
                End If
            Next cykl1
        Else
            MsgBox hlaska(4), vbExclamation
        End If
        Application.ScreenUpdating = True
        Cells(prvnir, 2).Select
    End If
    
    'Application.EnableEvents = True
    ActiveSheet.Protect Password:=heslo
    ActiveWorkbook.Protect Password:=heslo
    On Error GoTo 0
    
End Sub

Sub dellineME()

    Dim cykl As Byte
    Dim cykl1 As Integer
    Dim maxcis As Integer
    Dim prvnir As Integer
    Dim poslednir As Integer
    Dim minozn As Integer
    Dim maxozn As Integer
    Dim jmenoz As String
    Dim jmenok As String
    Dim pole As Variant
    Dim msg1 As Variant
    Dim msg2 As Variant
    
    'Application.EnableEvents = False
    ActiveWorkbook.Unprotect Password:=heslo
    ActiveSheet.Unprotect Password:=heslo
    pole = Array("UMREN", "MEINH", "UMREZ", "MEINS", "KZBME", "KZBSTME", "KZAUSME", "KZVRKME", "EAN11_tab", "EANTP_tab", "BRGEW", "NTGEW", "GEWEI", "LAENG", "BREIT", "HOEHE", "MESUB")
    On Error Resume Next
    Err.Clear
    prvnir = Selection.Rows(1).Row
    poslednir = Selection.Rows.count + prvnir - 1
    jmenoz = Range("B" & prvnir & ":B" & prvnir).Name.Name
    jmenok = Range("B" & poslednir - 1 & ":B" & poslednir - 1).Name.Name
    
    If Left(jmenoz, 5) = "UMREN" Then
        maxcis = pocetr("HOEHE_000")
        Range("UMRENB_001:MESUB_" & Format(maxcis, "000")).Select
        Selection.Copy
        Selection.PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks:=False, Transpose:=False
        Application.CutCopyMode = False
        If Left(jmenoz, Len(jmenoz) - 4) = Left(jmenok, Len(jmenok) - 4) Then
            If Err <> 0 Then
                'Application.EnableEvents = True
                End
            End If
            Application.ScreenUpdating = False
            maxcis = pocetr(jmenoz)
            On Error GoTo 0
            If (Right(jmenoz, 3) <> "001") Or (Right(jmenok, 3) <> Format(maxcis, "000")) Then
                minozn = Right(jmenoz, 3)
                maxozn = Right(jmenok, 3)
                For cykl1 = minozn To maxozn
                    For cykl = LBound(pole) To UBound(pole)
                        If Left(Right(jmenoz, 5), 1) <> "B" Then
                            ActiveWorkbook.Names(pole(cykl) & "_" & Format(cykl1, "000")).Delete
                        Else
                            ActiveWorkbook.Names(pole(cykl) & "B_" & Format(cykl1, "000")).Delete
                        End If
                    Next cykl
                Next cykl1
                If maxcis <> maxozn Then
                    For cykl1 = minozn To minozn + maxcis - maxozn - 1
                        For cykl = LBound(pole) To UBound(pole)
                            If Left(Right(jmenoz, 5), 1) <> "B" Then
                                ActiveWorkbook.Names(pole(cykl) & "_" & Format(cykl1 + maxozn - minozn + 1, "000")).Name = pole(cykl) & "_" & Format(cykl1, "000")
                            Else
                                ActiveWorkbook.Names(pole(cykl) & "B_" & Format(cykl1 + maxozn - minozn + 1, "000")).Name = pole(cykl) & "B_" & Format(cykl1, "000")
                            End If
                        Next cykl
                    Next cykl1
                End If
                Range(Cells(prvnir, 2), Cells(poslednir, 2)).EntireRow.Delete
                basicmj
                '------- povolene bunky --------
                On Error Resume Next
                cykl1 = 1
                Do While Err = 0
                    If Left(Right(jmenoz, 5), 1) <> "B" Then
                        ActiveSheet.Protection.AllowEditRanges("Merne" & Format(cykl1, "000")).Delete
                    Else
                        ActiveSheet.Protection.AllowEditRanges("MerneB" & Format(cykl1, "000")).Delete
                    End If
                    cykl1 = cykl1 + 1
                Loop
                On Error GoTo 0
                maxcis = pocetr(jmenoz)
                For cykl1 = 1 To maxcis
                    If Left(Right(jmenoz, 5), 1) <> "B" Then
                        ActiveSheet.Protection.AllowEditRanges.Add title:="Merne" & Format(cykl1, "000"), Range:=Range("UMREN_" & Format(cykl1, "000") & ":UMREZ_" & Format(cykl1, "000") & ",KZBME_" & Format(cykl1, "000") & ":EAN11_tab_" & Format(cykl1, "000") & ", BRGEW_" & Format(cykl1, "000") & ",LAENG_" & Format(cykl1, "000") & ":HOEHE_" & Format(cykl1, "000"))
                        Range("UMREN_" & Format(cykl1, "000") & ":UMREZ_" & Format(cykl1, "000") & ",KZBME_" & Format(cykl1, "000") & ":EAN11_tab_" & Format(cykl1, "000") & ", BRGEW_" & Format(cykl1, "000") & ",LAENG_" & Format(cykl1, "000") & ":HOEHE_" & Format(cykl1, "000")).Select
                        Selection.Locked = False
                    Else
                        ActiveSheet.Protection.AllowEditRanges.Add title:="MerneB" & Format(cykl1, "000"), Range:=Range("UMRENB_" & Format(cykl1, "000") & ":UMREZB_" & Format(cykl1, "000") & ",KZBMEB_" & Format(cykl1, "000") & ":NTGEWB_" & Format(cykl1, "000") & ",LAENGB_" & Format(cykl1, "000") & ":HOEHEB_" & Format(cykl1, "000"))
                        Range("UMRENB_" & Format(cykl1, "000") & ":UMREZB_" & Format(cykl1, "000") & ",KZBMEB_" & Format(cykl1, "000") & ":NTGEWB_" & Format(cykl1, "000") & ",LAENGB_" & Format(cykl1, "000") & ":HOEHEB_" & Format(cykl1, "000")).Select
                        Selection.Locked = False
                    End If
                Next cykl1
            Else
                MsgBox hlaska(2), vbExclamation
            End If
        Else
            MsgBox hlaska(3), vbExclamation
        End If
        Application.ScreenUpdating = True
        Cells(prvnir, 2).Select
    End If
    'Application.EnableEvents = True
    ActiveSheet.Protect Password:=heslo
    ActiveWorkbook.Protect Password:=heslo
    On Error GoTo 0
End Sub

Function fjazyk()

    Dim lng As Byte
    Dim lngarr As Variant
    
    lngarr = Array("DE", "EN", "CZ", "SK", "HR", "PL", "RO", "BG", "MD", "???")
    
    For lng = 0 To 9
        If lngarr(lng) = Range("SPRACH_001").Value Then Exit For
    Next lng
    
    If lng = 9 Then lng = 1
    fjazyk = lng + 3
    
End Function

Function hlaska(radek As Integer)

    hlaska = Sheets(hlasky).Cells(radek, fjazyk).Formula
    
End Function

Sub basicmj()

    Dim pocradku As Integer
    Dim pocradkub As Integer
    Dim bcykl As Integer

    Application.ScreenUpdating = False
    pocradku = pocetr("MEINS_000")
    pocradkub = pocetr("MEINSB_000")

    For bcykl = 1 To pocradku
        Range("MEINS_" & Format(bcykl, "000")).FormulaR1C1 = "=R34C3"
        Range("UMREN_" & Format(bcykl, "000"), "MESUB_" & Format(bcykl, "000")).Select

        If bcykl <> pocradku And Selection.Borders(xlEdgeBottom).Weight = xlMedium Then
            Selection.Borders(xlEdgeBottom).Weight = xlThin
        End If
        If bcykl = pocradku And Selection.Borders(xlEdgeBottom).Weight = xlThin Then
            Selection.Borders(xlEdgeBottom).Weight = xlMedium
            Selection.Borders(xlEdgeTop).Weight = xlThin
        End If
    Next bcykl

    For bcykl = 1 To pocradkub
        Range("MEINSB_" & Format(bcykl, "000")).FormulaR1C1 = "=R34C3"
    Next bcykl

    Range("intrastatbasicmj").FormulaR1C1 = "=R34C3"
    Application.ScreenUpdating = True

End Sub

Function pocetr(jmbunky)                    ' --- Zellenspalten-Z|fffd|hler

    Dim maxc                            As Integer
    
    On Error Resume Next
    Application.ScreenUpdating = False
    
    For maxc = 1 To 10000
        Err.Clear
        Range(Left(jmbunky, Len(jmbunky) - 4) & "_" & Format(maxc, "000")).Select
        If Err <> 0 Then
            Exit For
        End If
    Next maxc
    
    pocetr = maxc - 1
    
    On Error GoTo 0
    
End Function

Sub regform(cil As String)
'  Dim regionazev As String
'  Dim x As Integer
'  'On Error Resume Next
'  Err.Clear
'  regionazev = Sheets(regionalni).Range("r" & cil)
'  If Err Then
'    x = 1
'    Do While Sheets(regionalni).Cells(1, x) <> ""
'      x = x + 1
'    Loop
'    Sheets(regionalni).Cells(1, x).Name = "r" & cil
'    Sheets(regionalni).Cells(1, x).Value = cil
'  End If
'  Sheets(regionalni).Select
'  Sheets(regionalni).Range("r" & cil).Select
'  On Error GoTo 0
    formregion.Show
End Sub

Sub pridatfilform()

    Dim x As Integer
    
    x = 2
    Do While Sheets(regionalni).Cells(x, 1) <> ""
        pridej Sheets(regionalni).Cells(x, 1), 0
        x = x + 1
    Loop
    
    'Sheets(artpas).Select
    
End Sub

Sub ulozitfil()

    Dim x As Integer
    
    Application.ScreenUpdating = False
    ActiveWorkbook.Unprotect Password:=heslo
    Sheets(regionalni).Visible = True
    Sheets(regionalni).Select
    Sheets(regionalni).Range(Cells(2, 1), Cells(1000, 1)).ClearContents
    
    For x = 0 To formregion.lst_fil.ListCount - 1
        Sheets(regionalni).Cells(x + 2, 1) = formregion.lst_fil.List(x, 0)
    Next x
    
    Sheets(regionalni).Visible = False
    ActiveWorkbook.Protect Password:=heslo
    Application.ScreenUpdating = True
    Sheets(artpas).Select
    
End Sub

Sub pridej(filialkafp As String, hlaska As Byte)

    Dim uzje As Boolean
    Dim cyklf As Integer
    Dim mess As Byte
    
    If Len(filialkafp) = 4 Then
        uzje = False
        For cyklf = 0 To formregion.lst_fil.ListCount - 1
            If formregion.lst_fil.List(cyklf, 0) = filialkafp Then uzje = True
        Next cyklf
        If uzje Then
            If hlaska = 1 Then MsgBox "Fili|fffd|lka je ji? v seznamu", vbInformation, "Chyba"
        Else
            For cyklf = 0 To formregion.lst_fil.ListCount - 1
                If filialkafp < formregion.lst_fil.List(cyklf, 0) Then Exit For
            Next cyklf
            formregion.lst_fil.AddItem filialkafp, cyklf
        End If
        formregion.txt_fil.Text = ""
        formregion.txt_fil.SetFocus
    End If
    
End Sub

Sub zmatky()

    Dim x As Integer
    Dim aktnazev As String
    
    Sheets(regionalni).Select
    
    aktnazev = "r" & ActiveCell.Formula
    
    On Error Resume Next
    Err.Clear
    Range("rSSTUF").Select
    
    If Err = 0 Then
        On Error GoTo 0
        pridatfilform
        Sheets(regionalni).Select
        Range(aktnazev).Select
    End If
    
    Sheets(artpas).Select
    On Error GoTo 0
    formregion.txt_fil.SetFocus
    
End Sub

Sub pocetznaku()

    Dim pocznaku As Variant
    Dim pocznakukont As Variant
    Dim cykl1 As Integer
    Dim cykl2 As Integer
    Dim pocetdeti As String
    
    '---- count of chars array of cells with numbers ----  pocet znaku
    pocznaku = Array("t_wMAKTX_de_L1", "t_wMAKTX_nat_L1", "t_wMAKTM_L1", "t_MAKTM_20_001", "t_MAKTM_20_002", "t_MAKTM_20_003", "t_MAKTM_8_004", _
                     "t_kh_etikett_001", "t_kh_etikett_002", "t_kh_etikett_003", "t_kh_etikett_004", "t_kh_etikett_005", "text_langtext_max", "tt_langtext_max")
    '---- count of chars checked cells ----  pole pro pocet znaku
    pocznakukont = Array("MAKTX_de", "MAKTX_nat", "MAKTM", _
                         "MAKTM_20_001", "MAKTM_20_002", "MAKTM_20_003", "MAKTM_8_04", "kh_etikett_001", "kh_etikett_002", "kh_etikett_003", "kh_etikett_004", "kh_etikett_005", "text_langtext", "Langtext")
    '--------
    'pocetdeti = pocetr("childb_000")
    For cykl1 = LBound(pocznaku) To UBound(pocznaku)
        If Mid(pocznaku(cykl1), 3, 1) = "?" Then
            If Range(Left(pocznaku(cykl1), 3) & Format("1", "000") & Mid(pocznaku(cykl1), 4, Len(pocznaku(cykl1)))).Value <> "" Then
                For cykl2 = 1 To pocetdeti
                    On Error GoTo 0
                    With Range(pocznakukont(cykl1) & Format(cykl2, "000")).Validation
                        .Delete
                        .Add Type:=xlValidateTextLength, AlertStyle:=xlValidAlertStop, _
                             Operator:=xlLessEqual, Formula1:=Range(Left(pocznaku(cykl1), 3) & Format(cykl2, "000") & Mid(pocznaku(cykl1), 4, Len(pocznaku(cykl1)))).Value
                        .IgnoreBlank = False
                        .InCellDropdown = True
                        .InputTitle = ""
                        .ErrorTitle = ""
                        .InputMessage = ""
                        .ErrorMessage = ""
                        .ShowInput = True
                        .ShowError = True
                    End With
                Next cykl2
            End If
        Else
            If Range(pocznaku(cykl1)).Value <> "" Then
                With Range(pocznakukont(cykl1)).Validation
                    .Delete
                    .Add Type:=xlValidateTextLength, AlertStyle:=xlValidAlertStop, _
                         Operator:=xlLessEqual, Formula1:=Range(pocznaku(cykl1)).Value
                    .IgnoreBlank = False
                    .InCellDropdown = True
                    .InputTitle = ""
                    .ErrorTitle = ""
                    .InputMessage = ""
                    .ErrorMessage = ""
                    .ShowInput = True
                    .ShowError = True
                End With
            End If
        End If
    Next cykl1
    '  With Range(back).Validation
    '    .Delete
    '    .Add Type:=xlValidateTextLength, AlertStyle:=xlValidAlertStop, _
         '     Operator:=xlLessEqual, Formula1:=Range(w_maxtext_back).Value
    '    .IgnoreBlank = False
    '    .InCellDropdown = True
    '    .InputTitle = ""
    '    .ErrorTitle = ""
    '    .InputMessage = ""
    '    .ErrorMessage = ""
    '    .ShowInput = True
    '    .ShowError = True
    '  End With
End Sub

Sub kontrola()

    Dim numa As Variant
    Dim numb As Variant
    Dim kontfld As Variant
    Dim cykl As Integer
    Dim cykl1 As Integer
    Dim pocetrb As Integer
    Dim pocetra As Integer
    Dim pocetx As Integer
    Dim chyba As Boolean
    Dim eu As Boolean
    Dim domaci As Boolean
    Dim y As Integer
    Dim x As Integer
    
    Sheets(artpas).Select
    pocetra = pocetr("MEINHB_001")
    jechyba = False
    Application.ScreenUpdating = False
    '-------------------------------------  numbers field --------------------------------------
    'Units and other fields
    numa = Array("UMREZ_", "EAN11_tab_", "BRGEW_", "NTGEWB_001", "LAENG_", "BREIT_", "HOEHE_", "MATNR", "WEKGR", "PRDHA", "LIFNR", "BISMT", "PMATA", "ZZWERB", _
                 "MATNR", "EAN11_www_001", "EAN11_www_002", "EAN11_www_003", "EAN11_ww_001", "EAN11_ww_002", "EAN11_ww_003", "EAN11_tabB_001", "WSTAW")
    'Basic units
    numb = Array("UMREZB_", "EAN11_tabB_", "BRGEWB_", "LAENGB_", "BREITB_", "HOEHEB_")
    ' UM x and y
    numXYb = Array("UMREZB_", "UMRENB_")
    numaXY = Array("UMREZ_", "UMREN_")
    'Basic units
    For cykl = LBound(numb) To UBound(numb)
        For cykl1 = 1 To pocetra
            'Range(numb(cykl) & Format(cykl1, "000")).Interior.ColorIndex = 10
            If Range(numb(cykl) & Format(cykl1, "000")) <> "" Or Range(numb(cykl) & Format(cykl1, "000")) <> Null Then
                If Not IsNumeric(Range(numb(cykl) & Format(cykl1, "000"))) Then
                    Application.ScreenUpdating = True
                    Range(numb(cykl) & Format(cykl1, "000")).Select
                    MsgBox hlaska(5), vbExclamation
                    jechyba = True
                    'Exit Sub
                End If
            End If
        Next cykl1
    Next cykl
    'Units and other fieds
    pocetrb = pocetr("MEINH_001")
    For cykl = LBound(numa) To UBound(numa)
        If Right(numa(cykl), 1) = "_" Then
            For cykl1 = 1 To pocetrb
                'Range(numa(cykl) & Format(cykl1, "000")).Interior.ColorIndex = 10
                If Range(numa(cykl) & Format(cykl1, "000")) <> "" Or Range(numa(cykl) & Format(cykl1, "000")) <> Null Then
                    If Not IsNumeric(Range(numa(cykl) & Format(cykl1, "000"))) Then
                        Range(numa(cykl) & Format(cykl1, "000")).Select
                        Application.ScreenUpdating = True
                        MsgBox hlaska(5), vbExclamation
                        jechyba = True
                        'Exit Sub
                    End If
                End If
            Next cykl1
        Else
            'Range(numa(cykl)).Interior.ColorIndex = 10
            If Range(numa(cykl)) <> "" Or Range(numa(cykl)) <> Null Then
                If Not IsNumeric(Range(numa(cykl))) Then
                    Range(numa(cykl)).Select
                    Application.ScreenUpdating = True
                    MsgBox hlaska(5), vbExclamation
                    jechyba = True
                    'Exit Sub
                End If
            End If
        End If
    Next cykl
    ' UM x and y
    If Range("LAND").Value <> "KI" Then
        For cykl = LBound(numXYb) To UBound(numXYb)
            For cykl1 = 1 To pocetra
                If Range(numXYb(cykl) & Format(cykl1, "000")) = "" Then
                    Application.ScreenUpdating = True
                    Range(numXYb(cykl) & Format(cykl1, "000")).Select
                    MsgBox hlaska(63) & " " & numXYb(cykl) & Format(cykl1, "000") & " " & hlaska(64), vbExclamation
                    jechyba = True
                End If
            Next cykl1
        Next cykl
        pocetrb = pocetr("MEINH_001")
        For cykl = LBound(numaXY) To UBound(numaXY)
            For cykl1 = 1 To pocetrb
                If Range(numaXY(cykl) & Format(cykl1, "000")) = "" Then
                    Range(numaXY(cykl) & Format(cykl1, "000")).Select
                    Application.ScreenUpdating = True
                    MsgBox hlaska(63) & " " & numaXY(cykl) & Format(cykl1, "000") & " " & hlaska(64), vbExclamation
                    jechyba = True
                End If
            Next cykl1
        Next cykl
    End If
    '-------------------------- Stejne udaje u objednaci a vydajove jednotky ------------------------
    kontfld = Array("UMREN", "MEINH", "UMREZ", "MEINS", "KZBME", "KZVRKME", "BRGEW", "LAENG", "BREIT", "HOEHE")
    numa = Array("KZBSTME", "KZAUSME")
    If pocetrb > 1 Then
        For cykl = LBound(numa) To UBound(numa)
            chyba = False
            For cykl1 = 1 To pocetrb
                If UCase(Range(numa(cykl) & "_" & Format(cykl1, "000")).Value) = "X" And chyba = False Then
                    y = cykl1
                    chyba = True
                End If
                If chyba And UCase(Range(numa(cykl) & "_" & Format(cykl1, "000")).Value) = "X" Then
                    For x = LBound(kontfld) To UBound(kontfld)
                        If Range(kontfld(x) & "_" & Format(cykl1, "000")).Value <> Range(kontfld(x) & "_" & Format(y, "000")).Value Then
                            Application.ScreenUpdating = True
                            jechyba = True
                            Range(kontfld(x) & "_" & Format(cykl1, "000")).Select
                            MsgBox hlaska(31), vbExclamation
                            'Exit Sub
                        End If
                    Next x
                End If
            Next cykl1
        Next cykl
    End If
    
    ' -- check that when  KG is chosen as type of packing, then should come warning "Did You fill correctly measure unit-field MEINSB_001 ? .... Vyplnili ste spravne mernu jednotku MEINSB_001 ?
    If Range("LAND").Value = "SK" And Left(Range("ZZEK_KZVPK").Value, 2) = "KG" And Left(Range("ZZEK_KZVPK").Value, 2) <> Left(Range("MEINSB_001").Value, 2) Then
        Application.ScreenUpdating = True
        Range(MEINSB_001).Select
        MsgBox hlaska(47), vbExclamation
        jechyba = True
    End If
    
    '------------------------- language of etikets --------------------
    pocetrb = 0
    kontfld = Array("de", "cz", "sk", "hr", "pl", "ro", "bg", "au")
    For cykl = LBound(kontfld) To UBound(kontfld)
        If UCase(Range(kontfld(cykl))) = "X" Then pocetrb = pocetrb + 1
    Next cykl
    If pocetrb = 0 Then
        Application.ScreenUpdating = True
        Range(kontfld(0)).Select
        MsgBox hlaska(6), vbExclamation
        jechyba = True
        'Exit Sub
    End If
    '-------------------------- dates ---------------------------------
    kontfld = Array("aktdat", "LDVZL", "LDBZL", "LDVFL", "anf_listdatum", "LDVFL", "LDBFL", "list_aprdat", "kalk_dat_ab_001", "kalk_dat_ab_002", "kalk_dat_ab_003")
    For cykl = LBound(kontfld) To UBound(kontfld)
        If Not IsDate(Range(kontfld(cykl))) And Not IsNull(Range(kontfld(cykl))) And Range(kontfld(cykl)) <> "" Then
            Application.ScreenUpdating = True
            Range(kontfld(cykl)).Select
            MsgBox hlaska(7), vbExclamation
            jechyba = True
            'Exit Sub
        End If
    Next cykl
    '-------- date of the end less than date of begin -------------
    If CDate(Range("LDVZL")) > CDate(Range("LDBZL")) Then
        Application.ScreenUpdating = True
        Range("LDVZL").Select
        MsgBox hlaska(8), vbExclamation
        jechyba = True
        'Exit Sub
    End If
    If CDate(Range("LDVFL")) > CDate(Range("LDBFL")) Then
        Application.ScreenUpdating = True
        Range("LDVFL").Select
        MsgBox hlaska(8), vbExclamation
        jechyba = True
        'Exit Sub
    End If
    '-------- if article posten then user should check correct fill dates in LDBZL or in LDBFL -------------
    If (Left(Range("LDBZL").Value, 10) = "31.12.9999" Or Left(Range("LDBFL").Value, 10) = "31.12.9999") And Range("ZZSOPO").Value <> "" Then
        Application.ScreenUpdating = True
        Range("LDBFL").Select
        MsgBox hlaska(43), vbExclamation
        jechyba = True
        'Exit Sub
    End If
    
    ' add chech for assortiment fields and dates of listing in stores
    If UCase(Range("sortbonus_nonlist")) = "X" Or UCase(Range("sortbonus_nonlist").Value) = "SP ONLY" Or UCase(Range("sortbonus_nonlist").Value) = "LEN PC" Then
        'do nothing
    Else
        If Range("LDVFL").Value = "" And Range("LDBFL").Value = "" And Range("SSTUF").Value <> "" And Range("ZZEK_SSTUF").Value <> "" Then
            Application.ScreenUpdating = True
            Range("LDVFL").Select
            'AP2-261
            MsgBox hlaska(45), vbExclamation
            jechyba = True
            'Exit Sub
        End If
    End If
    
    '------------------------ Minimal one X in ME columns ------------------------
    pocetra = pocetr("MEINHB_001")
    pocetrb = pocetr("MEINH_001")
    pocetrb = pocetrb + pocetra
    kontfld = Array("KZBMEB_001", "KZBSTMEB_001", "KZAUSMEB_001", "KZVRKMEB_001")
    For cykl1 = LBound(kontfld) To UBound(kontfld)
        pocetx = 0
        x = Range(kontfld(cykl1)).Column
        y = Range(kontfld(cykl1)).Row
        For cykl = y To (pocetrb * 2 + y) - 2 Step 2
            If UCase(Cells(cykl, x).Value) = "X" Then pocetx = pocetx + 1
            '      If pocetx > 1 Then
            '        Range(kontfld(0)).Select
            '        MsgBox hlaska(9), vbExclamation
            '        End
            '      End If
        Next cykl
        If pocetx = 0 Then
            Application.ScreenUpdating = True
            Range(kontfld(0)).Select
            MsgBox hlaska(10), vbExclamation
            jechyba = True
            'Exit Sub
        End If
    Next cykl1
    '-------------------------- check Auspackware and ME columns ------------------------
    
    ' SK check for wein article
    If Range("LAND").Value = "SK" Then
        If (Range("ZZEK_JAHRGANG_wein").Value <> "" Or Range("MHDHB_wein").Value <> "") And (Range("wine_article").Value = "" Or Range("wine_article").Value = "|fffd|") Then
            Application.ScreenUpdating = True
            Range("wine_article").Select
            MsgBox hlaska(62), vbExclamation
        End If
    End If
    
    '-------------------------- Stejne udaje u zakladni jednotky ------------------------
    kontfld = Array("UMREN", "MEINH", "UMREZ", "MEINS", "KZBME", "KZVRKME", "BRGEW", "LAENG", "BREIT", "HOEHE")
    If pocetra > 1 Then
        For cykl = 1 To pocetra
            For cykl1 = LBound(kontfld) To UBound(kontfld)
                If Range(kontfld(cykl1) & "B_" & Format(cykl, "000")).Value <> Range(kontfld(cykl1) & "B_" & "001").Value Then
                    Application.ScreenUpdating = True
                    jechyba = True
                    Range(kontfld(cykl1) & "B_" & Format(cykl, "000")).Select
                    MsgBox hlaska(31), vbExclamation
                    'Exit Sub
                End If
            Next cykl1
        Next cykl
    End If
    '---------------------------- x in x field ---------------------------------
    numa = Array("KZBMEB_", "KZBSTMEB_", "KZAUSMEB_", "KZVRKMEB_")
    For cykl = LBound(numa) To UBound(numa)
        For cykl1 = 1 To pocetra
            If UCase(Range(numa(cykl) & Format(cykl1, "000"))) <> "X" And (Range(numa(cykl) & Format(cykl1, "000"))) <> "" And (Range(numa(cykl) & Format(cykl1, "000"))) <> Chr(160) Then
                Application.ScreenUpdating = True
                Range(numa(cykl) & Format(cykl1, "000")).Select
                MsgBox hlaska(27), vbExclamation
                jechyba = True
                'Exit Sub
            End If
            '      If UCase(Range(numa(cykl) & Format(cykl1, "000"))) = "X" And Range("EAN11_tabB_" & Format(cykl1, "000")).Value = "" Then
            '        Range("EAN11_tabB_" & Format(cykl1, "000")).Select
            '        MsgBox hlaska(28), vbExclamation
            '        End
            '      End If
        Next cykl1
    Next cykl
    numa = Array("KZBME_", "KZBSTME_", "KZAUSME_", "KZVRKME_")
    pocetra = pocetr("MEINH_001")
    For cykl = LBound(numa) To UBound(numa)
        For cykl1 = 1 To pocetra
            If UCase(Range(numa(cykl) & Format(cykl1, "000"))) <> "X" And (Range(numa(cykl) & Format(cykl1, "000"))) <> "" And (Range(numa(cykl) & Format(cykl1, "000"))) <> Chr(160) Then
                Application.ScreenUpdating = True
                Range(numa(cykl) & Format(cykl1, "000")).Select
                MsgBox hlaska(27), vbExclamation
                jechyba = True
                'Exit Sub
            End If
            '      If UCase(Range(numa(cykl) & Format(cykl1, "000"))) = "X" And Range("EAN11_tab_" & Format(cykl1, "000")).Value = "" Then
            '        Range("EAN11_tab_" & Format(cykl1, "000")).Select
            '        MsgBox hlaska(28), vbExclamation
            '        End
            '      End If
        Next cykl1
    Next cykl
    numa = Array("de", "cz", "sk", "hr", "pl", "ro", "bg", "grill", "ZZLUL_AUSPACK", _
                 "biozid", "sortbonus", "reakt_kdis", "sofortlist", "inventurproblemart", "sdatenblatt", "qpass")
    For cykl = LBound(numa) To UBound(numa)
        If UCase(Range(numa(cykl))) <> "X" And (Range(numa(cykl))) <> "" And (Range(numa(cykl))) <> Chr(160) Then
            Application.ScreenUpdating = True
            Range(numa(cykl)).Select
            MsgBox hlaska(27), vbExclamation
            jechyba = True
            'Exit Sub
        End If
    Next cykl
    '---------------------------- brutto > netto -------------------------------
    pocetra = pocetr("MEINHB_001")
    For cykl = 1 To pocetra
        If (Range("BRGEWB_" & Format(cykl, "000")) < Range("NTGEWB_" & Format(cykl, "000"))) Then
            Application.ScreenUpdating = True
            Range("BRGEWB_" & Format(cykl, "000")).Select
            MsgBox hlaska(11), vbExclamation
            jechyba = True
            'Exit Sub
        End If
        If (Range("BRGEWB_" & Format(cykl, "000")).Value = "") Then
            Application.ScreenUpdating = True
            Range("BRGEWB_" & Format(cykl, "000")).Select
            MsgBox hlaska(34), vbExclamation
            jechyba = True
            'Exit Sub
        End If
    Next cykl
    '------------------------------- brutto ------------------------------------
    pocetra = pocetr("MEINH_001")
    For cykl = 1 To pocetra
        If ((Range("BRGEW_" & Format(cykl, "000"))) < (Val(Range("UMREZ_" & Format(cykl, "000")).Value) / Val(Range("UMREN_" & Format(cykl, "000")).Value) * Val(Range("BRGEWB_001").Value))) Then
            Application.ScreenUpdating = True
            Range("BRGEW_" & Format(cykl, "000")).Select
            MsgBox hlaska(12), vbExclamation
            jechyba = True
            'Exit Sub
        End If
        If (Range("BRGEW_" & Format(cykl, "000")).Value = "") Then
            Application.ScreenUpdating = True
            Range("BRGEW_" & Format(cykl, "000")).Select
            MsgBox hlaska(34), vbExclamation
            jechyba = True
            'Exit Sub
        End If
    Next cykl
    '--------------------------- required field --------------------------------
    '  kontfld = Array("MAKTX", "LFATX", "", "", "", "", "", "", "", "")

    '--------------------------- Auspackware -----------------------------------
    pocetra = pocetr("MEINHB_001")
    pocetra = pocetra + pocetr("MEINH_001")
    x = Range("KZBSTMEB_001").Column
    cykl1 = Range("KZBSTMEB_001").Row
    
    If Range("LAND").Value = "HR" Then
       Dim orderUnit, issueUnit
       orderUnit = 0
       issueUnit = 0
       For cykl = 1 To pocetra
           orderUnit = orderUnit + 1
           If cykl = 1 Then
               If UCase(Range("KZBSTMEB_" & Format(cykl, "000")).Value) = "X" Then Exit For
           Else
               If UCase(Range("KZBSTME_" & Format(cykl - 1, "000")).Value) = "X" Then Exit For
           End If
       Next cykl
       
       For cykl = 1 To pocetra
           issueUnit = issueUnit + 1
           If cykl = 1 Then
               If UCase(Range("KZAUSMEB_" & Format(cykl, "000")).Value) = "X" Then Exit For
           Else
               If UCase(Range("KZAUSME_" & Format(cykl - 1, "000")).Value) = "X" Then Exit For
           End If
       Next cykl

       If (orderUnit > issueUnit) And (UCase(Range("ZZLUL_AUSPACK").Value) <> "X") Then
           Application.ScreenUpdating = True
            Cells(cykl, x).Select
            MsgBox hlaska(13), vbExclamation
            jechyba = True
            'Exit Sub
       End If
    End If
    
    For cykl = cykl1 To (pocetra * 2 + cykl1) - 2 Step 2
        If Range("LAND").Value <> "HR" And (UCase(Cells(cykl, x).Value) = "X" And UCase(Cells(cykl, x + 2).Value) <> "X") And (UCase(Range("ZZLUL_AUSPACK").Value) <> "X") Then
            Application.ScreenUpdating = True
            Cells(cykl, x).Select
            MsgBox hlaska(13), vbExclamation
            jechyba = True
            'Exit Sub
        ElseIf Range("LAND").Value = "HR" And UCase(Range("ZZLUL_AUSPACK").Value) = "X" And (UCase(Cells(cykl, x).Value) = "X" And UCase(Cells(cykl, x + 2).Value) = "X") Then
            Application.ScreenUpdating = True
            Cells(cykl, x).Select
            MsgBox hlaska(40), vbExclamation
            jechyba = True
            'Exit Sub
        End If
    Next cykl
    '---------------------------- PAL 1000kg -----------------------------------
    x = Range("BRGEWB_001").Column
    For cykl = cykl1 To (pocetra * 2 + cykl1) - 2 Step 2
        If Cells(cykl, x).Value > 1000 Then
            MsgBox (Cells(cykl, x).Value)
            Application.ScreenUpdating = True
            Cells(cykl, x).Select
            MsgBox hlaska(14), vbExclamation
            jechyba = True
            'Exit Sub
        End If
    Next cykl
    '------------------------- Projednano v ----------------------------------
    If UCase(Left(Range("ZZEK_KZKLMA").Value, 1)) = "C" And Range("verh").Value = "" Then
        MsgBox hlaska(38), vbExclamation
        jechyba = True
        'Exit Sub
    End If
    '------------------------- povinne pole geliefertvon_kl pri vyplneni pole MATNR_kl -------------
    chyba = False
    If Range("LAND").Value <> "CZ" Then
      If Range("MATNR_klbg").Value = "" And Range("geliefertvon_klbg").Value <> "" Then chyba = True
      If Range("MATNR_klcz").Value = "" And Range("geliefertvon_klcz").Value <> "" Then chyba = True
      If Range("MATNR_klhr").Value = "" And Range("geliefertvon_klhr").Value <> "" Then chyba = True
      If Range("MATNR_klpl").Value = "" And Range("geliefertvon_klpl").Value <> "" Then chyba = True
      If Range("MATNR_klro").Value = "" And Range("geliefertvon_klro").Value <> "" Then chyba = True
      If Range("MATNR_klsk").Value = "" And Range("geliefertvon_klsk").Value <> "" Then chyba = True
      If chyba = True Then
        jechyba = True
        Range("geliefertvon_klbg").Select
        MsgBox hlaska(61) & " " & Range("t_geliefertvon_klbg_L1").Value & ".", vbExclamation
        'Exit Sub
      End If
    End If
    '--------------------------- Landesprodukt CZ ---------------------------------
    '  If UCase(Right(Range("WHERL"), 2)) <> "CZ" And UCase(Range("WHERR")) = "CZ" Then
    '    msg1 = Array("DE1", "EN1", _
         '    "Zeme puvodu nen|fffd| CZ, artikl nen|fffd| region|fffd|ln|fffd| produkt.", "SK1", _
         '    "HR1", "PL1", _
         '    "RO1", "BG1")
    '    Range("WHERR").Select
    '    MsgBox msg1(fjazyk), vbExclamation
    '  End If
    '--------------------------- Dan ----------------------------------------------
    '  chyba = False
    '  If UCase(Range("LAND")) <> "KI" Then
    '    If Range("ZE_HERKL").Value <> "" And Range("ZE_HERKL").Value <> Chr(160) Then
    '      If Mid(Range("ZE_HERKL").Value, Len(Range("ZE_HERKL").Value) - 3, 1) = "-" Then eu = True Else eu = False
    '      If Left(Range("ZE_HERKL").Value, 1) = "_" Then domaci = True Else domaci = False
    '  '    If (UCase(Range("zoll_EU").Value) = "X") And (Range("nonzoll").Value <> "") And (Range("nonzoll").Value <> Chr(160)) Then chyba = True
    '  '    If (UCase(Range("zoll_EU").Value) = "X") And ((Range("landlief_zoll").Value = "" Or Range("landlief_zoll").Value = Chr(160)) And (Range("eulief_zoll").Value = "" Or Range("eulief_zoll").Value = Chr(160))) Then chyba = True
    '  '    If (UCase(Range("zoll_EU").Value) <> "X") And ((Range("landlief_zoll").Value <> "" And Range("landlief_zoll").Value <> Chr(160)) Or (Range("eulief_zoll").Value <> "" And Range("eulief_zoll").Value <> Chr(160))) Then chyba = True
    '  '    If (UCase(Range("zoll_EU").Value) <> "X") And (Range("nonzoll").Value = "" Or Range("nonzoll").Value = Chr(160)) Then chyba = True
    '      If domaci And ((Range("nonzoll").Value <> "" And Range("nonzoll").Value <> Chr(160)) Or (Range("eulief_zoll").Value <> "" And Range("eulief_zoll").Value <> Chr(160))) Then chyba = True
    '      If domaci And (Range("landlief_zoll").Value = "" Or Range("landlief_zoll").Value = Chr(160)) Then chyba = True
    '      If domaci = False And eu And ((Range("landlief_zoll").Value <> "" And Range("landlief_zoll").Value <> Chr(160)) Or (Range("nonzoll").Value <> "" And Range("nonzoll").Value <> Chr(160))) Then chyba = True
    '      If domaci = False And eu And (Range("eulief_zoll").Value = "" Or Range("eulief_zoll").Value = Chr(160)) Then chyba = True
    '      'If eu And UCase(Range("zoll_eu").Value) <> "X" Then chyba = True
    '      'If eu = False And UCase(Range("zoll_eu").Value) = "X" Then chyba = True
    '      If eu = False And domaci = False And (Range("nonzoll").Value = "" Or Range("nonzoll").Value = Chr(160)) Then chyba = True
    '      If eu = False And domaci = False And ((Range("landlief_zoll").Value <> "" And Range("landlief_zoll").Value <> Chr(160)) Or (Range("eulief_zoll").Value <> "" And Range("eulief_zoll").Value <> Chr(160))) Then chyba = True
    '    Else
    '      If (Range("landlief_zoll").Value <> "" And Range("landlief_zoll").Value <> Chr(160)) Or (Range("eulief_zoll").Value <> "" And Range("eulief_zoll").Value <> Chr(160)) Or (Range("nonzoll").Value <> "" And Range("nonzoll").Value <> Chr(160)) Then chyba = True
    '    End If
    '  End If
    '  Range("t_mwst_eing_L1").Select
    '  If chyba Then
    '    Application.ScreenUpdating = True
    '    MsgBox hlaska(26), vbExclamation
    '    jechyba = True
    '    Exit Sub
    '  End If
    '--------------------------- kontrola podminek -----------------------------
    chyba = False
    If Range("kalk_dat_ab_001").Value = "" And (Range("kalk_dat_ab_002").Value <> "" Or Range("kalk_dat_ab_003").Value <> "") Then chyba = True
    If Range("kalk_dat_ab_002").Value = "" And Range("kalk_dat_ab_003").Value <> "" Then chyba = True
    If chyba Then
        Application.ScreenUpdating = True
        Range("kalk_dat_ab_001").Select
        MsgBox hlaska(32), vbExclamation
        jechyba = True
        'Exit Sub
    End If
    
    'logo check
    If Range("LAND").Value = "BG" And UCase(Range("selectlogo_11").Value) = "X" And UCase(Range("selectlogo_12").Value) = "X" Then
        Application.ScreenUpdating = True
        MsgBox hlaska(46), vbExclamation
        jechyba = True
        'Exit Sub
    End If
    'AP-262
    If Range("LAND").Value = "BG" And Range("WSTAW").Value <> "" Then
        If Len(Range("WSTAW").Value) < 9 Then
            additionalZero = 9 - Len(Range("WSTAW").Value)
            For i = 1 To additionalZero
                If Len("WSTAW") >= 9 Then Exit For
                Range("WSTAW").Value = Range("WSTAW").Value & "0"
            Next
        End If
    End If
    
    '--------------------------- bez listovani neni cena ----------------------------
    If (UCase(Range("sortbonus_nonlist").Value) = "X") And (Range("VKP0_p1").Value <> "" Or Range("VKP0_p2").Value <> "" Or Range("VKP0_p3").Value <> "" Or Range("VKP0_p4").Value <> "" Or Range("VKP0_p5").Value <> "" Or Range("VKP0_p6").Value <> "" Or Range("VKP0_p7").Value <> "" Or Range("VKP0_p8").Value <> "" Or Range("VKP0_p9").Value <> "" Or Range("VKP0_pZ").Value <> "") Then
        Application.ScreenUpdating = True
        Range("VKP0_p1").Select
        MsgBox hlaska(36), vbExclamation
        'Exit Sub
    End If
    '--------------------------- vy??|fffd| cena u PZ -------------------------------
    If (Range("VKP0_p1").Value < Range("VKP0_p2").Value _
        Or Range("VKP0_p2").Value < Range("VKP0_p3").Value _
        Or Range("VKP0_p3").Value < Range("VKP0_p4").Value _
        Or Range("VKP0_p4").Value < Range("VKP0_p5").Value _
        Or Range("VKP0_p5").Value < Range("VKP0_p6").Value _
        Or Range("VKP0_p6").Value < Range("VKP0_p7").Value _
        Or Range("VKP0_p7").Value < Range("VKP0_p8").Value _
        Or Range("VKP0_p8").Value < Range("VKP0_p9").Value _
        Or Range("VKP0_p9").Value < Range("VKP0_pz").Value) Then
        Application.ScreenUpdating = True
        Range("VKP0_p1").Select
        MsgBox hlaska(41), vbExclamation
        'Exit Sub
    End If
    '---------- clean range "sofortlist" for RO and BG----------
    If Range("sofortlist").Value <> "" And (Range("LAND").Value = "RO" Or Range("LAND").Value = "BG") Then Range("sofortlist").Value = ""
    
    '--------------------------- Tariff number check ---------------------------
    Dim markerRange As Range
    Dim firstCoCell As Range
    Dim wstawValue As String
    Dim wstawRange As String
    wstawValue = Range("WSTAW").Value
    Select Case Range("LAND").Value
            Case "CZ"
                wstawRange = "WSTAW_CZ"
            Case "SK"
                wstawRange = "WSTAW_SK"
            Case "HR"
                wstawRange = "WSTAW_HR"
            Case "PL"
                wstawRange = "WSTAW_PL"
            Case "RO"
                wstawRange = "WSTAW_RO"
            Case "BG"
                wstawRange = "WSTAW_BG"
            Case "KI"
                wstawRange = "WSTAW_HR"
            Case "MD"
                wstawRange = "WSTAW_MD"
        Case "AU"
                wstawRange = "WSTAW_PL"
        End Select
    With Worksheets(wstawRange).Range("A:A")
        If wstawValue = "" Then
            a = 0
        Else
            a = CDbl(wstawValue)
        End If
        Set markerRange = .Find(What:=a, LookAt:=xlWhole)
        If Not markerRange Is Nothing And Range("RMMZU_MEINH").Value <> "" And (Range("RMMZU_UMREN").Value = "" Or Range("RMMZU_UMREZ").Value = "") Then
            Application.ScreenUpdating = True
            Range("WSTAW").Select
            MsgBox hlaska(42) & vbNewLine & "UM: " & Range("RMMZU_MEINH").Value, vbExclamation
        End If
    End With
    
    If Range("LAND").Value = "RO" Then
        On Error Resume Next
        aaa = UCase(Range("Extindere_Articol_MD")) ' check is range exist (only for RO)
        If Err = 0 And aaa = "X" Then
            If Range("WSTAW").Value = "" Then
                Application.ScreenUpdating = True
                Sheets("A-pass").Select
                Range("WSTAW").Select
                MsgBox hlaska(50), vbExclamation
            ElseIf Range("WSTAW_MD").Value = "" Then
                Application.ScreenUpdating = True
                Sheets("A-pass MD").Select
                Range("WSTAW_MD").Select
                MsgBox hlaska(51), vbExclamation
            End If
            ' AP2-184 \ rule
            If Range("tierischesList_ROMD").Value <> "sanitary-veterinary (fish products)" Then
                Range("ANIMAL_FISH_SPEC_ROMD").Value = ""
            ElseIf Range("tierischesList_ROMD").Value = "sanitary-veterinary (fish products)" And Range("ANIMAL_FISH_SPEC_ROMD").Value = "" Then
                Application.ScreenUpdating = True
                Sheets("A-pass MD").Select
                Range("ANIMAL_FISH_SPEC_ROMD").Select
                MsgBox hlaska(54), vbExclamation
            End If
            'AP2-184 \ currencu mandatiry fields rule
            If Range("TAX_RATE_PC_ROMD").Value <> "" And Range("TAX_RATE_CURRENCY_ROMD").Value = "" Then
                Application.ScreenUpdating = True
                Sheets("A-pass MD").Select
                Range("TAX_RATE_CURRENCY_ROMD").Select
                MsgBox hlaska(55), vbExclamation
            End If
            If Range("CUSTOM_RATE_PC_ROMD").Value <> "" And Range("CUSTOM_RATE_CURRENCY_ROMD").Value = "" Then
                Application.ScreenUpdating = True
                Sheets("A-pass MD").Select
                Range("CUSTOM_RATE_CURRENCY_ROMD").Select
                MsgBox hlaska(56), vbExclamation
            End If
            If Range("PACKAGING_TAX_PC_ROMD").Value <> "" And Range("PACKAGING_TAX_CURRENCY_ROMD").Value = "" Then
                Application.ScreenUpdating = True
                Sheets("A-pass MD").Select
                Range("PACKAGING_TAX_CURRENCY_ROMD").Select
                MsgBox hlaska(57), vbExclamation
            End If
            If Range("EXCISES_RATE_PC_ROMD").Value <> "" And Range("EXCISES_RATE_CURRENCY_ROMD").Value = "" Then
                Application.ScreenUpdating = True
                Sheets("A-pass MD").Select
                Range("EXCISES_RATE_CURRENCY_ROMD").Select
                MsgBox hlaska(58), vbExclamation
            End If
            ' AP2-314 \ set EUR value in TAX_RATE_CURRENCY_ROMD in case if it is not empty
            If Range("TAX_RATE_CURRENCY_ROMD").Value = "MDL" Then
                Application.ScreenUpdating = True
                Sheets("A-pass MD").Select
                Range("TAX_RATE_CURRENCY_ROMD").Value = "EUR"
            End If
            ' AP2-314 \ convert EURO in EUR values in CURRENCY_ROMD
            'TAX_RATE_CURRENCY_ROMD
            'CUSTOM_RATE_CURRENCY_ROMD
            'PACKAGING_TAX_CURRENCY_ROMD
            'EXCISES_RATE_CURRENCY_ROMD
            If Range("TAX_RATE_CURRENCY_ROMD").Value = "EURO" Then
                Application.ScreenUpdating = True
                Sheets("A-pass MD").Select
                Range("TAX_RATE_CURRENCY_ROMD").Value = "EUR"
            End If
            If Range("CUSTOM_RATE_CURRENCY_ROMD").Value = "EURO" Then
                Application.ScreenUpdating = True
                Sheets("A-pass MD").Select
                Range("CUSTOM_RATE_CURRENCY_ROMD").Value = "EUR"
            End If
            If Range("PACKAGING_TAX_CURRENCY_ROMD").Value = "EURO" Then
                Application.ScreenUpdating = True
                Sheets("A-pass MD").Select
                Range("PACKAGING_TAX_CURRENCY_ROMD").Value = "EUR"
            End If
            If Range("EXCISES_RATE_CURRENCY_ROMD").Value = "EURO" Then
                Application.ScreenUpdating = True
                Sheets("A-pass MD").Select
                Range("EXCISES_RATE_CURRENCY_ROMD").Value = "EUR"
            End If
            
            ' AP2-184\ make MSI field on A-pass md sheet mandatiry
            If Range("ZZEK_MSI_ROMD").Value = "" Then
                Application.ScreenUpdating = True
                Sheets("A-pass MD").Select
                Range("ZZEK_MSI_ROMD").Select
                MsgBox hlaska(59), vbExclamation
            End If
            ' AP2-184 \ animal origin fields check mandatory
            If UCase(Range("tierisches_ROMD").Value) = "X" Then
                If Range("tierischesList_ROMD").Value = "" Or Range("TEMPB_ROMD").Value = "" Or Range("ANIMAL_IDENT_MARK_ROMD").Value = "" Then
                    Application.ScreenUpdating = True
                    Sheets("A-pass MD").Select
                    Range("tierisches_ROMD").Select
                    MsgBox hlaska(60), vbExclamation
                End If
                Sheets("A-pass MD").Range("TEMPB_ROMD").Value = Sheets("A-pass").Range("TEMPB").Value
            End If
            
            Sheets("A-pass MD").Range("LIFNR_MD").Value = "6100"
            Sheets("A-pass MD").Range("ZE_HERKL_MD").Value = "Rom|fffd|nia - RO"
            
            ' update VKP prices on A-pass MD sheet
            Sheets("A-pass MD").Range("VKP0_MD_p2").Value = Sheets("A-pass MD").Range("VKP0_MD_p1").Value
            Sheets("A-pass MD").Range("VKP0_MD_p3").Value = Sheets("A-pass MD").Range("VKP0_MD_p1").Value
            Sheets("A-pass MD").Range("VKP0_MD_p4").Value = Sheets("A-pass MD").Range("VKP0_MD_p1").Value
            Sheets("A-pass MD").Range("VKP0_MD_p5").Value = Sheets("A-pass MD").Range("VKP0_MD_p1").Value
            Sheets("A-pass MD").Range("VKP0_MD_p6").Value = Sheets("A-pass MD").Range("VKP0_MD_p1").Value
            Sheets("A-pass MD").Range("VKP0_MD_p7").Value = Sheets("A-pass MD").Range("VKP0_MD_p1").Value
            Sheets("A-pass MD").Range("VKP0_MD_p8").Value = Sheets("A-pass MD").Range("VKP0_MD_p1").Value
            Sheets("A-pass MD").Range("VKP0_MD_p9").Value = Sheets("A-pass MD").Range("VKP0_MD_p1").Value
            Sheets("A-pass MD").Range("VKP0_MD_pz").Value = Sheets("A-pass MD").Range("VKP0_MD_p1").Value
                        
            If Range("TAXKM_MD").Value = "" Then
                Application.ScreenUpdating = True
                Sheets("A-pass MD").Select
                Range("TAXKM_MD").Select
                MsgBox hlaska(65), vbExclamation
            End If
            
            If Range("REA_PACK_TYPE_ROMD").Value = "" Then
                Application.ScreenUpdating = True
                Sheets("A-pass MD").Select
                Range("REA_PACK_TYPE_ROMD").Select
                MsgBox hlaska(66), vbExclamation
            End If
            
            
            
        End If
        On Error GoTo 0
        If Left(Range("BWSCL"), 1) = "4" And wstawValue = "" Then
            Application.ScreenUpdating = True
            Sheets("A-pass").Select
            Range("WSTAW").Select
            MsgBox hlaska(52), vbExclamation
        End If
    End If
        
    If Range("LAND").Value = "MD" And Range("WSTAW").Value = "" Then
        Application.ScreenUpdating = True
        Sheets("A-pass").Select
        Range("WSTAW").Select
        MsgBox hlaska(51), vbExclamation
    End If
    
    ' AP2-184 \ MSI mandatory field
    If Range("LAND").Value = "MD" Then
        If Range("ZZEK_MSI_md").Value = "" Then
            Application.ScreenUpdating = True
            Sheets("A-pass").Select
            Range("ZZEK_MSI_md").Select
            MsgBox hlaska(53), vbExclamation
        End If
    End If
    Sheets("A-pass").Select
    
    ' check field "Transaction-Mark" (ZZEK_PREPAID). It can be filled only for WG 969
    If Range("ZZEK_PREPAID").Value <> "" Then
        If Left(Range("PRDHA").Value, 3) <> "969" Then
            Range("ZZEK_PREPAID").Value = ""
            Range("ZZEK_PREPAID").Select
            MsgBox hlaska(67), vbExclamation
        End If
    End If
    
    ' AP2-198 and AP2-254
    If Range("LAND").Value = "RO" Then
        pocetra = pocetr("MEINHB_001")
        pocetra = pocetra + pocetr("MEINH_001")
        x = Range("KZBSTMEB_001").Column
        cykl1 = Range("KZBSTMEB_001").Row
        
        For cykl = 1 To pocetra
            If cykl = 1 Then
                If UCase(Range("KZBSTMEB_" & Format(cykl, "000")).Value) = "X" Then Exit For
            Else
                On Error Resume Next
                Range("KZBSTME_" & Format(cykl - 1, "000")).Select
                If Err = 0 Then
                    If UCase(Range("KZBSTME_" & Format(cykl - 1, "000")).Value) = "X" And Range("EAN11_tab_" & Format(cykl - 1, "000")).Value = "" And Range("EANTP_tab_" & Format(cykl - 1, "000")).Value = "" Then
                        Application.ScreenUpdating = True
                        Range("EANTP_tab_" & Format(cykl - 1, "000")).Select
                        Worksheets(artpas).Range("EANTP_tab_" & Format(cykl - 1, "000")).Value = Worksheets(artpas).Range(Mid(Worksheets(artpas).Range("EANTP_tab_" & Format(cykl - 1, "000")).Validation.Formula1, 2)).Cells(2, 1).Value
                        MsgBox hlaska(68), vbExclamation
                        Exit For
                    End If
                End If
            End If
        Next cykl
    End If
    
    ' AP2-268
    Call CheckCorrectValuesInAlternativeUMColumn
    
'    remove message for WSTAW without MEINH
'    If a <> 0 And Range("RMMZU_MEINH").Value = "" Then
'        Application.ScreenUpdating = True
'        Range("RMMZU_MEINH").Select
'        MsgBox hlaska(44), vbExclamation
'    End If
    
    '--------------------------- celni nomenklatura ----------------------------
    '  If Range("WSTAW").Value <> "" And Len(Range("WSTAW").Value) <> 10 Then
    '    Application.ScreenUpdating = True
    '    Range("WSTAW").Select
    '    MsgBox hlaska(33), vbExclamation
    '    Exit Sub
    '  End If
    '--------------------------- DPG -------------------------------------------
    '  If UCase(Range("ZZEK_KZLEAD")) = "X" Then
    '    Application.ScreenUpdating = True
    '    Range("ZZEK_KZLEAD").Select
    '    MsgBox hlaska(15), vbExclamation
    '  End If
    Application.ScreenUpdating = True
    Range("t_zzmm43_L1").Select
End Sub

Sub newversion()

    Dim verze                           As String
    Dim msg1                            As Variant
    Dim tento                           As String
    Dim tamten                          As String
    Dim y                               As Integer
    Dim cykl                            As Integer
    Dim pocetratento                    As Integer
    Dim pocetratamten                   As Integer
    Dim sloupce                         As Variant
    Dim displeje                        As Variant
    Dim childarray                      As Variant
    Dim mista()                         As Variant
    Dim nazvypoli(2000)                 As String
    Dim hodnotypoli(2000)               As Variant
    Dim nazvypoliSpec(100)              As String
    Dim hodnotypoliSpec(100)            As Variant
    Dim cykl1                           As Integer
    Dim cestaart                        As String
    Dim novysoubor                      As String
    Dim noteListStr                     As String
    Dim kreistypArray(3)                As Variant
    Dim perisabStr                      As String
    'REA import variables
    Dim reaFractionValue(20)            As Variant
    Dim reaPackageNoValue(20)           As Variant
    Dim reaWeightValue(20)              As Variant
    Dim reaLevelValue(20)               As Variant
    
    
    ActiveWorkbook.Unprotect Password:=heslo
    sloupce = Array("UMREN", "MEINH", "UMREZ", "KZBME", "KZBSTME", "KZAUSME", "KZVRKME", "EAN11_tab", "EANTP_tab", "BRGEW", "NTGEW", "GEWEI", "LAENG", "BREIT", "HOEHE", "MESUB")
    displeje = Array("komponent_display", "stck_display", "komponent_MATNR_display", "MEINH_display")
    childarray = Array("ChMATNR", "ChPROMOMATNR")
    mista = Array("tab_COUNTRY", "tab_CITY1", "tab_POST_CODE1", "tab_NAME1", "tab_STREET", "tab_HOUSE_NUM1")
    Application.ScreenUpdating = False
    On Error Resume Next
    Err.Clear
    Open versionpathKI For Input As #1
    If Err = 0 Then novaverze = novaverzeKI Else Err.Clear
    Open versionpathCZ For Input As #1
    If Err = 0 Then novaverze = novaverzeCZ Else Err.Clear
    Open versionpathSK For Input As #1
    If Err = 0 Then novaverze = novaverzeSK Else Err.Clear
    Open versionpathHR For Input As #1
    If Err = 0 Then novaverze = novaverzeHR Else Err.Clear
    Open versionpathPL For Input As #1
    If Err = 0 Then novaverze = novaverzePL Else Err.Clear
    Open versionpathRO For Input As #1
    If Err = 0 Then novaverze = novaverzeRO Else Err.Clear
    Open versionpathBG For Input As #1
    If Err = 0 Then novaverze = novaverzeBG Else Err.Clear
    Line Input #1, verze
    Close #1
    If Val(verze) > Val(Sheets(artpas).Range("L5")) Then
        If MsgBox(hlaska(16), vbYesNo + vbExclamation) = vbYes Then
            tento = ActiveWorkbook.Name
            cestaart = ThisWorkbook.Path
            Application.EnableEvents = False
            Err.Clear
            If UCase(Right(tento, 3)) = "XLS" Then
                Workbooks.OpenXML (novaverze & ".xls")
            ElseIf UCase(Right(tento, 4)) = "XLSB" Then
                Workbooks.OpenXML (novaverze & ".xlsb")
            ElseIf UCase(Right(tento, 4)) = "XLSM" Then
                Workbooks.OpenXML (novaverze & ".xlsm")
            End If
            If Err <> 0 Then
                Application.EnableEvents = True
                Application.ScreenUpdating = True
            End
            End If
            Set WorkbookForUpdate = ActiveWorkbook
            tamten = ActiveWorkbook.Name
            y = 2
            Do While Workbooks(tento).Sheets(polenw).Cells(y, 1) <> ""
                Workbooks(tento).Activate
                On Error Resume Next
                nazvypoli(y - 2) = Range(Workbooks(tento).Sheets(polenw).Cells(y, 1)).Name.Name
                hodnotypoli(y - 2) = Range(Workbooks(tento).Sheets(polenw).Cells(y, 1))
                y = y + 1
            Loop
            On Error GoTo 0
            ' spec fields
            y = 2
            Workbooks(tamten).Unprotect Password:=heslo
            Do While Workbooks(tamten).Sheets(polenw).Cells(y, 19) <> ""
                Workbooks(tamten).Activate
                On Error Resume Next
                nazvypoliSpec(y - 2) = CStr(Workbooks(tamten).Sheets(polenw).Cells(y, 19))
                Workbooks(tento).Activate
                hodnotypoliSpec(y - 2) = Range(CStr(Workbooks(tamten).Sheets(polenw).Cells(y, 19))).Value
                y = y + 1
            Loop
            
           'fill new Artice name field (for RO only)
            Dim i               As Integer
            Dim a               As Integer
            Dim c               As Integer
            Dim listnotevalue   As String
            listnotevalue = UCase(Range("list_note"))
            
            On Error Resume Next
            a = InStr(listnotevalue, "BG")
            If a <> 0 Then
                c = InStr(listnotevalue, "1100")
                If c = 0 Or c < a Then
                    c = InStr(listnotevalue, "2200")
                    If c = 0 Or c < a Then
                        c = InStr(listnotevalue, ":X")
                        If c <> 0 And c > a Then
                            noteListStr = "X"
                            GoTo gotomark
                        End If
                        c = InStr(listnotevalue, " X")
                        If c <> 0 And c > a Then
                            noteListStr = "X"
                            GoTo gotomark
                        End If
                    Else
                        noteListStr = "2200"
                    End If
                Else
                    noteListStr = "1100"
                End If
            End If
gotomark:
            If noteListStr = "1100" Or noteListStr = "2200" Or noteListStr = "X" Then
                'do nothing
            Else
                noteListStr = CStr(Range("list_note").Value)
            End If
            If Err <> 0 Then noteListStr = ""
            
            kreistypArray(0) = Range("kreistyp_pl").Value
            kreistypArray(1) = Range("kreistyp_cz").Value
            kreistypArray(2) = Range("kreistyp_bg").Value
            kreistypArray(3) = Range("kreistyp_ro").Value
            perisabStr = Range("perisab_ro").Value
            On Error GoTo 0
            
            Workbooks(tamten).Activate
            Application.EnableEvents = True
            On Error Resume Next
            For y = 0 To 2000
                If y = 6 Then Application.EnableEvents = False
                If nazvypoli(y) = "ZZINVGR" Then
                    Range("ZZINVGR_hr") = hodnotypoli(y)
                ElseIf Left(nazvypoli(y), 5) = "P_100" Then
                    Range(nazvypoli(y)).Value = RemoveAlphas(CStr(hodnotypoli(y)))
                ElseIf nazvypoli(y) = "sortbonus" Then
                    If hodnotypoli(y) <> "" Then
                        Range("ETK_NEW").Value = hodnotypoli(y)
                        Range(nazvypoli(y)) = hodnotypoli(y)
                    End If
                ElseIf nazvypoli(y) = "ETK_NEW" And hodnotypoli(y) = "" Then
                    ' Do nothing
                ElseIf nazvypoli(y) = "WSTAW" Then
                    Application.EnableEvents = True
                    Range(nazvypoli(y)) = hodnotypoli(y)
                    Application.EnableEvents = False
                ElseIf nazvypoli(y) = "Extindere_Articol_MD" Then
                    Application.EnableEvents = True
                    Range(nazvypoli(y)) = hodnotypoli(y)
                    Application.EnableEvents = False
                    Workbooks(tamten).Worksheets(artpas).Activate
                ElseIf Left(nazvypoli(y), 6) = "MHDRZ_" Then
                    ' Do nothing
                Else
                    Range(nazvypoli(y)) = hodnotypoli(y)
                End If
            Next y
            'fill MAKTX_other for RO
            If (pland = "RO" Or pland = "MD") And Range("MAKTX_other").Value = "" And (noteListStr = "X" Or noteListStr = "1100" Or noteListStr = "2200") Then
                Range("MAKTX_other").Value = noteListStr
                Range("MAKTX_other_language") = "BG"
            End If
            
            Range("kreistyp_pl").Value = kreistypArray(0)
            Range("kreistyp_cz").Value = kreistypArray(1)
            Range("kreistyp_bg").Value = kreistypArray(2)
            Range("kreistyp_ro").Value = kreistypArray(3)
            Range("perisab_ro").Value = perisabStr
            
            'spec fields
            Application.EnableEvents = False
            For y = 0 To 100
                Range(nazvypoliSpec(y)) = hodnotypoliSpec(y)
            Next y
            On Error GoTo 0
            'zjisteni poctu radku
            pocetratamten = pocetr("MEINHB_001")
            Workbooks(tento).Sheets(artpas).Activate
            pocetratento = pocetr("MEINHB_001")
            'pridani radku EANu
            Application.EnableEvents = True
            If pocetratamten < pocetratento Then
            Workbooks(tamten).Sheets(artpas).Activate
                Range("MEINHB_001").Select
                For cykl = pocetratamten + 1 To pocetratento
                    Application.Run "'" & tamten & "'!AddlineME"
                Next cykl
            End If
            'odebrani radku EANu
            If pocetratamten > pocetratento Then
            Workbooks(tamten).Sheets(artpas).Activate
                Range("MEINHB_001").Select
                For cykl = pocetratento + 1 To pocetratamten
                    Application.Run "'" & tamten & "'!DellineME"
                Next cykl
            End If
            Erase nazvypoli
            Erase hodnotypoli
            cykl1 = 0
            Application.EnableEvents = False
            Workbooks(tento).Sheets(artpas).Activate
            For y = 1 To pocetratento
                For cykl = LBound(sloupce) To UBound(sloupce)
                    nazvypoli(cykl1) = Range(sloupce(cykl) & "B_" & Format(y, "000")).Name.Name
                    hodnotypoli(cykl1) = Range(sloupce(cykl) & "B_" & Format(y, "000"))
                    cykl1 = cykl1 + 1
                Next cykl
            Next y
            Workbooks(tamten).Sheets(artpas).Activate
            On Error Resume Next
            For y = 0 To 2000
                Range(nazvypoli(y)) = hodnotypoli(y)
            Next y
            On Error GoTo 0
            pocetratamten = pocetr("MEINH_001")
            Workbooks(tento).Sheets(artpas).Activate
            pocetratento = pocetr("MEINH_001")
            Application.EnableEvents = True
            If pocetratamten < pocetratento Then
                On Error GoTo 0
            Workbooks(tamten).Sheets(artpas).Activate
                Range("MEINH_001").Select
                For cykl = pocetratamten + 1 To pocetratento
                    Application.Run "'" & tamten & "'!addlineME"
                Next cykl
            End If
            If pocetratamten > pocetratento Then
            Workbooks(tamten).Sheets(artpas).Activate
                Range("MEINH_001").Select
                For cykl = pocetratento + 1 To pocetratamten
                    Application.Run "'" & tamten & "'!DellineME"
                Next cykl
            End If
            Erase nazvypoli
            Erase hodnotypoli
            cykl1 = 0
            Application.EnableEvents = False
            Workbooks(tento).Sheets(artpas).Activate
            For y = 1 To pocetratento
                For cykl = LBound(sloupce) To UBound(sloupce)
                    If sloupce(cykl) <> "NTGEW" Then
                        nazvypoli(cykl1) = Range(sloupce(cykl) & "_" & Format(y, "000")).Name.Name
                        hodnotypoli(cykl1) = Range(sloupce(cykl) & "_" & Format(y, "000"))
                        cykl1 = cykl1 + 1
                    End If
                Next cykl
            Next y
            Workbooks(tamten).Sheets(artpas).Activate
            On Error Resume Next
            For y = 0 To 2000
                Range(nazvypoli(y)) = hodnotypoli(y)
            Next y
            On Error GoTo 0
            '---- display -----
            Application.EnableEvents = True
            Workbooks(tento).Sheets(artpas).Activate
            pocetratento = pocetr("komponent_display_001")
            Workbooks(tamten).Sheets(artpas).Activate
            If pocetratento > 2 Then
                For cykl = 3 To pocetratento
                    Application.Run "'" & tamten & "'!Addlinedisp"
                Next cykl
            End If
            Erase nazvypoli
            Erase hodnotypoli
            cykl1 = 0
            Application.EnableEvents = False
            Workbooks(tento).Sheets(artpas).Activate
            On Error Resume Next
            For y = 1 To pocetratento
                For cykl = LBound(displeje) To UBound(displeje)
                    nazvypoli(cykl1) = Range(displeje(cykl) & "_" & Format(y, "000")).Name.Name
                    hodnotypoli(cykl1) = Range(displeje(cykl) & "_" & Format(y, "000"))
                    cykl1 = cykl1 + 1
                Next cykl
            Next y
            Workbooks(tamten).Sheets(artpas).Activate
            On Error Resume Next
            For y = 0 To 2000
                Range(nazvypoli(y)) = hodnotypoli(y)
            Next y
            On Error GoTo 0
            '---------- add child\remove child ----------
            Application.EnableEvents = True
            Workbooks(tento).Sheets(artpas).Activate
            pocetratento = pocetr("ChMATNR_001")
            Workbooks(tamten).Sheets(artpas).Activate
            If pocetratento > 2 Then
                For cykl = 3 To pocetratento
                    Application.Run "'" & tamten & "'!addChildNumber"
                Next cykl
            End If
            Erase nazvypoli
            Erase hodnotypoli
            cykl1 = 0
            Application.EnableEvents = False
            Workbooks(tento).Sheets(artpas).Activate
            On Error Resume Next
            For y = 1 To pocetratento
                For cykl = LBound(childarray) To UBound(childarray)
                    nazvypoli(cykl1) = Range(childarray(cykl) & "_" & Format(y, "000")).Name.Name
                    hodnotypoli(cykl1) = Range(childarray(cykl) & "_" & Format(y, "000"))
                    cykl1 = cykl1 + 1
                Next cykl
            Next y
            Workbooks(tamten).Sheets(artpas).Activate
            On Error Resume Next
            For y = 0 To 2000
                Range(nazvypoli(y)) = hodnotypoli(y)
            Next y
            On Error GoTo 0
            
            '---------- Import REA fields ----------
            ' store REA values
            Erase reaFractionValue
            Erase reaPackageNoValue
            Erase reaWeightValue
            Erase reaLevelValue
        
            Application.EnableEvents = True
            Workbooks(tento).Activate
            Worksheets("REA").Activate
            For i = 0 To 19
                If Range("B" & CStr(i + 13)).Value <> "" Then reaFractionValue(i) = Range("B" & CStr(i + 13)).Value
                If Range("Q" & CStr(i + 13)).Value <> "" Then reaPackageNoValue(i) = Range("Q" & CStr(i + 13)).Value
                If Range("AA" & CStr(i + 13)).Value <> "" Then reaWeightValue(i) = Range("AA" & CStr(i + 13)).Value
                If Range("AV" & CStr(i + 13)).Value <> "" Then reaLevelValue(i) = Range("AV" & CStr(i + 13)).Value
            Next i
            Worksheets("A-pass").Activate
            
            ' restre REA values in new version of a-pass
            Application.EnableEvents = False
            Workbooks(tamten).Activate
            Worksheets("REA").Activate
            For i = 0 To 19
                If reaFractionValue(i) <> "" Then Range("B" & CStr(i + 13)).Value = reaFractionValue(i)
                If reaPackageNoValue(i) <> "" Then Range("Q" & CStr(i + 13)).Value = reaPackageNoValue(i)
                If reaWeightValue(i) <> "" Then Range("AA" & CStr(i + 13)).Value = reaWeightValue(i)
                If reaLevelValue(i) <> "" Then Range("AV" & CStr(i + 13)).Value = reaLevelValue(i)
            Next i
            Worksheets("A-pass").Activate
            On Error GoTo 0
            
            '---- Production site ----
            Application.EnableEvents = True
            Workbooks(tento).Activate
            pocetratento = pocetr("tab_COUNTRY_001")
            Workbooks(tamten).Activate
            If pocetratento > 1 Then
                Application.EnableEvents = False
                For cykl = 2 To pocetratento
                    Application.Run "'" & tamten & "'!addplace"
                Next cykl
                Application.EnableEvents = True
            End If
            Erase nazvypoli
            Erase hodnotypoli
            cykl1 = 0
            Application.EnableEvents = False
            Workbooks(tento).Activate
            For y = 1 To pocetratento
                For cykl = LBound(mista) To UBound(mista)
                    nazvypoli(cykl1) = Range(mista(cykl) & "_" & Format(y, "000")).Name.Name
                    hodnotypoli(cykl1) = Range(mista(cykl) & "_" & Format(y, "000"))
                    cykl1 = cykl1 + 1
                Next cykl
            Next y
            Workbooks(tamten).Activate
            On Error Resume Next
            For y = 0 To 2000
                Range(nazvypoli(y)) = hodnotypoli(y)
            Next y
            On Error GoTo 0
            '----
            Workbooks(tento).Sheets(regionalni).Range("A1:A1000").Copy Destination:=Workbooks(tamten).Sheets(regionalni).Range("A1")
            Workbooks(tamten).Activate
            Range("A1").Select
            If UCase(Right(tento, 3)) = "XLS" Then
                ActiveWorkbook.SaveAs cestaart & "\" & Left(tento, Len(tento) - 4) & "_1.xls", FileFormat:=56
                novysoubor = Left(tento, Len(tento) - 4) & "_1.xls"
            Else
                ActiveWorkbook.SaveAs cestaart & "\" & Left(tento, Len(tento) - 5) & "_1.xlsb", FileFormat:=50
                novysoubor = Left(tento, Len(tento) - 5) & "_1.xlsb"
            End If
            MsgBox hlaska(37) & novysoubor, vbInformation
        End If
    End If
    On Error GoTo 0

    ActiveWorkbook.Protect Password:=heslo
    Application.ScreenUpdating = True
    Application.EnableEvents = True

End Sub


Sub addenablefields(nazev As String, policko As String)

    ActiveSheet.Protection.AllowEditRanges.Add title:=nazev, Range:=Range(policko)
    
End Sub

Sub enablestandardfields(cislosloupce As Byte, nazev As String)

    Dim cykl1                           As Integer
    Dim y                               As Integer
    Dim povpole                         As String
    Dim pocpov                          As Integer
    
    ActiveWorkbook.Unprotect Password:=heslo
    ActiveSheet.Unprotect Password:=heslo
    y = 2
    pocpov = 0
    povpole = ""
    
    Do While Sheets(polenw).Cells(y, cislosloupce).Value <> ""
        Range(Sheets(polenw).Cells(y, cislosloupce).Value).Select
        If Range(Sheets(polenw).Cells(y, cislosloupce).Value).Name.Name <> "MHDRZ" And _
                Range(Sheets(polenw).Cells(y, cislosloupce).Value).Name.Name <> "MHDHB" And _
                Left(Range(Sheets(polenw).Cells(y, cislosloupce).Value).Name.Name, 4) <> "MAKT" And _
                Left(Range(Sheets(polenw).Cells(y, cislosloupce).Value).Name.Name, 3) <> "kh_" And _
                Left(Range(Sheets(polenw).Cells(y, cislosloupce).Value).Name.Name, 4) <> "MMT_" Then
            Selection.Locked = False
        Else
            Selection.Locked = True
        End If
        
        povpole = povpole & Sheets(polenw).Cells(y, cislosloupce).Value & ","
        
        If y Mod 12 = 0 Then
            pocpov = pocpov + 1
            povpole = Left(povpole, Len(povpole) - 1)
            Call addenablefields(nazev & Format(pocpov, "000"), povpole)
            povpole = ""
        End If
        
        y = y + 1
    Loop
    
    If povpole <> "" Then
        pocpov = pocpov + 1
        povpole = Left(povpole, Len(povpole) - 1)
        Call addenablefields(nazev & Format(pocpov, "000"), povpole)
    End If
    
    ActiveSheet.Protect Password:=heslo
    ActiveWorkbook.Protect Password:=heslo
    
End Sub

Sub deleteenabled()

    On Error Resume Next
    
    ActiveWorkbook.Unprotect Password:=heslo
    ActiveSheet.Unprotect Password:=heslo
    
    Do While Err = 0
        ActiveSheet.Protection.AllowEditRanges(1).Delete
    Loop
    
    On Error GoTo 0
    
End Sub

Sub enableallcells()

    Dim cykl                            As Integer
    
    Sheets(artpas).Select
    deleteenabled
    enablestandardfields 3, "Artpas"
    Sheets(wine).Select
    deleteenabled
    enablestandardfields 4, "Wine"
    Sheets(backshop).Select
    deleteenabled
    enablestandardfields 6, "Langtext"
    Sheets(nf).Select
    deleteenabled
    enablestandardfields 7, "NF"
    Sheets(logo).Select
    deleteenabled
    enablestandardfields 15, "Logo"
    Sheets(kosmetika).Select
    deleteenabled
    enablestandardfields 16, "Dangerous goods"
    
End Sub

Sub landof()

    Dim pole                            As Variant
    Dim cykl                            As Byte
    Dim pcykl                           As Integer
    Dim yr                              As Integer
    Dim zacatek                         As Integer
    Dim langu                           As Byte
    Dim seznams                         As String
    Dim pocetradkusr                    As Integer
    Dim pocetpoli                       As Integer
    
    pole = Array("WHERL", "ZE_HERKL", "tab_COUNTRY_")
    pocetradkusr = pocetr("MEINS_000")
    pocetradkusr = pocetradkusr + pocetr("MEINSB_000")
    yr = pocetradkusr * 2
    pocetradkusr = pocetr("komponent_display_001") * 3
    yr = yr + pocetradkusr
    pocetradkusr = pocetr("ChMATNR_001") * 3
    yr = yr + pocetradkusr
    pocetradkusr = pocetr("tab_COUNTRY_001") * 4
    yr = yr + pocetradkusr + 280
    
    If lang <> 10 Then langu = lang Else langu = 1    ' KI=DE
    pocetpoli = pocetr("tab_COUNTRY_001")
    
    Do
        yr = yr + 1
    Loop While Cells(yr, Range("AP1").Column) <> "Ursprungsland"
    
    zacatek = yr - 1
    
    Do While UCase(Sheets(artpas).Cells(yr, langu * 2 + 40)) <> "E_N_D"
        yr = yr + 1
    Loop
    
    For cykl = LBound(pole) To UBound(pole)
        If Right(pole(cykl), 1) = "_" Then
            For pcykl = 1 To pocetpoli
                With Range(pole(cykl) & Format(pcykl, "000")).Validation
                    .Delete
                    .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                         xlBetween, Formula1:="=" & Range(Sheets(artpas).Cells(zacatek + 2, langu * 2 + 40), Sheets(artpas).Cells(yr - 1, langu * 2 + 40)).Address
                    .IgnoreBlank = False
                    .InCellDropdown = True
                    .InputTitle = ""
                    .ErrorTitle = ""
                    .InputMessage = ""
                    .ErrorMessage = ""
                    .ShowInput = True
                    .ShowError = True
                End With
            Next pcykl
        Else
            With Range(pole(cykl)).Validation
                .Delete
                .Add Type:=xlValidateList, AlertStyle:=xlValidAlertStop, Operator:= _
                     xlBetween, Formula1:="=" & Range(Sheets(artpas).Cells(zacatek + 2, langu * 2 + 40), Sheets(artpas).Cells(yr - 1, langu * 2 + 40)).Address
                .IgnoreBlank = False
                .InCellDropdown = True
                .InputTitle = ""
                .ErrorTitle = ""
                .InputMessage = ""
                .ErrorMessage = ""
                .ShowInput = True
                .ShowError = True
            End With
        End If
    Next cykl
    
End Sub

Sub childform()

    Dim tento As String
    Dim novy As String
    Dim cykl As Integer
    Dim minus As Byte
    Dim koncovka As String
    Dim pocetra As Integer
    
    Application.EnableEvents = False
    ActiveWorkbook.Save
    Application.EnableEvents = True
    kontrola
    
    If jechyba Then
        MsgBox hlaska(29), vbExclamation
        End
    End If
    
    Application.ScreenUpdating = False
    tento = ActiveWorkbook.FullName
    If UCase(Right(tento, 4)) = "XLSB" Then
        minus = 5
        koncovka = "xlsb"
    ElseIf UCase(Right(tento, 3)) = "XLS" Then
        minus = 4
        koncovka = "xls"
    ElseIf UCase(Right(tento, 4)) = "XLSM" Then
        minus = 5
        koncovka = "xlsm"
    End If
    
    For cykl = 1 To 1000
        If Dir(Left(ActiveWorkbook.FullName, Len(ActiveWorkbook.FullName) - minus) & "__" & hlaska(30) & "__" & Format(cykl, "000") & "." & koncovka, vbNormal) = "" Then
            ActiveWorkbook.SaveCopyAs (Left(ActiveWorkbook.FullName, Len(ActiveWorkbook.FullName) - minus) & "__" & hlaska(30) & "__" & Format(cykl, "000") & "." & koncovka)
            Exit For
        End If
    Next cykl
    Application.EnableEvents = False
    Workbooks.OpenXML (Left(ActiveWorkbook.FullName, Len(ActiveWorkbook.FullName) - minus) & "__" & hlaska(30) & "__" & Format(cykl, "000") & "." & koncovka)
    Application.EnableEvents = True
    ActiveWorkbook.Unprotect Password:=heslo
    ActiveSheet.Unprotect Password:=heslo
    novy = ActiveWorkbook.Name
    'ActiveSheet.Shapes.Range(Array("tlac|fffd|tko 16")).Delete
    Range("addchildrange").Select
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone
    Selection.Borders(xlEdgeTop).LineStyle = xlNone
    Selection.Borders(xlEdgeBottom).LineStyle = xlNone
    Selection.Borders(xlEdgeRight).LineStyle = xlNone
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
    Selection.ClearContents
    Selection.ClearFormats
    Range("IDNLF").MergeArea.ClearContents
    Range("IDNLF").MergeArea.Interior.ColorIndex = 4
    'Range("MAKTX_de").MergeArea.ClearContents
    Range("MAKTX_de").MergeArea.Interior.ColorIndex = 4
    'Range("MAKTX_nat").MergeArea.ClearContents
    Range("MAKTX_nat").MergeArea.Interior.ColorIndex = 4
    Range("MAKTM").MergeArea.Interior.ColorIndex = 4
    '!!!!! ------- dore?it maz|fffd|n|fffd| r|fffd|dku ----------
    pocetra = pocetr("EAN11_tabB_001")
    For cykl = 1 To pocetra
        Range("EAN11_tabB_" & Format(cykl, "000")).MergeArea.ClearContents
    Next cykl
    Range("EAN11_tabB_001").MergeArea.Interior.ColorIndex = 4
    pocetra = pocetr("EAN11_tab_001")
    For cykl = 1 To pocetra
        Range("EAN11_tab_" & Format(cykl, "000")).MergeArea.ClearContents
    Next cykl
    Range("EAN11_tab_001").MergeArea.Interior.ColorIndex = 4
    Range("EANMutter").MergeArea.Interior.ColorIndex = 4
    Application.ScreenUpdating = True
    Workbooks(novy).Activate
    Range("EANMutter").Select
    Application.EnableEvents = False
    ActiveSheet.Protect Password:=heslo
    ActiveWorkbook.Protect Password:=heslo
    ActiveWorkbook.Save
    Application.EnableEvents = True
    
End Sub

Sub addlineDISP()

    Dim poslednir As Integer
    Dim cykl As Integer
    
    'Application.EnableEvents = False
    Application.ScreenUpdating = False
    ActiveWorkbook.Unprotect Password:=heslo
    ActiveSheet.Unprotect Password:=heslo
    poslednir = pocetr("komponent_display_001")
    Range("komponent_display_" & Format(poslednir, "000")).EntireRow.Select
    Selection.Resize(Selection.Rows.count + 1, Selection.Columns.count).Select
    Selection.Copy
    ActiveCell.Offset(3, 0).EntireRow.Select
    Selection.Insert shift:=xlDown
    Application.CutCopyMode = False
    Range("komponent_display_" & Format(poslednir, "000")).Select
    
    ActiveCell.Offset(3, 0).Select
    ActiveCell.Name = "komponent_display_" & Format(poslednir + 1, "000")
    ActiveCell.Offset(0, -1).Select
    ActiveCell.Name = "t_?" & Format(poslednir + 1, "000") & "_komponent_display_01_L1"
    ActiveCell.Offset(1, 0).Select
    ActiveCell.Name = "t_?" & Format(poslednir + 1, "000") & "_komponent_display_01_L2"
    
    ActiveCell.Offset(0, 12).Select
    ActiveCell.Name = "t_?" & Format(poslednir + 1, "000") & "_stck_display_01_L2"
    ActiveCell.Offset(-1, 0).Select
    ActiveCell.Name = "t_?" & Format(poslednir + 1, "000") & "_stck_display_01_L1"
    ActiveCell.Offset(0, 1).Select
    ActiveCell.Name = "stck_display_" & Format(poslednir + 1, "000")
    
    ActiveCell.Offset(0, 10).Select
    ActiveCell.Name = "MEINH_display_" & Format(poslednir + 1, "000")
    ActiveCell.Offset(0, -1).Select
    ActiveCell.Name = "t_?" & Format(poslednir + 1, "000") & "_MEINH_display_01_L1"
    ActiveCell.Offset(1, 0).Select
    ActiveCell.Name = "t_?" & Format(poslednir + 1, "000") & "_MEINH_display_01_L2"
    
    ActiveCell.Offset(0, 12).Select
    ActiveCell.Name = "t_?" & Format(poslednir + 1, "000") & "_komponent_MATNR_display_01_L2"
    ActiveCell.Offset(-1, 0).Select
    ActiveCell.Name = "t_?" & Format(poslednir + 1, "000") & "_komponent_MATNR_display_01_L1"
    ActiveCell.Offset(0, 1).Select
    ActiveCell.Name = "komponent_MATNR_display_" & Format(poslednir + 1, "000")
        
    Range("B" & ActiveCell.Row & ":I" & ActiveCell.Row + 2).Select
    Selection.Clear
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone
    Selection.Borders(xlEdgeTop).LineStyle = xlNone
    Selection.Borders(xlEdgeBottom).LineStyle = xlNone
    Selection.Borders(xlEdgeRight).LineStyle = xlNone
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
    Range("komponent_display_" & Format(poslednir + 1, "000")) = ""
    Range("stck_display_" & Format(poslednir + 1, "000")) = ""
    Range("komponent_MATNR_display_" & Format(poslednir + 1, "000")) = ""
    Application.ScreenUpdating = True
    Range("komponent_display_001").Select
    On Error Resume Next
    For cykl = 1 To poslednir
        ActiveSheet.Protection.AllowEditRanges("Display" & Format(cykl, "000")).Delete
    Next cykl
    On Error GoTo 0
    For cykl = 1 To poslednir + 1
        ActiveSheet.Protection.AllowEditRanges.Add title:="Display" & Format(cykl, "000"), Range:=Range("komponent_display_" & Format(cykl, "000") & ", stck_display_" & Format(cykl, "000"))
    Next cykl
    ActiveSheet.Protect Password:=heslo
    ActiveWorkbook.Protect Password:=heslo
    
End Sub

Sub dellineDISP()

    Dim poslednir As Integer
    Dim aktualcis As String
    
    'Application.EnableEvents = False
    On Error Resume Next
    If Left(ActiveCell.Name.Name, 17) = "komponent_display" Or Left(ActiveCell.Name.Name, 12) = "stck_display" Or Left(ActiveCell.Name.Name, 23) = "komponent_MATNR_display" Or Left(ActiveCell.Name.Name, 13) = "MEINH_display" Then
        If Err = 0 Then
            On Error GoTo 0
            aktualcis = Right(ActiveCell.Name.Name, 3)
            poslednir = pocetr("komponent_display_001")
            Range("komponent_display_" & aktualcis).Select
            If aktualcis <> "001" And poslednir <> 2 Then
                ActiveWorkbook.Unprotect Password:=heslo
                ActiveSheet.Unprotect Password:=heslo
                Application.ScreenUpdating = False
                ActiveWorkbook.Names("komponent_display_" & aktualcis).Delete
                ActiveWorkbook.Names("komponent_MATNR_display_" & aktualcis).Delete
                ActiveWorkbook.Names("stck_display_" & aktualcis).Delete
                ActiveWorkbook.Names("MEINH_display_" & aktualcis).Delete
                
                ActiveWorkbook.Names("t_?" & aktualcis & "_komponent_display_01_L1").Delete
                ActiveWorkbook.Names("t_?" & aktualcis & "_komponent_display_01_L2").Delete
                ActiveWorkbook.Names("t_?" & aktualcis & "_komponent_MATNR_display_01_L1").Delete
                ActiveWorkbook.Names("t_?" & aktualcis & "_komponent_MATNR_display_01_L2").Delete
                ActiveWorkbook.Names("t_?" & aktualcis & "_stck_display_01_L1").Delete
                ActiveWorkbook.Names("t_?" & aktualcis & "_stck_display_01_L2").Delete
                ActiveWorkbook.Names("t_?" & aktualcis & "_MEINH_display_01_L1").Delete
                ActiveWorkbook.Names("t_?" & aktualcis & "_MEINH_display_01_L2").Delete
                If Val(aktualcis) <> poslednir Then
                    ActiveWorkbook.Names("komponent_MATNR_display_" & Format(poslednir, "000")).Name = "komponent_MATNR_display_" & aktualcis
                    ActiveWorkbook.Names("komponent_display_" & Format(poslednir, "000")).Name = "komponent_display_" & aktualcis
                    ActiveWorkbook.Names("stck_display_" & Format(poslednir, "000")).Name = "stck_display_" & aktualcis
                    ActiveWorkbook.Names("MEINH_display_" & Format(poslednir, "000")).Name = "MEINH_display_" & aktualcis
                    ActiveWorkbook.Names("t_?" & Format(poslednir, "000") & "_komponent_display_01_L1").Name = "t_?" & aktualcis & "_komponent_display_01_L1"
                    ActiveWorkbook.Names("t_?" & Format(poslednir, "000") & "_komponent_display_01_L2").Name = "t_?" & aktualcis & "_komponent_display_01_L2"
                    ActiveWorkbook.Names("t_?" & Format(poslednir, "000") & "_komponent_MATNR_display_01_L1").Name = "t_?" & aktualcis & "_komponent_MATNR_display_01_L1"
                    ActiveWorkbook.Names("t_?" & Format(poslednir, "000") & "_komponent_MATNR_display_01_L2").Name = "t_?" & aktualcis & "_komponent_MATNR_display_01_L2"
                    ActiveWorkbook.Names("t_?" & Format(poslednir, "000") & "_stck_display_01_L1").Name = "t_?" & aktualcis & "_stck_display_01_L1"
                    ActiveWorkbook.Names("t_?" & Format(poslednir, "000") & "_stck_display_01_L2").Name = "t_?" & aktualcis & "_stck_display_01_L2"
                    ActiveWorkbook.Names("t_?" & Format(poslednir, "000") & "_MEINH_display_01_L1").Name = "t_?" & aktualcis & "_MEINH_display_01_L1"
                    ActiveWorkbook.Names("t_?" & Format(poslednir, "000") & "_MEINH_display_01_L2").Name = "t_?" & aktualcis & "_MEINH_display_01_L2"
                End If
                ActiveCell.EntireRow.Select
                Selection.Resize(Selection.Rows.count + 1, Selection.Columns.count).Select
                Selection.EntireRow.Delete
                On Error Resume Next
                For cykl = 1 To poslednir
                    ActiveSheet.Protection.AllowEditRanges("Display" & Format(cykl, "000")).Delete
                Next cykl
                On Error GoTo 0
                For cykl = 1 To poslednir - 1
                    ActiveSheet.Protection.AllowEditRanges.Add title:="Display" & Format(cykl, "000"), Range:=Range("komponent_display_" & Format(cykl, "000") & ", stck_display_" & Format(cykl, "000"))
                Next cykl
                Range("komponent_display_001").Select
                ActiveSheet.Protect Password:=heslo
                ActiveWorkbook.Protect Password:=heslo
                Application.ScreenUpdating = True
            Else
                MsgBox hlaska(35), vbExclamation
            End If
        End If
    End If
    On Error GoTo 0
End Sub

Sub addChildNumber()

    Dim poslednir As Integer
    Dim cykl As Integer
    
    'Application.EnableEvents = False
    Application.ScreenUpdating = False
    ActiveWorkbook.Unprotect Password:=heslo
    ActiveSheet.Unprotect Password:=heslo
    poslednir = pocetr("ChMATNR_001")
    Range("ChMATNR_" & Format(poslednir, "000")).EntireRow.Select
    Selection.Resize(Selection.Rows.count + 1, Selection.Columns.count).Select
    Selection.Copy
    ActiveCell.Offset(3, 0).EntireRow.Select
    Selection.Insert shift:=xlDown
    Application.CutCopyMode = False
    Range("ChMATNR_" & Format(poslednir, "000")).Select
    ActiveCell.Offset(3, 0).Select
    ActiveCell.Name = "ChMATNR_" & Format(poslednir + 1, "000")
    ActiveCell.Offset(0, -1).Select
    ActiveCell.Name = "t_?\" & Format(poslednir + 1, "000") & "_ChMATNR_01_L1"
    ActiveCell.Offset(1, 0).Select
    ActiveCell.Name = "t_?\" & Format(poslednir + 1, "000") & "_ChMATNR_01_L2"
    ActiveCell.Offset(0, 15).Select
    ActiveCell.Name = "t_?\" & Format(poslednir + 1, "000") & "_ChPROMOMATNR_01_L2"
    ActiveCell.Offset(-1, 0).Select
    ActiveCell.Name = "t_?\" & Format(poslednir + 1, "000") & "_ChPROMOMATNR_01_L1"
    ActiveCell.Offset(0, 1).Select
    ActiveCell.Name = "ChPROMOMATNR_" & Format(poslednir + 1, "000")
    Range("B" & ActiveCell.Row & ":I" & ActiveCell.Row + 2).Select
    Selection.Clear
    Selection.Borders(xlDiagonalDown).LineStyle = xlNone
    Selection.Borders(xlDiagonalUp).LineStyle = xlNone
    Selection.Borders(xlEdgeLeft).LineStyle = xlNone
    Selection.Borders(xlEdgeTop).LineStyle = xlNone
    Selection.Borders(xlEdgeBottom).LineStyle = xlNone
    Selection.Borders(xlEdgeRight).LineStyle = xlNone
    Selection.Borders(xlInsideVertical).LineStyle = xlNone
    Selection.Borders(xlInsideHorizontal).LineStyle = xlNone
    Range("ChPROMOMATNR_" & Format(poslednir + 1, "000")) = ""
    Range("ChMATNR_" & Format(poslednir + 1, "000")) = ""
    Application.ScreenUpdating = True
    Range("ChMATNR_001").Select

    ActiveSheet.Protect Password:=heslo
    ActiveWorkbook.Protect Password:=heslo
    
End Sub

Sub deleteChildNumber()

    Dim poslednir As Integer
    Dim aktualcis As String
    
    'Application.EnableEvents = False
    On Error Resume Next
    If Left(ActiveCell.Name.Name, 8) = "ChMATNR_" Or Left(ActiveCell.Name.Name, 13) = "ChPROMOMATNR_" Then
        If Err = 0 Then
            On Error GoTo 0
            aktualcis = Right(ActiveCell.Name.Name, 3)
            poslednir = pocetr("ChMATNR_001")
            Range("ChMATNR_" & aktualcis).Select
            If aktualcis <> "001" And poslednir <> 2 Then
                ActiveWorkbook.Unprotect Password:=heslo
                ActiveSheet.Unprotect Password:=heslo
                Application.ScreenUpdating = False
                ActiveWorkbook.Names("ChPROMOMATNR_" & aktualcis).Delete
                ActiveWorkbook.Names("ChMATNR_" & aktualcis).Delete
                ActiveWorkbook.Names("t_?\" & aktualcis & "_ChPROMOMATNR_01_L1").Delete
                ActiveWorkbook.Names("t_?\" & aktualcis & "_ChPROMOMATNR_01_L2").Delete
                ActiveWorkbook.Names("t_?\" & aktualcis & "_ChMATNR_01_L1").Delete
                ActiveWorkbook.Names("t_?\" & aktualcis & "_ChMATNR_01_L2").Delete
                If Val(aktualcis) <> poslednir Then
                    ActiveWorkbook.Names("ChPROMOMATNR_" & Format(poslednir, "000")).Name = "ChPROMOMATNR_" & aktualcis
                    ActiveWorkbook.Names("ChMATNR_" & Format(poslednir, "000")).Name = "ChMATNR_" & aktualcis
                    ActiveWorkbook.Names("t_?\" & Format(poslednir, "000") & "_ChPROMOMATNR_01_L1").Name = "t_?\" & aktualcis & "_ChPROMOMATNR_01_L1"
                    ActiveWorkbook.Names("t_?\" & Format(poslednir, "000") & "_ChPROMOMATNR_01_L2").Name = "t_?\" & aktualcis & "_ChPROMOMATNR_01_L2"
                    ActiveWorkbook.Names("t_?\" & Format(poslednir, "000") & "_ChMATNR_01_L1").Name = "t_?\" & aktualcis & "_ChMATNR_01_L1"
                    ActiveWorkbook.Names("t_?\" & Format(poslednir, "000") & "_ChMATNR_01_L2").Name = "t_?\" & aktualcis & "_ChMATNR_01_L2"
                End If
                ActiveCell.EntireRow.Select
                Selection.Resize(Selection.Rows.count + 1, Selection.Columns.count).Select
                Selection.EntireRow.Delete
                Range("ChMATNR_001").Select
                ActiveSheet.Protect Password:=heslo
                ActiveWorkbook.Protect Password:=heslo
                Application.ScreenUpdating = True
            Else
                MsgBox hlaska(49), vbExclamation
            End If
        End If
    End If
    On Error GoTo 0
    
End Sub


Sub addplace()

    Dim numplace As Integer
    Dim numrow As Byte
    Dim mnoz() As String
    Dim pcykl As Byte
    
    Application.ScreenUpdating = False
    ActiveSheet.Unprotect Password:=heslo
    '-- pokud pribyde pole v M|fffd|ste v|fffd|roby, je ho treba pridat --
    mnoz = Split(mnozc, ",")
    '  mnoz = Array("t_\_prodsite_L1", "t_\_prodsite_L2", "t_\_COUNTRY_L1", "t_\_COUNTRY_L2", "t_\_CITY1_L1", "t_\_CITY1_L2", "tab_COUNTRY_", "tab_CITY1_", _
       '  "t_\_POST_CODE1_L1", "t_\_POST_CODE1_L2", "t_\_NAME1_L1", "t_\_NAME1_L2", "tab_POST_CODE1_", "tab_NAME1_", "t_\_STREET_L1", "t_\_STREET_L2", _
       '  "tab_STREET_", "t_\_HOUSE_NUM1_L1", "t_\_HOUSE_NUM1_L2", "tab_HOUSE_NUM1_", "btnplaceplus_", "btnplaceminus_", "t_\_add_del_L1", "t_\_add_del_L2")
    '------
    numplace = pocetr("tab_CITY1_001")  ' -- tab_City1 mus|fffd| zustat pro pocet jinak zmenit
    numrow = Range("Placeb_001").Row - Range("Placea_001").Row
    Range("Placea_" & Format(numplace, "000"), "Placeb_" & Format(numplace, "000")).EntireRow.Select
    Selection.Copy
    Range("A" & Range("Placeb_" & Format(numplace, "000")).Row + 1).EntireRow.Select
    Selection.Insert shift:=xlDown
    Application.CutCopyMode = False
    Range("A" & ActiveCell.Row).Name = "Placea_" & Format(numplace + 1, "000")
    Range("A" & Range("Placea_" & Format(numplace + 1, "000")).Row + numrow).Name = "Placeb_" & Format(numplace + 1, "000")
    For pcykl = LBound(mnoz) To UBound(mnoz)
        If Left(mnoz(pcykl), 4) = "t_\_" Then
            Cells(Range("t_\" & Format(numplace, "000") & Right(mnoz(pcykl), Len(mnoz(pcykl)) - 3)).Row + numrow + 1, Range("t_\" & Format(numplace, "000") & Right(mnoz(pcykl), Len(mnoz(pcykl)) - 3)).Column).Name = Left(mnoz(pcykl), 3) & Format(numplace + 1, "000") & Right(mnoz(pcykl), Len(mnoz(pcykl)) - 3)
        Else
            Cells(Range(mnoz(pcykl) & Format(numplace, "000")).Row + numrow + 1, Range(mnoz(pcykl) & Format(numplace, "000")).Column).Name = (mnoz(pcykl)) & Format(numplace + 1, "000")
            Range(mnoz(pcykl) & Format(numplace + 1, "000")).Value = ""
        End If
    Next pcykl
    Range("btnplaceplus_" & Format(numplace + 1, "000")).Select
    Selection.ClearContents
    With Selection.Interior
        .Pattern = xlNone
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Range("btnplaceminus_" & Format(numplace + 1, "000")).Select
    With Selection.Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorLight1
        .TintAndShade = 0
        .PatternTintAndShade = 0
    End With
    Selection.FormulaR1C1 = "'-"
    '  Selection.ClearContents
    '  With Selection.Interior
    '      .Pattern = xlNone
    '      .TintAndShade = 0
    '      .PatternTintAndShade = 0
    '  End With
    '  Range("t_\" & Format(numplace + 1, "000") & "_add_del_L1").Select
    '  Selection.ClearContents
    '  With Selection.Interior
    '      .Pattern = xlNone
    '      .TintAndShade = 0
    '      .PatternTintAndShade = 0
    '  End With
    '  Range("t_\" & Format(numplace + 1, "000") & "_add_del_L2").Select
    '  Selection.ClearContents
    '  With Selection.Interior
    '      .Pattern = xlNone
    '      .TintAndShade = 0
    '      .PatternTintAndShade = 0
    '  End With
    Application.ScreenUpdating = True
    Range("tab_COUNTRY_" & Format(numplace + 1, "000")).Select
    ActiveSheet.Protect Password:=heslo
End Sub

Sub delplace()

    Dim numplace As String
    Dim pcykl As Byte
    Dim mnoz() As String
    Dim maxplace As String
    
    ActiveSheet.Unprotect Password:=heslo
    Application.ScreenUpdating = False
    mnoz = Split(mnozc, ",")
    numplace = Right(ActiveCell.Name.Name, 3)
    maxplace = Format(pocetr("tab_CITY1_001"), "000")
    Range("Placea_" & numplace, "Placeb_" & numplace).EntireRow.Delete
    ActiveWorkbook.Names("Placea_" & numplace).Delete
    ActiveWorkbook.Names("Placeb_" & numplace).Delete
    For pcykl = LBound(mnoz) To UBound(mnoz)
        If Left(mnoz(pcykl), 4) = "t_\_" Then
            ActiveWorkbook.Names("t_\" & numplace & Right(mnoz(pcykl), Len(mnoz(pcykl)) - 3)).Delete
            If Val(numplace) < Val(maxplace) Then ActiveWorkbook.Names("t_\" & maxplace & Right(mnoz(pcykl), Len(mnoz(pcykl)) - 3)).Name = "t_\" & numplace & Right(mnoz(pcykl), Len(mnoz(pcykl)) - 3)
        Else
            ActiveWorkbook.Names(mnoz(pcykl) & numplace).Delete
            If Val(numplace) < Val(maxplace) Then ActiveWorkbook.Names(mnoz(pcykl) & maxplace).Name = mnoz(pcykl) & numplace
        End If
    Next pcykl
    If numplace < maxplace Then
        ActiveWorkbook.Names("Placea_" & maxplace).Name = "Placea_" & numplace
        ActiveWorkbook.Names("Placeb_" & maxplace).Name = "Placeb_" & numplace
    End If
    Application.ScreenUpdating = True
    Range("tab_COUNTRY_" & Format(Val(numplace) - 1, "000")).Select
    ActiveSheet.Protect Password:=heslo
End Sub

Sub AddLineREA()

    If Application.Intersect(ActiveCell, ActiveWorkbook.Worksheets(SHEET_REA).Range(RANGE_REA_LIST)) Is Nothing Then Exit Sub
    If ActiveCell.Row = ActiveWorkbook.Worksheets(SHEET_REA).Range(RANGE_REA_LIST).Rows(1).Row Then Exit Sub

    ActiveWorkbook.Worksheets(SHEET_REA).Range(RANGE_REA_LIST).Rows(ActiveCell.Row - ActiveWorkbook.Worksheets(SHEET_REA).Range(RANGE_REA_LIST).Rows(1).Row + 1).Copy
    ActiveWorkbook.Worksheets(SHEET_REA).Range(RANGE_REA_LIST).Cells(ActiveCell.Row - ActiveWorkbook.Worksheets(SHEET_REA).Range(RANGE_REA_LIST).Rows(1).Row + 1, 1).Insert shift:=xlDown
    ActiveWorkbook.Worksheets(SHEET_REA).Range(RANGE_REA_LIST).Rows(ActiveCell.Row - ActiveWorkbook.Worksheets(SHEET_REA).Range(RANGE_REA_LIST).Rows(1).Row + 2).EntireRow.Value = ""
    
    Call Load_REA_ME_KG

End Sub

Sub DeleteLineREA()

    If Application.Intersect(ActiveCell, ActiveWorkbook.Worksheets(SHEET_REA).Range(RANGE_REA_LIST)) Is Nothing Then Exit Sub
    If ActiveCell.Row = ActiveWorkbook.Worksheets(SHEET_REA).Range(RANGE_REA_LIST).Rows(1).Row Then Exit Sub
    '  ---------------- minimum 15 rows + header ------------------------------------------------------
    If ActiveWorkbook.Worksheets(SHEET_REA).Range(RANGE_REA_LIST).Rows.count < 3 Then Exit Sub

    ActiveCell.EntireRow.Delete

End Sub

Sub Load_REA_ME_KG()

    Dim var_header As String
    var_header = ActiveWorkbook.Worksheets(SHEET_REA).Range(RANGE_REA_ME_KG).Cells(1, 1).Value
    
    ActiveWorkbook.Worksheets(SHEET_REA).Range(RANGE_REA_ME_KG).Value = g_obj_country.UnitsOfMeasure
    ActiveWorkbook.Worksheets(SHEET_REA).Range(RANGE_REA_ME_KG).Rows(1).Value = var_header

End Sub

Function IsInValidationList(strTestTerm As String, validatedRange As Range) As Boolean
    On Error GoTo ErrorOut
    With validatedRange.Cells(1, 1).Validation
        If .Formula1 Like "=*" Then
            IsInValidationList = IsNumeric(Application.Match(strTestTerm, Range(.Formula1), 0))
        Else
            IsInValidationList = CBool(InStr(1, "," & .Formula1 & ",", "," & strTestTerm & ","))
        End If
    End With
ErrorOut:
End Function

Sub Load_Sales_UM()

    Dim salesUM_flag                    As String
    Dim alternativeUM                   As String

    salesUM_flag = UCase(Range("KZVRKMEB_001").Value)
    alternativeUM = Left(Range("MEINHB_001").Value, InStr(1, (Range("MEINHB_001").Value), "_") - 1)

    If salesUM_flag = "X" And IsInValidationList(alternativeUM, Range("REA_VME")) Then
        Range("REA_VME").Value = alternativeUM
    Else
        Range("REA_VME").Value = ""
    End If

End Sub

Function RemoveAlphas(rangeName As String) As String
'remove all characters from string
Dim Rng As Range
Dim WorkRng As Range
On Error Resume Next

xOut = ""
For i = 1 To Len(rangeName)
    xTemp = Mid(rangeName, i, 1)
    If xTemp Like "[a-z]" Or xTemp Like "[A-Z]" Then
        xStr = ""
    ElseIf xTemp Like "[.]" Or xTemp Like "[,]" Then
        xStr = "."
    Else
        xStr = xTemp
    End If
    xOut = xOut & xStr
Next i
RemoveAlphas = xOut

End Function


Sub ProtectSheetsAndBook()

ActiveWorkbook.Sheets("A-pass").Protect Password:=heslo
ActiveWorkbook.Sheets("Langtext").Protect Password:=heslo
ActiveWorkbook.Sheets("Weinetikett").Protect Password:=heslo
ActiveWorkbook.Sheets("Dangerous goods").Protect Password:=heslo
ActiveWorkbook.Sheets("NF").Protect Password:=heslo
ActiveWorkbook.Sheets("REA").Protect Password:=heslo
ActiveWorkbook.Sheets("Logo").Protect Password:=heslo

End Sub


Attribute VB_Name = "Module2"
Sub Makro41()
Attribute Makro41.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Makro41 Makro
'

'
    With ActiveWorkbook.Names("btnplaceminus_001")
        .Name = "btnplaceminus_001a"
        .RefersToR1C1 = "='A-pass'!R101C5"
        .Comment = ""
    End With
End Sub

Sub test()
Application.EnableEvents = True
End Sub
Attribute VB_Name = "Module4"
Sub Makro27()
Attribute Makro27.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Makro27 Makro
'

'
  Range("A1").Select
  Do
    ActiveWorkbook.Names.Add Name:=ActiveCell.Value, RefersTo:=ActiveCell.Offset(0, 1).Value
    ActiveCell.Offset(1, 0).Select
  Loop While Selection <> ""

End Sub
Sub Makro31()
Attribute Makro31.VB_ProcData.VB_Invoke_Func = " \n14"
'
' Makro31 Makro
'

'
    Range("B7").Select
    ActiveWorkbook.Names.Add Name:="bg", RefersToR1C1:="='A-pass'!R49C31"
    ActiveWorkbook.Names("bg").Comment = ""
End Sub

Sub vyskaziskat()
  Range("A1").Select
  For cykl = 1 To 300
    Sheets("List1").Range("A" & cykl) = ActiveCell.RowHeight
    ActiveCell.Offset(1, 0).Select
  Next cykl
End Sub

Sub vyskanastavit()
  Range("A1").Select
  For cykl = 1 To 61
    ActiveCell.RowHeight = Sheets("List50").Range("A" & cykl).Value
    ActiveCell.Offset(1, 0).Select
  Next cykl
End Sub
Public Sub ExportVisualBasicCode()
    Const Module = 1
    Const ClassModule = 2
    Const Form = 3
    Const Document = 100
    Const Padding = 24
    
    Dim VBComponent As Object
    Dim count As Integer
    Dim Path As String
    Dim directory As String
    Dim extension As String
    Dim fso As New FileSystemObject
    
    directory = ActiveWorkbook.Path & "\VisualBasic_APNew"
    count = 0
    
    If Not fso.FolderExists(directory) Then
        Call fso.CreateFolder(directory)
    End If
    Set fso = Nothing
    
    For Each VBComponent In ActiveWorkbook.VBProject.VBComponents
        Select Case VBComponent.Type
            Case ClassModule, Document
                extension = ".cls"
            Case Form
                extension = ".frm"
            Case Module
                extension = ".bas"
            Case Else
                extension = ".txt"
        End Select
            
                
        On Error Resume Next
        Err.Clear
        
        Path = directory & "\" & VBComponent.Name & extension
        Call VBComponent.Export(Path)
        
        If Err.Number <> 0 Then
            Call MsgBox("Failed to export " & VBComponent.Name & " to " & Path, vbCritical)
        Else
            count = count + 1
            Debug.Print "Exported " & Left$(VBComponent.Name & ":" & Space(Padding), Padding) & Path
        End If

        On Error GoTo 0
    Next
    
    Application.StatusBar = "Successfully exported " & CStr(count) & " VBA files to " & directory
    'Application.OnTime Now + TimeSerial(0, 0, 10), "ClearStatusBar"
End Sub


Sub HideDeposite()

ActiveSheet.Unprotect Password:=heslo

Range("t_pfand_L1").Font.ColorIndex = 1 ' black
Range("t_pfand_L2").Font.ColorIndex = 1 ' black
Range("t_pfand_L1").Offset(0, 1).Font.ColorIndex = 1 ' black

Range("t_MATNR_fl_L1").Font.ColorIndex = 1 ' black
Range("t_MATNR_fl_L2").Font.ColorIndex = 1 ' black
Range("MATNR_fl").Font.ColorIndex = 1 ' black

Range("t_VKP0_fl_L1").Font.ColorIndex = 1 ' black
Range("t_VKP0_fl_L2").Font.ColorIndex = 1 ' black
Range("VKP0_fl").Font.ColorIndex = 1 ' black

Range("t_MATNR_ki_L1").Font.ColorIndex = 1 ' black
Range("t_MATNR_ki_L2").Font.ColorIndex = 1 ' black
Range("MATNR_ki").Font.ColorIndex = 1 ' black

Range("t_VKP0_ki_L1").Font.ColorIndex = 1 ' black
Range("t_VKP0_ki_L2").Font.ColorIndex = 1 ' black
Range("VKP0_ki").Font.ColorIndex = 1 ' black


Range("B" & Range("t_pfand_L1").Offset(1, 0).Row & ":BI" & Range("t_pfand_L1").Offset(4, 0).Row).Interior.ColorIndex = 1

ActiveSheet.Protect Password:=heslo

End Sub

Sub ShowDeposite()
ActiveSheet.Unprotect Password:=heslo

Range("B" & Range("t_pfand_L1").Offset(1, 0).Row & ":BI" & Range("t_pfand_L1").Offset(4, 0).Row).Interior.ColorIndex = 2

Range("t_pfand_L1").Font.ColorIndex = 2 ' white
Range("t_pfand_L2").Font.ColorIndex = 33 ' white
Range("t_pfand_L1").Offset(0, 1).Font.ColorIndex = 2 ' white

Range("t_MATNR_fl_L1").Font.ColorIndex = 1 ' black
Range("t_MATNR_fl_L2").Font.ColorIndex = 33 ' black
Range("MATNR_fl").Font.ColorIndex = 1 ' black

Range("t_VKP0_fl_L1").Font.ColorIndex = 1 ' black
Range("t_VKP0_fl_L2").Font.ColorIndex = 33 ' black
Range("VKP0_fl").Font.ColorIndex = 1 ' black
Range("VKP0_fl").Interior.ColorIndex = 15

Range("t_MATNR_ki_L1").Font.ColorIndex = 1 ' black
Range("t_MATNR_ki_L2").Font.ColorIndex = 33 ' black
Range("MATNR_ki").Font.ColorIndex = 1 ' black

Range("t_VKP0_ki_L1").Font.ColorIndex = 1 ' black
Range("t_VKP0_ki_L2").Font.ColorIndex = 33 ' black
Range("VKP0_ki").Font.ColorIndex = 1 ' black
Range("VKP0_ki").Interior.ColorIndex = 15

ActiveSheet.Protect Password:=heslo

End Sub

Sub CheckUMTable()

Dim umRange                         As Range
Dim umCell                          As Range
Dim curentRangeName                 As String
Dim defaultAddressForFormula        As String
Dim numberUMBRows                   As Integer
Dim numberUMRows                    As Integer
Dim oldRangeName                    As String
Dim newRangeName                    As String
Dim UMArray_B(16)                   As String
Dim UMArray(16)                     As String


defaultAddressForFormula = Range("t_x").Offset(1, 1).Address
numberUMBRows = NumberOfRows("MEINHB_001")
numberUMRows = NumberOfRows("MEINH_001")

' Unprotect sheet for work
Application.ScreenUpdating = False
ActiveWorkbook.Unprotect Password:=heslo
ActiveSheet.Unprotect Password:=heslo

' Select UM table range for changes
If Range("UMTableEnd").Row - Range("t_x").Row <> 1 Then
    Set umRange = Range("A" & CStr(Range("t_x").Row + 2) & ":" & "BI" & CStr(Range("UMTableEnd").Row - 1))
End If

' Convert all formulas in UM table in Value
For Each umCell In umRange
    If umCell.HasFormula Then
        umCell.Formula = umCell.Value
    End If
Next umCell

On Error Resume Next
oldRangeName = ""
newRangeName = ""

UMArray_B(0) = "UMRENB_"
UMArray_B(1) = "MEINHB_"
UMArray_B(2) = "UMREZB_"
UMArray_B(3) = "MEINSB_"
UMArray_B(4) = "KZBMEB_"
UMArray_B(5) = "KZBSTMEB_"
UMArray_B(6) = "KZAUSMEB_"
UMArray_B(7) = "KZVRKMEB_"
UMArray_B(8) = "EAN11_tabB_"
UMArray_B(9) = "EANTP_tabB_"
UMArray_B(10) = "BRGEWB_"
UMArray_B(11) = "NTGEWB_"
UMArray_B(12) = "GEWEIB_"
UMArray_B(13) = "LAENGB_"
UMArray_B(14) = "BREITB_"
UMArray_B(15) = "HOEHEB_"
UMArray_B(16) = "MESUBB_"

'UM_B
For cykl = 1 To numberUMBRows
    Range("UMRENB_" & Format(cykl, "000")).Select
    For numb = LBound(UMArray_B) To UBound(UMArray_B)
        If numb = 0 Then
            If ActiveCell.Name.Name <> "UMRENB_" & Format(cykl, "000") Then
                oldRangeName = ActiveCell.Name.Name
                If oldRangeName = "" Then oldRangeName = ActiveCell.Address
                newRangeName = "UMRENB_" & Format(cykl, "000")
                Call RenameRangeName(oldRangeName, newRangeName)
            End If
        Else
            ActiveCell.Offset(0, 1).Select
            If ActiveCell.Name.Name <> UMArray_B(numb) & Format(cykl, "000") Then
                oldRangeName = ActiveCell.Name.Name
                If oldRangeName = "" Then oldRangeName = ActiveCell.Address
                newRangeName = UMArray_B(numb) & Format(cykl, "000")
                Call RenameRangeName(oldRangeName, newRangeName)
            End If
        End If
    oldRangeName = ""
    newRangeName = ""
    Next numb
Next cykl
'UM_B

'UM_

UMArray(0) = "UMREN_"
UMArray(1) = "MEINH_"
UMArray(2) = "UMREZ_"
UMArray(3) = "MEINS_"
UMArray(4) = "KZBME_"
UMArray(5) = "KZBSTME_"
UMArray(6) = "KZAUSME_"
UMArray(7) = "KZVRKME_"
UMArray(8) = "EAN11_tab_"
UMArray(9) = "EANTP_tab_"
UMArray(10) = "BRGEW_"
UMArray(11) = "NTGEW_"
UMArray(12) = "GEWEI_"
UMArray(13) = "LAENG_"
UMArray(14) = "BREIT_"
UMArray(15) = "HOEHE_"
UMArray(16) = "MESUB_"
'

For cykl = 1 To numberUMRows
   Range("UMREN_" & Format(cykl, "000")).Select
    For numb = LBound(UMArray_B) To UBound(UMArray)
        If numb = 0 Then
            If ActiveCell.Name.Name <> "UMREN_" & Format(cykl, "000") Then
                oldRangeName = Range("t_x").Offset(cykl, 0).Name.Name
                If oldRangeName = "" Then oldRangeName = ActiveCell.Address
                newRangeName = "UMREN_" & Format(cykl, "000")
                Call RenameRangeName(oldRangeName, newRangeName)
            End If
        Else
            ActiveCell.Offset(0, 1).Select
            If ActiveCell.Name.Name <> UMArray(numb) & Format(cykl, "000") Then
                oldRangeName = ActiveCell.Name.Name
                If oldRangeName = "" Then oldRangeName = ActiveCell.Address
                newRangeName = UMArray(numb) & Format(cykl, "000")
                Call RenameRangeName(oldRangeName, newRangeName)
            End If
        End If
    oldRangeName = ""
    newRangeName = ""
    Next numb
Next cykl

For cykl = 1 To numberUMBRows
        ActiveWorkbook.Unprotect Password:=heslo
        ActiveSheet.Unprotect Password:=heslo
        Range("MEINSB_" & Format(cykl, "000")).Formula = "=" & CStr(defaultAddressForFormula)
Next cykl

For cykl = 1 To numberUMRows
        ActiveWorkbook.Unprotect Password:=heslo
        ActiveSheet.Unprotect Password:=heslo
        Range("MEINS_" & Format(cykl, "000")).Formula = "=" & CStr(defaultAddressForFormula)
Next cykl


Err


Application.ScreenUpdating = True
ActiveWorkbook.Protect Password:=heslo
ActiveSheet.Protect Password:=heslo

End Sub

Sub RenameRangeName(StrOld As String, StrNew As String)
Err
    Range(StrOld).Name = StrNew
    With ThisWorkbook
        .Names(StrOld).Delete
    End With
End Sub

Function NumberOfRows(selectedCellName As String) As Integer
    Dim maxc                            As Integer

    On Error Resume Next
    For maxc = 1 To 10000
        Err.Clear
        Range(Left(selectedCellName, Len(selectedCellName) - 4) & "_" & Format(maxc, "000")).Select
        If Err <> 0 Then
            Exit For
        End If
    Next maxc
    NumberOfRows = maxc - 1
    On Error GoTo 0
End Function


Sub CheckCorrectValuesInAlternativeUMColumn() ' AP2-268

numberUMBRows = NumberOfRows("MEINHB_001")
numberUMRows = NumberOfRows("MEINH_001")

For cykl = 1 To numberUMBRows
    If IsInValidationList(CStr(Range("MEINHB_" & Format(cykl, "000")).Value), Range("MEINHB_" & Format(cykl, "000"))) = False Then
        Application.ScreenUpdating = True
        Range("MEINHB_" & Format(cykl, "000")).Select
        MsgBox hlaska(63) & " " & "MEINHB_" & Format(cykl, "000") & " " & hlaska(69), vbExclamation
        jechyba = True
    End If
Next cykl

For cykl = 1 To numberUMRows
    If IsInValidationList(CStr(Range("MEINH_" & Format(cykl, "000")).Value), Range("MEINH_" & Format(cykl, "000"))) = False Then
        Application.ScreenUpdating = True
        Range("MEINH_" & Format(cykl, "000")).Select
        MsgBox hlaska(63) & " " & "MEINHB_" & Format(cykl, "000") & " " & hlaska(69), vbExclamation
        jechyba = True
    End If
Next cykl
    
End Sub

Function IsInValidationList(strTestTerm As String, validatedRange As Range) As Boolean
    On Error GoTo ErrorOut
    With validatedRange.Cells(1, 1).Validation
        If .Formula1 Like "=*" Then
            IsInValidationList = IsNumeric(Application.Match(strTestTerm, Range(.Formula1), 0))
        Else
            IsInValidationList = CBool(InStr(1, "," & .Formula1 & ",", "," & strTestTerm & ","))
        End If
    End With
ErrorOut:
End Function
Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Sheet4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


Private Sub Worksheet_Change(ByVal Target As Range)
    On Error Resume Next
        If Not Application.Intersect(Target, ActiveWorkbook.Worksheets(SHEET_REA).Range(RANGE_REA_VPN)) Is Nothing Then
        Target.Offset(0, 1).Value = g_coll_vpn_selections.Item(CStr(Target.Value)).Number
    End If
End Sub

Attribute VB_Name = "Tabelle10"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle11"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle12"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle13"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle14"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle15"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle16"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle2"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle3"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle4"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle5"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Tabelle6"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle7"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle8"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "Tabelle9"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit

Private Sub Workbook_BeforeSave(ByVal SaveAsUI As Boolean, Cancel As Boolean)
    Call CheckUMTable
    Call kontrola
    Call ProtectSheetsAndBook
    Sheets("A-pass").Activate
     Dim varResult As Variant
    ' -- added code that does not allow to use "Save as" to save file in xlsx format since it does not support macro
    If SaveAsUI Then
        Dim relativePath As String
        relativePath = ThisWorkbook.Path & "\" & Me.Name
        Dim FD As FileDialog, FTyp As Long
        Cancel = False
        Set FD = Application.FileDialog(msoFileDialogSaveAs)
        With FD

            'displays the save file dialog
            .InitialFileName = (ThisWorkbook.Path & "\")
            If FileFormat = 56 Then
                varResult = Application.GetSaveAsFilename(FileFilter:= _
                "Excel Files (*.xls)," & "*.xls, Macro Enabled" & _
                "Workbook (*.xlsb), *xlsb")
            Else
                varResult = Application.GetSaveAsFilename(FileFilter:= _
                "Excel Files (*.xlsb)," & "*.xlsb, Macro Enabled" & _
                "Workbook (*.xls), *xls")
            End If

            '.Show
        End With
        If Right(varResult, 4) = "xlsb" Then
            Application.EnableEvents = False
            Me.SaveAs varResult, FileFormat:=50
            Application.EnableEvents = True
        ElseIf Right(varResult, 3) = "xls" Then
            Application.EnableEvents = False
            Me.SaveAs varResult, FileFormat:=56
            Application.EnableEvents = True
        ElseIf varResult = False Then
            GoTo endsub_beforeSave
        Else
            MsgBox "Selected file format is not supported. File is not saved!" & vbNewLine & vbNewLine & "Please, select one of next formats: xls or xlsb."
        End If

endsub_beforeSave:
        Cancel = True
    End If
End Sub

Private Sub Workbook_Open()
    Application.ScreenUpdating = False
    Call Init
    Call newversion
    Application.ScreenUpdating = True
End Sub

Attribute VB_Name = "cls_country"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim var_code                            As String
Dim var_units_of_measure As String

Private Sub Class_Initialize()
    var_code = "KI"
End Sub

Public Property Get Code() As String
    Code = var_code
End Property

Public Property Let Code(ByVal vNewValue As String)
    var_code = vNewValue
End Property

Public Property Get UnitsOfMeasure() As String
    UnitsOfMeasure = var_units_of_measure
End Property

Public Property Let UnitsOfMeasure(ByVal vNewValue As String)
    var_units_of_measure = vNewValue
End Property

Attribute VB_Name = "cls_language"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim var_code                            As String

Private Sub Class_Initialize()
    var_code = "DE"
End Sub

Public Property Get Code() As String
    Code = var_code
End Property

Public Property Let Code(ByVal vNewValue As String)
    var_code = vNewValue
End Property
Attribute VB_Name = "cls_vpn_selection"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit

Dim var_number                          As String
Dim var_fraction                        As String

Public Property Get Number() As String
    Number = var_number
End Property

Public Property Let Number(ByVal vNewValue As String)
    var_number = vNewValue
End Property

Public Property Get Fraction() As String
    Fraction = var_fraction
End Property

Public Property Let Fraction(ByVal vNewValue As String)
    var_fraction = vNewValue
End Property
Attribute VB_Name = "formregion"
Attribute VB_Base = "0{AF0FB4BA-B61C-4D18-BB75-AED449A09EBB}{13AC8A4E-4589-49C6-A638-4D1F1D728CAC}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False



Private Sub btn_import_Click()
  Dim souborf As Variant
  Dim filialkaf As String
  ChDrive "C"
  ChDir "C:\Users\" & (Environ$("Username")) & "\Documents\"
  souborf = Application.GetOpenFilename(FileFilter:="Soubory Excel (*.txt), *.txt", MultiSelect:=False)
  If souborf <> False Then
    Open souborf For Input As #1
    Do While Not EOF(1)
      Input #1, filialkaf
      pridej filialkaf, 0
    Loop
    Close #1
  End If
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
  If CloseMode = 0 Then
      'Cancel = True
      If MsgBox(hlaska(25), vbYesNo + vbQuestion) = vbYes Then
        btn_ulozit_Click
        Me.Hide
      Else
        Me.Hide
      End If
  End If
  Unload Me
End Sub

'Private Sub btn_matka_Click()
'  zmatky
'End Sub

Private Sub btn_odebrat_Click()
  Dim cyklf As Integer
  Dim pocet As Integer
  pocet = lst_fil.ListCount - 1
  cyklf = 0
  Do
    If lst_fil.Selected(cyklf) Then
      lst_fil.RemoveItem cyklf
      pocet = pocet - 1
    Else
      cyklf = cyklf + 1
    End If
  Loop While cyklf <= pocet
End Sub

Private Sub btn_pridat_Click()
  pridej txt_fil.Text, 1
End Sub

Private Sub btn_ulozit_Click()
  ulozitfil
  Me.Hide
End Sub

Private Sub txt_fil_keydown(ByVal keycode As MSForms.ReturnInteger, ByVal shift As Integer)
  If keycode = 13 Then
    pridej txt_fil.Text, 1
    keycode = vbNull
  End If
End Sub

Private Sub UserForm_Activate()
  lst_fil.Clear
  pridatfilform
  txt_fil.SetFocus
End Sub


Attribute VB_Name = "mod_global"
Option Explicit


Public g_obj_language_1                 As cls_language
Public g_obj_language_2                 As cls_language
Public g_obj_country                    As cls_country

Public g_coll_countries                 As Collection
Public g_coll_languages                 As Collection

Public g_coll_vpn_selections            As Collection

Public lang                             As Byte

Public g_bool_isInitialized             As Boolean



Public Const heslo = "autobus"
Public Const CON_PASSWORD = "autobus"
Public Const RANGE_REA_VME_SELECTION = "REA_VME_SELECTION"          'dynamic assignment which depends on language


' --------------------- sheets ----------------------------------------------------------------------------------
Public Const SHEET_REA = "REA"
Public Const SHEET_VME = "Uebersetzung und Buchungskreis"
Public Const SHEET_SELECTION_CZ = "Auswahl CZ"
Public Const SHEET_SELECTION_RO = "Auswahl RO"
Public Const SHEET_SELECTION_BG = "Auswahl BG"
Public Const SHEET_SELECTION_PL = "Auswahl PL"
Public Const SHEET_SELECTION_SK = "Auswahl SK"
Public Const SHEET_SELECTION_HR = "Auswahl HR"
Public Const SHEET_SELECTION_MD = "Auswahl MD"
Public Const SHEET_SELECTION_AU = "Auswahl AU"

' ----------------- areas in sheet "REA" --------------------------------------------------------------------
Public Const RANGE_REA_VPN = "REA_VPN"
Public Const RANGE_REA_LIST = "REA_LIST"
Public Const RANGE_REA_ME_KG = "REA_ME_KG"


' -----------------  areas in sheet "|fffd|bersetzung und Buchungskreis" ------------------------------------------
Public Const RANGE_LANGUAGES = "LANGUAGES"
Public Const RANGE_COUNTRIES = "COUNTRIES"
Public Const RANGE_REA_VME = "VME"


' -----------------  areas in sheet "Auswahl XX" ------------------------------------------------------------
Public Const RANGE_REA_VPN_SELECTION = "REA_VPN_SELECTION"
Public Const RANGE_SELECTION_CZ = "SELECTION_CZ"
Public Const RANGE_SELECTION_RO = "SELECTION_RO"
Public Const RANGE_SELECTION_BG = "SELECTION_BG"
Public Const RANGE_SELECTION_PL = "SELECTION_PL"
Public Const RANGE_SELECTION_SK = "SELECTION_SK"
Public Const RANGE_SELECTION_HR = "SELECTION_HR"
Public Const RANGE_SELECTION_MD = "SELECTION_MD"
Public Const RANGE_SELECTION_AU = "SELECTION_AU"

Public Sub Init()
    Dim obj_row                         As Excel.Range
    Dim obj_column                      As Excel.Range
    Dim obj_range                       As Excel.Range
    Dim obj_vpn_selection               As cls_vpn_selection
    Dim obj_country                     As cls_country
    Dim obj_language                    As cls_language
    
    Set g_obj_country = New cls_country
    Set g_obj_language_1 = New cls_language
    Set g_obj_language_2 = New cls_language

    Set g_coll_vpn_selections = New Collection
    Set g_coll_countries = New Collection
    Set g_coll_languages = New Collection
   
    ' L|fffd|nderliste initialisieren
    For Each obj_column In ActiveWorkbook.Worksheets(SHEET_VME).Range(RANGE_COUNTRIES).Columns
        Set obj_country = New cls_country
        obj_country.Code = obj_column.Rows(1).Value
        obj_country.UnitsOfMeasure = obj_column.Rows(4).Value
        g_coll_countries.Add Item:=obj_country, Key:=obj_country.Code
    Next obj_column

    ' Sprachenliste initialisieren
    For Each obj_column In ActiveWorkbook.Worksheets(SHEET_VME).Range(RANGE_LANGUAGES).Columns
        Set obj_language = New cls_language
        obj_language.Code = obj_column.Rows(1).Value
        g_coll_languages.Add Item:=obj_language, Key:=obj_language.Code
    Next obj_column

    ActiveWorkbook.Worksheets(SHEET_REA).Protect Password:=CON_PASSWORD, UserInterfaceOnly:=True

    Set obj_range = ActiveWorkbook.Worksheets(SHEET_SELECTION_CZ).Range(RANGE_SELECTION_CZ)
    For Each obj_row In obj_range.Rows
        Set obj_vpn_selection = New cls_vpn_selection
        obj_vpn_selection.Number = obj_row.Columns(1).Value
        obj_vpn_selection.Fraction = obj_row.Columns(3).Value
        g_coll_vpn_selections.Add Item:=obj_vpn_selection, Key:=obj_vpn_selection.Fraction
    Next obj_row
    
    Set obj_range = ActiveWorkbook.Worksheets(SHEET_SELECTION_RO).Range(RANGE_SELECTION_RO)
    For Each obj_row In obj_range.Rows
        Set obj_vpn_selection = New cls_vpn_selection
        obj_vpn_selection.Number = obj_row.Columns(1).Value
        obj_vpn_selection.Fraction = obj_row.Columns(3).Value
        g_coll_vpn_selections.Add Item:=obj_vpn_selection, Key:=obj_vpn_selection.Fraction
    Next obj_row
    
    Set obj_range = ActiveWorkbook.Worksheets(SHEET_SELECTION_MD).Range(RANGE_SELECTION_MD)
    For Each obj_row In obj_range.Rows
        Set obj_vpn_selection = New cls_vpn_selection
        obj_vpn_selection.Number = obj_row.Columns(1).Value
        obj_vpn_selection.Fraction = obj_row.Columns(3).Value
        g_coll_vpn_selections.Add Item:=obj_vpn_selection, Key:=obj_vpn_selection.Fraction
    Next obj_row

    Set obj_range = ActiveWorkbook.Worksheets(SHEET_SELECTION_BG).Range(RANGE_SELECTION_BG)
    For Each obj_row In obj_range.Rows
        Set obj_vpn_selection = New cls_vpn_selection
        obj_vpn_selection.Number = obj_row.Columns(1).Value
        obj_vpn_selection.Fraction = obj_row.Columns(3).Value
        g_coll_vpn_selections.Add Item:=obj_vpn_selection, Key:=obj_vpn_selection.Fraction
    Next obj_row

    Set obj_range = ActiveWorkbook.Worksheets(SHEET_SELECTION_PL).Range(RANGE_SELECTION_PL)
    For Each obj_row In obj_range.Rows
        Set obj_vpn_selection = New cls_vpn_selection
        obj_vpn_selection.Number = obj_row.Columns(1).Value
        obj_vpn_selection.Fraction = obj_row.Columns(3).Value
        g_coll_vpn_selections.Add Item:=obj_vpn_selection, Key:=obj_row.Columns(3).Value
    Next obj_row
    
     Set obj_range = ActiveWorkbook.Worksheets(SHEET_SELECTION_AU).Range(RANGE_SELECTION_AU)
    For Each obj_row In obj_range.Rows
        Set obj_vpn_selection = New cls_vpn_selection
        obj_vpn_selection.Number = obj_row.Columns(1).Value
        obj_vpn_selection.Fraction = obj_row.Columns(3).Value
        g_coll_vpn_selections.Add Item:=obj_vpn_selection, Key:=obj_row.Columns(3).Value
    Next obj_row

    Set obj_range = ActiveWorkbook.Worksheets(SHEET_SELECTION_SK).Range(RANGE_SELECTION_SK)
    For Each obj_row In obj_range.Rows
        Set obj_vpn_selection = New cls_vpn_selection
        obj_vpn_selection.Number = obj_row.Columns(1).Value
        obj_vpn_selection.Fraction = obj_row.Columns(3).Value
        g_coll_vpn_selections.Add Item:=obj_vpn_selection, Key:=obj_vpn_selection.Fraction
    Next obj_row

    Set obj_range = ActiveWorkbook.Worksheets(SHEET_SELECTION_HR).Range(RANGE_SELECTION_HR)
    For Each obj_row In obj_range.Rows
        Set obj_vpn_selection = New cls_vpn_selection
        obj_vpn_selection.Number = obj_row.Columns(1).Value
        obj_vpn_selection.Fraction = obj_row.Columns(3).Value
        g_coll_vpn_selections.Add Item:=obj_vpn_selection, Key:=obj_vpn_selection.Fraction
    Next obj_row

    Set g_obj_language_1 = g_coll_languages.Item(ActiveWorkbook.Worksheets("A-pass").Range("SPRACH_001").Value)
    Set g_obj_language_2 = g_coll_languages.Item(ActiveWorkbook.Worksheets("A-pass").Range("SPRACH_002").Value)
    Set g_obj_country = g_coll_countries.Item(ActiveWorkbook.Worksheets("A-pass").Range("LAND").Value)
    g_bool_isInitialized = True
       
End Sub











INQUEST-PP=macro
