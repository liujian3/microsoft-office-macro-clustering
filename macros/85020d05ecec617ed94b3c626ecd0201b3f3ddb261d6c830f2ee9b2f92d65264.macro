Attribute VB_Name = "DieseArbeitsmappe"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Attribute VB_Name = "Modul1"
Sub Makro1()
Attribute Makro1.VB_ProcData.VB_Invoke_Func = "T\n14"
'
' Makro1 Makro
'
' Tastenkombination: Strg+Umschalt+T
'
    Application.GoTo Reference:="Makro1"
    ActiveWorkbook.SaveAs Filename:= _
        "Q:\BBI-B Austausch Bue FGT 2\Doku_Los 5\Terminplanung\AVL\180125_AvL- |fffd|bersicht VE7.2  mit Abrufen - KW 02 2018.xlsm" _
        , FileFormat:=xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False
    ActiveWindow.SmallScroll Down:=3
    Application.GoTo Reference:="Makro1"
    Range("E104").Select
    ActiveWindow.SmallScroll Down:=3
    Range("E42").Select
    ActiveWindow.SmallScroll Down:=-9
    Range("L77").Select
    Application.Run _
        "'180125_AvL- |fffd|bersicht VE7.2  mit Abrufen - KW 02 2018.xlsm'!VerglTab"
    Sheets("MIQ-AVL-15.01.2018").Select
    Range("D3").Select
    Columns("C:C").ColumnWidth = 5.14
    Columns("C:C").ColumnWidth = 15.14
    Range("D4").Select
    Selection.AutoFill Destination:=Range("D3:D4"), Type:=xlFillDefault
    Range("D3:D4").Select
    Range("D6").Select
    Sheets("AvL mit Budget und Abrufen").Select
    Application.Run _
        "'180125_AvL- |fffd|bersicht VE7.2  mit Abrufen - KW 02 2018.xlsm'!VerglTab"
    ActiveWindow.SmallScroll Down:=-30
    Sheets("AvL mit Budget und Abrufen").Select
    ActiveWindow.SmallScroll Down:=285
    Range("B433").Select
    Selection.FillDown
    Range("C434").Select
    ActiveWindow.SmallScroll Down:=-312
    Sheets("AvL mit Budget und Abrufen").Select
    ActiveWindow.SmallScroll Down:=-9
    Range("D4").Select
    Sheets("MIQ-AVL-15.01.2018").Select
    Range("D3").Select
    ActiveWindow.SmallScroll Down:=-33
    Range("A2:Q2").Select
    Selection.AutoFilter
    Range("Q3").Select
    ActiveSheet.Range("$A$2:$Q$122").AutoFilter Field:=4, Criteria1:=RGB(0, 255 _
        , 0), Operator:=xlFilterCellColor
    ActiveSheet.Range("$A$2:$Q$122").AutoFilter Field:=4
    Range("D3").Select
    Sheets("MIQ-AVL-15.01.2018").Select
    Application.Run _
        "'180125_AvL- |fffd|bersicht VE7.2  mit Abrufen - KW 02 2018.xlsm'!VerglTab"
    Range("M13").Select
    ActiveWindow.SmallScroll Down:=-18
    Sheets("AvL mit Budget und Abrufen").Select
    ActiveWindow.SmallScroll Down:=24
    Sheets("MIQ-AVL-15.01.2018").Select
    ActiveWindow.SmallScroll Down:=-18
    Sheets("AvL mit Budget und Abrufen").Select
    ActiveWindow.SmallScroll Down:=-54
    Sheets("AvL mit Budget und Abrufen").Select
    Windows("180126_ Grundlage-SOLL AvL- |fffd|bersicht VE 7.2.xlsx").Activate
    Windows("180125_AvL- |fffd|bersicht VE7.2  mit Abrufen - KW 02 2018.xlsm").Activate
    Sheets("MIQ-AVL-15.01.2018").Select
    Windows("180126_ Grundlage-SOLL AvL- |fffd|bersicht VE 7.2.xlsx").Activate
    Range("Q30").Select
    ActiveWorkbook.Save
    ActiveWindow.Close
    Windows("Kopie von 20180115_AvL- |fffd|bersicht VE7.2  mit Abrufen-KW 03 Horn.xlsx") _
        .Activate
    Application.Left = 1435.75
    Application.Top = 42.25
    Application.Width = 547.5
    Application.Height = 465
    ActiveWindow.SmallScroll Down:=54
    ActiveWindow.ScrollRow = 109
    ActiveWindow.ScrollRow = 104
    ActiveWindow.ScrollRow = 98
    ActiveWindow.ScrollRow = 95
    ActiveWindow.ScrollRow = 70
    ActiveWindow.ScrollRow = 65
    ActiveWindow.ScrollRow = 59
    ActiveWindow.ScrollRow = 56
    ActiveWindow.ScrollRow = 48
    ActiveWindow.ScrollRow = 42
    ActiveWindow.ScrollRow = 31
    ActiveWindow.ScrollRow = 26
    ActiveWindow.ScrollRow = 14
    ActiveWindow.ScrollRow = 9
    ActiveWindow.ScrollRow = 3
    ActiveWindow.ScrollRow = 1
    Range("B2:M385").Select
    ActiveWindow.ScrollColumn = 3
    ActiveWindow.ScrollColumn = 4
    ActiveWindow.ScrollColumn = 5
    ActiveWindow.ScrollColumn = 6
    Range("B2:T412").Select
    Range("T412").Activate
    Selection.Copy
    Windows("180125_AvL- |fffd|bersicht VE7.2  mit Abrufen - KW 02 2018.xlsm").Activate
    Sheets.Add After:=ActiveSheet
    Range("A1").Select
    ActiveSheet.Paste
    Columns("H:H").ColumnWidth = 50.57
    Rows("1:226").Select
    Application.CutCopyMode = False
    Range("E2").Select
    ActiveWindow.SmallScroll Down:=-15
    Rows("2:226").Select
    Selection.Rows.AutoFit
    Range("G9").Select
    Columns("D:D").ColumnWidth = 50.14
    ActiveWindow.SmallScroll Down:=-15
    Columns("H:H").ColumnWidth = 62.29
    ActiveWindow.SmallScroll Down:=39
    ActiveWindow.ScrollRow = 39
    ActiveWindow.ScrollRow = 38
    ActiveWindow.ScrollRow = 37
    ActiveWindow.ScrollRow = 36
    ActiveWindow.ScrollRow = 35
    ActiveWindow.ScrollRow = 34
    ActiveWindow.ScrollRow = 33
    ActiveWindow.ScrollRow = 32
    ActiveWindow.ScrollRow = 30
    ActiveWindow.ScrollRow = 29
    ActiveWindow.ScrollRow = 27
    ActiveWindow.ScrollRow = 26
    ActiveWindow.ScrollRow = 25
    ActiveWindow.ScrollRow = 24
    ActiveWindow.ScrollRow = 23
    ActiveWindow.ScrollRow = 22
    ActiveWindow.ScrollRow = 21
    ActiveWindow.ScrollRow = 20
    ActiveWindow.ScrollRow = 18
    ActiveWindow.ScrollRow = 17
    ActiveWindow.ScrollRow = 15
    ActiveWindow.ScrollRow = 14
    ActiveWindow.ScrollRow = 12
    ActiveWindow.ScrollRow = 11
    ActiveWindow.ScrollRow = 10
    ActiveWindow.ScrollRow = 9
    ActiveWindow.ScrollRow = 8
    ActiveWindow.ScrollRow = 7
    ActiveWindow.ScrollRow = 3
    ActiveWindow.ScrollRow = 2
    ActiveWindow.ScrollRow = 1
    Rows("2:226").Select
    Selection.Rows.AutoFit
    Range("D10").Select
    Sheets("Tabelle2").Select
    Sheets("Tabelle2").Name = "20180115_AVL_KW03_Horn"
    Range("D19").Select
    Sheets("AvL mit Budget und Abrufen").Select
    Columns("D:D").Select
    Selection.Insert Shift:=xlToRight, CopyOrigin:=xlFormatFromLeftOrAbove
    Columns("E:E").Select
    Selection.Copy
    Columns("D:D").Select
    Application.CutCopyMode = False
    Application.CutCopyMode = False
    Range("C19").Select
    ActiveSheet.Range("$A$3:$U$435").AutoFilter Field:=7
    Columns("E:E").Select
    Selection.Copy
    Columns("D:D").Select
    ActiveSheet.Paste
    Application.CutCopyMode = False
    Range("D3").Select
    ActiveCell.FormulaR1C1 = "AvL :- NR "
    Range("E3").Select
    ActiveCell.FormulaR1C1 = "AvL :- NR-Horn"
    Range("E13").Select
    Application.Run _
        "'180125_AvL- |fffd|bersicht VE7.2  mit Abrufen - KW 02 2018.xlsm'!VerglTab"
    Sheets("AvL mit Budget und Abrufen").Select
    Application.Run _
        "'180125_AvL- |fffd|bersicht VE7.2  mit Abrufen - KW 02 2018.xlsm'!VerglTab"
    Range("F36").Select
    Sheets("ARCHIV AvL m. Budget u. Abrufen").Select
    ActiveWorkbook.Save
    Sheets("AvL mit Budget und Abrufen").Select
    Application.Run _
        "'180125_AvL- |fffd|bersicht VE7.2  mit Abrufen - KW 02 2018.xlsm'!VerglTab"
    Range("F22").Select
    ActiveWindow.SmallScroll Down:=-9
    Sheets("AvL mit Budget und Abrufen").Select
    ActiveWorkbook.Save
End Sub
Attribute VB_Name = "Modul11"
Option Explicit

Sub BKS_Scanner()
Attribute BKS_Scanner.VB_ProcData.VB_Invoke_Func = "s\n14"
  
  BKS_Leser.Show
  
End Sub

Sub VerglTab()
Attribute VerglTab.VB_ProcData.VB_Invoke_Func = "t\n14"

  Tabvergl.Show
  
End Sub

'Vergleichen Kreuztabelle in Sachdaten

Sub KrTabSD()               'Aufruf des Unterprogramms VglSpTab

Call VglSpTab("KrTab", "A", "SD", "G", 4, 4)

End Sub


'#####################################################################################################################
'Vergleich jeweils eine Spalten (ab Zelle 2) in zwei Tabellen und markieren von |fffd|bereinstimmungen farblich hinterlegt
'(c) Rainer Brosig 04.05.2016
'#####################################################################################################################
'
Sub VglSpTab(N1Tab As String, SP1 As String, N2Tab As String, SP2 As String, ColorIndex1 As Integer, ColorIndex2 As Integer)
'
'N1Tab:        Name der 1. Tabelle z. B. "KrTab"
'N2Tab:        Name der 2. Tabelle z. B. "SD"
'SP1:          zu vergleichenden Spalte in Tabelle 1 z. B. "A"
'SP2:          zu vergleichenden Spalte in Tabelle 2 z. B. "G"
'ColorIndex 1: Farbinformation der einzuf|fffd|rbenden Zelle z. B. 3=rot, 4=gr|fffd|n, 8=blau
'ColorIndex 1: Farbinformation der einzuf|fffd|rbenden Zelle z. B. 3=rot, 4=gr|fffd|n, 8=blau

Dim letzteZeileN1Tab As Long
Dim letzteZeileN2Tab As Long
Dim i As Long
Dim BKS As String
Dim c As Variant
Dim firstAddress As Variant


'jeweils letzte benutzte Zeile bestimmen (als longinteger)

letzteZeileN1Tab = Worksheets(N1Tab).Cells(Rows.Count, SP1).End(xlUp).Row
letzteZeileN2Tab = Worksheets(N2Tab).Cells(Rows.Count, SP2).End(xlUp).Row

'Farbattribute der Spalten zur|fffd|cksetzen

'Worksheets(N1Tab).Range(SP1 & "2:" & SP1 & CStr(letzteZeileN1Tab)).Interior.ColorIndex = xlColorIndexNone
'Worksheets(N2Tab).Range(SP2 & "2:" & SP2 & CStr(letzteZeileN2Tab)).Interior.ColorIndex = xlColorIndexNone


With Worksheets(N1Tab)
  For i = 2 To letzteZeileN1Tab
      BKS = .Cells(i, SP1).Value
      If Not BKS = "" Then                                                      'BKS aus Kreuztabelle holen
      
        With Worksheets(N2Tab).Range(SP2 & "2:" & SP2 & CStr(letzteZeileN2Tab)) 'gesamten Bereich der Tabelle 2
      
            Set c = .Find(BKS, LookIn:=xlValues)                                'Sachdatentabelle durchsuchen
            If Not c Is Nothing Then                                            'bis auf eine leere Zelle gesto|fffd|en wird
                firstAddress = c.Address                                        '
                Do
                    c.Interior.ColorIndex = 4                                   'Kennzeichnet alle |fffd|bereinstimmungen mit gr|fffd|n unterlegt
                    Set c = .FindNext(c)                                        'findet den n|fffd|chsten Eintrag, falls es einen weiteren gibt
                    Worksheets(N1Tab).Cells(i, SP1).Interior.ColorIndex = 4     'BKS in Sachdaten gefunden und Kreuztabelle gr|fffd|n kennzeichnen
                    DoEvents
                Loop While Not c Is Nothing And c.Address <> firstAddress       'bis alle Zeilen abgearbeitet
            End If

        End With
      End If
  Call Fortschritt(letzteZeileN1Tab, i)
  Next i

End With
SearchBar.Hide
End Sub


'
'##########################################################################################################################
'Pr|fffd|fen und Nachkontrolle Vorort-Tabelle mit Kreuztabelle und Tags aus Zeichnungen
'Neuerstellung der Zeilennummern des Vorort-Protokolls
'(c) Rainer Brosig 04.05.2016
'##########################################################################################################################
'
Sub Pr|fffd|fen_VorOrt()

Dim intletzteZeileN1Tab As Long
Dim intletzteZeileN2Tab As Long
Dim intletzteZeileN3Tab As Long
Dim AktiveZeile As Long
Dim i As Long
Dim BKS As String
Dim c As Variant
Dim firstAddress As Variant
Dim intSchreibzeileN3Tab As Long
Dim strRange1 As String
Dim strRange2 As String
Dim strAktZelle As String
Dim N1Tab As String
Dim SP1 As String
Dim N2Tab As String
Dim SP2 As String
Dim N3Tab As String
Dim SP3 As String                     'Spalte 1 VorOrt Protokollierung BKS
Dim SP4 As String                     'Spalte 2 VorOrt Protokolliereung Zeitpunkt
Dim SP41 As String                    'Spalte 3 VorOrt Protokollierung Pos in Kreuztabell
Dim SP42 As String                    'Spalte 4 VorOrt Protokollierung Pos in SD-Tabelle


 'Variablen f|fffd|llen
 
  N1Tab = "KrTab"
  SP1 = "A"
  N2Tab = "SD"
  SP2 = "G"
  N3Tab = "vorOrt"
  SP3 = "A"                     'Spalte 1 VorOrt Protokollierung BKS
  SP4 = "B"                     'Spalte 2 VorOrt Protokolliereung Zeitpunkt
  SP41 = "C"                    'Spalte 3 VorOrt Protokollierung Pos in Kreuztabell
  SP42 = "D"                    'Spalte 4 VorOrt Protokollierung Pos in SD-Tabelle
  intSchreibzeileN3Tab = 2
   
  'letzte benutzte Zeile bestimmen (als Integer)
  intletzteZeileN1Tab = Worksheets(N1Tab).Cells(Rows.Count, SP1).End(xlUp).Row
  intletzteZeileN2Tab = Worksheets(N2Tab).Cells(Rows.Count, SP2).End(xlUp).Row
  intletzteZeileN3Tab = Worksheets(N3Tab).Cells(Rows.Count, SP3).End(xlUp).Row
  strRange1 = SP41 & "2" & ":" & SP41 & CStr(intletzteZeileN3Tab)
  strRange2 = SP42 & "2" & ":" & SP42 & CStr(intletzteZeileN3Tab)
  '
  'L|fffd|schen der Zeilennummern in der Spalte der Vorort-Kreuztabellennummmer und Sachdatennummern
  '
  Worksheets(N3Tab).Range(strRange1, strRange2) = ""
  '
  'Neuerstellung der Zeilennummern des VorOrt-Protokolls
 
  Do
   
    strAktZelle = SP1 & CStr(intSchreibzeileN3Tab)

    BKS = Worksheets(N3Tab).Range(strAktZelle).Text                                 'zu pr|fffd|fende BKS aus VorOrt-Tabelle holen
     
   'BKS in der Kreuztabelle suchen
    
    With Worksheets(N1Tab).Range(SP1 & "2:" & SP1 & CStr(intletzteZeileN1Tab))      'gesamte Spalte A der Kreuztabelle
      
    If Len(BKS) > 30 Then                                                           'kann BKS g|fffd|ltig sein?
      Set c = .Find(BKS, LookIn:=xlValues)                                          'BKS-Gesamttabelle durchsuchen
      If Not c Is Nothing Then                                                      'bis auf eine leere Zelle gesto|fffd|en wird
          firstAddress = c.Address                                                  '
          Do
            c.Interior.ColorIndex = 4                                               'Kennzeichnet alle |fffd|bereinstimmungen mit gr|fffd|n unterlegt
            Set c = .FindNext(c)                                                    'findet den n|fffd|chsten Eintrag, falls es einen weiteren gibt
            AktiveZeile = c.Row
            Worksheets(N3Tab).Range(SP41 & CStr(intSchreibzeileN3Tab)).Value = AktiveZeile
            DoEvents
          Loop While Not c Is Nothing And c.Address <> firstAddress                 'bis alle Zeilen abgearbeitet
     ' Else
     '     BKS = Left(BKS, Len(BKS) - 4)                                             'Abschneiden der Raumnummer
     '     Set c = .Find(BKS, LookIn:=xlValues)
     '     Do
     '       c.Interior.ColorIndex = 3                                               'Kennzeichnet alle |fffd|bereinstimmungen mit gr|fffd|n unterlegt
     '       Set c = .FindNext(c)                                                    'findet den n|fffd|chsten Eintrag, falls es einen weiteren gibt
     '       AktiveZeile = c.Row
     '       Worksheets(N3Tab).Range(SP41 & CStr(intSchreibzeileN3Tab)).Value = AktiveZeile
     '       DoEvents
     '     Loop While Not c Is Nothing And c.Address <> firstAddress                 'bis alle Zeilen abgearbeitet
      End If
    End If
    End With
    
    'BKS in Gesamttabelle suchen

    With Worksheets(N2Tab).Range(SP2 & "2:" & SP2 & CStr(intletzteZeileN2Tab))      'gesamte Spalte A der SachdatenTabelle
    If Len(BKS) > 30 Then                                                           'kann BKS g|fffd|ltig sein?
      Set c = .Find(BKS, LookIn:=xlValues)                                          'BKS-Gesamttabelle durchsuchen
      If Not c Is Nothing Then                                                      'bis auf eine leere Zelle gesto|fffd|en wird
          firstAddress = c.Address                                                  '
          Do
            c.Interior.ColorIndex = 4                                               'Kennzeichnet alle |fffd|bereinstimmungen mit gr|fffd|n unterlegt
            Set c = .FindNext(c)                                                    'findet den n|fffd|chsten Eintrag, falls es einen weiteren gibt
            AktiveZeile = c.Row
            Worksheets(N3Tab).Range(SP42 & CStr(intSchreibzeileN3Tab)).Value = AktiveZeile
            DoEvents
         Loop While Not c Is Nothing And c.Address <> firstAddress                  'bis alle Zeilen abgearbeitet
      End If
    End If
    End With
    
    Call Fortschritt(intletzteZeileN3Tab, intSchreibzeileN3Tab)                     'Fortschrittsanzeige
    
    intSchreibzeileN3Tab = intSchreibzeileN3Tab + 1                                 'n|fffd|chste Protokoll-Zeile
    
 Loop While intSchreibzeileN3Tab <= intletzteZeileN3Tab                             'bis alle Zeilen abgearbeitet

SearchBar.Hide

End Sub


Public Sub Fortschritt(Maximum As Long, AktWert As Long)
   
   With SearchBar                                                                   'Fortschrittsbalken initialisieren
   .ProgressBar1.Min = 1
   .ProgressBar1.Max = Maximum
   .ProgressBar1.Value = AktWert                                                    'Aktueller Wert als Statusbar darstellen
   .Caption = "Fortschritt  Zeile: " & CStr(AktWert)                                'in der Fensterzeile aktuell bearbeitete Zeile darstellen
   .Show vbModeless
   End With
   
   End Sub


Public Function PruefBKS(BKS As String)

Dim i As Long
Dim buff() As String
PruefBKS = False

If Len(BKS) > 30 Then

    ReDim buff(Len(BKS) - 1)
    For i = 1 To Len(BKS)
        buff(i - 1) = Mid$(BKS, i, 1)
    Next
    
    If buff(14) = "-" Then GoTo TKITBKS

NormaleBKS:

    If Not buff(0) = "#" Then GoTo EndeP
    If Not buff(1) = "B" Then GoTo EndeP
    If Not buff(4) = "=" Then GoTo EndeP
    If Not buff(7) = "." Then GoTo EndeP
    If Not buff(14) = "." Then GoTo EndeP
    If Not buff(21) = "-" Then GoTo EndeP
    If Not buff(28) = "+" Then GoTo EndeP
    If Not buff(29) = "+" Then GoTo EndeP
    If Not buff(34) = "." Then GoTo EndeP
    
PruefBKS = True
GoTo EndeP

TKITBKS:
     If Not buff(0) = "#" Then GoTo EndeP
     If Not buff(1) = "B" Then GoTo EndeP
     If Not buff(4) = "=" Then GoTo EndeP
     If Not buff(7) = "." Then GoTo EndeP
     If Not buff(21) = "/" Then GoTo EndeP
     If Not buff(35) = "/" Then GoTo EndeP
     If Not buff(50) = "+" Then GoTo EndeP
     If Not buff(51) = "+" Then GoTo EndeP
     If Not buff(56) = "." Then GoTo EndeP

PruefBKS = True

End If

EndeP:
End Function


Attribute VB_Name = "TabVergl"
Attribute VB_Base = "0{846B62C5-3229-4988-87D3-D68A8A4AE990}{7D400D48-6899-4DBC-AF0A-20CF35C1101F}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False

'
'************************************************************************************************************
'************************************************************************************************************
'
' Programm zum Vergleichen zweier Tabellen und markieren von Zellen gleichen Inhalts
' (c) Dr. Rainer Brosig 2016/10
'
' |fffd|nderung 5/2017  Faben erweitert, Fehler bei nur einer vorhandenen Tabelle abgefangen
' |fffd|nderung 11/2017 Checkboxeninhalte abspeichern, Combo und Checkboxen umbenennen
'
' V. 1.8
'
'************************************************************************************************************
'************************************************************************************************************
'

Option Explicit

Dim Farbe1 As String
Dim Farbe2 As String

Private Sub Tabvergl()                                          'Aufruf des Macros Tabvergl
   
   Call UserForm_Initialize                                     'Aufruf der Initialisierung

End Sub



'Initialisierung des Userforms

Public Sub UserForm_Initialize()
    
    Dim intletzterEintrag As Integer
    Dim i As Integer
    Dim IntI As Integer
    Dim TabName() As String
    Dim Tabelle As Object

    'Name der Tabellen ablesen und der ComboBox bereitstellen
    
    i = 0
    For Each Tabelle In ActiveWorkbook.Worksheets
       ReDim Preserve TabName(i)
       TabName(i) = Tabelle.Name
       i = i + 1
    Next Tabelle
 
    If i = 1 Then
       MsgBox "nur 1 Tabelle vorhanden"
       End
     End If
   
   'F|fffd|llen der restlichen ComboBoxen
        
    ComboB_Tabl1.List = TabName()
    ComboB_Tabl1.ListIndex = 0
    ComboB_Tabl2.List = TabName()
    ComboB_Tabl2.ListIndex = 1
    
    ComboB_1PrZ1.AddItem "1"
    ComboB_1PrZ1.AddItem "2"
    ComboB_1PrZ1.AddItem "3"
    
    ComboB_1PrZ1.ListIndex = 1
        
    ComboB_1PrZ2.AddItem "1"
    ComboB_1PrZ2.AddItem "2"
    ComboB_1PrZ2.AddItem "3"
    
    ComboB_1PrZ2.ListIndex = 1
    
    ComboB_lPrZ1.AddItem "letzte Zeile"
    ComboB_lPrZ1.ListIndex = 0
    
    ComboB_lPrZ2.AddItem "letzte Zeile"
    ComboB_lPrZ2.ListIndex = 0
    
    With ComboB_PrS1
      For IntI = 65 To 90
        .AddItem Chr$(IntI)
       Next
      .ListIndex = 0
    End With
      
    With ComboB_PrS2
      For IntI = 65 To 90
        .AddItem Chr$(IntI)
       Next
       .ListIndex = 6
    End With
    
    'F|fffd|llen der Farb-ComboBoxen
    
    With ComboB_Color1
       .AddItem "farblos"
       .AddItem "rot"
       .AddItem "gr|fffd|n"
       .AddItem "gelb"
       .AddItem "magenta"
       .AddItem "blau"
       .ListIndex = 2
    End With
    
      
    With ComboB_Color2
       .AddItem "farblos"
       .AddItem "rot"
       .AddItem "gr|fffd|n"
       .AddItem "gelb"
       .AddItem "magenta"
       .AddItem "blau"
       .ListIndex = 2
    End With
    
    Label19.Visible = False
    ComboB_Tabl1.SetFocus

End Sub
'
'Farbwahl f|fffd|r Tabelle 1
'
Private Sub ComboB_Color1_Change()
  Dim Farbe1 As String
  Farbe1 = ComboB_Color1.Value
  Select Case Farbe1
    Case "farblos": ComboB_Color1.BackColor = &HFFFFFF
    Case "gr|fffd|n": ComboB_Color1.BackColor = &HFF00&
    Case "rot": ComboB_Color1.BackColor = &HFF&
    Case "gelb": ComboB_Color1.BackColor = &HFFFF&
    Case "magenta": ComboB_Color1.BackColor = &HFF80FF
    Case "blau": ComboB_Color1.BackColor = &HFF9950
  End Select
End Sub
'
'Farbwahl f|fffd|r Tabelle 2
'
Private Sub ComboB_Color2_Change()
  Dim Farbe2 As String
  Farbe2 = ComboB_Color2.Value
  Select Case Farbe2
    Case "farblos": ComboB_Color2.BackColor = &HFFFFFF
    Case "gr|fffd|n": ComboB_Color2.BackColor = &HFF00&
    Case "rot": ComboB_Color2.BackColor = &HFF&
    Case "gelb": ComboB_Color2.BackColor = &HFFFF&
    Case "magenta": ComboB_Color2.BackColor = &HFF80FF
    Case "blau": ComboB_Color2.BackColor = &HFF9950
  End Select
End Sub


'
'########################
'Pr|fffd|fen zweier Tabellen
'

Sub Pruefen_Tabellen_Click()

Dim PZ1 As Long                                 'erste Pr|fffd|fzeile Tabelle 1
Dim PZ2 As Long                                 'erste Pr|fffd|fzeile Tabelle 2
Dim APZ1 As Long                                'aktuelle Pr|fffd|fzeile Tabelle 1
Dim APZ2 As Long                                'aktuelle Pr|fffd|fzeile Tabelle 1
Dim LPZ1 As Long                                'letzte Pr|fffd|fzeile Tabelle 1
Dim LPZ2 As Long                                'letzte Pr|fffd|fzeile Tabelle 2
Dim N1Tab As String                             'Name Tabelle 1
Dim N2Tab As String                             'Name Tabelle 2
Dim SP1 As String                               'zu pr|fffd|fende Spalte Tabelle 1
Dim SP2 As String                               'zu pr|fffd|fende Spalte Tabelle 2
Dim strRange1 As String                         'Range vom Pr|fffd|fbereich Tabelle 1
Dim strRange2 As String                         'Range vom Pr|fffd|fbereich Tabelle 2
Dim ZellenInhalt As String                      'zu pr|fffd|fender Zellinhalt einer Zelle
Dim firstAddress As Variant                     'Adresse der Pr|fffd|fzelle
Dim strAktZelle As String                       'Pr|fffd|fzelle als String
Dim TopMost As Boolean
Dim i As Long                                   'Laufvariable
Dim c As Variant                                'Objektvariabe Pr|fffd|fzelle
Dim AnzahlUebereinstimmungen1 As Long           'Anzahl der gefundenen |fffd|bereinstimmungen Tabelle1
Dim AnzahlUebereinstimmungen2 As Long           'Anzahl der gefundenen |fffd|bereinstimmungen Tabelle2
Dim StrLaenge As String                         'L|fffd|nge des zu vergleichenden Strings

'Variablen f|fffd|llen
 
  N1Tab = ComboB_Tabl1.Value                    'Name Tabelle 1
  SP1 = ComboB_PrS1.Value                       'Pr|fffd|fspalte Tabelle 1
  N2Tab = ComboB_Tabl2.Value                    'Name Tabelle 2
  SP2 = ComboB_PrS2.Value                       'Pr|fffd|fspalte Tabelle 2
  PZ1 = ComboB_1PrZ1.Value                      'erste Pr|fffd|fzeile Tabelle 1
  PZ2 = ComboB_1PrZ2.Value                      'erste Pr|fffd|fzeile Tabelle 2
  APZ1 = PZ1                                    'aktuelle Pr|fffd|fzeile Tabelle 1 initialisieren
  APZ2 = PZ2                                    'aktuelle Pr|fffd|fzeile Tabelle 2 initialisieren
  
  If ComboB_lPrZ1 = "letzte Zeile" Then
      LPZ1 = Worksheets(N1Tab).Cells(Rows.Count, SP1).End(xlUp).Row
    Else
      LPZ1 = ComboB_lPrZ1.Value                 'letzte Pr|fffd|fzeile Tabelle 1
  End If
  
  If ComboB_lPrZ2 = "letzte Zeile" Then
      LPZ2 = Worksheets(N2Tab).Cells(Rows.Count, SP2).End(xlUp).Row
    Else
      LPZ2 = ComboB_lPrZ2.Value                  'letzte Pr|fffd|fzeile Tabelle 2
  End If

  PZ1 = ComboB_1PrZ1.Value                       'erste Pr|fffd|fzeile |fffd|bernehmen
  PZ2 = ComboB_1PrZ2.Value
  
  strRange1 = SP1 & PZ1 & ":" & SP1 & CStr(LPZ1)
  strRange2 = SP2 & PZ2 & ":" & SP2 & CStr(LPZ2)
  
  If CheckB_DeColor1.Value Then
     Worksheets(N1Tab).Range(strRange1).Interior.ColorIndex = 0
  End If
   
  If CheckB_DeColor2.Value Then
     Worksheets(N2Tab).Range(strRange2).Interior.ColorIndex = 0
  End If
  
  'Pr|fffd|froutine
  
  AnzahlUebereinstimmungen1 = 0
   
  With Worksheets(N1Tab)
  For i = PZ1 To LPZ1
      ZellenInhalt = .Cells(i, SP1).Value
      StrLaenge = Len(ZellenInhalt)
      If Not ZellenInhalt = "" Then                                             'ZellenInhalt aus Tabelle 1 holen
      
        With Worksheets(N2Tab).Range(strRange2)                                 'gesamten Bereich der Tabelle 2
      
            Set c = .Find(ZellenInhalt, LookIn:=xlValues)                       'Tabelle 2 durchsuchen
            If Not c Is Nothing Then                                            'bis auf eine leere Zelle gesto|fffd|en wird
                firstAddress = c.Address                                        'aktuelle Adresse speichern
                Do
                    If CheckB_glSL = True Then                                  'Wenn Pr|fffd|fstring auf L|fffd|nge gepr|fffd|ft werden soll
                      If (Len(c.Value) = StrLaenge) Then                        'Sind die beiden Zellinhalte gleichlang?
                         c.Interior.Color = ComboB_Color2.BackColor                'Kennzeichnet alle |fffd|bereinstimmungen Farbe2 unterlegt
                         Worksheets(N1Tab).Cells(i, SP1).Interior.Color = ComboB_Color1.BackColor     'ZellenInhalt in Tabelle2 gefunden und Tabbelle 1 mit Farbe1 kennzeichnet
                         AnzahlUebereinstimmungen1 = AnzahlUebereinstimmungen1 + 1
                      End If
                    Else                                                        'Ohne Stringl|fffd|ngen-Pr|fffd|fung
                       c.Interior.Color = ComboB_Color2.BackColor                  'Kennzeichnet alle |fffd|bereinstimmungen Farbe2 unterlegt
                       Worksheets(N1Tab).Cells(i, SP1).Interior.Color = ComboB_Color1.BackColor     'ZellenInhalt in Tabelle2 gefunden und Tabbelle 1 mit Farbe1 kennzeichnet
                       AnzahlUebereinstimmungen1 = AnzahlUebereinstimmungen1 + 1
                    End If
                    Set c = .FindNext(c)                                        'findet den n|fffd|chsten Eintrag, falls es einen weiteren gibt
                    DoEvents
                Loop While Not c Is Nothing And c.Address <> firstAddress       'bis alle Zeilen abgearbeitet
            End If

        End With
      End If
    Call FortschrittAnzeige(LPZ1, i)
    DoEvents
    TopMost = True
    Label21.Caption = CStr(AnzahlUebereinstimmungen1)
    
  Next i
End With
Label19.Visible = True
End Sub

Private Sub ComboB_Tabl1_Change()
  ComboB_Tabl1.SetFocus                                        'in der Vorderrgrund holen
End Sub

Private Sub ComboB_lPrZ1_Change()
  ComboB_lPrZ1.SetFocus
End Sub

Private Sub ComboB_lPrZ2_Change()
  ComboB_lPrZ2.SetFocus
End Sub

' Formular Schlie|fffd|en Button

Private Sub CommandButton2_Click()
 
   Me.Hide                                                          'Schlie|fffd|en des Formulars
 
End Sub

' Fortschrittsanzeige normal (Funktioniert nur mit 32 bit Excel)

'Public Sub FortschrittAnzeige(Maximum As Long, AktWert As Long)
'
'   With FortschrittBalken                                                           'Fortschrittsbalken initialisieren
'   .Min = 1
'   .Max = Maximum
'   .Value = AktWert                                                                 'Aktueller Wert als Statusbar darstellen
'   End With
'   Label25.Caption = CStr(Int(AktWert / Maximum * 100)) & " %"                      'separate %-Anzeige

'End Sub

Public Sub FortschrittAnzeige(Maximum As Long, AktWert As Long)

'Es m|fffd|ssenn zwei Vierecke ins Formular statt dem Balken
'eingetragen werden Frame 7 = maximales Viereck
'Frame9 = aktuelles blaues Viereck
   
   Dim Faktor As Variant
   
'Fortschrittsbalken zusammenbauen
'
   Faktor = Frame7.Width / Maximum
   Frame9.Width = AktWert * Faktor
   Label25.Caption = CStr(Int(AktWert / Maximum * 100)) & " %"
  
End Sub


INQUEST-PP=macro
