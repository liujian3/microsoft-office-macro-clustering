Attribute VB_Name = "Export"
Option Explicit
Sub kontrola_c()
'spusti se pri ukladani dat a provede validace nutne pro ulozeni
    
Dim a As Integer
Dim b, c As Integer
Dim hodnota
Dim cely_radek
Dim previous_r, current_r As Boolean
Dim radek As Integer

    Call odemkni
  
    'kontrola zda neexistuje nevyplneny radek mezi dvema vyplnenymi
    previous_r = True
    For b = 4 To 503
        cely_radek = "B" & b & ":M" & b
        For Each hodnota In Range(cely_radek)
            If Not IsEmpty(hodnota.Value) Then
                If previous_r = False Then
                    MsgBox Prompt:="Dopl|fffd|te v|fffd||fffd|e nevypln|fffd|n|fffd| |fffd||fffd|dky.", Buttons:=vbCritical, Title:="Chyba v datech"
                    Cells(b, 2).Select
                    GoTo konec
                Else
                    If Not IsEmpty(Cells(b, 2)) Then
                        current_r = True
                        GoTo dalsi_radek
                    Else
                        MsgBox Prompt:="Vypl|fffd|te Jm|fffd|no v |fffd||fffd|dku " & b, Buttons:=vbCritical, Title:="Chyba v datech"
                        Cells(b, 2).Select
                        GoTo konec
                    End If
                End If
            Else
                current_r = False
            End If
        Next
dalsi_radek:
        previous_r = current_r
    Next b
    
    'validace vyplnenych poli
    If Not IsEmpty([A4]) Then
        If IsEmpty([A2]) Then
            MsgBox Prompt:="Vypl|fffd|te |fffd||fffd|slo klienta v bu|fffd|ce A2", Buttons:=vbCritical, Title:="Chyba v datech"
            [A2].Select
            GoTo konec
            End If
    End If
 
    a = kontrola_dat
    If a = 0 Then GoTo konec
    
    radek = 4
    [B4].Select
    Do While Cells(radek, 1).Value = ActiveCell.Row - 3
   
        If Not IsEmpty(Cells(radek, 1)) Then
            If IsEmpty(Cells(radek, 2)) Then
                MsgBox Prompt:="Vypl|fffd|te Jm|fffd|no v |fffd||fffd|dku " & radek, Buttons:=vbCritical, Title:="Chyba v datech"
                Cells(radek, 2).Select
                GoTo konec
            End If
        End If
        
        If Not IsEmpty(Cells(radek, 1)) Then
            If IsEmpty(Cells(radek, 3)) Then
                MsgBox Prompt:="Vypl|fffd|te P|fffd||fffd|jmen|fffd| v |fffd||fffd|dku " & radek, Buttons:=vbCritical, Title:="Chyba v datech"
                Cells(radek, 3).Select
                GoTo konec
            End If
        End If
        
        If Not IsEmpty(Cells(radek, 1)) Then
            If Cells(radek, 4).Value = "" And Cells(radek, 5).Value = "" Then
                MsgBox Prompt:="Vypl|fffd|te Rodn|fffd| |fffd||fffd|slo nebo Datum narozen|fffd| v |fffd||fffd|dku " & radek, Buttons:=vbCritical, Title:="Chyba v datech"
                Cells(radek, 4).Select
                GoTo konec
            End If
        End If
        
        If Not IsEmpty(Cells(radek, 1)) Then
            If IsEmpty(Cells(radek, 6)) Then
                MsgBox Prompt:="Vypl|fffd|te Ulici v |fffd||fffd|dku " & radek, Buttons:=vbCritical, Title:="Chyba v datech"
                Cells(radek, 6).Select
                GoTo konec
            End If
        End If
        
        If Not IsEmpty(Cells(radek, 1)) Then
            If IsEmpty(Cells(radek, 7)) Then
                MsgBox Prompt:="Vypl|fffd|te |fffd||fffd|slo v |fffd||fffd|dku " & radek, Buttons:=vbCritical, Title:="Chyba v datech"
                Cells(radek, 7).Select
                GoTo konec
            End If
        End If

        If Not IsEmpty(Cells(radek, 1)) Then
            If IsEmpty(Cells(radek, 8)) And IsEmpty(Cells(radek, 9)) Then
                MsgBox Prompt:="Vypl|fffd|te PS|fffd| nebo St|fffd|t v |fffd||fffd|dku " & radek, Buttons:=vbCritical, Title:="Chyba v datech"
                Cells(radek, 8).Select
                GoTo konec
            End If
        End If
        
        If Not IsEmpty(Cells(radek, 1)) Then
            If IsEmpty(Cells(radek, 10)) Then
                MsgBox Prompt:="Vypl|fffd|te Datum OD v |fffd||fffd|dku " & radek, Buttons:=vbCritical, Title:="Chyba v datech"
                Cells(radek, 10).Select
                GoTo konec
            End If
        End If
        
        If Not IsEmpty(Cells(radek, 1)) Then
            If IsEmpty(Cells(radek, 11)) Then
                MsgBox Prompt:="Vypl|fffd|te Datum DO v |fffd||fffd|dku " & radek, Buttons:=vbCritical, Title:="Chyba v datech"
                Cells(radek, 11).Select
                GoTo konec
            End If
        End If
        
        If Not IsEmpty(Cells(radek, 1)) Then
            If IsEmpty(Cells(radek, 12)) Then
                MsgBox Prompt:="Vypl|fffd|te Datum sjedn|fffd|n|fffd| v |fffd||fffd|dku " & radek, Buttons:=vbCritical, Title:="Chyba v datech"
                Cells(radek, 12).Select
                GoTo konec
            End If
        End If
        
        If Not IsEmpty(Cells(radek, 1)) Then
            If IsEmpty(Cells(radek, 13)) Then
'<MOD REF='WL291' DEV='IHA' DATE='9.6.2008'>
'                MsgBox Prompt:="Vypl|fffd|te K|fffd|d poji|fffd|t|fffd|n|fffd| v |fffd||fffd|dku " & radek, Buttons:=vbCritical, Title:="Chyba v datech"
                MsgBox Prompt:="Vypl|fffd|te N|fffd|zev poji|fffd|t|fffd|n|fffd| v |fffd||fffd|dku " & radek, Buttons:=vbCritical, Title:="Chyba v datech"
'</MOD REF='WL291' DEV='IHA' DATE='9.6.2008'>
                Cells(radek, 13).Select
                GoTo konec
            End If
        End If
        
        
    radek = radek + 1
    Cells(radek, 2).Select
    Loop
    
Export:
    'provede samotny export do CSV
    ExportARange
konec:
Call zamkni
End Sub

Function kontrola_dat()
' Procedura provede kontrolu nactenych dat a prevede zpristupneni / nezpristupneni poli podle nactenych hodnot

    Dim adresa
    Dim radek As Integer
    radek = 4
    Dim i As Integer
    Dim pocetchyb As Integer
    Dim okRC

    Do

 'validace Prijmeni (B)
        If Not IsEmpty(Cells(radek, 2)) Then
            If Not Jmeno(Cells(radek, 2).Value) Then
                    Cells(radek, 2).Select
                    MsgBox Prompt:="Jm|fffd|no obsahuje nepovolen|fffd| znaky.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                    kontrola_dat = 0
                    GoTo konec
            End If
        End If
        
 'validace Jmeno (C)
        If Not IsEmpty(Cells(radek, 3)) Then
            If Not Jmeno(Cells(radek, 3).Value) Then
                    Cells(radek, 3).Select
                    MsgBox Prompt:="P|fffd||fffd|jmen|fffd| obsahuje nepovolen|fffd| znaky.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                    kontrola_dat = 0
                    GoTo konec
            End If
        End If
    
'Overeni R|fffd| (D)
        If Cells(radek, 4).Value <> "" Then
            If Not (ISLIKE(Cells(radek, 4).Value, "#########") Or ISLIKE(Cells(radek, 4).Value, "##########")) Then
                    Cells(radek, 4).Select
                    MsgBox Prompt:="Rodn|fffd| |fffd||fffd|slo mus|fffd| m|fffd|t 9 nebo 10 |fffd||fffd|slic.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                    kontrola_dat = 0
                    GoTo konec
            Else
                okRC = kontrola_RC(radek)
                If okRC = 1 Then
                    Cells(radek, 4).Select
                    MsgBox Prompt:="Chybn|fffd| form|fffd|t rodn|fffd|ho |fffd||fffd|sla.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                    kontrola_dat = 0
                    GoTo konec
                End If
            End If
        End If
        
'validace Ulice (F)
        If Not IsEmpty(Cells(radek, 6)) Then
            If Not Ulice(Cells(radek, 6).Value) Then
                    Cells(radek, 6).Select
                    MsgBox Prompt:="Ulice obsahuje nepovolen|fffd| znaky.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                    kontrola_dat = 0
                    GoTo konec
            End If
        End If
    
'validace Cislo (G)
        If Not IsEmpty(Cells(radek, 7)) Then
            If Not Cislo(Cells(radek, 7).Value) Then
                    Cells(radek, 7).Select
                    MsgBox Prompt:="|fffd||fffd|slo obsahuje nepovolen|fffd| znaky.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                    kontrola_dat = 0
                    GoTo konec
            End If
        End If
        
'Overeni PSC (H)
        If Not IsEmpty(Cells(radek, 8)) Then
            If Not ISLIKE(Cells(radek, 8).Value, "#####") Then
                If Cells(radek, 8).Value = Chr(48) Then
                    If Not (Cells(radek, 8).Value = Chr(48) And Cells(radek, 9).Value = "SVK") Then
                        Cells(radek, 8).Select
                        MsgBox Prompt:="PS|fffd| mus|fffd| b|fffd|t kladn|fffd| p|fffd|tim|fffd|stn|fffd| |fffd||fffd|slo nebo kombinace PS|fffd| 0 a St|fffd|t Slovensko (SVK).", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                        kontrola_dat = 0
                        GoTo konec
                    End If
                Else
                    Cells(radek, 8).Select
                    MsgBox Prompt:="PS|fffd| mus|fffd| b|fffd|t kladn|fffd| p|fffd|tim|fffd|stn|fffd| |fffd||fffd|slo.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                    kontrola_dat = 0
                    GoTo konec
                End If
            End If
        End If

'Overeni Stat (I)
        If Not IsEmpty(Cells(radek, 9)) Then
            If Not Stat(Cells(radek, 9).Value) Then
                    Cells(radek, 9).Select
                    MsgBox Prompt:="K|fffd|d st|fffd|tu mus|fffd| obsahovat pouze p|fffd|smena.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                    kontrola_dat = 0
                    GoTo konec
            End If
        End If
    
'validace Datum OD (J)
    If Not IsEmpty(Cells(radek, 10)) Then
        If Not IsEmpty(Cells(radek, 12)) Then
            If Cells(radek, 10).Value < Cells(radek, 12).Value Then
                    Cells(radek, 10).Select
                    MsgBox Prompt:="Datum OD nesm|fffd| b|fffd|t d|fffd||fffd|v|fffd|j|fffd||fffd| ne|fffd| datumem sjedn|fffd|n|fffd| poji|fffd|t|fffd|n|fffd|.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                    kontrola_dat = 0
                    GoTo konec
            End If
        End If
    End If
    
'validace Datum DO (K)
    If Not IsEmpty(Cells(radek, 11)) Then
        If Not IsEmpty(Cells(radek, 10)) Then
            If Cells(radek, 11).Value < Cells(radek, 10).Value Then
                    Cells(radek, 11).Select
                    MsgBox Prompt:="Datum DO nesm|fffd| b|fffd|t d|fffd||fffd|v|fffd|j|fffd||fffd| ne|fffd| datumem OD.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                    kontrola_dat = 0
                    GoTo konec
            End If
        End If
    End If

'<MOD REF='WL291' DEV='IHA' DATE='9.6.2008'>
'Overeni Kod Pojisteni (M)
'        If Not IsEmpty(Cells(radek, 13)) Then
'            If Not Kod_pojisteni(Cells(radek, 13).Value) Then
'                    Cells(radek, 13).Select
'                    MsgBox Prompt:="K|fffd|d poji|fffd|t|fffd|n|fffd| m|fffd||fffd|e obsahovat p|fffd|smena nebo |fffd||fffd|sla.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
'                    kontrola_dat = 0
'                    GoTo konec
'            End If
'        End If
'Overeni Nazev Pojisteni (M)
        If Not IsEmpty(Cells(radek, 13)) Then
            If Not Nazev_pojisteni(Cells(radek, 13).Value) Then
                    Cells(radek, 13).Select
                    MsgBox Prompt:="N|fffd|zev poji|fffd|t|fffd|n|fffd| mus|fffd| b|fffd|t ve form|fffd|tu 'ROZSAHXX', kde XX je |fffd||fffd|slo 01 - 99.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                    kontrola_dat = 0
                    GoTo konec
            End If
        End If
'</MOD REF='WL291' DEV='IHA' DATE='9.6.2008'>
        
        
        radek = radek + 1
        
    Loop Until Cells(radek, 1).Value = ""
    
    kontrola_dat = 1
    
konec:
    
End Function

Sub ExportARange()

    Dim i, j, dataLine
    Dim msg, Style, Title, response 'parametry chybovych zprav
    Dim framePolicy, dateItem, fileOrder, FileName, PrintName 'jednotlive podminky
    Dim fso
    Dim fileDate_d
    Dim fileDate As String
    Dim def_framePolicy, def_fileOrder, def_fileDate 'pokud uzivatel zada spatnou hodnotu, tato hodnota se mu opetovne zobrazi
    Dim okDirectory, okFramePolicy, okFileDate, okFileOrder As Boolean 'overeni zda splnuje stanovene podminku
    Dim cesta
    Dim delka_cesty As Integer 'kolik znaku ma cesta pro ulozeni souboru
    Dim pozice1, pozice2, Index
    
    
'Frame policy number
    def_framePolicy = ""
    Do
    'kontrola nazvu souboru sablony
    If ISLIKE(ActiveWorkbook.Name, "RS##########.xls") Then
        framePolicy = Mid(ActiveWorkbook.Name, 3, 10)
        def_framePolicy = framePolicy
    Else
        framePolicy = InputBox("Zadejte |fffd||fffd|slo r|fffd|mcov|fffd| smlouvy (10 |fffd||fffd|slic)", "R|fffd|mcov|fffd| smlouva", def_framePolicy)
        def_framePolicy = framePolicy
    End If
    
    If framePolicy = "" Then
        msg = "Chcete ukon|fffd|it proces ulo|fffd|en|fffd| d|fffd|vky?"
        Style = vbYesNo + vbInformation + vbDefaultButton1
        Title = "Varov|fffd|n|fffd|"
        response = MsgBox(msg, Style, Title, "", 6)
        
        If response = vbNo Then
            okFramePolicy = False
        Else
          Exit Sub
        End If
    End If
    
    If Not IsNumeric(framePolicy) Or Len(framePolicy) <> 10 Then
      response = MsgBox("Nebylo zad|fffd|no platn|fffd| |fffd||fffd|slo smlouvy", vbYes + vbExclamation + vbDefaultButton1, "Chyba", "", 6)
      okFramePolicy = False
    Else
      okFramePolicy = True
    End If
    Loop Until okFramePolicy
    
    
'File date
    def_fileDate = Date
    Do
    fileDate_d = InputBox("Zadejte datum vytvo|fffd|en|fffd| souboru ve form|fffd|tu dd.mm.rrrr", "Datum vytvo|fffd|en|fffd| souboru", def_fileDate)
    def_fileDate = fileDate_d
    
    If fileDate_d = "" Then
        msg = "Chcete ukon|fffd|it proces ulo|fffd|en|fffd| d|fffd|vky?"
        Style = vbYesNo + vbInformation + vbDefaultButton1
        Title = "Varov|fffd|n|fffd|"
        response = MsgBox(msg, Style, Title, "", 6)
        
        If response = vbNo Then
            okFileDate = False
        Else
          Exit Sub
        End If
    Else
        If Not IsDate(fileDate_d) Then
            response = MsgBox("Nebylo zad|fffd|no platn|fffd| datum", vbYes + vbExclamation + vbDefaultButton1, "Chyba", "", 6)
            okFileDate = False
            GoTo nextDate
        End If
    End If
    
    fileDate = CStr(Format(fileDate_d, "dd.mm.yyyy"))
    
    dateItem = Split(fileDate, ".")
    
    pozice1 = InStr(fileDate, ".")
    pozice2 = InStr(pozice1 + 1, fileDate, ".")
    
    If pozice1 = 0 Or pozice2 = 0 Or Len(fileDate) < 6 Then
     response = MsgBox("Nebylo zad|fffd|no platn|fffd| datum", vbYes + vbExclamation + vbDefaultButton1, "Chyba", "", 6)
     okFileDate = False
    Else
        
        
    If IsNumeric(dateItem(0)) Then
     If Len(dateItem(0)) = 1 Then
       dateItem(0) = "0" & dateItem(0)
     Else
       dateItem(0) = Mid(dateItem(0), 1, 2)
     End If
     
     okFileDate = True
     
    Else
     response = MsgBox("Nebylo zad|fffd|no platn|fffd| datum", vbYes + vbExclamation + vbDefaultButton1, "Chyba", "", 6)
     okFileDate = False
    End If
    
    
    If okFileDate Then
    If IsNumeric(dateItem(1)) Then
     If Len(dateItem(1)) = 1 Then
       dateItem(1) = "0" & dateItem(1)
     Else
       dateItem(1) = Mid(dateItem(1), 1, 2)
     End If
     
     okFileDate = True
     
    Else
     response = MsgBox("Nebylo zad|fffd|no platn|fffd| datum", vbYes + vbExclamation + vbDefaultButton1, "Chyba", "", 6)
     okFileDate = False
    End If
    End If
    
    If okFileDate Then
    
    If IsNumeric(dateItem(2)) And Len(dateItem(2)) >= 2 Then
     Index = Len(dateItem(2)) - 1
     dateItem(2) = Mid(dateItem(2), Index, 2)
     okFileDate = True
    Else
     response = MsgBox("Nebylo zad|fffd|no platn|fffd| datum", vbYes + vbExclamation + vbDefaultButton1, "Chyba", "", 6)
     okFileDate = False
    End If
    
    
    Else
     response = MsgBox("Nebylo zad|fffd|no platn|fffd| datum", vbYes + vbExclamation + vbDefaultButton1, "Chyba", "", 6)
     okFileDate = False
    End If
    End If
nextDate:
    Loop Until okFileDate
    
'File Order
    def_fileOrder = "01"
    Do
    fileOrder = InputBox("Zadejte po|fffd|adov|fffd| |fffd||fffd|slo souboru (max. dvoucifern|fffd| |fffd||fffd|slo)", "Po|fffd|adov|fffd| |fffd||fffd|slo souboru", def_fileOrder)
    def_fileOrder = fileOrder
    
    If fileOrder = "" Then
       msg = "Chcete ukon|fffd|it proces ulo|fffd|en|fffd| d|fffd|vky?"
        Style = vbYesNo + vbInformation + vbDefaultButton1
        Title = "Varov|fffd|n|fffd|"
        response = MsgBox(msg, Style, Title, "", 6)
        
        If response = vbNo Then
             okFileOrder = False
        Else
          Exit Sub
        End If
    End If
    
    If IsNumeric(fileOrder) Then
     If Len(fileOrder) = 1 Then
       fileOrder = "0" & fileOrder
     End If
     okFileOrder = True
     If Len(fileOrder) > 2 Then
       response = MsgBox("Nebylo zad|fffd|no platn|fffd| po|fffd|adov|fffd| |fffd||fffd|slo souboru", vbYes + vbExclamation + vbDefaultButton1, "Chyba", "", 6)
       okFileOrder = False
     End If
    Else
     response = MsgBox("Nebylo zad|fffd|no platn|fffd| po|fffd|adov|fffd| |fffd||fffd|slo souboru", vbYes + vbExclamation + vbDefaultButton1, "Chyba", "", 6)
     okFileOrder = False
    End If
    Loop Until okFileOrder
    
    
'adresar ulozeni
    Do
        ' zpusob vyberu adresare zavisy na verzi officu (fce adresar nefunguje i na
        'If Mid(Application.Version, 1, 2) >= 10 Then
        '    cesta = adresar()
        'Else
            cesta = GetDirectory()
        'End If
        
        If cesta = "" Then
        msg = "Chcete ukon|fffd|it proces ulo|fffd|en|fffd| d|fffd|vky?"
        Style = vbYesNo + vbInformation + vbDefaultButton1
        Title = "Varov|fffd|n|fffd|"
        response = MsgBox(msg, Style, Title, "", 6)

          If response = vbNo Then
              okDirectory = False
          Else
              Range("B2").Select
              Exit Sub
          End If

        Else
            okDirectory = True
        End If
    Loop Until okDirectory
    
    delka_cesty = Len(cesta)
'</MOD REF='WL291' DEV='IHA' DATE='9.6.2008'>
'    PrintName = "TIA" & framePolicy & dateItem(0) & dateItem(1) & dateItem(2) & "_" & fileOrder & ".csv"
    PrintName = "TIACP" & framePolicy & dateItem(0) & dateItem(1) & dateItem(2) & "_" & fileOrder & ".csv"
'</MOD REF='WL291' DEV='IHA' DATE='9.6.2008'>
    If delka_cesty = 3 Then
        FileName = cesta & PrintName    'pokud soubor neni ukladan do adresarove struktury
    Else
        FileName = cesta & "\" & PrintName
    End If
    
    response = MsgBox("Soubor bude ulo|fffd|en pod jm|fffd|nem " & FileName, vbYesNo + vbInformation + vbDefaultButton1, "Jm|fffd|no souboru", "", 6)
        
    If response = vbNo Then Exit Sub
        If response = vbYes Then
        
          Set fso = CreateObject("Scripting.FileSystemObject")
            If fso.FileExists(FileName) Then
                response = MsgBox("Soubor " & FileName & " ji|fffd| existuje. Chcete ho p|fffd|epsat ?", vbYesNo + vbInformation + vbDefaultButton1, "Soubor existuje", "", 6)
            Else
                response = vbYes
            End If
    
    If response <> vbNo Then
        
    Open FileName For Output Access Write As #1
    
    'Header line
     If Cells(2, 1) <> "" Then
       Print #1, Cells(2, 1).Value & ";" & Cells(2, 2).Value
     End If
    
    'Data lines
     i = 4
     
     For i = 4 To 504
       If Cells(i, 1) <> "" Then
          For j = 1 To 13
            If j = 1 Then
                dataLine = Cells(i, j).Value
            Else
                If j = 5 Or j = 10 Or j = 11 Or j = 12 Then
                    dataLine = dataLine & ";" & Format(Cells(i, j).Value, "dd.mm.yyyy") '<MOD REF='DEF4441' DEV='IHA' DATE='1.12.2008'>
                Else
                    dataLine = dataLine & ";" & Cells(i, j).Value
                End If
            End If
          Next j
          
          Print #1, dataLine
       End If
       
     Next i
     
    Close #1
  End If
  End If
  
    MsgBox "Operace byla dokon|fffd|ena a soubor byl ulo|fffd|en pod jm|fffd|nem " & FileName

'tisk sablony
        msg = "P|fffd|ejete si vytvo|fffd|enou d|fffd|vku vytisknout?" ' & Chr(13) & "Bude pouzita tiskarna: " & Application.ActivePrinter
        Style = vbYesNo + vbInformation + vbDefaultButton1
        Title = "Tisk"
        response = MsgBox(msg, Style, Title, "", 6)
        
        If response = vbYes Then
            tisk (PrintName)
        Else
            Exit Sub
        End If

  
End Sub
Attribute VB_Name = "Folder"
Option Explicit

Public Type BROWSEINFO
    hOwner As Long
    pidlRoot As Long
    pszDisplayName As String
    lpszTitle As String
    ulFlags As Long
    lpfn As Long
    lParam As Long
    iImage As Long
End Type
'32-bit API declarations
Declare Function SHGetPathFromIDList Lib "shell32.dll" _
  Alias "SHGetPathFromIDListA" (ByVal pidl As Long, ByVal pszPath As String) _
  As Long

Declare Function SHBrowseForFolder Lib "shell32.dll" _
Alias "SHBrowseForFolderA" (lpBrowseInfo As BROWSEINFO) As Long

Function GetDirectory() As String
'vyber mista ulozeni sablony (v pripade starsich verzi officu)
    Dim bInfo As BROWSEINFO
    Dim path As String
    Dim r As Long, x As Long, pos As Integer
    Dim msg As String
    msg = "Vyberte m|fffd|sto ulo|fffd|en|fffd| souboru"
    
    
'   Root folder = Desktop
    bInfo.pidlRoot = 0&

'   Title in the dialog
    If IsMissing(msg) Then
        bInfo.lpszTitle = "Vyberte adres|fffd||fffd|"
    Else
        bInfo.lpszTitle = msg
    End If
    
'   Type of directory to return
    bInfo.ulFlags = &H1

'   Display the dialog
    x = SHBrowseForFolder(bInfo)
    
'   Parse the result
    path = Space$(512)
    r = SHGetPathFromIDList(ByVal x, ByVal path)
    If r Then
        pos = InStr(path, Chr$(0))
        GetDirectory = Left(path, pos - 1)
    Else
        GetDirectory = ""
    End If
End Function

Function adresar() As String
'vyber mista ulozeni sablony (v pripade novejsich verzi officu)

    'Declare a variable as a FileDialog object.
    Dim fd ' As FileDialog

    'Create a FileDialog object as a File Picker dialog box.
    Set fd = Application.FileDialog(msoFileDialogFolderPicker)

    'Declare a variable to contain the path
    'of each selected item. Even though the path is a String,
    'the variable must be a Variant because For Each...Next
    'routines only work with Variants and Objects.
    Dim vrtSelectedItem As Variant

    'Use a With...End With block to reference the FileDialog object.
    With fd

        'Use the Show method to display the File Picker dialog box and return the user's action.
        'The user pressed the action button.
        .Title = "Vyberte m|fffd|sto ulo|fffd|en|fffd| souboru"
        If .Show = -1 Then

            'Step through each string in the FileDialogSelectedItems collection.
            For Each vrtSelectedItem In .SelectedItems

                'vrtSelectedItem is a String that contains the path of each selected item.
                'You can use any file I/O functions that you want to work with this path.
                'This example simply displays the path in a message box.
                'MsgBox "The path is: " & vrtSelectedItem
                adresar = vrtSelectedItem

            Next vrtSelectedItem
        'The user pressed Cancel.
        Else
        End If
    End With

    'Set the object variable to Nothing.
    Set fd = Nothing

End Function

Attribute VB_Name = "Funkce"
Option Explicit
Function ISLIKE(text As String, pattern As String) As Boolean
'   Returns true if the first argument is like the second
    If text Like pattern Then ISLIKE = True _
        Else ISLIKE = False
End Function
Function Jmeno(text As String)
'provede kontrolu Jmena a Prijmeni na pripustne znaky
    Dim delka As Long
    Dim char As String
    Dim a As Integer
    
    delka = Len(text)
    
    For a = 1 To delka
        char = Mid(text, a, 1)
        If ISLIKE(char, "[qwertyuiopasdfghjklmnbvcxz|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|QWERTYUIOPASDFGHJKLMNBVCXZ|30a||fffd||60e||fffd||fffd||fffd||fffd||68d||fffd||fffd||fffd||fffd||fffd||fffd||73c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|]") Or ISLIKE(char, Chr(32)) Or ISLIKE(char, Chr(39)) Or ISLIKE(char, Chr(45)) Then
            Jmeno = True
        Else
            Jmeno = False
            Exit Function
        End If
    Next a

End Function

Function Ulice(text As String)
'provede kontrolu Ulice na pripustne znaky
    Dim delka As Long
    Dim char As String
    Dim a As Integer
    
    delka = Len(text)
    
    For a = 1 To delka
        char = Mid(text, a, 1)
        If ISLIKE(char, "[qwertyuiopasdfghjklmnbvcxz|fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|QWERTYUIOPASDFGHJKLMNBVCXZ|30a||fffd||60e||fffd||fffd||fffd||fffd||68d||fffd||fffd||fffd|1234567890|fffd||fffd||fffd||73c||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd||fffd|]") Or ISLIKE(char, Chr(32)) Or ISLIKE(char, Chr(39)) Or ISLIKE(char, Chr(44)) Or ISLIKE(char, Chr(45)) Or ISLIKE(char, Chr(46)) Or ISLIKE(char, Chr(47)) Then
            Ulice = True
        Else
            Ulice = False
            Exit Function
        End If
    Next a

End Function

Function Cislo(text As String)
'provede kontrolu Cisla na pripustne znaky
    Dim delka As Long
    Dim char As String
    Dim a As Integer
    
    delka = Len(text)
    
    'pokud je na zacatku -
    char = Mid(text, 1, 1)
    If char = "-" Then
        Cislo = False
        Exit Function
    End If
    
    For a = 1 To delka
        char = Mid(text, a, 1)
        If ISLIKE(char, "[1234567890]") Or ISLIKE(char, Chr(45)) Or ISLIKE(char, Chr(47)) Then
            Cislo = True
        Else
            Cislo = False
            Exit Function
        End If
    Next a

End Function

Function Stat(text As String)
'provede kontrolu Statu na pripustne znaky
    Dim delka As Long
    Dim char As String
    Dim a As Integer
    
    delka = Len(text)
        
    For a = 1 To delka
        char = Mid(text, a, 1)
        If ISLIKE(char, "[QWERTYUIOPASDFGHJKLZXCVBNM]") Then
            Stat = True
        Else
            Stat = False
            Exit Function
        End If
    Next a

End Function

Function Kod_pojisteni(text As String)
'provede kontrolu Kodu pojisteni na pripustne znaky
    Dim delka As Long
    Dim char As String
    Dim a As Integer
    
    delka = Len(text)
        
    For a = 1 To delka
        char = Mid(text, a, 1)
        If ISLIKE(char, "[QWERTYUIOPASDFGHJKLZXCVBNM1234567890]") Then
            Kod_pojisteni = True
        Else
            Kod_pojisteni = False
            Exit Function
        End If
    Next a

End Function
'<MOD REF='WL291' DEV='IHA' DATE='9.6.2008'>
Function Nazev_pojisteni(text As String)
'provede kontrolu Nazvu pojisteni na pripustne znaky
    Dim delka As Long
    Dim char As String
    Dim a As Integer
    Dim rozsah As String
    
    delka = Len(text)
    rozsah = Mid(text, 1, 6)
        
    Nazev_pojisteni = False
'<MOD REF='DEF4441' DEV='IHA' DATE='1.12.2008'>
'    If (delka = 8) And (StrComp(rozsah, "Rozsah", vbTextCompare) = 0) Then
    If (delka = 8) And (StrComp(rozsah, "Rozsah", vbBinaryCompare) = 0) Then
'</MOD REF='DEF4441' DEV='IHA' DATE='1.12.2008'>
        For a = 7 To 8
            char = Mid(text, a, 1)
            If ISLIKE(char, "[0-9]") Then
                Nazev_pojisteni = True
            Else
                Nazev_pojisteni = False
                Exit Function
            End If
        Next a
    End If
End Function
'</MOD REF='WL291' DEV='IHA' DATE='9.6.2008'>



Function OpenOneFile()
Dim fn As Variant
    fn = Application.GetOpenFilename("Exportovany soubor (*.csv),*.csv", _
        1, "Vyberte soubor ve form|fffd|tu TIACP################_##.csv", , False)
    If TypeName(fn) = "Boolean" Then Exit Function 'uzivatel nevybral |fffd||fffd|dn|fffd| soubor
    
    OpenOneFile = fn
End Function

Function overeni_jmena(text As String)
' Funkce overi, zda jmeno souboru odpovida masce

    Dim soubor As String
    
    soubor = Right(text, 28)
    If text <> "" Then
        If ISLIKE(soubor, "TIACP################_##.csv") Or ISLIKE(soubor, "TIACP################_##.CSV") Then
            overeni_jmena = text
        Else
            overeni_jmena = 1
        End If
    Else
        overeni_jmena = ""
    End If

End Function

Function date_change(txt As String)
'Funkce prevede cislo ve formatu DDMMRRRR na datum DD.MM.RRRR
    
    Dim dd As String
    Dim mm As String
    Dim yy As String

On Error Resume Next
    dd = Left(txt, 2)
    mm = Mid(txt, 3, 2)
    yy = Right(txt, 4)
    
    If txt = "" Then
        date_change = ""
    Else
        If ISLIKE(txt, "########") Then
            date_change = dd & "." & mm & "." & yy
        Else
            date_change = Format(CDate(txt), "dd.mm.yyyy")
            If Err = 13 Then
                date_change = ""
                Exit Function
            End If
        End If
    End If
    
End Function
Function kontrola_vazeb(Optional start_check As Integer, Optional end_check As Integer)
' Procedura provede zpristupneni / nezpristupneni poli podle nactenych hodnot

    Dim adresa, adresa2
    Dim radek As Integer
    Dim mySelection As Range
    Dim okRC
    
    If start_check = 0 Then
        start_check = 4
    End If
    If end_check = 0 Then
        end_check = Cells(2, 2).Value + 3
    End If
    
    For radek = start_check To end_check
        If radek >= 4 And radek <= 503 Then
            If Cells(radek, 9).Value <> UCase(Cells(radek, 9).Value) Then
                Call upperc(radek, 9)
            End If
'<MOD REF='DEF4441' DEV='IHA' DATE='1.12.2008'>
'            If Cells(radek, 13).Value <> UCase(Cells(radek, 13).Value) Then
'                Call upperc(radek, 13)
'            End If
'<MOD REF='DEF4441' DEV='IHA' DATE='1.12.2008'>
        End If
        
        'validace jednotlivych poli
'validace Prijmeni (B)
        If Cells(radek, 2).Value <> "" Then
            If Not Jmeno(Cells(radek, 2).Value) Then
                If ActiveCell = Cells(radek, 2) Then
'                    GoTo konec
                Else
'                    Cells(radek, 2).Select
'                    MsgBox Prompt:="Jm|fffd|no obsahuje nepovolen|fffd| znaky.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
'                    GoTo konec
                End If
            End If
        End If
        
 'validace Jmeno (C)
        If Cells(radek, 3).Value <> "" Then
            If Not Jmeno(Cells(radek, 3).Value) Then
                If ActiveCell = Cells(radek, 3) Then
'                    GoTo konec
                Else
'                    Cells(radek, 3).Select
'                    MsgBox Prompt:="P|fffd||fffd|jmen|fffd| obsahuje nepovolen|fffd| znaky.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
'                    GoTo konec
                End If
            End If
        End If
            
'Overeni R|fffd| (D)
        If Cells(radek, 4).Value <> "" Then
            If Not (ISLIKE(Cells(radek, 4).Value, "#########") Or ISLIKE(Cells(radek, 4).Value, "##########")) Then
                If ActiveCell = Cells(radek, 4) Then
 '                   GoTo konec
                Else
 '                   Cells(radek, 4).Select
 '                   MsgBox Prompt:="Rodn|fffd| |fffd||fffd|slo mus|fffd| m|fffd|t 9 nebo 10 |fffd||fffd|slic.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
 '                   GoTo konec
                End If
            End If
        End If
        
'Overeni Datum narozeni (E)
'        If Cells(radek, 5).Value <> "" Then
'        Else
'        End If
        
'validace Ulice (F)
        If Cells(radek, 6).Value <> "" Then
            If Not Ulice(Cells(radek, 6).Value) Then
                If ActiveCell = Cells(radek, 6) Then
 '                   GoTo konec
                Else
 '                   Cells(radek, 6).Select
 '                   MsgBox Prompt:="Ulice obsahuje nepovolen|fffd| znaky.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
 '                   GoTo konec
                End If
            End If
        End If
    
'validace Cislo (G)
        If Cells(radek, 7).Value <> "" Then
            If Not Cislo(Cells(radek, 7).Value) Then
                If ActiveCell = Cells(radek, 7) Then
'                    GoTo konec
                Else
'                    Cells(radek, 7).Select
'                    MsgBox Prompt:="|fffd||fffd|slo obsahuje nepovolen|fffd| znaky.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
'                    GoTo konec
                End If
            End If
        End If
        
'Overeni PSC (H)
        If Cells(radek, 8).Value <> "" Then
            If Not (Cells(radek, 8).Value = Chr(48)) Then
                Call change_c(radek, 9, True, True)
            Else
                Call change_c(radek, 9, False, False)
            End If
        Else
            Call change_c(radek, 9, False, False)
        End If

'Overeni Stat (I)
        If Cells(radek, 9).Value <> "" Then
            If Not (Cells(radek, 8).Value = Chr(48)) Then
                Call change_c(radek, 8, True, True)
            Else
                Call change_c(radek, 8, False, False)
            End If
        Else
            Call change_c(radek, 8, False, False)
        End If
    
'validace Datum OD (J)
    If Cells(radek, 10).Value <> "" Then
        If Not IsEmpty(Cells(radek, 12)) Then
            If Cells(radek, 10).Value < Cells(radek, 12).Value Then
                If ActiveCell = Cells(radek, 10) Then
'                    GoTo konec
                Else
'                    Cells(radek, 10).Select
'                    MsgBox Prompt:="Datum OD nesm|fffd| b|fffd|t d|fffd||fffd|v|fffd|j|fffd||fffd| ne|fffd| datumem sjedn|fffd|n|fffd| poji|fffd|t|fffd|n|fffd|.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
'                    GoTo konec
                End If
            End If
        End If
    End If
    
'validace Datum DO (K)
    If Cells(radek, 11).Value <> "" Then
        If Not IsEmpty(Cells(radek, 10)) Then
            If Cells(radek, 11).Value < Cells(radek, 10).Value Then
                If ActiveCell = Cells(radek, 11) Then
'                    GoTo konec
                Else
'                    Cells(radek, 11).Select
'                    MsgBox Prompt:="Datum DO nesm|fffd| b|fffd|t d|fffd||fffd|v|fffd|j|fffd||fffd| ne|fffd| datumem OD.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
'                    GoTo konec
                End If
            End If
        End If
    End If
    
'<MOD REF='WL291' DEV='IHA' DATE='9.6.2008'>
'Overeni Kod Pojisteni (M)
'        If Cells(radek, 13).Value <> "" Then
'            If Not Kod_pojisteni(Cells(radek, 13).Value) Then
'                If ActiveCell = Cells(radek, 13) Then
 '                   GoTo konec
'                Else
 '                   Cells(radek, 13).Select
 '                   MsgBox Prompt:="K|fffd|d poji|fffd|t|fffd|n|fffd| m|fffd||fffd|e obsahovat p|fffd|smena nebo |fffd||fffd|sla.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
 '                   GoTo konec
'                End If
'            End If
'        End If
'<MOD REF='WL291' DEV='IHA' DATE='9.6.2008'>
        
    Next radek
    
konec:
ErrHandle:
End Function

Function Odstraneni_znaku(text As String, lomitko As Boolean)

Dim i As Integer
Dim char As String
Dim new_text As String
    
    new_text = ""
    For i = 1 To Len(text)
        char = Mid(text, i, 1)
        If char <> Chr(32) Then
            If char = "/" And lomitko = True Then
            Else
                new_text = new_text & char
            End If
        End If
    Next i
Odstraneni_znaku = new_text
End Function

Function kontrola_RC(radek As Integer)
    Dim RC
    Dim yy As String
    Dim mm As String
    Dim dd As String
    Dim date_string As String

On Error Resume Next

    RC = Cells(radek, 4).Value
    yy = Mid(RC, 1, 2)
    mm = Mid(RC, 3, 2)
    dd = Mid(RC, 5, 2)
    
    If RC <> "" Then
        If (yy >= 0 And yy <= 99) Then
            If ((mm >= 1 And mm <= 12) Or (mm >= 51 And mm <= 62)) And (dd >= 1 And dd <= 31) Then
                If mm >= 1 And mm <= 12 Then
                    date_string = dd & "." & mm & "." & yy
                    If Not IsDate(date_string) Then
                        GoTo wrong
                    Else
                        GoTo konec
'                        If Not IsEmpty(Cells(radek, 5)) Then
'                            If CVDate(date_string) <> Cells(radek, 5).Value Then
'                                GoTo wrong2
'                            Else
'                                GoTo konec
'                            End If
'                        End If
                    End If
                End If
                If mm >= 51 And mm <= 62 Then
                    mm = mm - 50
                    date_string = dd & "." & mm & "." & yy
                    If Not IsDate(date_string) Then
                        GoTo wrong
                    Else
                        GoTo konec
'                        If Not IsEmpty(Cells(radek, 5)) Then
'                            If CVDate(date_string) <> Cells(radek, 5).Value Then
'                                GoTo wrong2
'                            Else
'                                GoTo konec
'                            End If
'                        End If
                    End If
                End If
            Else
                GoTo wrong
            End If
        Else
            GoTo wrong
        End If
                    
        If Err = 13 Then
            GoTo wrong
        End If
    End If
kontrola_RC = 0
Exit Function

wrong:
    'chybny format RC
    kontrola_RC = 1
    'Cells(radek, 4).Select
    'MsgBox Prompt:="Chybn|fffd| form|fffd|t rodn|fffd|ho |fffd||fffd|sla.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
'Exit Function

'wrong2:
    'RC musi odpovidat datumu narozeni
    'kontrola_RC = 2
    'Cells(radek, 4).Select
    'MsgBox Prompt:="Rodn|fffd| |fffd||fffd|slo mus|fffd| odpov|fffd|dat datumu narozen|fffd|.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical

konec:
End Function

Attribute VB_Name = "Import"
Option Explicit

Sub ImportRange()
    Dim ImpRng As Range
    Dim FileName As String
    Dim r As Long, c As Integer
    Dim txt As String, char As String * 1
    Dim Data
    Dim i As Integer
    Dim v As Integer
        
' overeni, jestli pri vyzve na smazani hodnot nedoslo k preruseni akce
        v = vymaz_hodnoty(True)
        If v = 0 Then Exit Sub
    
' vypnuti validaci poli pri zmene bunky viz Worksheet_Change
    Range("Import") = 1
    
    Worksheets(1).Range("A2").Select ' Zacatek bez zahlavi
    
    
    Set ImpRng = ActiveCell
    On Error Resume Next
    FileName = OpenOneFile() 'Ziskani jmena souboru
    FileName = overeni_jmena(FileName) 'Overeni spravneho jmena souboru
        
'Zruseni importu pri nevybrani souboru
        If FileName = "" Then
            MsgBox "Import p|fffd|eru|fffd|en.", vbCritical, "Chyba p|fffd|i importu"
            Range("Import") = 0
            Exit Sub
        End If
        
'Zruseni importu pri chybnem jmenu souboru
        If FileName = "1" Then
            MsgBox "Chybn|fffd| jm|fffd|no souboru. Import p|fffd|eru|fffd|en.", vbCritical, "Chyba p|fffd|i importu"
            Range("Import") = 0
            Exit Sub
        End If

'Import souboru
    Open FileName For Input As #1
    If Err <> 0 Then
        MsgBox "Chyba p|fffd|i importu. Soubor nelze na|fffd||fffd|st.", vbCritical, "Chyba p|fffd|i importu"
        Range("Import") = 0
        Exit Sub
    End If
    r = 0
    c = 0
    txt = ""
    Application.ScreenUpdating = False
    Do Until EOF(1)
        Line Input #1, Data
        For i = 1 To Len(Data)
            char = Mid(Data, i, 1)
            
            If char = ";" Or char = Chr(10) Then
                If (r = 0 And c = 0) Or c > 0 Then
                    If c = 4 Or c = 9 Or c = 10 Or c = 11 Then
                        If r > 1 Then
                            ActiveCell.Offset(r, c) = CDate(date_change(txt)) 'Prevod cisla na datum
                        Else
                            ActiveCell.Offset(r, c) = txt
                        End If
                    Else
                        If c = 3 Then
                            txt = Odstraneni_znaku(txt, True)
                            ActiveCell.Offset(r, c) = txt
                        Else
                            If c = 7 Then
                                txt = Odstraneni_znaku(txt, False)
                                ActiveCell.Offset(r, c) = txt
                            Else
                                ActiveCell.Offset(r, c) = txt
                            End If
                        End If
                    End If
                End If
                
                If char = ";" Then
                    c = c + 1
                    txt = ""
                Else
                    If r = 0 Then
                        r = r + 2: c = 0 'Preskoceni radku 3 se zahlavim
                    Else
                        r = r + 1: c = 0
                    End If
                End If
                
            ElseIf i = Len(Data) Then 'end of line
                If char <> Chr(34) Then txt = txt & char
                If c = 12 And r > 1 Then
                    txt = Odstraneni_znaku(txt, False)
                    ActiveCell.Offset(r, c) = txt
                Else
                    ActiveCell.Offset(r, c) = txt
                End If
                txt = ""
            ElseIf char <> Chr(34) Then
                txt = txt & char
            End If
        Next i
        c = 0
        
        If r = 0 Then
            r = r + 2 'Preskoceni radku 3 se zahlavim
        Else
            r = r + 1
        End If
        
    Loop
    Close #1
    Call kontrola_vazeb 'zavolani kontroly vazeb
    Application.ScreenUpdating = True
    [B2].Formula = "=max(A4:A503)" ' vlozeni premazaneho vzorce
    Range("Import") = ""
    
End Sub
Attribute VB_Name = "Nastaveni"
Option Explicit

Sub odemkni(Optional nanic)
'odemkne sheet
    ActiveSheet.Unprotect ("aa")
End Sub

Sub zamkni(Optional nanic)
'zamkne sheet
    ActiveSheet.Protect Password:="aa", UserInterfaceOnly:=True
    ActiveSheet.EnableSelection = xlUnlockedCells

End Sub

Sub upperc(radek, sloupec)
'zmeni hodnotu na velka pismena
    Dim reg_znacka As String
        
        reg_znacka = Cells(radek, sloupec).Value
        If (Not IsNumeric(reg_znacka)) And (Not IsDate(reg_znacka)) Then
            If reg_znacka <> UCase(reg_znacka) Then
                reg_znacka = UCase(reg_znacka)
                Cells(radek, sloupec).Value = reg_znacka
            End If
        End If
        
End Sub

Sub change_c(radek, sloupec, zamknout As Boolean, clean As Boolean, Optional text = "xxx")
'enable and disable cell
    
    Call odemkni
    Cells(radek, sloupec).Locked = False
    
    If zamknout Then
        With Cells(radek, sloupec).Interior
            .ColorIndex = 15
            .pattern = xlSolid
        End With
    Else
        With Cells(radek, sloupec).Interior
            .ColorIndex = 0
            .pattern = xlSolid
        End With
    End If

    If clean Then
        Cells(radek, sloupec).ClearContents
    End If
    
    If Not text = "xxx" Then
        Cells(radek, sloupec).Value = text
    End If
    
    Cells(radek, sloupec).Locked = zamknout
    Call zamkni
End Sub

Sub change_r(adresa, zamknout As Boolean, clean As Boolean, Optional text = "xxx")
'enable and disable range
    
    Call odemkni
    Range(adresa).Locked = False
    
    If zamknout Then
        With Range(adresa).Interior
            .ColorIndex = 15
            .pattern = xlSolid
        End With
    Else
        With Range(adresa).Interior
            .ColorIndex = 0
            .pattern = xlSolid
        End With
    End If

    If clean Then
        Range(adresa).ClearContents
    End If
    
    If Not text = "xxx" Then
        Range(adresa).Value = text
    End If
    
    Range(adresa).Locked = zamknout
    Call zamkni
End Sub
Attribute VB_Name = "Printing"
Option Explicit
Sub tisk(Optional PrintName)
Dim radky As Integer
Dim oblast
Dim pocet_stran As Integer
Dim i, j As Integer
Dim okPrint As Boolean
Dim myPrinters As Variant

    On Error GoTo ErrHandle
    
' je nainstalovana tiskarna?
    myPrinters = GetAllPrinters()
    If myPrinters(0) = 0 Then
        MsgBox "Tisk nelze prov|fffd|st, nem|fffd|te nainstalovanou tisk|fffd|rnu."
        GoTo konec
    End If

'kolik radku se bude tisknout
i = 0
radky = Cells(2, 2).Value + 3
Do
    If radky <= 48 + i * 50 Then
        pocet_stran = i + 1
        okPrint = True
    Else
        okPrint = False
    End If
    i = i + 1
Loop Until okPrint
radky = 48 + (pocet_stran - 1) * 50

'pokud chybi nazev souboru
If IsEmpty(PrintName) Then
    PrintName = "Chyb|fffd| n|fffd|zev souboru"
End If

'tisk
oblast = "A1:M" & radky

    Range(oblast).Select
    ActiveSheet.PageSetup.PrintArea = ""
    ActiveSheet.PageSetup.PrintArea = "$A$1:$M$" & radky
    With ActiveSheet.PageSetup
        .PrintTitleRows = "$3:$3"
        .PrintTitleColumns = ""
        .LeftHeader = ""
        .CenterHeader = "&""Arial,tu|fffd|n|fffd|""&12" & PrintName
        .RightHeader = ""
        .LeftFooter = ""
        .CenterFooter = ""
        .RightFooter = ""
        .LeftMargin = Application.InchesToPoints(0.393700787401575)
        .RightMargin = Application.InchesToPoints(0.393700787401575)
        .TopMargin = Application.InchesToPoints(0.78740157480315)
        .BottomMargin = Application.InchesToPoints(0.393700787401575)
        .HeaderMargin = Application.InchesToPoints(0.511811023622047)
        .FooterMargin = Application.InchesToPoints(0.511811023622047)
        .PrintHeadings = False
        .PrintGridlines = False
        .PrintComments = xlPrintNoComments
        .CenterHorizontally = True
        .CenterVertically = False
        .Orientation = xlLandscape
        .Draft = False
        .PaperSize = xlPaperA4
        .FirstPageNumber = xlAutomatic
        .Order = xlDownThenOver
        .BlackAndWhite = False
        .Zoom = 80
'        .PrintErrors = xlPrintErrorsDisplayed
    End With
    Selection.PrintOut Copies:=1, Collate:=True

konec:
    Exit Sub
ErrHandle:

    MsgBox "Vyskytl se probl|fffd|m s tiskem. Zkontrolujte zda mate nainstalovanou tiskarnu a zda je tato tisk|fffd|rna funk|fffd|n|fffd|."

End Sub
'*********************************************************
'* zjisti vsechny lokalniho tiskarny pocitace
'*********************************************************
Function GetAllPrinters()
    Dim myPr_arr(20) As Variant
    Dim i, j As Integer
    Dim MyPrinter As Variant

    On Error GoTo ErrHandle

    i = 1

    With New RegOp
        .Root = HKEY_LOCAL_MACHINE
        .Key = "System\CurrentControlSet\Control\Print\Printers"
        If .KeyCount > 0 Then
        For Each MyPrinter In .AllKeys
            myPr_arr(i) = MyPrinter
            i = i + 1
        Next
            myPr_arr(0) = i - 1
        End If
    End With
    
    GetAllPrinters = myPr_arr

    Exit Function
ErrHandle:

    MsgBox "Vyskytl se probl|fffd|m s tiskem. Zkontrolujte zda mate nainstalovanou tiskarnu a zda je tato tisk|fffd|rna funk|fffd|n|fffd|."

End Function
Attribute VB_Name = "RegOp"
Attribute VB_Base = "0{FCFB3D2A-A0FA-1068-A738-08002B3371B5}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = False
Option Explicit
 DefStr S
DefLng H-I, L, N
DefVar V
DefBool B
 Private Type OSVERSIONINFO
  dwOSVersionInfoSize As Long
  dwMajorVersion As Long
  dwMinorVersion As Long
  dwBuildNumber As Long
  dwPlatformId As Long
  szCSDVersion As String * 128
End Type
  Private Type SECURITY_ATTRIBUTES
  nLength As Long
  lpSecurityDescriptor As Long
  bInheritHandle As Long
End Type
  ' RegCreateKeyEx creates the specified key. If the key
' already exists, the function opens it. The phkResult
' parameter receives the key handle.
Private Declare Function RegCreateKeyEx Lib "advapi32.dll" Alias _
 "RegCreateKeyExA" ( _
   ByVal hKey As Long, ByVal lpSubKey As String, _
   ByVal Reserved As Long, ByVal lpClass As String, _
   ByVal dwOptions As Long, ByVal samDesired As Long, _
  lpSecurityAttributes As SECURITY_ATTRIBUTES, _
  phkResult As Long, lpdwDisposition As Long) As Long
  'RegCloseKey releases a handle to the specified key.
'(Key handles should not be left open any longer than
'necessary.)
Private Declare Function RegCloseKey Lib "advapi32.dll" ( _
   ByVal hCurKey As Long) As Long
 ' RegQueryInfoKey retrieves information about the specified
'key, such as the number of subkeys and values, the length
'of the longest value and key name, and the size of the
'longest data component among the key's values.

Private Declare Function RegQueryInfoKey _
   Lib "advapi32.dll" Alias "RegQueryInfoKeyA" ( _
   ByVal hCurKey As Long, ByVal lpClass As String, _
  lpcbClass As Long, ByVal lpReserved As Long, _
  lpcSubKeys As Long, lpcbMaxSubKeyLen As Long, _
  lpcbMaxClassLen As Long, lpcValues As Long, _
  lpcbMaxValueNameLen As Long, lpcbMaxValueLen As Long, _
  lpcbSecurityDescriptor As Long, _
  lpftLastWriteTime As Long) As Long
  'RegEnumKeyEx enumerates subkeys of the specified open
'key. Retrieves the name (and its length) of each subkey.
Private Declare Function RegEnumKeyEx Lib "advapi32.dll" _
   Alias "RegEnumKeyExA" (ByVal hCurKey As Long, _
   ByVal dwIndex As Long, ByVal lpName As String, _
  lpcbName As Long, ByVal lpReserved As Long, _
   ByVal lpClass As String, lpcbClass As Long, _
  lpftLastWriteTime As Long) As Long
  'RegEnumValue enumerates the values for the specified open
  'key. Retrieves the name (and its length) of each value,
'and the type, content and size of the data.
Private Declare Function RegEnumValue Lib "advapi32.dll" _
   Alias "RegEnumValueA" (ByVal hCurKey As Long, _
   ByVal dwIndex As Long, ByVal lpValueName As String, _
  lpcbValueName As Long, ByVal lpReserved As Long, _
  lpType As Long, lpData As Any, lpcbData As Long) As Long
  'RegQueryValueEx retrieves the type, content and data for
' a specified value name. Note that if you declare the
' lpData parameter as String, you must pass it By Value.
Private Declare Function RegQueryValueEx _
   Lib "advapi32.dll" Alias "RegQueryValueExA" ( _
   ByVal hCurKey As Long, ByVal lpValueName As String, _
   ByVal lpReserved As Long, lpType As Long, _
  lpData As Any, lpcbData As Long) As Long
  'RegSetValueEx sets the data and type of a specified
' value under a key.
Private Declare Function RegSetValueEx Lib "advapi32.dll" _
   Alias "RegSetValueExA" (ByVal hCurKey As Long, ByVal _
  lpValueName As String, ByVal Reserved As Long, _
   ByVal dwType As Long, lpData As Any, _
   ByVal cbData As Long) As Long
  'RegDeleteValue removes a named value from specified key.
Private Declare Function RegDeleteValue _
   Lib "advapi32.dll" Alias "RegDeleteValueA" ( _
   ByVal hCurKey As Long, ByVal lpValueName As String) _
   As Long
  'RegDeleteKey deletes a subkey. Under Win 95/98, also
'deletes all subkeys and values. Under Windows NT/2000,
'the subkey to be deleted must not have subkeys. The class
'attempts to use SHDeleteKey (see below) before using
'RegDeleteKey.
Private Declare Function RegDeleteKey Lib "advapi32.dll" _
   Alias "RegDeleteKeyA" (ByVal hKey As Long, _
   ByVal lpSubKey As String) As Long
  'SHDeleteKey deletes a subkey and all its descendants.
'Under Windows NT 4.0, Internet Explorer 4.0 or later
'is required.
Private Declare Function SHDeleteKey Lib "Shlwapi" _
   Alias "SHDeleteKeyA" (ByVal hKey As Long, _
   ByVal lpSubKey As String) As Long
 Private Declare Function LoadLibrary Lib "Kernel32" _
   Alias "LoadLibraryA" (ByVal lpLibFileName As String) _
   As Long
  Private Declare Function FreeLibrary Lib "Kernel32" ( _
   ByVal hLibModule As Long) As Long
  Private Declare Function ExpandEnvStrings Lib "Kernel32" _
   Alias "ExpandEnvironmentStringsA" ( _
   ByVal lpSrc As String, ByVal lpDst As String, _
   ByVal nSize As Long) As Long
  Private Declare Function GetVersionEx Lib "Kernel32" _
   Alias "GetVersionExA" ( _
  lpVersionInformation As OSVERSIONINFO) As Long
  Private Const REG_SZ = 1
Private Const REG_EXPAND_SZ = 2
Private Const REG_DWORD = 4
Private Const REG_DWORD_LITTLE_ENDIAN = REG_DWORD
Private Const REG_MULTI_SZ = 7
  
' The following values are only relevant under WinNT/2K,
' and are ignored by Win9x.
Private Const STANDARD_RIGHTS_READ = &H20000
Private Const STANDARD_RIGHTS_WRITE = &H20000
Private Const STANDARD_RIGHTS_ALL = &H1F0000
Private Const KEY_CREATE_LINK = &H20
Private Const KEY_QUERY_VALUE = &H1
Private Const KEY_ENUMERATE_SUB_KEYS = &H8
Private Const KEY_NOTIFY = &H10
Private Const KEY_SET_VALUE = &H2
Private Const KEY_CREATE_SUB_KEY = &H4
Private Const SYNCHRONIZE = &H100000
  ' Access right to query and enumerate values.
Private Const KEY_READ = ((STANDARD_RIGHTS_READ Or _
  KEY_QUERY_VALUE Or KEY_ENUMERATE_SUB_KEYS Or _
  KEY_NOTIFY) And (Not SYNCHRONIZE))
'Access right to create values and keys.
Private Const KEY_WRITE = ((STANDARD_RIGHTS_WRITE Or _
  KEY_SET_VALUE Or KEY_CREATE_SUB_KEY) And _
   (Not SYNCHRONIZE))
'Access right to create/delete values and keys.
Private Const KEY_ALL_ACCESS = ((STANDARD_RIGHTS_ALL Or _
  KEY_QUERY_VALUE Or KEY_SET_VALUE Or _
  KEY_CREATE_SUB_KEY Or KEY_ENUMERATE_SUB_KEYS Or _
  KEY_NOTIFY Or KEY_CREATE_LINK) And (Not SYNCHRONIZE))
  Private lRequiredAccess
  Private lPreviousAccess
 'Return values for all registry functions.
Private Const ERROR_SUCCESS = 0
  'Property variables.
Private lRoot 'default is HKEY_LOCAL_MACHINE
Private lOptions
Private strKeyName
Private strValueName
Private vData
  'Variables set in GetKeyHandle.
Private hCurKey
Private nSubKeys
Private nValues
Private lMaxSubKeyLen
Private lMaxValueNameLen
Private lMaxValueLen
  Private bIsWinNT
  Public Enum RegOptions ' variable: lOptions
  StoreNumbersAsStrings = 1
  ReturnMultiStringsAsArrays = 2
  ExpandEnvironmentStrings = 4
  ShowErrorMessages = 8
End Enum
   Public Enum RegRoot ' variable: lRoot
  HKEY_CLASSES_ROOT = &H80000000
  HKEY_CURRENT_USER = &H80000001   ' default
  HKEY_LOCAL_MACHINE = &H80000002
End Enum
  'Message constants.
Private Const ERROR_NO_KEY As String = _
  "No Key name specified!"
Private Const ERROR_NO_HANDLE = _
  "Could not open Registry Key!"
Private Const ERR_MSG_NO_OVERWRITE As String = _
  "Existing value has unsupported data type " & _
  "and will not be overwritten"
Private Const RETURN_UNSUPPORTED As String = _
  "(unsupported data format)"
  Private ValueList As Object
  Property Let Root(lProp As RegRoot)
  ' Don't accept an invalid Root value.
  Select Case lProp
    Case HKEY_CLASSES_ROOT, HKEY_CURRENT_USER, _
          HKEY_LOCAL_MACHINE
       ' All is well.
    Case Else
      lRoot = HKEY_CURRENT_USER
  End Select
  If lProp <> lRoot Then
    lRoot = lProp
     If Len(strKeyName) Then
      GetKeyHandle lRoot, strKeyName
     End If
  End If
  lRoot = lProp
End Property
  Property Let Key(strProp)
  ' Don't accept an empty key name.
  If Len(strProp) = 0 Then Exit Property
  If Len(strKeyName) = 0 Then ' first time
    strKeyName = strProp
  ElseIf StrComp(strProp, strKeyName, _
                 vbTextCompare) <> 0 Then
    strKeyName = strProp
    GetKeyHandle lRoot, strKeyName
  Else
  End If
End Property
  Property Let Options(lProp As RegOptions)
  ' Don't accept an invalid Options value.
  Select Case lProp
    Case 0 To 15: lOptions = lProp
    Case Else:
   End Select
End Property
   Property Let Value(Optional ValueName As String, vValue)
  If IsEmpty(vValue) Then
     Exit Property
   Else
    vData = vValue
   End If
  If bIsWinNT Then lRequiredAccess = KEY_WRITE Or KEY_READ
  If PropertiesOK Then
     ' First see if this is an existing value, and,
     ' if so, what data type we have here.
     Dim strBuffer, lBuffer, lType
     If RegQueryValueEx(hCurKey, ValueName, 0, lType, _
        ByVal strBuffer, lBuffer) = ERROR_SUCCESS Then
       ' Make sure our new value is the same data type.
       Select Case lType
         Case REG_SZ, REG_EXPAND_SZ ' existing string
          vData = CStr(vData)
         Case REG_DWORD, REG_DWORD_LITTLE_ENDIAN
           ' existing long
          vData = CLng(vData)
         Case REG_MULTI_SZ ' existing array
          vData = CVar(vData)
         Case Else
          ShowErrMsg ERR_MSG_NO_OVERWRITE
           Exit Property
       End Select
     End If
     If (lOptions And StoreNumbersAsStrings) Then
       If IsNumeric(vData) Then vData = CStr(vData)
     End If
     ' If nameless "(default)" value:
     If Len(ValueName) = 0 Then vData = CStr(vData)
     ' Look at the data type of vData, and store it
     ' in the appropriate registry format.
     If VarType(vData) And vbArray Then   ' 8192
       Dim sTemp As String
       ' REG_MULTI_SZ values must end with 2 null characters.
      sTemp = Join(vData, vbNullChar) & String$(2, 0)
       Call RegSetValueEx(hCurKey, ValueName, 0, _
        REG_MULTI_SZ, ByVal sTemp, Len(sTemp))
     Else
       Select Case VarType(vData)
         Case vbInteger, vbLong
           Call RegSetValueEx(hCurKey, ValueName, 0, _
            REG_DWORD, CLng(vData), 4)
         Case vbString
           If ContainsEnvString(CStr(vData)) Then
             Call RegSetValueEx(hCurKey, ValueName, 0, _
              REG_EXPAND_SZ, ByVal CStr(vData), _
              Len(vData) + 1)
           Else
             Call RegSetValueEx(hCurKey, ValueName, 0, _
              REG_SZ, ByVal CStr(vData), Len(vData) + 1)
           End If
         Case Else ' Store any other data type as string.
           Call RegSetValueEx(hCurKey, ValueName, 0, _
            REG_SZ, ByVal CStr(vData), Len(vData) + 1)
       End Select
     End If
     ' Update Value Count.
     Call RegQueryInfoKey(hCurKey, vbNullString, 0, 0, 0, _
       0, 0, nValues, 0, 0, 0, 0)
     ' Clear the values database.
    ValueList.RemoveAll
  End If
End Property
 Property Get Value(Optional ValueName As String) As Variant
  With ValueList
     If .Count = 0 Then FillDataList
     If .Exists(ValueName) Then Value = .Item(ValueName)
  End With
End Property
  Property Get AllValues() As Variant
  If bIsWinNT Then lRequiredAccess = KEY_READ
  If PropertiesOK Then
     If nValues = 0 Then Exit Property
     With ValueList
       If .Count = 0 Then FillDataList
       If .Count Then
         Dim i, vKeys, vItems
        vKeys = .Keys
        vItems = .items
         ReDim vTemp(.Count - 1, 1)
         For i = 0 To .Count - 1
          vTemp(i, 0) = vKeys(i)
          vTemp(i, 1) = vItems(i)
         Next
        AllValues = vTemp
       End If
     End With
  End If
End Property
  Property Get AllKeys() As Variant
  If bIsWinNT Then lRequiredAccess = KEY_READ
  If PropertiesOK Then
     If nSubKeys = 0 Then Exit Property
     Dim i: ReDim vTemp(nSubKeys - 1)
     For i = 0 To nSubKeys - 1
      strKeyName = String$(lMaxSubKeyLen + 1, 0)
       If RegEnumKeyEx(hCurKey, i, strKeyName, _
         lMaxSubKeyLen + 1, 0, vbNullString, 0, 0) = _
         ERROR_SUCCESS Then
        vTemp(i) = TrimNull(strKeyName)
       End If
     Next
    AllKeys = vTemp
  End If
End Property
 Function DeleteValue(Optional ValueName As String) _
   As Boolean
   If bIsWinNT Then lRequiredAccess = KEY_ALL_ACCESS
  If PropertiesOK Then
    DeleteValue = (RegDeleteValue(hCurKey, ValueName) = _
      ERROR_SUCCESS)
     If DeleteValue Then
       Call RegQueryInfoKey(hCurKey, vbNullString, 0, 0, _
        0, 0, 0, nValues, 0, 0, 0, 0)
      ValueList.RemoveAll
     End If
  End If
End Function
  Function DeleteKey() As Boolean
  If Len(strKeyName) = 0 Then
    ShowErrMsg ERROR_NO_KEY
     Exit Function
  End If
  Dim n, strLastKey
  n = InStrRev(strKeyName, "\")
  If n > 0 And n < Len(strKeyName) Then
    strLastKey = Mid$(strKeyName, n + 1)
    strKeyName = Left$(strKeyName, n - 1)
     If bIsWinNT Then lRequiredAccess = KEY_ALL_ACCESS
     Call GetKeyHandle(lRoot, strKeyName)
     If hCurKey = 0 Then Exit Function
     If ShlwapiInstalled Then
       ' This should always work.
      DeleteKey = (SHDeleteKey(hCurKey, strLastKey) = _
        ERROR_SUCCESS)
     Else
       ' This will only work under Win95/98.
      DeleteKey = (RegDeleteKey(hCurKey, strLastKey) = _
        ERROR_SUCCESS)
     End If
     If DeleteKey Then
       Call RegQueryInfoKey(hCurKey, vbNullString, 0, 0, _
        nSubKeys, 0, 0, 0, 0, 0, 0, 0)
      ValueList.RemoveAll
     End If
  End If
End Function
  Property Get ValueCount() As Long
  If PropertiesOK Then ValueCount = nValues
End Property
 Property Get KeyCount() As Long
  If PropertiesOK Then KeyCount = nSubKeys
End Property
  
Private Function PropertiesOK() As Boolean
  If Len(strKeyName) = 0 Then
    ShowErrMsg ERROR_NO_KEY
     Exit Function
  End If
  If lPreviousAccess Then
     If lRequiredAccess <> lPreviousAccess Then _
      CloseCurrentKey
  End If
  If hCurKey = 0 Then Call GetKeyHandle(lRoot, strKeyName)
  If hCurKey = 0 Then
    ShowErrMsg ERROR_NO_HANDLE
     Exit Function
  End If
  PropertiesOK = True
End Function
  Private Sub Class_Initialize()
  lRoot = HKEY_CURRENT_USER
  bIsWinNT = IsWinNT
  If bIsWinNT Then lRequiredAccess = KEY_READ
  On Error Resume Next
  Set ValueList = CreateObject("Scripting.Dictionary")
  If IsObject(ValueList) Then
    ValueList.CompareMode = vbTextCompare
  Else
     End
  End If
End Sub
 Private Sub Class_Terminate()
  CloseCurrentKey
  Set ValueList = Nothing
End Sub
 Private Sub CloseCurrentKey()
  If hCurKey Then
     Call RegCloseKey(hCurKey)
    hCurKey = 0
  End If
End Sub
 Private Sub GetKeyHandle(lKey, strKey)
  CloseCurrentKey
  If lKey = 0 Then lKey = HKEY_CURRENT_USER
  Dim SA As SECURITY_ATTRIBUTES
  Call RegCreateKeyEx(lKey, strKey, 0, vbNull, 0, _
    lRequiredAccess, SA, hCurKey, 0)
   If hCurKey Then
     Call RegQueryInfoKey(hCurKey, vbNullString, 0, 0, _
      nSubKeys, lMaxSubKeyLen, 0, nValues, _
      lMaxValueNameLen, lMaxValueLen, 0, 0)
    ValueList.RemoveAll
    lPreviousAccess = lRequiredAccess
   End If
End Sub
 Private Function TrimNull(ByVal strIn) As String
  TrimNull = Left$(strIn, InStr(strIn, vbNullChar) - 1)
End Function
  Private Function TrimDoubleNull(ByVal strIn) As String
  If Len(strIn) Then _
    TrimDoubleNull = _
      Left$(strIn, InStr(strIn, String$(2, 0)) - 1)
End Function
  Private Function ExpandString(strIn) As String
  Dim nChars, strBuff, nBuffSize
  nBuffSize = 1024
  strBuff = String$(nBuffSize, 0)
  nChars = ExpandEnvStrings(strIn, strBuff, nBuffSize)
  If nChars Then ExpandString = Left$(strBuff, nChars - 1)
End Function
 Private Function ShlwapiInstalled() As Boolean
  Dim hLib As Long
  hLib = LoadLibrary("Shlwapi")
  If hLib Then
    ShlwapiInstalled = True
    FreeLibrary hLib
  End If
End Function
 Private Function ContainsEnvString(ByVal strTest) _
   As Boolean
   Const PCT As String = "%"
  ' See if there is a percent sign.
  Dim n As Long:
n = InStr(strTest, PCT)
  If n = 0 Then Exit Function
  ' See if there is a second percent sign.
  If n = InStrRev(strTest, PCT) Then Exit Function
  ' Now we have a potential environment string.
  Dim Env As String, EnvSplit() As String
  Dim i As Long
  For i = 1 To 100
    Env = Environ(i)
     If Len(Env) Then
      EnvSplit = Split(Env, "=")
       If InStr(1, strTest, PCT & EnvSplit(0) & PCT, _
               vbTextCompare) Then
        ContainsEnvString = True
         Exit For
       End If
     Else
       Exit For
     End If
  Next
End Function
 Private Sub ShowErrMsg(strMsg)
  If (lOptions And ShowErrorMessages) Then
    MsgBox strMsg, vbExclamation, "Registry Error"
  Else
     Debug.Print strMsg
  End If
End Sub
  Private Function IsWinNT()
  ' Returns True if the OS is Windows NT/2000.
  Const VER_PLATFORM_WIN32_NT As Long = 2
  Dim osvi As OSVERSIONINFO
  osvi.dwOSVersionInfoSize = Len(osvi)
  GetVersionEx osvi
  IsWinNT = (osvi.dwPlatformId = VER_PLATFORM_WIN32_NT)
End Function
  Private Sub FillDataList(Optional Key As String)
  If Len(Key) Then strKeyName = Key
  If Len(strKeyName) = 0 Then _
    ShowErrMsg ERROR_NO_KEY: Exit Sub
  If bIsWinNT Then lRequiredAccess = KEY_READ
  If PropertiesOK Then
     If nValues = 0 Then Exit Sub
    ValueList.RemoveAll
     Dim i, lValuename, lType, lBuffer, strValue, strBuffer
     For i = 0 To nValues - 1
      lValuename = lMaxValueNameLen + 1
      strValue = String$(lValuename, 0)
      lBuffer = lMaxValueLen + 1
      strBuffer = String$(lBuffer, 0)
       If RegEnumValue(hCurKey, i, strValue, lValuename, _
         0, lType, ByVal strBuffer, lBuffer) = _
         ERROR_SUCCESS Then
        strValue = TrimNull(strValue)
         Select Case lType
           Case REG_SZ
            ValueList(strValue) = TrimNull(strBuffer)
           Case REG_EXPAND_SZ
             If (lOptions And ExpandEnvironmentStrings) Then
              ValueList(strValue) = _
                ExpandString(TrimNull(strBuffer))
             Else
              ValueList(strValue) = TrimNull(strBuffer)
             End If
           Case REG_MULTI_SZ
             If (lOptions And _
                ReturnMultiStringsAsArrays) Then
              ValueList(strValue) = Split( _
                TrimDoubleNull(strBuffer), vbNullChar)
             Else
              ValueList(strValue) = _
                TrimDoubleNull(strBuffer)
             End If
           Case REG_DWORD, REG_DWORD_LITTLE_ENDIAN
             Dim nBuffer
             If RegEnumValue(hCurKey, i, strValue, _
               Len(strValue) + 1, 0, REG_DWORD, nBuffer, _
               4) = ERROR_SUCCESS Then
              ValueList(strValue) = nBuffer
             End If
           Case Else
            ValueList(strValue) = RETURN_UNSUPPORTED
         End Select
       End If
     Next
  End If

End Sub

Attribute VB_Name = "Sheet1"
Attribute VB_Base = "0{00020820-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit


Private Sub Worksheet_Change(ByVal Target As Range)
    Dim a
    Dim okRC
    
    On Error GoTo ErrHandle

'Pokud je v oblasti Import hodnota 1, jsou preskakovany vsechny validace
'Pouziva se pri importu opravnych souboru a pri graficke uprave sablony
    '-odemknout sesit a nastavit hodnotu 1
    If Range("Import") = 1 Then GoTo konec

'Zamezeni provadeni validaci v menu a pod editovatelnou oblasti
    If Target.Row < 4 Or Target.Row > 503 Then
        GoTo konec
    End If

    a = Target.Column
'<MOD REF='DEF4441' DEV='IHA' DATE='1.12.2008'>
'If a = 9 Or a = 13 Then
If a = 9 Then
'</MOD REF='DEF4441' DEV='IHA' DATE='1.12.2008'>
If Cells(Target.Row, Target.Column).Value <> UCase(Cells(Target.Row, Target.Column).Value) Then
            Call upperc(Target.Row, Target.Column)
            GoTo konec
        End If
    End If



'validace jednotlivych poli
'validace Prijmeni (B)
    If Target.Column = 2 Then
        If Not IsEmpty(Target) And Not Jmeno(Target.Value) Then
            Cells(Target.Row, 2).Select
            MsgBox Prompt:="Jm|fffd|no obsahuje nepovolen|fffd| znaky.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
            GoTo konec
        End If
    End If
    
'validace Jmeno (C)
    If Target.Column = 3 Then
        If Not IsEmpty(Target) And Not Jmeno(Target.Value) Then
            Cells(Target.Row, 3).Select
            MsgBox Prompt:="P|fffd||fffd|jmen|fffd| obsahuje nepovolen|fffd| znaky.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
            GoTo konec
        End If
    End If
        
'validace RC (D)
    If Target.Column = 4 Then
        If Cells(Target.Row, 4).Value <> "" Then
            If Not (ISLIKE(Cells(Target.Row, 4).Value, "#########") Or ISLIKE(Cells(Target.Row, 4).Value, "##########")) Then
                Cells(Target.Row, 4).Select
                MsgBox Prompt:="Rodn|fffd| |fffd||fffd|slo mus|fffd| m|fffd|t 9 nebo 10 |fffd||fffd|slic.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                GoTo konec
            Else
                okRC = kontrola_RC(Target.Row)
                If okRC = 1 Then
                    Cells(Target.Row, 4).Select
                    MsgBox Prompt:="Chybn|fffd| form|fffd|t rodn|fffd|ho |fffd||fffd|sla.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                    GoTo konec
                End If
'                If okRC = 2 Then
'                    Cells(Target.Row, 4).Select
'                    MsgBox Prompt:="Rodn|fffd| |fffd||fffd|slo mus|fffd| odpov|fffd|dat datumu narozen|fffd|.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
'                    GoTo konec
'                End If
            End If
        End If
    End If
    
'validace Datum narozeni (E)
'    If Target.Column = 5 Then
'        If Not IsEmpty(Target) And Not IsEmpty(Cells(Target.Row, 4)) Then
'            okRC = kontrola_RC(Target.Row)
'            If okRC = 2 Then
'                Cells(Target.Row, 5).Select
'                MsgBox Prompt:="Rodn|fffd| |fffd||fffd|slo mus|fffd| odpov|fffd|dat datumu narozen|fffd|.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
'                GoTo konec
'            End If
'        End If
'    End If
        
'validace Ulice (F)
    If Target.Column = 6 Then
        If Not IsEmpty(Target) And Not Ulice(Target.Value) Then
            Cells(Target.Row, 6).Select
            MsgBox Prompt:="Ulice obsahuje nepovolen|fffd| znaky.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
            GoTo konec
        End If
    End If
    
'validace Cislo (G)
    If Target.Column = 7 Then
        If Not IsEmpty(Target) And Not Cislo(Target.Value) Then
            Cells(Target.Row, 7).Select
            MsgBox Prompt:="|fffd||fffd|slo obsahuje nepovolen|fffd| znaky.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
            GoTo konec
        End If
    End If
    
'validace PSC (H)
    If Target.Column = 8 Then
        If Not IsEmpty(Target) Then
            If Not ISLIKE(Cells(Target.Row, 8).Value, "#####") Then
                If Cells(Target.Row, 8).Value = Chr(48) Then
                    Call change_c(Target.Row, 9, False, False)
                Else
                    Cells(Target.Row, 8).Select
                    Call change_c(Target.Row, 9, True, True)
                    MsgBox Prompt:="PS|fffd| mus|fffd| b|fffd|t kladn|fffd| p|fffd|tim|fffd|stn|fffd| |fffd||fffd|slo.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                    GoTo konec
                End If
            Else
                If Cells(Target.Row, 8).Value = Chr(48) Then
                    Call change_c(Target.Row, 9, False, False)
                Else
                    Call change_c(Target.Row, 9, True, True)
                End If
            End If
        Else
            Call change_c(Target.Row, 9, False, False)
        End If
    End If
    
'validace Stat (I)
    If Target.Column = 9 Then
        If Not IsEmpty(Target) Then
            If Not Stat(Target.Value) Then
                Cells(Target.Row, 9).Select
                If Cells(Target.Row, 8).Value <> Chr(48) Then
                    Call change_c(Target.Row, 8, True, True)
                End If
                MsgBox Prompt:="K|fffd|d st|fffd|tu mus|fffd| obsahovat pouze p|fffd|smena.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                GoTo konec
            Else
                If Cells(Target.Row, 8).Value <> Chr(48) Then
                    Call change_c(Target.Row, 8, True, True)
                End If
            End If
        Else
            Call change_c(Target.Row, 8, False, False)
        End If
    End If
    
'validace Datum OD (J)      (validace se bude provadet pouze pri exportu sablony)
'    If Target.Column = 10 Then
'      If Not IsEmpty(Cells(Target.Row, 10)) Then
'        If Not IsEmpty(Cells(Target.Row, 12)) Then
'            If Target.Value < Cells(Target.Row, 12).Value Then
'                Cells(Target.Row, 10).Select
'                MsgBox Prompt:="Datum OD nesm|fffd| b|fffd|t d|fffd||fffd|v|fffd|j|fffd||fffd| ne|fffd| datumem sjedn|fffd|n|fffd| poji|fffd|t|fffd|n|fffd|.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
'                GoTo konec
'            End If
'        End If
'      End If
'    End If
    
'validace Datum DO (K)      (validace se bude provadet pouze pri exportu sablony)
'    If Target.Column = 11 Then
'      If Not IsEmpty(Cells(Target.Row, 11)) Then
'        If Not IsEmpty(Cells(Target.Row, 10)) Then
'            If Target.Value < Cells(Target.Row, 10).Value Then
'                Cells(Target.Row, 11).Select
'                MsgBox Prompt:="Datum DO nesm|fffd| b|fffd|t d|fffd||fffd|v|fffd|j|fffd||fffd| ne|fffd| datumem OD.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
'                GoTo konec
'            End If
'        End If
'      End If
'    End If

'<MOD REF='WL291' DEV='IHA' DATE='9.6.2008'>
'validace Kod Pojisteni (M)
'    If Target.Column = 13 Then
'        If Not IsEmpty(Target) And Not Kod_pojisteni(Target.Value) Then
'            Cells(Target.Row, 13).Select
'            MsgBox Prompt:="K|fffd|d poji|fffd|t|fffd|n|fffd| m|fffd||fffd|e obsahovat p|fffd|smena nebo |fffd||fffd|sla.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
'            GoTo konec
'        End If
'    End If
'validace Nazev Pojisteni (M)
    If Target.Column = 13 Then
        If Not IsEmpty(Target) And Not Nazev_pojisteni(Target.Value) Then
            Cells(Target.Row, 13).Select
            MsgBox Prompt:="N|fffd|zev poji|fffd|t|fffd|n|fffd| mus|fffd| b|fffd|t ve form|fffd|tu 'RozsahXX', kde XX je |fffd||fffd|slo 01 - 99.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
            GoTo konec
        End If
    End If
'</MOD REF='WL291' DEV='IHA' DATE='9.6.2008'>
        
konec:
ErrHandle:
End Sub
Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    Dim a
    Dim okRC
    Dim start_check As Integer, end_check As Integer
    
    On Error GoTo ErrHandle
        
    If Range("Import") = 1 Then GoTo konec
    
'Pokud je oznaceno vice bunek, provede se validace pres vsechny oznacene radky
    If Selection.Rows.Count > 1 Then
        start_check = Selection.Row
        end_check = start_check + Selection.Rows.Count - 1
        Call kontrola_vazeb(start_check, end_check)
    End If
    
'Zamezeni provadeni validaci v menu a pod editovatelnou oblasti
    If Target.Row < 4 Or Target.Row > 503 Then
        GoTo konec
    End If
    
    a = Target.Column
'<MOD REF='DEF4441' DEV='IHA' DATE='1.12.2008'>
'If a = 9 Or a = 13 Then
If a = 9 Then
'</MOD REF='DEF4441' DEV='IHA' DATE='1.12.2008'>
    If Cells(Target.Row, Target.Column).Value <> UCase(Cells(Target.Row, Target.Column).Value) Then
            Call upperc(Target.Row, Target.Column)
            GoTo konec
        End If
    End If

'validace jednotlivych poli
'validace Prijmeni (B)
        If Not IsEmpty(Cells(Target.Row, 2)) Then
            If Not Jmeno(Cells(Target.Row, 2).Value) Then
                If ActiveCell = Cells(Target.Row, 2) Then
                    GoTo konec
                Else
                    Cells(Target.Row, 2).Select
                    MsgBox Prompt:="Jm|fffd|no obsahuje nepovolen|fffd| znaky.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                    GoTo konec
                End If
            End If
        End If
        
 'validace Jmeno (C)
        If Not IsEmpty(Cells(Target.Row, 3)) Then
            If Not Jmeno(Cells(Target.Row, 3).Value) Then
                If ActiveCell = Cells(Target.Row, 3) Then
                    GoTo konec
                Else
                    Cells(Target.Row, 3).Select
                    MsgBox Prompt:="P|fffd||fffd|jmen|fffd| obsahuje nepovolen|fffd| znaky.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                    GoTo konec
                End If
            End If
        End If
        
'Overeni R|fffd| (D)
        If Cells(Target.Row, 4).Value <> "" Then
            If Not (ISLIKE(Cells(Target.Row, 4).Value, "#########") Or ISLIKE(Cells(Target.Row, 4).Value, "##########")) Then
                If ActiveCell = Cells(Target.Row, 4) Then
                    GoTo konec
                Else
                    Cells(Target.Row, 4).Select
                    MsgBox Prompt:="Rodn|fffd| |fffd||fffd|slo mus|fffd| m|fffd|t 9 nebo 10 |fffd||fffd|slic.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                    GoTo konec
                End If
            Else
                okRC = kontrola_RC(Target.Row)
                If okRC = 1 Then
                    If ActiveCell = Cells(Target.Row, 4) Then
                        GoTo konec
                    Else
                        Cells(Target.Row, 4).Select
                        MsgBox Prompt:="Chybn|fffd| form|fffd|t rodn|fffd|ho |fffd||fffd|sla.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                        GoTo konec
                    End If
                End If
            End If
        End If
        
'Overeni Datum narozeni (E)
'        If Not IsEmpty(Cells(Target.Row, 5)) Then
'            Call change_c(Target.Row, 4, True, True)
'        Else
'            Call change_c(Target.Row, 4, False, False)
'        End If
        
'validace Ulice (F)
        If Not IsEmpty(Cells(Target.Row, 6)) Then
            If Not Ulice(Cells(Target.Row, 6).Value) Then
                If ActiveCell = Cells(Target.Row, 6) Then
                    GoTo konec
                Else
                    Cells(Target.Row, 6).Select
                    MsgBox Prompt:="Ulice obsahuje nepovolen|fffd| znaky.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                    GoTo konec
                End If
            End If
        End If
    
'validace Cislo (G)
        If Not IsEmpty(Cells(Target.Row, 7)) Then
            If Not Cislo(Cells(Target.Row, 7).Value) Then
                If ActiveCell = Cells(Target.Row, 7) Then
                    GoTo konec
                Else
                    Cells(Target.Row, 7).Select
                    MsgBox Prompt:="|fffd||fffd|slo obsahuje nepovolen|fffd| znaky.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                    GoTo konec
                End If
            End If
        End If
        
'Overeni PSC (H)
        If Not IsEmpty(Cells(Target.Row, 8)) Then
            If Not ISLIKE(Cells(Target.Row, 8).Value, "#####") Then
                If Cells(Target.Row, 8).Value = Chr(48) Then
                    Call change_c(Target.Row, 9, False, False)
                Else
                    If ActiveCell = Cells(Target.Row, 8) Then
                        Call change_c(Target.Row, 9, True, True)
                        GoTo konec
                    Else
                        Cells(Target.Row, 8).Select
                        Call change_c(Target.Row, 9, True, True)
                        MsgBox Prompt:="PS|fffd| mus|fffd| b|fffd|t kladn|fffd| p|fffd|tim|fffd|stn|fffd| |fffd||fffd|slo.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                        GoTo konec
                    End If
                End If
            Else
                If Cells(Target.Row, 8).Value = Chr(48) Then
                    Call change_c(Target.Row, 9, False, False)
                Else
                    If Target.Column = 8 Then
                        Call change_c(Target.Row, 9, True, True)
                    End If
                End If
            End If
        Else
            If Target.Column = 8 Then
                Call change_c(Target.Row, 9, False, False)
            End If
        End If

'Overeni Stat (I)
        If Not IsEmpty(Cells(Target.Row, 9)) Then
            If Not Stat(Cells(Target.Row, 9).Value) Then
                If ActiveCell = Cells(Target.Row, 9) Then
                    If Cells(Target.Row, 8).Value <> Chr(48) Then
                        Call change_c(Target.Row, 8, True, True)
                    End If
                    GoTo konec
                Else
                    Cells(Target.Row, 9).Select
                    If Cells(Target.Row, 8).Value <> Chr(48) Then
                        Call change_c(Target.Row, 8, True, True)
                    End If
                    MsgBox Prompt:="K|fffd|d st|fffd|tu mus|fffd| obsahovat pouze p|fffd|smena.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
                    GoTo konec
                End If
            Else
                If Cells(Target.Row, 8).Value <> Chr(48) Then
                    If Target.Column = 9 Then
                        Call change_c(Target.Row, 8, True, True)
                    End If
                End If
            End If
        Else
            If Target.Column = 9 Then
                Call change_c(Target.Row, 8, False, False)
            End If
        End If
    
'validace Datum OD (J)      (validace se bude provadet pouze pri exportu sablony)
'    If Not IsEmpty(Cells(Target.Row, 10)) Then
'        If Not IsEmpty(Cells(Target.Row, 12)) Then
'            If Cells(Target.Row, 10).Value < Cells(Target.Row, 12).Value Then
'                If ActiveCell = Cells(Target.Row, 10) Then
'                    GoTo konec
'                Else
'                    Cells(Target.Row, 10).Select
'                    MsgBox Prompt:="Datum OD nesm|fffd| b|fffd|t d|fffd||fffd|v|fffd|j|fffd||fffd| ne|fffd| datumem sjedn|fffd|n|fffd| poji|fffd|t|fffd|n|fffd|.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
'                    GoTo konec
'                End If
'            End If
'        End If
'    End If
    
'validace Datum DO (K)      (validace se bude provadet pouze pri exportu sablony)
'    If Not IsEmpty(Cells(Target.Row, 11)) Then
'        If Not IsEmpty(Cells(Target.Row, 10)) Then
'            If Cells(Target.Row, 11).Value < Cells(Target.Row, 10).Value Then
'                If ActiveCell = Cells(Target.Row, 11) Then
'                    GoTo konec
'                Else
'                    Cells(Target.Row, 11).Select
'                    MsgBox Prompt:="Datum DO nesm|fffd| b|fffd|t d|fffd||fffd|v|fffd|j|fffd||fffd| ne|fffd| datumem OD.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
'                    GoTo konec
'                End If
'            End If
'        End If
'    End If
    
'<MOD REF='WL291' DEV='IHA' DATE='9.6.2008'>
'Overeni Kod Pojisteni (M)
'        If Not IsEmpty(Cells(Target.Row, 13)) Then
'            If Not Kod_pojisteni(Cells(Target.Row, 13).Value) Then
'                If ActiveCell = Cells(Target.Row, 13) Then
'                    GoTo konec
'                Else
'                    Cells(Target.Row, 13).Select
'                    MsgBox Prompt:="K|fffd|d poji|fffd|t|fffd|n|fffd| m|fffd||fffd|e obsahovat p|fffd|smena nebo |fffd||fffd|sla.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
'                    GoTo konec
'                End If
'            End If
'        End If
    If Target.Column = 13 Then
        If Not IsEmpty(Target) And Not Nazev_pojisteni(Target.Value) Then
            Cells(Target.Row, 13).Select
            MsgBox Prompt:="N|fffd|zev poji|fffd|t|fffd|n|fffd| mus|fffd| b|fffd|t ve form|fffd|tu 'RozsahXX', kde XX je |fffd||fffd|slo 01 - 99.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
            GoTo konec
        End If
    End If
        
'        If Not IsEmpty(Cells(Target.Row, 13)) Then
'            If Not Nazev_pojisteni(Cells(Target.Row, 13).Value) Then
'                If ActiveCell = Cells(Target.Row, 13) Then
'                    GoTo konec
'                Else
'                    Cells(Target.Row, 13).Select
'                    MsgBox Prompt:="N|fffd|zev poji|fffd|t|fffd|n|fffd| mus|fffd| b|fffd|t ve form|fffd|tu 'RozsahXX', kde XX je |fffd||fffd|slo 01 - 99.", Title:="Chybn|fffd| hodnota", Buttons:=vbCritical
'                    GoTo konec
'                End If
'            End If
'        End If
'</MOD REF='WL291' DEV='IHA' DATE='9.6.2008'>
        
konec:
ErrHandle:
End Sub
Attribute VB_Name = "ThisWorkbook"
Attribute VB_Base = "0{00020819-0000-0000-C000-000000000046}"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = True
Attribute VB_TemplateDerived = False
Attribute VB_Customizable = True
Option Explicit
Private Sub Workbook_BeforeClose(Cancel As Boolean)
    Application.EnableAutoComplete = True
End Sub

Private Sub Workbook_Open()
    ActiveWindow.DisplayWorkbookTabs = False
    Application.EnableAutoComplete = False
    Call zamkni
End Sub
Attribute VB_Name = "vymazani"
Option Explicit
Sub vymazat()
    Dim m
    m = vymaz_hodnoty(False)
    ActiveSheet.PageSetup.PrintArea = ""
    Range("Import") = 0
End Sub

Sub nastavit()
    
    Call change_r("a2:a2", False, False)
    Call change_r("B4:M503", False, False)
    Call change_r("A4:A503", True, False)

End Sub

Function vymaz_hodnoty(del_A2 As Boolean)
    Dim m
    m = MsgBox(Prompt:="Touto operac|fffd| budou vymaz|fffd|ny v|fffd|echny z|fffd|znamy. Tato operace je nevratn|fffd|. Chcete pokra|fffd|ovat?", Buttons:=vbYesNo, Title:="Upozorn|fffd|n|fffd|")
    If m = 6 Then
        Call odemkni
        
'smazani hodnot
        With [export2]
            .ClearContents
            .Font.Bold = False
            .Font.Italic = False
        End With
        
    With [export2].Font
        .Name = "Arial"
        .Size = 8
        .Strikethrough = False
        .Superscript = False
        .Subscript = False
        .OutlineFont = False
        .Shadow = False
        .Underline = xlUnderlineStyleNone
        .ColorIndex = xlAutomatic
    End With
    [export2].Borders(xlDiagonalDown).LineStyle = xlNone
    [export2].Borders(xlDiagonalUp).LineStyle = xlNone
    With [export2].Borders(xlEdgeLeft)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With [export2].Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With [export2].Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With [export2].Borders(xlEdgeRight)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With [export2].Borders(xlInsideVertical)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    With [export2].Borders(xlInsideHorizontal)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With

'smazani pole A2
    If del_A2 = True Then
        With [A2:A2]
            .ClearContents
            .Font.Bold = False
            .Font.Italic = False
        End With
    End If
    
'nastaveni formatu jednotlivych sloupcu
    With [column_B]
        .NumberFormat = "@"
    End With
    
    With [column_C]
        .NumberFormat = "@"
    End With
    
    With [column_D]
        .NumberFormat = "@"
    End With
    
    With [column_E]
        .NumberFormat = "dd.mm.yyyy"
    End With
    
    With [column_F]
        .NumberFormat = "General"
    End With
    
    With [column_G]
        .NumberFormat = "General"
    End With
    
    With [column_H]
        .NumberFormat = "@"
    End With
    
    With [column_I]
        .NumberFormat = "General"
    End With
    
    With [column_J]
        .NumberFormat = "dd.mm.yyyy"
    End With
    
    With [column_K]
        .NumberFormat = "dd.mm.yyyy"
    End With
    
    With [column_L]
        .NumberFormat = "dd.mm.yyyy"
    End With
    
    With [column_M]
        .NumberFormat = "General"
    End With
    
'nastaveni nepripustnych bunek a uzmaceni sheetu
        Call nastavit
        Call zamkni
        Cells(4, 2).Select
        vymaz_hodnoty = 1
    Else
        vymaz_hodnoty = 0
    End If
   
End Function


' InQuest injected base64 decoded content
' \%A4
' \%A4

INQUEST-PP=macro
